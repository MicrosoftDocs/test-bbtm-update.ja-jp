{
    "Slug": "announcing-azure-sdk-2-8-1-for-net",
    "Title": "Azure SDK 2.8.1 for .NET の発表",
    "Summary": "Today, we’re excited to announce Azure SDK 2.8.1 for Visual Studio 2013 and Visual Studio 2015. This SDK update offers some great new features for Azure App Service developers to complement the new release of App Service API Apps and general availability of Mobile Apps .NET server SDK.",
    "Content": "<p>本日、&rsquo;Visual Studio 2013および Visual Studio 2015 用の Azure SDK 2.8.1 をお知らせします。 この SDK 更新プログラムは、<a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-value-prop-what-is/\">Azure App Service</a>開発者向けに、App Service API Apps の新しいリリースと Mobile Apps .NET サーバー SDK の一般提供を補完する優れた新機能をいくつか提供します。 これらのサービスとツールの更新プログラムは、ASP.NET 5 RC に対する最近の更新の最新の更新プログラムに基づいて行われ&rsquo;、Azure で Web、モバイル、REST API を開発する際に楽しい時間を過ごします。 この投稿では、Azure SDK 2.8.1 でリリースされる新機能をまとめています。</p>\n\n<p><a href=\"https://azure.microsoft.com/en-us/downloads/\">Azure SDK 2.8.1 for .NET</a><br>\n[VS 2015 |のダウンロードVS 2013]</p>\n\n<ul>\n    <li><b>新しい最新のApp Service作成エクスペリエンス</b>:Weve は&rsquo;、App Service ツール全体を再想像して設計し直し、<a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/web/\">Web</a>、<a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/mobile/\">Mobile</a>、<a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/api/\">API</a> アプリ開発者向けのアプリ作成と発行エクスペリエンスを統合するための重要な手順を実行しました。</li>\n    <li><b>API と Mobile Apps のProject テンプレート更新プログラム: </b>REST API とモバイル開発者&rsquo;向けの最新の更新プログラムを利用する開発者をサポートするために、Visual Studio テンプレートを更新しました。</li>\n    <li><b>Resource Manager テンプレートのエクスポート:</b> 新しいツールでは、作成に関する&rsquo;リソースをワンクリックで JSON ファイルでエクスポートできるため、他のリソース グループや他の Azure サブスクリプションでトポロジを再作成できます。</li>\n    <li><b>REST API クライアント生成の改善: </b>AutoRest と呼ばれる Azure SDK チーム&rsquo;のオープン ソース Swagger ベースのジェネレーターによって提供される、簡素化されたユーザー エクスペリエンスと基になるコード<a href=\"https://github.com/azure/autorest\"></a>生成の機能強化。</li>\n</ul>\n\n<h1>Visual StudioでのApp Service開発者エクスペリエンスの統合</h1>\n\n<p>App Serviceの多くの機能が各リソースタイプ&ndash;の Mobiles&rsquo; ID 機能によって共有され、より広範に利用可能な資産と、API 定義機能があらゆる場所で利用できるようになるため&ndash;、App Service開発者エクスペリエンスは同じ静脈で自身をモデル化する必要があると判断しました。 1 つの Web アプリケーションでは、同じリソース グループに格納されている多数の REST API を使用して、後でモバイル アプリケーションをさらに補完することができます。 App Serviceで常に新しいものが存在するという証拠を考えると、&rsquo;発行エクスペリエンスが統一され、Web、モバイル、API アプリをApp Serviceに発行する、はるかに簡単なビューが提供されます。</p>\n\n<p><img alt=\"clip_image001\" border=\"0\" height=\"285\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7aae5529-19d5-4d1d-be10-c50cfaa15c6e.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image001\" width=\"360\"></p>\n\n<h1>より多くのオプションを備えた再設計され、有益で機能的なUI</h1>\n\n<p>この統一された weve&rsquo; と共に、App Serviceツールエクスペリエンスの全体的なルック アンド フィールに驚くべき進歩を遂げました。 これらの&rsquo;新しい UI の改善が、App Serviceツール チームで行われた大規模なリエンジニアリング作業&rsquo;の最初の波であるため、期待しています。 この最初の再設計の波は、Connected Services や新しいOffice ツールなどの新しいVisual Studio UI の概念をエミュレートするために、設計のいくつかの新しいステップを実行する方法に集中しました。 新しい UI の下には、多くのコードの機能強化があり、新しいサービスのライトアップをより効率的なパートナーと顧客主導にするための調整が行われます。 &rsquo;Azure Tools が今後の投稿で提供する新しい拡張機能について詳しく説明しますが、ここでは、アプリの選択と作成エクスペリエンスの新しく改善された設計を見てみましょう&rsquo;。</p>\n\n<h1>必要なアプリ&rdquo;の&ldquo;混乱を軽減する</h1>\n\n<p>多くのアプリを Azure に公開しているお客様や同僚から一貫したフィードバックを受け取った 1 つは、リストが管理不能になり、どのアプリをターゲットにすべきかを &ldquo;推測&rdquo; したり知ったりすることがますます困難になったことでした。 リソース&rsquo; グループ<i>ビューと</i>リソースタイプビューの両方を提供するという Cloud Explorer の設計概念から借用されているため、[&rsquo;既存&rdquo;の選択] &ldquo;ダイアログでアプリを簡単にグループ化できるようになりました。</p>\n\n<p><img alt=\"clip_image002\" border=\"0\" height=\"362\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44f644f2-a4e5-43e7-99dc-9db059c85ff7.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image002\" width=\"480\"></p>\n\n<p>サブスクリプション内の潜在的な発行ターゲットの数が多いために再グループ化が十分でない&rsquo;場合は、&rsquo;優れた機能&ndash;<b>検索</b>が 1 つ追加されました。 これで、ダイアログに検索クエリを自由に入力し、用語に&rsquo;一致するアプリを除外できます。 検索も固定されているため、リソース グループと種類の間でビューを検索して変更すると、検索は維持され、一致のみが表示されます。 これで、&rsquo;サブスクリプション&rsquo; リソースの一覧から発行先を簡単に見つけることができます。</p>\n\n<p><img alt=\"clip_image003\" border=\"0\" height=\"361\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8d1cf024-d820-49bd-893e-f528d897a2fa.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image003\" width=\"480\"></p>\n\n<h1>新しいApp Service作成の更新</h1>\n\n<p>おそらく、App Service作成エクスペリエンスに最適化するために実行された最大の手順&rsquo;は、アプリの作成/プロビジョニング プロセスにあります。 次に示す新しいダイアログでは、アプリの作成時に利用できる機会に対して多くの視覚的な手掛かりが提供されます。 Weve は&rsquo;、2 タブエクスペリエンスの最初のタブですべての重要なホスティング機能を保持しました。 必要なのはクラウドの新しいアプリで、&rsquo;新しいアプリに使用したいリソース グループとホスティング プラン&rsquo;が既にある場合は、ダイアログの [新しいApp Service作成] ダイアログで [<b>作成</b>] をクリックするのと同じくらい簡単です。</p>\n\n<p><img alt=\"clip_image004\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1294ac30-1d1a-45de-a679-829088adc7b3.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image004\" width=\"480\"></p>\n\n<p>新しいApp Serviceプランが必要な場合&rsquo;は、[<b>新規] ボタン</b>を 1 回クリックするだけで新しいプランを作成できます。 [プランのApp Service] 画面で&rsquo;、ポータルで使用可能な任意のサイズからプランを作成できます。</p>\n\n<p><img alt=\"clip_image005\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec253eb3-2d67-4edb-b4d4-64cae8b08f27.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image005\" width=\"320\"></p>\n\n<p>アプリを発行する新しいリソース グループを作成する場合は、[リソース グループ] コンボ ボックスに入力します。 そうすると、ダイアログには、新しいリソース グループを作成することを知&rsquo;らせる視覚的な手掛かりが多数表示されます ([ <b>ホスティング</b> ] タブの青いアイコン インジケーターに同じメッセージが反映されます)。</p>\n\n<p><img alt=\"clip_image006\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/36b5ecf6-a66e-4a81-92e5-2c8e9757895c.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image006\" width=\"480\"></p>\n\n<h1>アプリで必要になる可能性がある追加のサービスを作成する</h1>\n\n<p>新しいApp Service作成画面の 2 番目のタブでは、アプリで必要になる可能性がある追加のサービスを選択できます。 このリリースでは、&rsquo;App Service作成プロセスで SQL サーバーとデータベースのサポートを維持しています。 ただし、&rsquo;1 つのデータベースに限定されるわけではありません。 ダイアログ内で、必要な数のSQL サーバーまたはデータベースを直接作成できます。</p>\n\n<p><img alt=\"clip_image007\" border=\"0\" height=\"362\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/772af24d-2df6-41b9-bc90-d9672bacec1e.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image007\" width=\"480\"></p>\n\n<p>SQLは 2.8.1 SDK の期間にリリースされた唯一のプロバイダーですが、&rsquo;このダイアログを有効にするためにいくつかの主要なエンジニアリング作業を行いました。その一部は、パートナー チームがサービスの照明を拡張するために作業できる拡張可能なモデルを作成することでした。 Weve&rsquo; は、この同じダイアログで Redis プロビジョニングを点灯させるエクスペリエンスと、Azure Key Vault およびドキュメント DB チームとのディスカッションをプロトタイプ化しました。 そう遠くない将来、このエクスペリエンスに拡張機能をインストールできます (また、&rsquo;Visual Studioの Visual Studio 拡張機能ギャラリー統合から頻繁またはオプトイン更新プログラムの利点を得ることができます)。</p>\n\n<h1>ミラー環境の作成に使用できるように Azure トポロジをエクスポートする</h1>\n\n<p>App Service作成ダイアログ、サービスの構成、および追加を進める際に、追加する各リソースが最初の [ホスティング] タブ&rsquo;のレビュー領域に表示されます。 この &ldquo;リソース カート&rdquo; は、サブスクリプションで作成しようとしているすべてのリソース&rsquo;のスナップショットを提供します。</p>\n\n<p><img alt=\"clip_image008\" border=\"0\" height=\"373\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7488a742-bb5b-455f-9567-d298e5bf3212.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image008\" width=\"480\"></p>\n\n<p>カートに追加したリソースの数を増やす&rsquo;につれて、Azure Resource Manager JSON テンプレートがメモリに追加されて動的に作成されます。 &rsquo;&rsquo;アプリがカートに機能するために必要なすべてのリソースを追加したら、[エクスポート] ボタンを簡単にクリックすると、カート内のすべてを表す JSON テンプレートを保存する場所&rsquo;を入力するように求められます。 その後、Azure PowerShell モジュールを使用して、テンプレートを別のリソース グループに実行することも、別の Azure サブスクリプションに実行することもできます。 この機能により、アプリケーション トポロジを表す再現可能なテンプレートをお客様が使用でき、手動でテンプレートを手動で編集および構成する必要はありません。 トポロジをさらにカスタマイズする必要がある場合、以前にリリースされた組み込みの Resource Manager テンプレート エディター機能は、テンプレート編集機能がエクスポートされた JSON ファイル内の JSON スキーマを認識するため、うまく統合されます。</p>\n\n<p><img alt=\"clip_image009\" border=\"0\" height=\"335\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ee6559f0-9d95-4eff-ad19-e2cfa5098b65.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image009\" width=\"610\"></p>\n\n<h1>App Service プロジェクト テンプレートの更新</h1>\n\n<p>モバイルおよび API リソース&rsquo;の新しい変更に対応するために、機能領域の新しい機能強化を活用するために、Visual Studio テンプレートが更新されました。</p>\n\n<h1>モバイル アプリ テンプレートの機能強化</h1>\n\n<p>App Service Mobile を使用すると、データをオフラインで操作し、ユーザーを認証し、プッシュ通知を送信するモバイル アプリケーションを簡単に構築できます。 Mobile Apps .NET サーバー SDK の<a href=\"https://azure.microsoft.com/blog/\">一般提供サポート</a>を発表しました。これにより、これらの機能とカスタム ロジックをモバイル クライアントに提供するアプリケーションをApp Serviceで構築できます。 このリリースと共に、現在、Visual Studioでのモバイル アプリ プロジェクトの作成と管理のサポートが更新されています。 作業を開始するには、[新規作成] &gt; Project [テンプレート&gt;] Visual C# から [新しい&gt;Project&hellip;] ダイアログを開き、[Web&quot;] を選択します&quot;。 [Web アプリケーション ASP.NET 選択&quot;し、&quot;プロジェクト名を入力して、[OK] をクリックします。 [&quot;ASP.NET 4.5.2 テンプレート] で [&quot;Azure Mobile App] を選択&quot;します。&quot;</p>\n\n<p><img alt=\"clip_image010\" border=\"0\" height=\"476\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2d8b8f73-0281-4208-896c-e1306b93d8d4.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image010\" width=\"610\"></p>\n\n<p>[OK] をクリックします。 アプリケーションが作成され、ソリューション エクスプローラーに表示されます。 このテンプレートは、Mobile Apps または Mobile Services を使用しているお客様にとって馴染みのあるものでなければなりません。 気付く可能性がある主な違いは、構成にあります。 このテンプレートでは、OWIN Startup ですべてを構成し、追加されるコンポーネントと追加されない&rsquo;コンポーネントをより細かく制御できるようになりました。</p>\n\n<p><img alt=\"clip_image011\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fac0bda4-5bc2-42a5-9964-5c37c1820684.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image011\" width=\"257\"></p>\n\n<p>プロジェクトは、簡単な To Do リスト アプリケーションを表します。 モバイル クライアントは、<b>TableController</b> から派生した <b>TodoItemController</b> を使用して、SQLに格納されたデータを使用できます。 TableController は、モバイル対応 API を CRUD 操作に変換します。この操作は、選択したデータ バックエンド (この場合は SQL) で理解できます。 オフライン コントラクトにも準拠しているため、Mobile Apps オフライン同期機能の活用をすぐに開始できます。 Controllers&quot; フォルダーを右クリックして [コントローラーの追加] を&quot;選択すると、テーブル コントローラーまたはモバイル対応 API コントローラーをさらに追加&gt;できます。 次 <b>に、Azure Mobile Apps テーブル コントローラー</b> または <b>Azure Mobile Apps カスタム コントローラー</b> を選択し、ウィザードに従ってエンドポイントを作成します。</p>\n\n<p><img alt=\"clip_image012\" border=\"0\" height=\"336\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d5309bf6-e1c0-4d81-8fd4-8eebdf090bd0.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image012\" width=\"610\"></p>\n\n<p>プロジェクトの準備ができたら、この記事で前述したように、新しい [発行] ダイアログを使用して、プロジェクトをApp Serviceに発行できます。 Mobile Apps は、App Service作成ダイアログのオプションのメニューで、最上位レベルの発行ターゲットとしてサポートされるようになりました。</p>\n\n<p><img alt=\"clip_image013\" border=\"0\" height=\"84\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/622daa55-a00f-4b61-b723-94a5e6275669.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image013\" width=\"360\"></p>\n\n<h1>API アプリ テンプレートの機能強化</h1>\n\n<p>API アプリ モデルは、初期のプレビュー以降に進化しました。 それ以来、&rsquo;ローカル デバッグが重要であるとお客様から聞いたので、新しい API Apps テンプレートで有効になりました。 このテンプレートを使用すると、全体的な構造がシンプルになります。リソース管理テンプレートまたは API App Gateway 固有のファイルへの依存関係が少なくなります。 API Apps テンプレートは基本的に Web API テンプレートであり、<a href=\"https://www.nuget.org/packages/swashbuckle\">Swashbuckle</a> と呼ばれるオープン ソースの Swagger 対応NuGet パッケージが追加されています。 Weve&rsquo; には、Swagger UI が既定で無効になるように以前に <b>行った SwaggerConfig.cs</b> ファイルの変更も含まれており、Swagger 操作 ID の生成に対するアプローチを改善した操作フィルターが含まれていました (Azure.com の <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-api-dotnet-swashbuckle-customize/\">Swashbuckle のカスタマイズの詳細を参照</a>してください)。</p>\n\n<p><img alt=\"clip_image014\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4e2aa25-0758-4ca2-8724-c24c3d00e388.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image014\" width=\"260\"></p>\n\n<h1>REST API 生成の機能強化</h1>\n\n<p>API Apps や API Management などのApp Serviceチームが Swagger を使用して行った投資をミラーリングすることで、&rsquo;API Apps によって公開される Swagger メタデータに基づくコード生成による投資を継続できます。 Visual Studioでほとんどの C# プロジェクトをクリックし、[<b>REST API クライアントの追加&gt;</b>] ジェスチャを選択すると、簡略化された REST API クライアント ジェネレーター ダイアログが表示されます。 [<b>参照</b>] ボタンをクリックすると&ldquo;、[App Service&rdquo;の選択] ダイアログが表示され、API 定義エンドポイントが設定されている任意のApp Serviceを選択できます。</p>\n\n<p><img alt=\"clip_image015\" border=\"0\" height=\"596\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/236c97f9-7050-442d-9ffc-2a3cc4703409.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image015\" width=\"610\"></p>\n\n<h1>まとめ</h1>\n\n<p>Azure アカウントをまだお持ちでない&rsquo;場合は、 <a href=\"https://azure.microsoft.com/en-us/pricing/free-trial/\">無料試用版</a> にサインアップして、上記のすべての機能を今すぐ使い始めることができます。 その後、 <a href=\"https://azure.microsoft.com/en-us/get-started/\">Azure デベロッパー センター</a> にアクセスして、アプリを構築する方法の詳細を確認してください。 Connect、UserVoice による提案、Visual Studio IDE の <a href=\"https://go.microsoft.com/fwlink/?linkid=517102&amp;clcid=0x409\">Send-a-smile</a> を通じて簡単な考えやアイデアを通じてバグを送信してください。 このリリースは、App Service ツールの新しい方向の初期のステップであるため&rsquo;、フィードバックをお寄せください。リソース カートでどのサービス&rsquo;が明るく表示されたいかを確認し、入力を続けることで、より合理化されたアプリ開発を提供できます。 この SDK リリースに関連する詳細または既知の問題については、 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/azure-sdk-dotnet-release-notes-2_8/\">Azure SDK 2.8 および 2.8.1 リリース ノートのページ</a> を参照してください。&nbsp;</p>\n\n<h3>謝辞</h3>\n\n<p>このブログ投稿は、複数のユーザーの共同作業です。 <a href=\"https://twitter.com/mattchenderson\">マシュー・ヘンダーソン</a>とこのリリースで一生懸命働いたすべてのチームメイトに大きな感謝。</p>\n"
}