{
    "Slug": "10-ways-to-speed-up-your-wordpress-site-on-azure-websites",
    "Title": "Azure App Service で WordPress サイトをスピードアップする方法",
    "Summary": "WordPress needs no introduction and is the fastest growing Open source CMS solution which allows you to quickly create dynamic website. The more plugins, content and customizations you add to your WordPress site, can start slowing your WordPress site. In this blog post we will showcase tips and tricks to speed up your WordPress site.",
    "Content": "<p>ページの読み込み時間が遅いと、ターゲット ユーザーの対象ユーザーに影響を与え、Web サイトに再度アクセスすることを防ぐ可能性があります。 多くの検索エンジンは、結果のランク付け時にもページの読み込み時間を考慮し、検索エンジンの結果に対する Web サイトの可視性に影響を与える可能性があります。 &nbsp;Web アプリケーションを高速化するために実行する手順について説明する前に、待機時間に影響を与える可能性がある App Service の主要な設計要素をいくつか理解します。 ページ要求に待機時間を追加できる App Service の 2 つの主要な設計要素を次に示します。</p>\n\n<ul>\n <li>リモート ストレージ ディスクを使用するWeb Apps&nbsp;</li>\n <li><a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2016/08/18/announcing-mysql-in-app-preview-for-web-apps/\">MySQL のアプリ内</a>機能を使用していない場合、Web Appsで使用される他の MySQL ソリューションは、受信 reuqest を処理するのと同じコンピューター上に存在しません&nbsp;</li>\n</ul>\n\n<p>これらのアーキテクチャ設計構成の結果として、App Serviceのさまざまな機能の柔軟性が得られますが、要求ごとにストレージや MySQL データベースに対する呼び出しが多すぎると、ページ応答時間に待機時間が追加される可能性があります。</p>\n\n<p>アプリケーションを高速化するために、以下に示す簡単で迅速な手順を実装することを検討してください。</p>\n\n<h4>1. Web サイトとデータベースが同じデータ センターに存在する必要がある</h4>\n\n<p>Azure Websites で WordPress サイトを実行する場合は、データベースと Web サイトが同じデータ センターにあることを確認します。 Web サイトが世界中を移動してデータベースを呼び出す必要がある場合、ネットワーク待機時間によってサイトのページ読み込み時間が長くなる可能性があります。 サイトとデータベース のコンポーネントを同じデータ センターに保持すると、ネットワークの待機時間が短縮され、Web サイトのページ読み込み時間が短縮されます。</p>\n\n<p>実稼働 Web アプリに ClearDB FREE MySQL データベースを使用しない 2.Do</p>\n\n<p>サイトを開発している場合は、Websites アプリケーション ギャラリーから WordPress インストールに付属する無料の MYSQL データベースを使用できます。 ただし、これは運用レベルのサイトには適していません。 FREE データベースには次のものが含まれます。</p>\n\n<ul>\n <li>データベースの最大 20 MB ストレージ</li>\n <li>最大 4 つの接続を許可します (max_connections)</li>\n <li>低パフォーマンス</li>\n</ul>\n\n<p><a href=\"https://www.cleardb.com/store/azure\">ここで</a>示すように、ClearDB でサポートされている他のさまざまなオプションからの推定ユーザー トラフィックを処理できるデータベースに使用することをお勧めします。 追加コスト &nbsp;なしでデータベースを探している場合は、 <a href=\"https://azure.microsoft.com/en-us/blog/mysql-in-app-preview-app-service/\">MySQL のアプリ内</a> を検討することもできますが、 <a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2016/08/18/announcing-mysql-in-app-preview-for-web-apps/\">制限があります</a>。&nbsp;</p>\n\n<p>3. Web アプリのニーズに適した MySQL データベース ソリューションを使用する&nbsp;</p>\n\n<p>これらのソリューションのいずれかを使用して調査することは、データベースに適しています。 これらのソリューションを使用してアプリケーションを調査してテストし、パフォーマンスを向上させる最適な適合を確認します。</p>\n\n<ul>\n <li><a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2016/08/18/announcing-mysql-in-app-preview-for-web-apps/\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: normal;\">MySQL のアプリ</a>&nbsp;内これは、アプリケーションをホストしている同じマシン インスタンス上のローカル MySQL データベースを提供します&nbsp;</li>\n <li>ClearDBwhich&nbsp; によって提供される MySQL ソリューションは、サードパーティのサービスです</li>\n <li><a href=\"https://github.com/Azure/azure-quickstart-templates/tree/master/mysql-replication\">仮想マシン&nbsp;上の MySQL</a>これは、独自の MySQL サーバーをホストするための IaaS ソリューションです。</li>\n</ul>\n\n<h4>4.&nbsp;データベースを最適化する</h4>\n\n<p>WordPressは自動的にすべてを保存しますが、これに関する欠点は、データベースが定期的に手動でクリーンアップする必要があるポストリビジョン、トラックバック、pingback、コメント、ゴミ箱のアイテムがすぐにいっぱいになることです。 Web サイトで使用しているデータベース プランでは、データベースに割り当てられたストレージ サイズに制限があり、データベースが定期的にクリーンアップされない場合も、この制限に達する可能性があります。 <a href=\"https://wordpress.org/plugins/wp-optimize/\">WP-Optimize</a> は、データベースをより効率的にし、保持する必要があるものだけが満たされるように、データベースを定期的にクリーンアップできる素晴らしいプラグインです。 データベースを最適化してクリーンアップするための手動クエリを実行しなくても、多くの時間を節約できます。</p>\n\n<p>5. イメージの圧縮</p>\n\n<p>WordPress サイトに画像が重い場合は、画像がサイトの帯域幅の大部分を占める可能性があります。 この場合にできることがいくつかあります。</p>\n\n<ul>\n <li><strong>すべてのメディア コンテンツを Azure Storage BLOB に格納する:</strong> <a href=\"https://wordpress.org/plugins/windows-azure-storage/\">Azure Storage プラグイン</a>を使用すると、Web サイトで WordPress サイトのディレクトリを<strong><em>アップロード</em></strong>する代わりに、新しいコンテンツを Azure ストレージに格納できます。 サイトがメディア コンテンツの負荷が高い場合は、Azure StorageでAzure CDNを使用して帯域幅を減らすのに大きく役立ちます。</li>\n <li><strong>画像を圧縮する:</strong><a href=\"https://wordpress.org/plugins/wp-smushit/\">WP Smush.it</a> は、メディアライブラリにアップロードするときに自動的に画像を圧縮する素晴らしいプラグインです。 圧縮中にデータが失われることはありません。&rsquo;画像の品質に違いはありません。 メディアライブラリに何千もの画像が保存されている場合は、プラグインを介してすべてを実行して、管理可能なサイズに圧縮することができます。</li>\n</ul>\n\n<h4>6. HTTP 要求を減らす</h4>\n\n<p>すべての Web サイトは、JS、CSS ファイル、サード パーティのサービスまたはライブラリに対して複数の依存要求を行います。 すべての JavaScript を 1 つの JavaScript ファイルに格納し、すべての CSS を 1 つの CSS ファイルに配置すると、はるかに効率的になり、可能な限り依存する要求を減らすことができます。 CSS/JSスクリプトの場合は、<a href=\"https://wordpress.org/plugins/bwp-minify/\"> より良いWordPress Minify </a>のような縮小プラグインを実行できます。これにより、すべてのスタイルシートとJavaScriptファイルが1つに結合されるため、ブラウザが行う必要がある要求の数を減らすことができます。 サイトでサード パーティ製ライブラリを使用している場合は、&rsquo;それらをローカルにコピーして、ライブラリを提供するサービスを呼び出して帯域幅を削減することをお勧めします。</p>\n\n<p>7.Azure CDNを使用する</p>\n\n<p>静的コンテンツの読み込みに時間がかかる結果として遅さを区別できる場合は、<a href=\"https://www.iis.net/configreference/system.webserver/staticcontent\">IIS 静的コンテンツ キャッシュ</a>または<a href=\"https://azure.microsoft.com/en-us/services/cdn/\">Azure CDN</a>を使用します。 &nbsp;</p>\n\n<h4>8.テーマがサイトの速度を低下させているかどうかを診断する</h4>\n\n<p>プラグインと同じように、一部のテーマは適切に記述されておらず、サイトの速度が低下する可能性があります。 テーマが長いページ読み込み時間を担当しているかどうかをテストします。 これを行うには、デフォルトのWordPressテンプレート TwentyFourteenに戻り、ページの読み込み時間がはるかに良いかどうかを確認します。 はいの場合は、テーマが原因である可能性があります。 これを解決するには、別のテーマを選択します。 テーマを古いバージョンに戻した後にページの読み込み時間に違いがない場合は、このブログに記載されているヒントをいくつか試してください。</p>\n\n<h4 id=\"plugin\">9. プラグインがサイトの速度を低下させているかどうかを診断する</h4>\n\n<p>一部のプラグインは、特に書き込みや構成が不十分な場合に、サイトの速度を低下させる原因になる可能性があります。 <a href=\"https://wordpress.org/plugins/p3-profiler/\">P3</a>のようなプラグインを使用して、アプリケーションで使用されているすべてのプラグインが、サイトを高速化するために必要なアクションを実行するためにページの読み込み時間にどの程度影響するかを理解します。未使用のプラグインがある場合、WordPressがアクティブ化されたすべてのプラグインを読み込もうとすると、ページの読み込み時間が長くなる可能性があります。 使用されていないすべてのプラグインをクリーンアップまたは削除します。 ウェブサイトを改善し、サイトのパフォーマンスを引き出さないプラグインのみを使用します。</p>\n\n<p>App Service プラットフォームで少なくとも 2 つのプラグインが遅い Captcha と Visual Composer であることを確認しました。 これらのプラグインの適切な置き換えを見つけます。&nbsp;</p>\n\n<h4>10. pingbacks と Trackback を使用しない場合&#39;オフにする</h4>\n\n<p>WordPress では、Pingbacks メソッドとトラックバック メソッドを使用して、投稿のリンク先となる他のブログにアラートを送信します。</p>\n\n<ul>\n <li>pingback は、pingback が有効になっている&rsquo;別のブログ投稿にリンクしたときに作成されるコメントの一種です。</li>\n <li>トラックバックは、従来のブログ システムにリンクされていることを&rsquo;通知する方法です。</li>\n</ul>\n\n<p>彼らはページ速度をドレインすることができ、あなたが本当にそれらを必要としない&rsquo;場合は、通常はオフにすることをお勧めします。 Pingbacks と Trackback の詳細については、 <a href=\"https://make.wordpress.org/support/user-manual/building-your-wordpress-community/trackbacks-and-pingbacks/\">こちらをクリックしてください</a>。</p>\n\n<h4>11. 画像の寸法を指定する</h4>\n\n<p>コンテンツがエンド ユーザーに表示される前に、ブラウザーは画像の周囲のコンテンツのレイアウトを識別する必要がありました。 画像のサイズが分からず、ブラウザーにはこれを把握するための作業が多く、時間がかかります。 ブラウザーがこの手順を実行する必要をなくし、処理を高速化する画像のサイズを指定することをお勧めします。</p>\n\n<h4>12. キャッシュ</h4>\n\n<p>サイトにアクセスするユーザー トラフィックの急増が発生する場合は、トラフィックの急増を処理するためにサイトに何らかの形式のキャッシュを追加することを検討する必要があります。 IIS 出力キャッシュまたは WP-SuperCache プラグインを使用して、両方のメソッドで静的ファイルをキャッシュできます。</p>\n\n<ul>\n <li><a href=\"https://www.iis.net/learn/manage/managing-performance-settings/walkthrough-iis-output-caching\">IIS 出力キャッシュ</a> :&rsquo;構成とセットアップが簡単です。 サイトのスループットは大幅に向上しますが、コメントの送信時に確認メッセージが表示されないことがあります。 IIS 出力キャッシュの詳細については、こちらをクリックしてください。</li>\n <li><a href=\"https://wordpress.org/plugins/wp-super-cache/\">WPスーパーキャッシュ</a> :サイトのスループットを大幅に向上させ、コメントの送信やその他の訪問者&rsquo; のアクションを正しく処理します。 IIS 出力キャッシュと比較して、セットアップと構成が少し複雑になります。 IIS でのスーパー キャッシュ構成の詳細については、こちらをクリックしてください。</li>\n <li id=\"wincache\"><a href=\"https://php.net/manual/en/book.wincache.php\">Wincache</a> : Web アプリケーションの wwwroot の下に .user.ini を作成し、PHP 設定を追加します。 &nbsp;.user.ini&nbsp;<a href=\"https://php.net/manual/en/wincache.configuration.php#ini.wincache.fcenabled\">wincache.fcenabled</a>&nbsp;= 1 と wincache.reroute_enabled=1 で wincache 設定 <a href=\"https://php.net/manual/en/wincache.configuration.php#ini.wincache.reroute_enabled\">を</a>&nbsp;有効にする</li>\n <li>Redis Cache: <a href=\"https://azure.microsoft.com/en-us/services/cache/\">Azure Redis Cache</a> は、 <a href=\"https://wordpress.org/plugins/wp-redis/\">WP Redis プラグイン</a> を使用して WordPress と統合してパフォーマンスを向上することもできます。&nbsp;</li>\n</ul>\n\n<p>これらすべての最適化はほんの数分の作業であり、Web サイトのパフォーマンスが大幅に向上します。</p>\n"
}