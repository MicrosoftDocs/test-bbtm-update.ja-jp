{
    "Slug": "announcing-sql-parameterization-in-documentdb",
    "Title": "DocumentDB の SQL パラメーター化を発表",
    "Summary": "We are pleased to announce support for parameterized SQL queries in the Azure DocumentDB REST API and SDKs.",
    "Content": "<p><a href=\"https://azure.microsoft.com/en-us/services/documentdb/\" target=\"_blank\">Azure DocumentDB </a>REST API と SDK でのパラメーター化されたSQL クエリのサポートについてお知らせします。 この機能を使用して、パラメーター化されたSQLクエリを記述できるようになりました。 パラメーター化されたSQLは、ユーザー入力の堅牢な処理とエスケープを提供し、SQLインジェクション&rdquo; *によるデータ&ldquo;の偶発的な露出を防ぎます。 &#39;.NET SDK を使用してサンプルを見てみましょう。プレーンなSQL文字列と LINQ 式に加えて、パラメーター化されたクエリの作成に使用できる新しい SqlQuerySpec クラスを追加&#39;。 次&#39;、作成者名の単一のユーザー指定パラメーターを使用して Books&quot; コレクションに対してクエリを実行&quot;するサンプルです。</p>\n\n<pre class=\"prettyprint\">\nIQueryable&lt;Book&gt; queryable = client.CreateDocumentQuery&lt;Book&gt;(\n                collectionSelfLink,\n                new SqlQuerySpec\n        {\n                    QueryText = &quot;SELECT * FROM books b WHERE (b.Author.Name = @name)&quot;, \n                    Parameters = new SqlParameterCollection() \n            { \n                          new SqlParameter(&quot;@name&quot;, &quot;Herman Melville&quot;)\n                    }\n        });</pre>\n\n<p>ここで注意すべきいくつかの興味深い点:</p>\n\n<ul>\n    <li>DocumentDB のSQLパラメーターでは、T-SQL から借用した使い慣れた @ 表記を使用します</li>\n    <li>パラメーター値には、任意の有効な JSON (文字列、数値、ブール値、null、配列または入れ子になった JSON) を指定できます。</li>\n    <li>DocumentDB はスキーマレスであるため、パラメーターはどの型に対しても検証されません</li>\n    <li>SqlParameterCollection に SqlParameters を追加することで、追加のパラメーターを簡単に指定できます</li>\n</ul>\n\n<p>DocumentDB REST API では、パラメーター化もネイティブにサポートされています。 上記の .NET サンプルは、次の REST API 呼び出しに変換されます。 パラメーター化されたクエリを使用するには、次に示すように、Content-Type ヘッダーを <em><b>アプリケーション/クエリ + json</b></em> として指定し、クエリを JSON として本文で指定する必要があります。</p>\n\n<pre class=\"prettyprint\">\nPOST https://contosomarketing.documents.azure.com/dbs/XP0mAA==/colls/XP0mAJ3H-AA=/docs\nHTTP/1.1 x-ms-documentdb-isquery: True \nx-ms-date: Mon, 18 Aug 2014 13:05:49 GMT \nauthorization: type%3dmaster%26ver%3d1.0%26sig%3dkOU%2bBn2vkvIlHypfE8AA5fulpn8zKjLwdrxBqyg0YGQ%3d \nx-ms-version: 2014-08-21 \nAccept: application/json \nContent-Type: application/query+json \nHost: contosomarketing.documents.azure.com \nContent-Length: 50 \n{      \n    &quot;query&quot;: &quot;SELECT * FROM books b WHERE (b.Author.Name = @name)&quot;,     \n    &quot;parameters&quot;: [          \n        {&quot;name&quot;: &quot;@name&quot;, &quot;value&quot;: &quot;Herman Melville&quot;}         \n    ] \n}</pre>\n\n<p>クエリは、ドキュメント コレクションだけでなく、上に示した方法を使用して、データベース、DocumentCollections、Attachments などのシステム メタデータ コレクションに対して発行できます。 これを試すには、サポートされているプラットフォーム (.NET、Java、Node.js、JavaScript、Python) で DocumentDB SDK の最新ビルドをダウンロードします。</p>\n\n<blockquote><em>*DocumentDB は、クエリが厳密に読み取り専用の操作であるため、特権&rdquo;の昇格につながる&ldquo;最も一般的な種類のインジェクション攻撃の影響を受けにくいです。ただし、悪意のあるSQL クエリを作成することで、ユーザーが同じコレクション内でアクセスすべき&rsquo;でないデータにアクセスできる可能性があります。パラメーター化SQLサポートは、このような攻撃を防ぐのに役立ちます。</em></blockquote>\n"
}