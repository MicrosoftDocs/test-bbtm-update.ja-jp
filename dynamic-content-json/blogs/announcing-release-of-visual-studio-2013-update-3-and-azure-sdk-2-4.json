{
    "Slug": "announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4",
    "Title": "Visual Studio 2013 Update 3 および Azure SDK 2.4 のリリースの発表",
    "Summary": "Today, we are excited to announce the release of Visual Studio 2013 Update 3 and Azure SDK 2.4 for .NET. This post describes the new tooling features for Azure development enabled by these releases.…",
    "Content": "本日は、Visual Studio 2013 Update 3 と Azure SDK 2.4 for .NET のリリースをお知らせします。 この記事では、これらのリリースで有効になっている Azure 開発用の新しいツール機能について説明します。\n\n<span style=\"text-decoration: underline;\">Visual Studio Update 3</span> [<a href=\"https://go.microsoft.com/fwlink/?LinkId=403040\">ダウンロード</a>]\n<ul>\n <li><strong>Web サイト</strong>: コンソールまたは Web プロジェクトから Web ジョブを発行します。</li>\n <li><strong>Mobile Services</strong>: Mobile Services プロジェクトを作成するときに、クラウドで開発/テスト環境を作成します。 .NET Mobile Servicesでプッシュ通知ウィザードを使用します。</li>\n <li><strong>Notification Hubs</strong>: デバイスの登録を表示および管理します。</li>\n</ul>\n&nbsp;\n\n<span style=\"text-decoration: underline;\">.NET 用 Azure SDK 2.4</span> [<a href=\"https://go.microsoft.com/fwlink/p/?linkid=323510&amp;clcid=0x409\">VS 2013 downloadVS</a> |  <a href=\"https://go.microsoft.com/fwlink/p/?linkid=323511&amp;clcid=0x409\">2012 ダウンロード</a>]\n\nAzure SDK 2.4 for .NET の追加インストールでは、次の機能を利用することもできます。\n<ul>\n <li><strong>Virtual Machines</strong>: リモート デバッグの 32 ビット Virtual Machines。 動的拡張機能のインストール&amp;構成 (マルウェア対策、Puppet、Chef、カスタム スクリプトなど) を含む、Virtual Machinesを構成します。 ディスク状態の仮想マシン スナップショットを作成します。</li>\n <li><strong>Storage</strong>: 診断Storageアクティビティ ログを表示します。 Visual Studioから geo 冗長StorageRead-Accessプロビジョニングします。</li>\n <li><strong>Cloud Services</strong>: Emulator Express は、新しいプロジェクトの既定のオプションです (完全Emulatorは非推奨です)。 サービス モデルで新しいネットワーク機能を構成します。</li>\n</ul>\n&nbsp;\n\nまた、<a href=\"https://go.microsoft.com/?linkid=9811175\">今日の 0.8.6 リリース</a>を含む、Azure PowerShellに対する多くの更新プログラムも開始しました。新機能の詳細については、 <a href=\"https://github.com/Azure/azure-sdk-tools/blob/master/ChangeLog.txt\">変更ログ</a>を参照してください。\n<h2>Web サイト: コンソール プロジェクトから Web ジョブを発行する</h2>\n1 月に、バックグラウンド コード (プログラムまたはスクリプト) を簡単に取得し、Web サイト内で実行できるようにする <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs\">WebJobs</a> という機能を追加しました。 今日まで、Web ジョブを発行するには、ポータルまたはAzure PowerShellを使用する必要があります。 今日のリリースでは、Visual Studio内から WebJobs を発行することもできます。\n\n開始するには、既存のコンソール プロジェクトを開くか、新しいコンソール プロジェクトを作成します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo.png\" alt=\"foo\" width=\"500\" height=\"345\" border=\"0\" />\n\nMain メソッドを実装します。 必須ではありませんが、<a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs\">Microsoft Azure WebJobs SDK を</a>使用できます。 <a href=\"https://www.nuget.org/packages/Microsoft.Azure.Jobs/\">NuGet パッケージ</a>として使用できる SDK を使用すると、項目がキュー、BLOB、またはテーブルに追加されたときに、Azure Storageを統合し、プログラム内の関数をトリガーすることが特に簡単になります。\n\nプロジェクトを Azure に発行する準備ができたら、プロジェクトを選択し、右クリックして [ <b>Azure WebJob として発行</b> ] コマンドを選択します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo2.png\" alt=\"foo2\" width=\"360\" height=\"177\" border=\"0\" />\n\n次に、Web ジョブを構成し、実行方法を選択するための画面が表示されます。 <b>[連続実行]、[スケジュールに従って実行]、または [オンデマンドで実行</b>] を選択します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo3.png\" alt=\"foo3\" width=\"500\" height=\"268\" border=\"0\" />\n\n連続オプションを選択した場合は、無限ループで実行するようにコードが記述されていることを確認します。 <b>[OK] を</b>選択すると、発行先の Web サイトを選択する [Web の発行] ダイアログが表示されます。 既存の Web サイトの一部として Web ジョブをデプロイすることも、新しい Web サイトを作成することもできます。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo4.png\" alt=\"foo4\" width=\"450\" height=\"353\" border=\"0\" />\n\n最後に、Azure portalを開き、Web ジョブを含む Web サイトに移動します。 [ <b>Web ジョブ </b>] タブを選択すると、Web ジョブに関する有用な情報が表示されます。 これには、ログと監視状態を表示するためのダッシュボードへのリンクが含まれます。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo5.png\" alt=\"foo5\" width=\"500\" height=\"273\" border=\"0\" />\n<h2>Web サイト: Web プロジェクトから Web ジョブを発行する</h2>\nWeb ジョブを一度に 1 つずつ発行する代わりに、Azure Web サイトの発行の一環として Web ジョブを簡単に発行することもできます。 これにより、Web サイトと関連するすべての Web ジョブを発行する手順は 1 つだけです。 Web Projectを右クリックし、[<b>Add-New&gt; Azure WebJob Project</b>] または [<b>Add-Existing&gt; Project as Azure WebJob</b>] を選択して、新規または既存のコンソール プロジェクトを関連付けます。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo6.png\" alt=\"foo6\" width=\"500\" height=\"323\" border=\"0\" />\n\n[ <b>発行]</b> を選択してプロジェクトを Azure Web サイトに発行すると、関連付けられている Web ジョブもデプロイされます。\n<h2>Mobile Services: .NET Mobile Services のプッシュ通知ウィザード</h2>\nVisual Studio 2013 Update 3 では、プッシュ通知ウィザードで .NET Mobile Servicesのサポートが追加され、Windows Phoneおよび Windows ストア アプリケーションにプッシュ通知を簡単に追加できるようになりました。 ウィザードは、クライアントをプッシュ通知に登録し、プッシュ通知を送信するためのサンプル バックエンド ロジックを提供するのに役立ちます。 ウィザードを呼び出すには、プロジェクトを選択し、右クリックして <b>[追加 ] -&gt; [プッシュ通知</b> ] コマンドを選択します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image002[7]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0027.png\" alt=\"clip_image002[7]\" width=\"334\" height=\"494\" border=\"0\" />\n<h2>Mobile Services: Project作成時にMobile Servicesをプロビジョニングする</h2>\nこれで、プロジェクトを作成するときに、開発/テスト環境として使用できるモバイル サービスを作成して付随させることができます。 プロジェクトを開発するときに、付随するモバイル サービスにプロジェクトをすばやく発行して、ライブ サービスに対してコードをテストできます。 新しいモバイル サービスをプロビジョニングするには、[新しい ASP.NET Project] ダイアログ<b>で [クラウドでホスト</b>する] チェック ボックスをオンにします。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"FileNewMobile\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/FileNewMobile.png\" alt=\"FileNewMobile\" width=\"610\" height=\"456\" border=\"0\" />\n<h2>Notification Hubs: デバイス登録の表示と管理</h2>\nNotifications Hubs には、デバイス (Windows Phone、Windows ストア、iOS、Android、Kindle Fire) へのテスト通知の送信が既にサポートされています。 Visual Studio Update 3 では、デバイスの登録の表示、タグの編集、登録の削除を可能にするツールが追加されました。 さらに、プラットフォームごとの登録数も提供され、簡単な概要ビューが提供されます。 通知ハブ ツールにアクセスするには、サーバー エクスプローラーで <strong>Notifications Hubs</strong> ノードを見つけて右クリックし、[ <strong>診断</strong>] を選択します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"NotificationsHub\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/NotificationsHub.png\" alt=\"NotificationsHub\" width=\"588\" height=\"500\" border=\"0\" />\n<h2>Virtual Machines: 構成</h2>\nAzure SDK の 2.4 リリースでは、Visual Studioから IaaS 仮想マシンを使用するためのサポートを引き続き改善しています。 Azure 仮想マシンで実行されるサービスを構築する場合でも、仮想マシンを使用して開発環境やテスト環境をホストする場合でも、ジョブを簡単にVisual Studioツールが見つかります。\n\nこのリリースでは、サーバー エクスプローラーを使用すると、Virtual Machinesのコンテキスト メニューに <b>[構成</b>] オプションが表示されます。 [ <b>構成</b> ] をクリックして仮想マシンの構成ウィンドウを開き、VM のプロパティと、その VM のエンドポイント、拡張機能、ディスク構成を表示および編集できます。 VM の [構成] ウィンドウから、<b>開始</b>、<b>シャットダウン</b>、<b>Connect</b>、<b>キャプチャ</b> (後で詳しく説明します) などの操作を実行することもできます。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image001[9]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0019.png\" alt=\"clip_image001[9]\" width=\"438\" height=\"426\" border=\"0\" />\n\n[VM 構成] ウィンドウでは、1 つの構成を別の構成と簡単に比較できるように、複数の VM を一度に開くこともできます。\n\nエンドポイントを追加するには、使用可能なエンドポイントの一覧からエンドポイントの種類を選択し、[追加] をクリックします。 エンドポイントが追加されたら、ニーズに合わせて名前やポートを変更できます。 [ <strong>更新</strong> ] をクリックして VM に変更を適用します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image003[7]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0037.png\" alt=\"clip_image003[7]\" width=\"610\" height=\"366\" border=\"0\" />\n\n同様に、構成ウィンドウから仮想マシンに拡張機能を追加または構成できます。 仮想マシン拡張機能は、VM の機能を拡張し、VM を目的の状態にしたり、VM で最新のマルウェア対策を実行したりするなど、さまざまな VM 管理操作を簡略化するソフトウェア コンポーネントです。 詳細については、 <a href=\"https://azure.microsoft.com/blog/2014/04/11/vm-agent-and-extensions-part-1/\">VM 拡張機能に関するブログ投稿</a> を参照してください。 拡張機能を追加するには、使用可能な拡張機能の一覧から拡張機能を選択し、[ <strong>追加</strong>] をクリックします。誤って拡張機能を追加した場合は、[更新] をまだクリックしていない場合は削除できます。\n\n追加する拡張機能の種類によっては、構成を指定する必要がある場合もあります。そのためには、拡張機能を選択して [構成] をクリックします。 拡張機能の構成の形式とスキーマは、拡張機能の発行元によって定義されます。 拡張機能の構成の詳細については、構成ダイアログの下部にあるリンクをクリックします。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"ConfigureExtension\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ConfigureExtension.png\" alt=\"ConfigureExtension\" width=\"551\" height=\"399\" border=\"0\" />\n\n拡張機能の構成ダイアログから、パブリック構成とプライベート構成の両方を指定できます。 パブリック構成は、必要に応じて読み取りおよび更新できます。 プライベート構成は書き込み専用です。 プライベート構成を適用すると、拡張機能によってのみ読み取ることができます。 Visual Studio、ポータル、またはその他のツールから取得することはできません。 拡張機能の発行元は、パスワードなどの機密情報をプライベート構成に格納することを選択できます。\n<h2>Virtual Machines: スナップショット</h2>\nスナップショットを使用すると、同じ VM のレプリカを作成するために使用できる VM イメージを簡単にキャプチャできます。 必要に応じて仮想マシンが構成されているImagine、新しいサービスをインストールし、ファイアウォールを構成し、ニーズに合わせてデータ ディスクを接続している可能性があります。 カスタマイズした VM を使用して将来レプリカを作成できるように、VM イメージを作成することをお勧めします。\n\nVM イメージを作成するには、VM 構成ウィンドウの [ <strong>イメージのキャプチャ</strong> ] ボタンをクリックします。 これにより、VM イメージのイメージ ラベルと説明を指定できるダイアログが表示されます。 Windows VM の場合、一般化された VM イメージを作成するには、VM で Sysprep を実行する必要があります。 Sysprep は、新しい VM のテンプレートとして簡単に再利用できるように、システム固有の情報をWindowsから削除します。 Sysprep を実行している場合は、仮想マシンで Sysprep を実行したチェックボックスをオンにし、[ <strong>キャプチャ</strong> ] ボタンをクリックして VM イメージをキャプチャできます。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CaptureVM\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CaptureVM.png\" alt=\"CaptureVM\" width=\"600\" height=\"396\" border=\"0\" />\n\nVM イメージをキャプチャしたら、そのイメージ スナップショットに基づいて新しい仮想マシンを作成できます。 サーバー エクスプローラーの <strong>Virtual Machines</strong> ノードのコンテキスト メニューから [<strong>仮想マシンの作成</strong>] オプションを選択して、新しい仮想マシンの作成ウィザードを表示します。 ウィザードの [イメージの選択] ページで、[ <strong>イメージの種類</strong> ] ドロップダウンを <strong>[プライベート イメージ - VM イメージ</strong> ] に設定して、キャプチャした VM イメージを表示します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CreateNewVM\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateNewVM.png\" alt=\"CreateNewVM\" width=\"610\" height=\"431\" border=\"0\" />\n\nウィザードの次のページに進み、マシン 設定、クラウド サービス、エンドポイントなどの新しい VM に関する追加情報を提供できます。 エンドポイントの構成が完了したら、[作成] をクリックして、キャプチャした VM イメージに基づいて新しい仮想マシンを作成できます。\n<h2>Virtual Machines: 32 ビット Virtual Machinesのリモート デバッグ</h2>\nVisual Studioでは、Azure Virtual Machines で実行されている 32 ビット アプリケーションのリモート デバッグがサポートされるようになりました。 サーバー エクスプローラーのコンテキスト メニューから、仮想マシンの特定のインスタンスでデバッグを有効にすることができます。\n<h2>Storage: Visual StudioからRead-Access Geo-Redundant Storageをプロビジョニングする<b></b></h2>\nRead-Access Geo-Redundant Storage (RA-GRS) を使用すると、セカンダリの場所にレプリケートされたデータへの \"読み取り専用\" アクセスを提供することで、ストレージ アカウントの読み取り可用性を高くできます。 Visual Studioからストレージ アカウントを作成するときに、ストレージの冗長性オプションとして RA-GRS を選択できるようになりました。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CreateStorageAccount\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateStorageAccount.png\" alt=\"CreateStorageAccount\" width=\"490\" height=\"359\" border=\"0\" />\n<h2>Storage: アクティビティ ログStorage表示する</h2>\nAzure Storageログは、診断に使用できるストレージ アカウントに対して実行された要求のトレースを提供します。 BLOB コンテナー、テーブル、またはキューに対してログ記録が有効になっている場合、ログは $logs BLOB コンテナーに表示されます。 同様に、$metrics テーブルには、BLOB コンテナーの容量と、BLOB コンテナー、キュー、およびテーブルのトランザクションに関する情報が含まれます。 Visual Studioのサーバー エクスプローラーから直接、$logs BLOB コンテナーと$metrics テーブルを表示できるようになりました。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image010\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010.png\" alt=\"clip_image010\" width=\"396\" height=\"410\" border=\"0\" />\n<h2>Cloud Services: Express を既定としてEmulatorします。フル コンピューティング Emulatorの廃止</h2>\nEmulator Express を立ち上げ、管理者特権を必要とせずにローカルで複数ロールのCloud Servicesをテストできるように、長年の顧客の要望に対応しました。 これは、それ以来、新しいプロジェクトのためにお客様が使用する主要なコンピューティング エミュレーターとなっています。 将来の投資を 1 つのコード ベースに集中させるために、Express を優先して完全なEmulator Emulator非推奨とします。\n\nSDK 2.4 の新しいCloud Services プロジェクトでは、既定で Emulator Express が使用されます。 ただし、Emulator Express はロールごとに 1 つのインスタンスに制限されることに注意してください。\n<h2>Cloud Services: サービス モデルの新しいネットワーク機能</h2>\n次の機能は、PowerShell を介して IaaS で利用できます。 現在の SDK 2.4 リリースでは、サービス モデルを介してCloud Services (Web ロールと worker ロール) で使用できるようになりました。\n<h3>内部負荷分散 (ILB)</h3>\nILB を使用すると、ユーザーは信頼境界内 (この場合はクラウド サービス) 内でのみアクセス可能な高可用性サービスを実行できます。内部ロード バランサーの設定は、サービス モデルのデプロイ レベルで定義されます。\n\n.cscfg には、ロード バランサー情報を含む展開全体の <b>NetworkConfiguration</b> セクションが拡張されています。\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  …\n  &lt;LoadBalancers&gt;\n    &lt;LoadBalancer name=\"name\"&gt;\n      &lt;FrontendIPConfiguration type=\"private\" subnet=\"subnet-name\" staticVirtualNetworkIPAddress=\"static-IP-address\"/&gt;\n    &lt;/LoadBalancer&gt;\n  &lt;/LoadBalancers&gt;\n&lt;/NetworkConfiguration&gt;</pre>\nその後、.csdef のエンドポイント定義で内部ロード バランサーが参照されます。 ILB の参照は <b>、InputEndpoints</b> でのみサポートされています。 ILB の参照は、すべてのロールの種類 (worker ロールと Web ロール) でサポートされています。\n<pre class=\"prettyprint\">&lt;WorkerRole name=\"worker-role-name\" vmsize=\"worker-role-size\" enableNativeCodeExecution=\"[true|false]\"&gt;\n  …\n  &lt;Endpoints&gt;\n    &lt;InputEndpoint name=\"input-endpoint-name\" protocol=\"[http|https|tcp|udp]\" localPort=\"local-port-number\" port=\"port-number\" certificate=\"certificate-name\" loadBalancerProbe=\"load-balancer-probe-name\" loadBalancer=\"load-balancer-name\" /&gt;\n  &lt;/Endpoints&gt;\n&lt;/WorkerRole&gt;</pre>\n<h3>仮想マシンとロール インスタンスのパブリック IP アドレス</h3>\nユーザーは、ロール インスタンスの公開されている外部 IP を取得できるようになりました。 これにより、これらのパブリック IP アドレスのトラフィックは、ポートにかかわらず、指定した VM またはロール インスタンスにリダイレクトされます。\n\nインスタンス レベルのパブリック IP は、サービス モデルのデプロイ レベルで定義されます。 ロール内のすべてのインスタンスへの外部 IP を CSCFG スキーマに追加する必要があります。 例:\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  &lt;VirtualNetworkSite name=\"VNet\"/&gt;\n  &lt;AddressAssignments&gt;\n    &lt;InstanceAddress roleName=\"VMRolePersisted\"&gt;\n      &lt;PublicIPs&gt;\n        &lt;PublicIP name=\"public-ip-name\"/&gt;\n      &lt;/PublicIPs&gt;\n    &lt;/InstanceAddress&gt;\n  &lt;/AddressAssignments&gt;\n&lt;/NetworkConfiguration&gt;</pre>\nこの構文は、将来、さまざまな種類 (IPv4、IPv6) と複数のパブリック IP アドレスをサポートするように設計されていますが、現時点では 1 つのパブリック IP アドレスのみに制限されています。 IP アドレスの種類は IPv4 と推定されます。\n<h3>Azure Load Balancerの構成可能なアイドル タイムアウト</h3>\nAzure Load Balancerでは、構成可能な TCP アイドル タイムアウトがサポートされます。 受信接続に対してのみ、4 ~ 30 分の間に設定できるようになりました。 アイドル タイムアウト時間を構成することで、接続のアクティビティが発生していない場合でも、アプリケーションは TCP 接続を最大 30 分間維持できます。\n\nクラウド サービスのエンドポイントの設定は、.csdef で行われます。 そのため、クラウド サービスのデプロイで TCP タイムアウトをアップデートするには、デプロイのアップグレードが必要です。 TCP タイムアウトがパブリック IP 向けにのみ指定されている場合は例外として扱われます。 パブリック IP は .cscfg で設定され、デプロイのアップデートやアップグレードを通じて更新されます。\n\nエンドポイント設定の .csdef の変更は次のように行います。\n<pre class=\"prettyprint\">&lt;WorkerRole name=\"worker-role-name\" vmsize=\"worker-role-size\" enableNativeCodeExecution=\"[true|false]\"&gt;\n  &lt;Endpoints&gt;\n    &lt;InputEndpoint name=\"input-endpoint-name\" protocol=\"[http|https|tcp|udp]\" localPort=\"local-port-number\" port=\"port-number\" certificate=\"certificate-name\" loadBalancerProbe=\"load-balancer-probe-name\" idleTimeoutInMinutes=\"tcp-timeout\" /&gt;\n  &lt;/Endpoints&gt;\n&lt;/WorkerRole&gt;</pre>\nパブリック IP のタイムアウト設定に対する .cscfg の変更は次のとおりです。\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  &lt;VirtualNetworkSite name=\"VNet\"/&gt;\n  &lt;AddressAssignments&gt;\n    &lt;InstanceAddress roleName=\"VMRolePersisted\"&gt;\n      &lt;PublicIPs&gt;\n        &lt;PublicIP name=\"public-ip-name\" idleTimeoutInMinutes=\"timeout-in-minutes\"/&gt;\n      &lt;/PublicIPs&gt;\n    &lt;/InstanceAddress&gt;\n  &lt;/AddressAssignments&gt;\n&lt;/NetworkConfiguration&gt;</pre>\n<h2>まとめ</h2>\n<a href=\"https://go.microsoft.com/fwlink/?LinkId=403040\">Update 3</a> と Azure SDK 2.4 Visual Studio 2013すると、豊富なクラウド アプリケーションの開発をこれまで以上に簡単に開始できます。 <a href=\"https://azure.microsoft.com/en-us/develop/net/\">Azure デベロッパー センターの .NET 開発者向けリソースのセット</a>と共に、今日のリリースでは、開発エクスペリエンスをより楽しく効率的にする必要があります。\n\nまだ Azure アカウントをお持ちでない場合は、 <a href=\"https://azure.microsoft.com/en-us/pricing/free-trial/\">無料試用版</a> にサインアップし、上記のすべての機能を今すぐ使用できます。 その後、 <a href=\"https://azure.microsoft.com/en-us/documentation/\">Azure デベロッパー センター</a> にアクセスして、アプリを構築する方法の詳細を確認してください。\n<h3>謝辞</h3>\nこのブログ記事は、複数のユーザーによる共同作業です。 Saurabh Bhatia と Azure Cloud Tools チームの貢献に感謝します。"
}