{
    "Slug": "3-best-practices-for-windows-azure-sql-reporting-development",
    "Title": "Windows Azure SQLレポートの開発に関する 3 つのベスト プラクティス",
    "Summary": "Editor's note:&nbsp;This blog post comes from David Magar,&nbsp;Program Manager, Windows Azure SQL Reporting.  Although it&rsquo;s tempting to take an existing Reporting Services project and push it…",
    "Content": "<p><strong>エディターの注:</strong>&nbsp;このブログ投稿は、David Magar、&nbsp;Program Manager、Windows Azure SQL Reporting に由来します。</p>  <p>&rsquo;既存のReporting Services プロジェクトをそのままクラウドにプッシュするのは魅力的ですが、本当に必要です&rsquo;。 ローカル サーバーで優れたパフォーマンスを発揮するレポートは、SQL Reporting レポート サーバーに展開した後にパフォーマンスがそれほど高くない場合があります。</p>  <p>幸いなことに、ほとんどの場合、レポートの実行速度が速くなる 3 つの簡単な変更があります。 このブログ記事では、それぞれについて詳しく説明します。</p>  <h4>ベスト プラクティス #1: ReportViewer コントロールを再構成する</h4>  <p>ASP.Net ページまたは Windows フォーム アプリケーションで ReportViewer コントロール (RVC) を使用している場合は、次の構成を変更する必要があります。</p>  <ol>  <li><span style=\"font-family: 'courier new', courier;\"><span style=\"color: #00ccff;\">WebRequest</span> を呼び出して、アプリケーションの初期化で既定のプロキシを無効にします。DefaultWebProxy = <span style=\"color: #0000ff;\">null</span></span></li>  <li><span style=\"font-family: 'courier new', courier;\">SetParameter ではなく SetParameters</span> を呼び出して、すべてのWindows Azure SQL レポート パラメーターを一度に<span style=\"font-family: 'courier new', courier;\">設定します。</span> パラメーターを設定すると、Windows Azure SQL Databaseにある Windows Azure SQL Reporting データ層が呼び出されます。 複数の呼び出しではなく 1 つの呼び出しを発行することで、読み取り/書き込みサイクルを減らすと、大きな助けになります。</li>  <li>ログオン呼び出しを行う代わりに、認証に Cookie を使用するようにアプリケーション&rsquo; RVC を構成します。 これにより、ユーザーまたはアプリケーションは強制的に 1 回ログインし、後で Cookie を返してレンダリングを高速化します。 レポート サーバーでは、過去 60 分以内に作成された Cookie のみが許可されるため、アプリケーションを設計するときにこの事実を考慮する必要があることに注意してください。 Cookie 認証を実現する方法については、こちらを参照してください。</li>  </ol>  <h4>ベスト プラクティス #2: 同じデータ センター内の Web アプリケーションとデータベースを併配置します。</h4>  <p>ReportViewer コントロールは、レポート サーバーと頻繁に通信します。 この動作を排除することはできません&rsquo;が、Windows Azure アプリケーションとレポート サーバーを同じデータ センターにデプロイすることで、コストを最小限に抑えることができます。</p>  <p>Windows Azure SQL データベースを配置する場所を選択する場合も、同じ考慮事項が適用されます。 SQL Databaseに送信される各クエリには、一定のオーバーヘッドが伴います。 認証、承認、要求の処理などは、最初の接続とページのレンダリングの間の遅延に寄与するすべてのアクションです。 データベースを他のアプリケーション コンポーネントと同じデータ センターに配置すると、これらの操作にかかる時間が短縮され、レンダリング時間が大幅に短縮され、パフォーマンスが向上します。</p>  <p>データベース、アプリケーション、およびレポート サーバーの場所を検出し、各レポートレンダリングのデータの取り込みにかかる時間を正確に把握するには、David Bahat のチームからのブログ記事を参照してください。</p>  <h4>ベスト プラクティス #3: 効率的なクエリを記述する</h4>  <p>レポートを作成する場合は、レポートの視覚エフェクトに必要なデータのみを取り込むようにクエリを設定します (特に、クエリのデザイン時に select *&rdquo; type of SQL ステートメントは使用しないでください&ldquo;)。 このベスト プラクティスにより、可能な限り最速のレンダリング用にレポートが最適化されます。</p>  <p>結論として、これらの3つの提案が、SQL Reportingで動作するアプリケーションで発生する可能性のあるパフォーマンスの問題のいくつかを解決するのに役立つことを願っています。 私はあなたのフィードバックと以下のコメントを楽しみにしています。</p>  <p>よろしくお願い申し上げます。<br>David Magar<br>プログラム マネージャー、Windows Azure SQL レポート</p>"
}