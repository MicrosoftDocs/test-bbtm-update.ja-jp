{
    "Slug": "a-fintech-startup-pivots-to-azure-cosmos-db",
    "Title": "フィンテックスタートアップが Azure Cosmos DB にピボットする",
    "Summary": "The right technology choices can accelerate success for a cloud born business. This is true for the fintech start-up clearTREND Research. Their solution architecture team knew one of the most important decisions would be the database decision between SQL or NoSQL.",
    "Content": "<p>適切なテクノロジの選択によって、クラウド生まれのビジネスの成功を加速させることができます。 これは、フィンテックスタートアップ <a href=\"https://cleartrendresearch.com/\" target=\"_blank\">クリアトレンドリサーチ</a>に当てはまります。 ソリューション アーキテクチャ チームは、最も重要な決定事項の 1 つが、SQLと NoSQL の間のデータベースの決定であると知っていました。 研究、実験、および多くの設計イテレーションの後、チームは Microsoft <a href=\"https://azure.microsoft.com/en-us/services/cosmos-db/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Azure Cosmos DB</a> にデプロイするという決定に興奮しました。 このブログは、彼らの決定がどのように行われたかについてです。</p>\n\n<p>データと AI がクラウドビジネス機会の急増を促進しており、慎重な評価に値する 1 つのテクノロジの決定は、クラウド データベースの選択です。 リレーショナル データベースは引き続き普及しており、クラウドベースのソリューションで大きな需要を引き出しますが、NoSQL データベースは分散型グローバル スケール ソリューションに適しています。</p>\n\n<p>パートナーの clearTREND では、 <a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/cleartrend.cleartrend_research?tab=Overview\" target=\"_blank\">財務トレンド エンジン</a> を製品化し、個人や専門家にサブスクリプション投資サービスを提供することを計画しました。 clearTRENDs&rsquo; SaaS ソリューションを担当するチームは、長年にわたってクラウドベースのソリューションを実装してきたソフトウェア開発者とアーキテクトのベテラン チームです。 彼らはビジネスチャンスを理解し、データベーステクノロジのオプションをより深く理解したいと考えました。 デューデリジェンスを通じて、ビジネスの優先順位とデータセットとして形を変えたアーキテクチャが洗練されました。 多くの調査と実際の実験の後、アーキテクチャ チームは、ソリューションに最適な Azure Cosmos DB を決定しました。</p>\n\n<p>特に金融業界では、ビジネスモデルが攻撃を受けています。 Cosmos DB は、適応、進化、ビジネスのイノベーションを迅速に行い、機会を戦略的な利点に変えることができるテクノロジです。&nbsp;</p>\n\n<h2>Azure Cosmos DB を選択する 6 つの理由</h2>\n\n<p>clearTREND のチームが Azure Cosmos DB を選択した理由を次に示します。</p>\n\n<ol>\n    <li><strong>スキーマの設計ははるかに簡単で柔軟です</strong>。 アジャイル開発手法では、スキーマは頻繁に変更され、変更を迅速かつ安全に実装できることは大きな利点です。 Azure Cosmos DB はスキーマに依存しないため、データの使用方法に関して非常に柔軟に対応できます。</li>\n    <li><strong>データベースの読み取りと書き込みが非常に高速です</strong>。 Azure Cosmos DB では、<a href=\"https://azure.microsoft.com/en-us/support/legal/sla/cosmos-db/v1_0/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">サービス レベル アグリーメント</a> (SLA) を使用して、10 ミリ秒未満の読み取りと書き込みを提供できます。</li>\n    <li><strong>クエリは高速で実行され、自動インデックス作成はゲームの変更機能です</strong>。 プライマリ キーまたはパーティション キーに基づく読み取りと書き込みは高速ですが、多くの NoSQL 実装では、キーのないドキュメント属性に対して実行されるクエリのパフォーマンスが低下する可能性があります。 セカンダリ インデックス作成は、管理とメンテナンスの負担になる可能性があります。 既定では、Azure Cosmos DB はドキュメント内のすべての属性のインデックスを自動的に作成するため、データが読み込まれるとすぐにクエリのパフォーマンスが最適化されます。 自動インデックス作成のもう 1 つの利点は、スキーマとインデックスが完全に同期されるため、セカンダリ インデックスにダウンタイムや管理を必要とせずに、スキーマの変更をすばやく実装できることです。</li>\n    <li><strong>慎重に設計された Azure Cosmos DB は、非常にコスト効率に優れています</strong>。 Azure Cosmos DB コスト モデルは、コレクションの数、パーティション 分割キー、インデックス戦略、ドキュメント サイズ、ドキュメント数によってデータベースがどのように設計されているかによって異なります。 Azure Cosmos DB の価格は予約済みのリソースに基づいており、これらのリソースは要求ユニットまたは RU と呼ばれ、<a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/request-units/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Azure Cosmos DB</a>&rdquo; の要求ユニットに関するドキュメントで説明&ldquo;されています。 clearTREND スキーマ設計は 1 つのドキュメント コレクションとして実装され、Azure Cosmos DB を含む Azure 上のソリューションのコスト全体は、手頃な価格で月額料金で実現されます。 これはマネージド データベース サービスであることに注意してください。そのため、毎月のコストには、サポート、99.999% の高可用性、読み取りと書き込みのパフォーマンスの SLA、自動パーティション分割、既定で暗号化されたデータ、自動バックアップが含まれます。</li>\n    <li><strong>プログラムによってワークロード バーストの容量のサイズを変更します</strong>。 clearTREND ワークロードには予測可能な毎日のバースト パターンがあり、RU をプログラムで調整できます。 複雑な処理や、より高いスループット要件を満たすために追加のコンピューティング リソースが必要な場合は、RU を増やすことができます。 処理が完了すると、RU は元に戻って調整されます。 この弾力性は、ワークロードの需要にコスト効率よく適応するために、Azure Cosmos DB のサイズを変更できることを意味します。</li>\n    <li><strong>プッシュ ボタンのグローバル分散データ</strong>。 ソリューションの将来のスケーラビリティを実現するための設計は難しい場合があり、ソリューションが初期のビジョンを超えて成長するにつれて、テクノロジと設計の選択が非効率的になる可能性があります。 Azure Cosmos DB の利点は、数回クリックするだけでグローバルに構成され、大規模にスケールアウトされたソリューションになることです。 クラウド規模の NoSQL 分散データベースを設定および管理する操作上の複雑さはありません。</li>\n</ol>\n\n<h2>Azure Cosmos DB の設計と実装に関するヒント</h2>\n\n<p>Azure Cosmos DB を初めて使用する場合は、ソリューションの設計と実装時に考慮すべき clearTREND チームのヒントを次に示します。&nbsp;&nbsp;</p>\n\n<ul>\n    <li><strong>クエリと API の最適化に関するスキーマを設計</strong>します。 NoSQL データベースのスキーマ設計は、リレーショナル データベース管理システム (RDBMS) データベースの場合と同じくらい重要ですが&rsquo;、異なります。 NoSQL データベースでは定義済みのテーブル構造は必要ありません&rsquo;が、ドキュメント スキーマの整理と定義を意図的に行う必要があります。また、リレーションシップが表され、埋め込まれる場所と方法も認識する必要があります。 スキーマ設計をガイドするために、clearTREND チームは、ソリューション&rsquo; API によって書き込まれ、取得されるデータ要素に基づいてデータをグループ化する傾向があります。</li>\n    <li><strong>柔軟なパーティション キーを実装します。</strong> Cosmos DB では、10 GB を超えるドキュメント コレクションを作成するときにパーティション キーを指定する必要があります。 パーティション キーを決定するのは難しい場合があります。最初は、パーティション キーに最適な選択肢が明確でない場合があるためです。データ カテゴリ、地理的リージョン、識別子、タイムスケール (月単位や年単位など) である必要がありますか? 適切に設計されていないパーティション キーは、パーティション間でアクティビティを均等に分散するのではなく、読み取りと書き込みのアクティビティを 1 つのパーティションに集中させるホット スポット&rsquo;と呼ばれる&lsquo;パフォーマンスのボトルネックを作成できます。&nbsp;データベースのパーティション キーが変更されると、基になるデータが新しいコレクションにコピーされ、インデックスが再作成されるため、アプリケーションの可用性に影響を与える可能性のあるインデックス再作成操作が必要になります。&nbsp;&nbsp;<br>\n&nbsp;<br>\nclearTrend チームは、データベースのインデックス再作成操作の必要性を軽減するために、パーティション キーの設計に柔軟性を組み込んでいます。&nbsp;そのシナリオでは、ドキュメント コレクションの共通フィールドは型であり、各型には独自のスキーマがあります。&nbsp;設計時に、ドキュメントの種類によって最適なパーティション キーが異なる場合があることに気付きました。&nbsp;型がパーティション キー値の 1 つになりました。&nbsp;パーティション キーの 2 番目の値に対して、チームは論理フィールドを文字列として定義し、<strong>PartitionID という名前を付けます</strong>。&nbsp;<strong>PartitionID</strong> の背後にある考え方は、最初は 1 つの値 (クライアント識別子など) に設定でき、後で&ndash;、より効率的なキー値が&ndash;プログラムによって新しい値に置き換えられたときに設定できることです。&nbsp;&nbsp;この方法では、パーティション キーの論理定義は変更されませんが、パーティション キーの値は変更される可能性があります。&nbsp;&nbsp;CosmosDB では、パーティション キーを再ハッシュし、正しい論理パーティション内の項目を再検索する必要がありますが、コレクション内のドキュメントのサブセットのみが影響を受ける場合に、データベース全体のインデックス再作成操作を回避するために使用できます。</li>\n    <li><strong>1 つのコレクションに基づくスキーマ設計を検討してください</strong>。 一般的な設計戦略は、コレクションごとに 1 つのドキュメントの種類を使用することですが、1 つのコレクションに複数のドキュメントの種類を格納する利点があります。 コレクションはパーティション分割とインデックス作成の基礎であるため、1 つのコレクションに複数のドキュメントの種類を格納するのは直感的ではないようです。 ただし、クロスコレクション操作を必要とせず機能を最大限に活用し、全体的なコストを最小限に抑えることができます。これは、1 つのコレクションが複数のコレクションよりも安価であるためです。 clearTREND ソリューションには 7 種類のドキュメントがあり、すべて 1 つのコレクションに格納されます。 このアプローチは、すべてのドキュメントの派生元となる <strong>ドキュメント型</strong> と呼ばれる列挙フィールドを使用して実装されます。 すべてのドキュメントには、7 つのドキュメントの種類のいずれかに対応するドキュメントの種類プロパティがあります。&nbsp;&nbsp;&nbsp;&nbsp;</li>\n    <li><strong>複雑なクエリとストアド プロシージャ操作の RU コストを理解して、スキーマの設計を調整します</strong>。 複雑なクエリやストアド プロシージャのコストを予測するのは難しい場合があります。特に、Azure Cosmos DB が操作を実行するために必要な読み取りまたは書き込みの数を事前に把握していない&rsquo;場合は特にです。 複雑な操作のメトリックとコスト (RU) をキャプチャし、その情報を使用してスキーマ設計を効率化します。 これらのメトリックをキャプチャする方法の 1 つは、Azure portal上の Azure <a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/monitor-accounts/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Cosmos DB ダッシュボード</a>からクエリまたはストアド プロシージャを実行することです。</li>\n    <li><strong>単純式または計算式をドキュメント プロパティとして埋め込む方法を検討してください</strong>。 カウント、合計、最小値、最大値などの単純な集計を計算する要件がある場合、または単純なブール論理式を評価する必要がある場合は、基本ドキュメント クラスのプロパティとして式を定義することが理にかなっている可能性があります。 たとえば、ログ アプリケーションでは、条件を評価し、操作が成功したかどうかを判断するロジックが存在する可能性があります。 ロジックが次のような単純なブール式である場合は、クラス定義に含めてみてください。</li>\n</ul>\n\n<pre>\npublic class LogStatus\n{\n    // C# example of a Boolean expression embedded in a class definition\n      public bool Failed =&gt; !((WasReadSuccessful &amp;&amp; WasOptimizationSuccssful &amp;&amp; StatusMsg == &ldquo;Success&rdquo;) ||\n(WasReadSuccessful &amp;&amp; !IsDataCurrent));\n      public string StatusMsg {get; set;}\n      public bool WasReadSuccessful {get; set;}\n      public bool WasOptimizationSuccessful {get;set}\n      public bool IsDataCurrent {get;set}\n  }</pre>\n\n<p><strong>Failed </strong>を示すコマンド フィールドは、読み取り専用の計算プロパティとして定義されます。 データベースの使用量が主に読み取り集中型の場合、式の評価と保存、またはドキュメントの書き込み時に、このアプローチによって全体的な RU コストが削減される可能性があります。 これは、ドキュメントのクエリを実行するたびにコストを削減する代わりに使用できます。&nbsp;</p>\n\n<ul>\n    <li><strong>参照整合性はアプリケーション 層に実装されていることに注意してください</strong>。 参照整合性により、データ要素間のリレーションシップが確実に保持され、RDBMS 参照整合性がキーによって適用されます。 たとえば、RDBMS では主キーと外部キーを使用して、注文を作成する前に製品が存在することを確認します。 参照整合性が要件であり、データの依存関係を監視して適用する必要がある場合は、アプリケーション レイヤーで行う必要があります。 参照とデータの整合性のテストに関する厳格な要件。</li>\n    <li><strong>アプリケーション インサイトを使用して、Azure Cosmos DB アクティビティを監視します</strong>。 <a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">アプリケーション インサイト</a>はテレメトリ サービスであり、このソリューションは、Azure Cosmos DB アクティビティに関する詳細なパフォーマンス、可用性、使用状況情報を収集して報告するために使用されました。 <a href=\"https://azure.microsoft.com/en-us/services/functions/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Azure Functions</a>には、<a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-metrics-explorer/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">メトリックス エクスプローラー</a>を使用した Azure Cosmos DB とアプリケーション インサイトの統合と<a href=\"https://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.telemetryclient?view=azure-dotnet/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">、TelemetryClient.GetMetric()</a><strong> </strong>を使用して<a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">カスタム イベント</a>をキャプチャする機能が用意されています。</li>\n</ul>\n\n<blockquote>\n<p>&ldquo;AppInsights との統合は素晴らしいです&hellip;。&rdquo; Tim Miller、プリンシパル コンサルタント &ndash; のスカイライン テクノロジーズ</p>\n</blockquote>\n\n<ul>\n</ul>\n\n<h2>推奨される次の手順</h2>\n\n<p>NoSQL は、クラウドでのデータベース ソリューションの実装方法を急速にシフトするパラダイムです。 開発者でもデータベースの専門家でも、Azure Cosmos DB はクラウド データベース環境でますます重要なプレーヤーであり、ソリューションのゲーム チェンジャーになる可能性があります。 まだ行っていない場合は&rsquo;、Azure Cosmos DB の利点と機能について説明します。 <a href=\"https://azure.microsoft.com/en-us/blog/a-technical-overview-of-azure-cosmos-db/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">ドキュメント</a>を見て、<a href=\"https://github.com/Azure-Samples/documentdb-dotnet-todo-app\" target=\"_blank\">サンプル GitHub アプリケーション</a>を解剖し、設計パターンの詳細を確認します。</p>\n\n<ul>\n    <li><a href=\"https://www.skylinetechnologies.com/Case-Studies/fintech-startup-commercializes-internal-saas-tool\" target=\"_blank\">フィンテックスタートアップは、SaaS製品として内部ツールを製品化</a>します。</li>\n    <li><a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/cleartrend.cleartrend_research?tab=Overview\" target=\"_blank\">世界初&rsquo;のクラウドベースの財務トレンドエンジンである clearTREND を発見</a>します。</li>\n    <li><a href=\"https://azure.microsoft.com/en-us/try/cosmosdb/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Azure Cosmos DB を無料で試してみてください</a>。 あなたは限られた時間、フルサービスの経験を得る。 試して、チュートリアルまたはデモを実行し、必要な Azure アカウントやクレジット カードなしでクイック スタートを実行します。</li>\n    <li>開発者の場合は、<a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/local-emulator/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Azure Cosmos DB エミュレーターをお試しください</a>。 Azure サブスクリプションを作成したり、コストを発生させたりすることなく、ローカルでアプリケーションを開発してテストします。 アプリケーションが動作したら、Azure Cosmos DB の使用に切り替えます。</li>\n</ul>\n\n<h2>当社のパートナーに感謝します クリアトレンドとスカイラインテクノロジー!</h2>\n\n<p>Microsoft での作業に関する優れた点の 1 つは、顧客やパートナーと協力し、テクノロジを実装するための創造的なアプローチについてそれらを通じて学ぶ機会です。 clearTREND ソリューションを設計して実装したチームは、 <a href=\"https://www.skylinetechnologies.com/\" target=\"_blank\">スカイライン テクノロジ</a>を持つアーキテクトと開発者です。 ビジネス クライアントに情熱を注いで複雑な技術的な課題を解決し、非常に初期のクラウド導入者でした。 特に、 <a href=\"https://www.linkedin.com/in/timrmiller\" target=\"_blank\">Tim Miller</a>、 <a href=\"https://www.linkedin.com/in/greglevenhagen/\" target=\"_blank\">Greg Levenhagen</a>、 <a href=\"https://www.linkedin.com/in/mikelauer/\" target=\"_blank\">Michael Lauer</a> など、この取り組みに時間を割いたチーム メンバーに感謝します。 それは&rsquo;あなたと一緒に働く喜びでした。</p>\n"
}