{
    "Slug": "10-github-samples-with-azure-documentdb-you-shouldn-t-miss",
    "Title": "Azure DocumentDB を使用した 10 個のGitHubサンプルをお見逃しなく!",
    "Summary": "Azure DocumentDB is a fully managed, multi-model, scalable, queryable, schema-free NoSQL database service built for modern applications: mobile, web, IoT, bots, AI, etc. Recently, I went on GitHub…",
    "Content": "<p><strong>2017年5月10日現在、</strong></p>\n\n<p><strong>Azure Cosmos DB は、Microsofts&rsquo; のグローバル分散マルチモデル データベースです。Azure Cosmos DB は、グローバル分散と水平スケールを中心に、ゼロから構築されました。ユーザーがどこにいてもデータを透過的にスケーリングおよびレプリケートすることで、任意の数の Azure リージョンにターンキー グローバル分散を提供します。スループットとストレージを世界中で柔軟にスケーリングし、必要なスループットとストレージに対してのみ料金を支払います。Azure Cosmos DB は、世界中の 99 パーセンタイルで 1 桁ミリ秒の待機時間を保証し、パフォーマンスを微調整するための明確に定義された複数の整合性モデルを提供し、業界をリードするサービス レベル アグリーメント (SLA) に基づくマルチホーミング機能&mdash;を使用して高可用性を保証します。&nbsp;</strong></p>\n\n<p><strong>Azure Cosmos DB は本当にスキーマに依存しません。スキーマとインデックス管理に対処しなくても、すべてのデータに自動的にインデックスが作成されます。また&rsquo;、ドキュメント、キー値、グラフ、列ファミリのデータ モデルをネイティブにサポートするマルチモデルです。Azure Cosmos DB では、DocumentDB SQL (ドキュメント)、MongoDB (ドキュメント)、Azure Table Storage (キー値)、Gremlin (グラフ) がすべてネイティブにサポートされるため、任意の API を使用してデータにアクセスできます。</strong></p>\n\n<hr>\n<p><a href=\"https://azure.microsoft.com/en-us/services/documentdb/\">Azure DocumentDB</a> は、モバイル、Web、IoT、ボット、AI などの最新のアプリケーション向けに構築された、フル マネージドのマルチモデル、スケーラブル、クエリ可能、スキーマフリーの NoSQL データベース サービスです。最近、私はGitHubに行き、ステップバイステップのチュートリアルや例への有用な資料やリンクをたくさん見つけました。 以下は、惑星規模のNoSQLに支えられたアプリの構築を開始する誰もが知っておくべきトップ10です。 他にもたくさんのものがあります。 それでは、このクールな新しいNoSQLの惑星規模のデータベースサービスについて学んでください。</p>\n\n<p><img alt=\"\" height=\"487\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0451fcb0-60cc-4b19-9ff7-6e271fff4b5c.png\" width=\"865\"></p>\n\n<h2>1. <a href=\"https://github.com/Azure/azure-documentdb-dotnet\">Azure/azure-documentdb-dotnet</a></h2>\n\n<p>この<a href=\"https://github.com/Azure/azure-documentdb-dotnet\">リポジトリ</a>では、<a href=\"https://azure.microsoft.com/en-us/resources/samples/\">Azure DocumentDB と .NET SDK</a> に関連する<a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/master/samples\"><strong>サンプル</strong></a>とユーティリティとその使用方法を確認できます。 サンプルでは、.NET SDK のすべてのメソッドと操作を使用する方法を示しています。<strong>searchabletodo</strong> は、DocumentDB を使用して ASP.NET MVC Web アプリケーションを構築し、<a href=\"https://azure.microsoft.com/en-us/services/search/\">Azure Search</a> でさらに強化する方法を示す MVC Web アプリケーション ASP.NET サンプルです。 このリポジトリのもう 1 つの優れた例は <a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/2fe1fad6a1a7f684d7253190640ecb301828b35f/samples/xamarin/UserItems\"><strong>、DocumentDB</strong></a> 組み込み承認エンジンを使用して <a href=\"https://azure.microsoft.com/en-us/blog/announcing-azure-documentdb-sdk-for-xamarin/\"><strong>Xamarin モバイル アプリ</strong></a>のユーザーごとのデータ パターンを実装する方法を示す Xamarin サンプルです。 これは、ユーザーがFacebook認証を使用してログインし、アイテムを実行するための管理を可能にするシンプルなマルチユーザーの ToDo リスト アプリです。 このサンプルでプレイした後は、Xamarin でさらに進み、DocumentDB の上に IoS または Android アプリをビルドできます。</p>\n\n<p><img alt=\"\" height=\"434\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/705ab951-ae53-4cc6-8641-f77434a08b3e.png\" width=\"772\"></p>\n\n<p>サンプルでは、Client SDK を使用してサービスを最適に操作する方法について説明します。 具体的な内容は次のとおりです。</p>\n\n<ul>\n    <li><strong>CollectionManagement </strong>&ndash; には、DocumentCollection リソースに対する CRUD 操作が表示されます。</li>\n    <li><strong>DatabaseManagent</strong> &ndash; には、データベース リソースに対する CRUD 操作が表示されます。</li>\n    <li><strong>DocumentManagement</strong> &ndash; には、ドキュメント リソースに対する CRUD 操作が表示されます。</li>\n    <li><strong>IndexManagement</strong> &ndash; では、必要に応じてコレクションのインデックス作成ポリシーをカスタマイズする方法のサンプルを示します。</li>\n    <li><strong>パーティション 分割</strong> &ndash; には、.NET SDK を使用した一般的なパーティション分割シナリオのサンプルが含まれています。</li>\n    <li><strong>クエリ</strong> &ndash;&nbsp;では、LINQ と SQL を使用してクエリを実行する方法を示します。</li>\n    <li><strong>ServerSideScripts</strong> &ndash; ストアド プロシージャ、トリガー、およびユーザー定義関数を作成して実行する方法について説明します。</li>\n    <li><strong>UserManagement</strong> &ndash; には、ユーザー リソースとアクセス許可リソースに対する CRUD 操作が表示されます。</li>\n    <li><strong>空間</strong> &ndash; は、GeoJSON と DocumentDB の地理空間機能を操作する方法を示しています。</li>\n</ul>\n\n<p>これらのサンプルを確認した後は、Azure で NoSQL サービスと対話するさまざまな API を使用する方法と方法について十分に把握しておく必要があります。</p>\n\n<h2>2. <a href=\"https://github.com/mingaliu/DocumentDBStudio\">mingaliu/DocumentDBStudio</a></h2>\n\n<p><img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/45042989-9d82-446f-9874-d77ee4731e36.png\" width=\"779\"></p>\n\n<p>この<a href=\"https://github.com/mingaliu/DocumentDBStudio\">リポジトリ</a>には、<strong></strong><a href=\"https://github.com/mingaliu/DocumentDBStudio\"><strong>DocumentDB</strong></a> サービス用のクライアント管理ビューアー/エクスプローラーである DocumentDBStudio  -&nbsp; が含まれています。 現在サポートされているのは次のとおりです。</p>\n\n<ol>\n    <li>DocumentDB リソースを簡単に参照できるため、DocumentDB リソース モデルをすばやく学習できます。</li>\n    <li>すべての DocumentDB リソースとリソース フィードに対する作成、読み取り、更新、削除 (CRUD) およびクエリ操作。</li>\n    <li>SQLまたは UDF クエリのサポート。 Javascript ストアド プロシージャを実行することも、DocumentDBStudio から直接トリガーすることもできます。</li>\n    <li>要求操作ごとにヘッダー (クォータ、使用量、RG 料金など) の検査。 また、TCP、HTTPDirect、ゲートウェイの 3 つの接続モードもサポートしています。</li>\n    <li>さまざまな RequestOptions (プリ/ポスト トリガー、sessionToken、整合性モデルなど)、FeedOptions (ページング、enableScanforQuery など)、IndexingPolicy (indexingMode、indexingType、indexingPath など) のサポート。</li>\n    <li>出力 JSON を PrettyPrint します。</li>\n    <li>JSON ファイルの一括インポート。</li>\n</ol>\n\n<p>これは、DocumentDB の&ldquo;ネイティブ&rdquo;にとって単なる&ldquo;優れた IDE&rdquo; です。 お試しください。</p>\n\n<h2>3. <a href=\"https://github.com/Azure/azure-documentdb-node\">Azure/azure-documentdb-node</a></h2>\n\n<p>この <a href=\"https://github.com/Azure/azure-documentdb-node\">リポジトリ</a> には <a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\"> 、さまざまな </a> ツールとアプリケーションの開発に適したオープンソースのクロスプラットフォーム JavaScript ランタイム環境であるNode.jsを使用して Azure DocumentDB と簡単に対話できるNode.jsモジュールが用意されています。 Node.jsは、多くの入出力操作を使用して Web アプリケーションのスループットとスケーラビリティを最適化し、リアルタイム Web アプリケーション (リアルタイム通信プログラムやブラウザー ゲームなど) を最適化することを目的としています。 DocumentDB サービスと組み合わせることで、アプリを構築してから非常に迅速にスケールアップする際に、非常に強力な組み合わせと機敏性が得られます。</p>\n\n<p><img alt=\"\" height=\"390\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85123496-b3f7-427b-b7d1-c6bbab7ff775.png\" width=\"693\"></p>\n\n<p>Node.jsを使用して開発し、DocumentDB と組み合わせる場合は、<a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\">デベロッパー センター</a>とMicrosoft Azure DocumentDB Node.js SDK ドキュメントNode.js参照してください。 また、始めるには、この <a href=\"https://www.youtube.com/watch?v=UAE7h9PCZjA\">YouTube ビデオ</a>をご覧ください。 リポジトリの<a href=\"https://github.com/Azure/azure-documentdb-node/tree/master/samples\">サンプル</a>は<a href=\"https://www.visualstudio.com/vs/node-js/\">、Node.js Tools for Visual Studio</a>を使用してビルドされ、それに応じて njsproj ファイルが含まれています。 ただし、これらのサンプルを実行するためにVisual Studioする必要はありません。 必要に応じて、nsjprof ファイルを無視し、Visual Studio Codeなどの任意のエディター、または Sublime などのテキスト エディターで<a href=\"https://code.visualstudio.com/\">app.js</a>を開きます。 選択はあなた自身です!</p>\n\n<h2>4. <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">Azure/azure-documentdb-datamigrationtool</a></h2>\n\n<p>このリポジトリには、さまざまなソースから簡単かつ簡単に DocumentDB にデータをインポートするためのオープンソース ソリューションである <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">DocumentDB データ移行ツール</a>-が含まれています。 移行ツールでは、次のソースからのデータの移行がサポートされています。</p>\n\n<ul>\n    <li>Azure テーブル</li>\n    <li>JSON ファイル</li>\n    <li>MongoDB</li>\n    <li>SQL Server</li>\n    <li>CSV ファイル</li>\n    <li>RavenDB</li>\n    <li>Amazon DynamoDB</li>\n    <li>hbase</li>\n    <li>DocumentDB コレクション</li>\n</ul>\n\n<p>このインポート ツールにはグラフィカル ユーザー インターフェイス (dtui.exe) が搭載されていますが、コマンド ライン (dt.exe) から実行することもできます。 さらに、UI でインポートを設定した後で関連コマンドを出力するオプションもあります。 表形式のソース データ (SQL Serverや CSV ファイルなど) は、インポート時に階層リレーションシップ (サブドキュメント) を作成できるように変換できます。 データ ソース オプション、各ソースからインポートするサンプル コマンド ライン、ターゲット オプション、インポート結果の表示の詳細については、こちらを参照してください。</p>\n\n<p><img alt=\"\" height=\"511\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a1545530-a301-444f-9d74-b8f90adde912.png\" width=\"908\"></p>\n\n<h2>5. <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-documentdb-python\">Azure/azure-documentdb-python</a></h2>\n\n<p>この <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-cosmos-python\">リポジトリ</a> には、Azure DocumentDB での一般的な操作を示す Python サンプル ソリューションが含まれています。 Azure DocumentDB を使用して、Azure でホストされている Python Web アプリケーションのデータを格納およびアクセスする方法について説明します。また、Python と Azure Web サイトを使用した経験があると仮定します。 <img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cbb22141-c222-48a0-b557-a6f2424a6300.png\" width=\"779\"> 補足するもう 1 つの優れたチュートリアルは、 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-python-application\">DocumentDB を使用した Python Flask Web アプリケーション開発</a>です。ここでは、DocumentDB に対して Python を使用して投票できる簡単な投票アプリケーションを構築します。</p>\n\n<h2>6. <a href=\"https://github.com/Azure/azure-documentdb-node-q\">Azure/azure-documentdb-node-q</a></h2>\n\n<p>このリポジトリには、DocumentDB Node.js Q promises ラッパーがあります。 Q promises について何も知らない&rsquo;場合は、Javascript With Q の Promise を参照してください。リポジトリ プロジェクトには、 &ldquo;Azure DocumentDB と非常に簡単に対話できる Q Promise を&rdquo; 使用した Hello world サンプル コードが用意されています。 ここでは、DocumentDB が JSON と JavaScript に対する深いコミットメントで構築されていることを真剣に確認します。 現代の T-SQL&rdquo; としての JavaScript の&ldquo;このアプローチは、型システムの不一致とオブジェクト リレーショナル マッピング テクノロジの複雑さからアプリケーション開発者を解放します。 このリポジトリのサンプルは、JavaScript SDK を使用して <a href=\"https://azure.microsoft.com/services/documentdb\">Azure DocumentDB</a> サービスと対話するのに役立ちます。<img alt=\"\" height=\"472\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/89986f4b-802f-4821-992d-61fc949741a7.png\" width=\"838\"></p>\n\n<h2>7. <a href=\"https://github.com/Azure/azure-documentdb-js-server\">Azure/azure-documentdb-js-server</a></h2>\n\n<p>このリポジトリに進む前に、まずこの <a href=\"https://channel9.msdn.com/Blogs/Azure/Azure-Demo-A-Quick-Intro-to-Azure-DocumentDBs-Server-Side-Javascript\">ビデオ</a> を見て、Azure DocumentDB&#39;のサーバー側プログラミング モデルの簡単な概要を確認してください。 JavaScript の DocumentDBs&rsquo; 言語統合、トランザクション実行により、開発者は JavaScript でストアド プロシージャ、トリガー、ユーザー定義関数 (UDF) をネイティブに記述する方法について説明します。 これにより、開発者は、データベース ストレージ パーティションに対して直接配布および実行できるアプリケーション ロジックを記述できます。</p>\n\n<p><img alt=\"\" height=\"455\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7e52b9ba-67f5-4135-bdd1-a758d8382852.png\" width=\"809\"></p>\n\n<h2>8. <a href=\"https://github.com/Azure/azure-documentdb-java\">Azure/azure-documentdb-java</a></h2>\n\n<p>このプロジェクトは、Azure DocumentDB との対話を容易にする Java のクライアント ライブラリを提供します。 このリポジトリには、DocumentDB を操作する Java コード サンプルが多数用意されています。 快適に感じる場合は、 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-java-application\">DocumentDB を使用して Java Web アプリケーション全体</a> をわずか数ステップで構築できます。 ドキュメントについては、<a href=\"https://azure.microsoft.com/en-us/develop/java/\">Microsoft Azure Java デベロッパー センターと JavaDocs</a> を参照してください。</p>\n\n<p><img alt=\"\" height=\"444\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a22dea56-5dfd-404d-98e0-5898cdd2ce56.png\" width=\"789\"></p>\n\n<h2>9. Azure/azure-documentdb-hadoop</h2>\n\n<p>このリポジトリは、Microsoft Azure DocumentDB が Hadoop MapReduce、Hive、Pig ジョブの入力ソースまたは出力シンクとして機能できるようにする Java のクライアント ライブラリを提供します。 このチュートリアルでは、DocumentDB&#39;Hadoop コネクタを使用して、Azure HDInsight で Apache Hive、Apache Pig、Apache Hadoop MR ジョブを実行する方法について説明します。 DocumentDB&#39;の Hadoop コネクタを使用すると、DocumentDB は Hive、Pig、および MapReduce ジョブのソースとシンクの両方として機能できます。 このチュートリアルでは、Hadoop ジョブのデータ ソースと変換先の両方として DocumentDB を使用し、その方法を示します。 次のビデオを見て、DocumentDB と HDInsight を使用して Hive ジョブを実行することをお勧めします。</p>\n\n<p>Hive、Pig、および MapReduce ジョブ。 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-run-hadoop-with-hdinsight\">このチュートリアル</a> では、Hadoop ジョブのデータ ソースと変換先の両方として DocumentDB を使用し、その方法を示します。 次の <a href=\"https://sec.ch9.ms/ch9/86a2/50ac21ec-dd12-4739-9c42-702a447886a2/documentdbhadoopconnector_mid.mp4\">ビデオ</a>を見て、DocumentDB と HDInsight を使用して Hive ジョブを実行することをお勧めします。</p>\n\n<p><img alt=\"\" height=\"442\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f738f278-3d36-4fb7-9258-02ab8606f7b3.png\" width=\"786\"></p>\n\n<h2>10. <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">Azure-Samples/documentdb-node-todo-app</a></h2>\n\n<p>最後に、 <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">このリポジトリ</a> には、完全なアプリケーションのソース コードが含まれています。 このサンプルでは、Microsoft Azure DocumentDB サービスを使用して、Azure Websites でホストされている Node.js Express アプリケーションのデータを格納およびアクセスする方法を示します。</p>\n\n<p><img alt=\"\" height=\"413\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31e55f3e-7d7d-4b1c-a1fc-bb5ad27a0f42.png\" width=\"799\"></p>\n\n<p>このアプリケーションを作成するための完全なエンド ツー エンドのチュートリアルについては、 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/documentdb-nodejs-application/\">Azure ドキュメント ページの完全なチュートリアル</a>を参照してください。 このサンプルに含まれるコードは、Azure DocumentDB に接続し、 <a href=\"https://www.npmjs.com/package/documentdb\">documentdb npm パッケージ</a>を使用して DocumentDB と対話する方法を示す単純なNode.js Express アプリケーションを使用することを目的としています。 これは、スケーラブルなエンタープライズ グレードの Web アプリケーションを構築する方法に関する一連のベスト プラクティスを意図したものではありませんが&rsquo;、素晴らしいスタートです。</p>\n\n<p><a href=\"https://twitter.com/rimmanehme\">@rimmanehme</a></p>\n\n<p>PS。 あなたが&rsquo;NoSQL&rdquo;という言葉&ldquo;を聞いたことがないなら、まず最初に&ndash;うわー! あなたはブログの最後にあり、まだ注意を払っています。 それは&rsquo;素晴らしいです! 次に、DocumentDB について簡単に学習し、その動作を確認するには、次の 3 つの手順に従います。</p>\n\n<ol>\n    <li>2 分間の <a href=\"https://azure.microsoft.com/documentation/videos/what-is-azure-documentdb/\">DocumentDB とは</a>ビデオ。DocumentDB を使用する利点が紹介されています。</li>\n    <li><a href=\"https://azure.microsoft.com/documentation/videos/create-documentdb-on-azure/\">Azure での DocumentDB の作成に関する 3 分間のビデオ</a>を視聴します。このビデオでは、Azure Portal を使用して DocumentDB の使用を開始する方法が紹介されています。</li>\n    <li><a href=\"https://www.documentdb.com/sql/demo\">クエリのプレイ グラウンド</a>にアクセスします。このページでは、DocumentDB で利用できる豊富なクエリ機能について理解するためのさまざまな手順を確認できます。 次に [サンドボックス] タブに移動して、独自のカスタム SQL クエリを実行し、DocumentDB を試してみます。</li>\n</ol>\n\n<p><img alt=\"\" height=\"475\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e03710e7-e59f-49e6-ac64-db2566d5e4f5.png\" width=\"845\"></p>\n"
}