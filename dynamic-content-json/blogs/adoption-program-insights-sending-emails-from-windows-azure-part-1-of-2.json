{
    "Slug": "adoption-program-insights-sending-emails-from-windows-azure-part-1-of-2",
    "Title": "導入プログラムのインサイト: Windows Azure からの電子メールの送信 (パート 1/2)",
    "Summary": "The Adoption Program Insights series  describes experiences of Microsoft Services consultants involved in the Windows  Azure Technical Adoption Program assisting customers deploy solutions on the…",
    "Content": "<p><i>導入プログラム インサイト シリーズでは、Windows <a target=\"_blank\" href=\"https://azure.microsoft.com/\">Azure プラットフォームに</a>ソリューションをデプロイするお客様を支援する、Windows Azure 技術導入プログラムに関わる Microsoft Services コンサルタントの経験について説明します。この投稿はパトリック・バトラー・モンテルドとトム・ホランダーによる投稿です。</i></p>  <p>カスタム開発アプリケーションの多くは、登録プロセスの一部であるかどうかにかかわらず、重要なイベントが発生したときにユーザーに通知する方法、または他の方法で電子メールを送信する必要があります。&nbsp;.NET 開発者の場合は、System.Web.Mail 名前空間のクラスを使用してこれを実現した可能性があります。&nbsp;ただし、これらのクラスでは、メッセージを送信するために SMTP 電子メール サーバーにアクセスする必要があります。Windows Azure では現在、このような機能は提供されていません。&nbsp;しかし、すべてが失われるわけではありません。&nbsp;この 2 部構成のシリーズでは、Windows Azure プラットフォームにデプロイされたアプリケーションの電子メール機能を有効にするためのいくつかのパターンについて説明します。</p>  <ol>  <li>カスタムのオンプレミス電子メール フォワーダー サービスの使用: このパターンは、この記事で説明します。このパターンでは、オンプレミスの電子メール サーバーを使用して、Windows Azure で実行されているアプリケーションに代わって電子メールを送信します。  これを実現するには、Azure ストレージ キューと BLOB Windows使用してオンプレミスの電子メール サーバー Windows Azure で生成された電子メールを配信する分散非同期モデルを使用してカスタム サービスを作成します。</li>  <li>電子メール サーバーの Web サービス API の使用:&nbsp; パート 2 で説明するこのパターンでは、Microsoft Exchange が提供する Web サービス API を使用して、Windows Azure から直接電子メールを送信します。 このパターンは、同様の Web サービス インターフェイスを提供する他のメッセージング製品に適用できます。 </li>  <li>サード パーティの SMTP サービスの使用: Steve Marx のブログ記事「EmailTheInternet.com: Windows Azure &nbsp;での電子メールの送受信」で説明されているこのパターンは、<a target=\"_blank\" href=\"https://sendgrid.com/\">SendGrid</a> や <a target=\"_blank\" href=\"https://authsmtp.com/\">AuthSMTP</a> などの<sup>サード</sup> パーティの電子メール サービスを利用して電子メールを中継します。 この記事で説明するソリューションは、さらに 1 歩進み、ポート 25 で SMTP トラフィックをリッスンして、Windows Azure アプリケーションから電子メールを受信する方法も示します。</li>  </ol>  <p><b>パターン 1:&nbsp; カスタムオンプレミスメールフォワーダーサービスの使用</b></p>  <p>このパターンでは、既存のオンプレミスの電子メール サーバーを使用して、Windows Azure アプリケーションに代わって電子メールを送信します。  これを実現するには、Windows Azure Storage キューと BLOB を使用して、Windows Azure で生成された電子メールをオンプレミスの電子メール サーバーに配信するカスタムオンプレミス電子メール フォワーダー サービスを作成します。&nbsp;パターンは、次の 2 つの主要なセクションに分かれています。&nbsp; </p>  <ol>  <li>電子メール作業項目の準備と送信: これは、電子メールを生成する Windows Azure Web/Worker ロールの実装です。 電子メール オブジェクトをシリアル化し、Windows Azure Storageに電子メール作業項目を作成します。</li>  <li>電子メール作業項目の受信と送信: これは、電子メール フォワーダー サービスの実装であり、Azure Storage から電子メール作業項目Windows取得し、電子メール オブジェクトを逆シリアル化して電子メール サーバーに送信します。</li>  </ol>  <p>Windows Azure からオンプレミスの電子メール サーバーへの電子メールの配布については、\"作業項目\" の概念を定義します。 作業項目は、次で構成される論理コンテナーです。</p>  <ul class=\"unIndentedList\">  </ul>  <ol>  <li> 1 つのキュー項目: キュー項目には、電子メール メッセージが格納される BLOB の参照 (URI) が格納されます。 また、必要に応じて最大 8k のメタデータを保持することもできます。 </li>  <li> 1 つの BLOB アイテム: BLOB アイテムには、シリアル化された電子メール オブジェクトが含まれています。 BLOB には最大 1 TB のサイズを設定できるため、電子メール オブジェクトには複数の大きな添付ファイルを保持できます。 </li>  </ol>  <ul class=\"unIndentedList\">  </ul>  <p>次の図は、パターンのワークフローを示しています。 </p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7115.EmailWAPart1SS.png\" border=\"0\"></p>  <p>これは、Azure でホストされているアプリケーションが電子メール メッセージWindows送信する必要がある場合に発生します。</p>  <ol>  <li>worker/Web ロールは、電子メール メッセージを生成します。 この電子メール メッセージは、System.Net.Mail.MailMessage インスタンスの形式です。 このメール オブジェクトには、任意の数の添付ファイルを含めることができます。 </li>  <li>電子メール オブジェクトはシリアル化され、BLOB に格納されます。 その後、BLOB の URL が Queue 項目に追加されます。 キュー項目と BLOB の組み合わせが電子メール作業項目になります。 キュー項目と BLOB 項目メタデータの両方を使用して、追加情報を格納できます。</li>  <li>オンプレミスでは、電子メール フォワーダー サービスは常にキューの電子メールを監視します。 キュー 項目は、その時点で 32 項目の割合で取得できます。 電子メール フォワーダー サービスは、最初にキュー 項目を取得し、次に BLOB URI を抽出し、シリアル化された電子メールを取得します。</li>  <li>逆シリアル化されると、電子メール フォワーダー サービスはオンプレミスの電子メール サーバー情報を使用して電子メールを送信します。&nbsp; 電子メールを配信すると、キューと BLOB ストレージから作業項目が削除されます。 </li>  <li>オンプレミスの電子メール サーバーが電子メールを受信します。 オンプレミス アプリケーションであるため、認証と承認は簡単である必要があります。</li>  <li>電子メール サーバーは、適切なユーザーに電子メールを送信します。</li>  </ol>  <p>このパターンをわかりやすく説明するために、電子メール フォワーダー サービスの実装例と、それを使用する Windows Azure アプリケーションを、以下に.zip ファイルとしてダウンロードできます。&nbsp;このコード サンプルには、次のプロジェクトが含まれています。 </p>  <ul class=\"unIndentedList\">  </ul>  <ul>  <li>  電子メール フォワーダー サービス: オンプレミスの電子メール フォワーダー サービスの実装。 簡単なデモンストレーションの目的で、Windows フォーム アプリケーションとして実装されますが、実際の展開では、Windows サービスでこれを実装します。 サンプル サービスをテストするには、app.config ファイルを編集して、オンプレミスの SMTP サーバーの詳細を含めます。</li>  <li>  エンティティ: 電子メール メッセージのシリアル化機能と、Azure Storage から電子メール作業項目を追加および削除する操作Windows含むクラス ライブラリ。 電子メール フォワーダー サービスロールと Web/Worker ロールの両方がこのプロジェクトを使用します。 </li>  <li>  電子メール ジェネレーターの Web ロール: 電子メールを送信できる単純な Web ロールの実装。 このロールは、送信する電子メールの詳細を入力できる Web ユーザー インターフェイスを提供します。</li>  <li>  電子メール ジェネレーターの worker ロール: 電子メールを送信できる単純な worker ロールの実装。 ロールは、ロールのapp.config ファイルで見つかった詳細を使用して、10 秒ごとに電子メール メッセージを生成および送信します。</li>  </ul>  <p><b>アーキテクチャに関する考慮事項</b></p>  <p>ソリューションのアーキテクチャへの影響を理解することが重要です。 カスタム電子メール フォワーダー サービスに関する考慮事項の一部を次に示します。</p>  <ul class=\"unIndentedList\">  <li>  コスト: BLOB とキューのデータ ストレージとオンプレミス サービスへのデータ フローでは、ソリューション全体に追加のコストが発生します。 全体的なコストへの影響は、個々のソリューションの電子メールの量によって異なります。このパターンを実装する前に考慮する必要があります。 シリアル化された電子メール オブジェクトのサイズを小さくするには、圧縮を使用することが望ましい場合があります。 帯域幅のコストを最小限に抑えるために、BLOB とキューに使用される Windows Azure Storage アカウントは、電子メールを送信する Web/worker ロールと同じアフィニティ グループに配置する必要があります。</li>  <li>  パフォーマンス: パフォーマンスに関する主な観測値は 2 つあります。</li>  </ul>  <blockquote><ol>  <li>大きな電子メールの添付ファイルを含むシリアル化された電子メール オブジェクトは、電子メール フォワーダー サービスによってシリアル化、ストレージに移動、および取得および逆シリアル化する必要があるため、パフォーマンスに影響を与える可能性があります。 </li>  <li>このパターンは非同期であるため、電子メール フォワーダー サービスは、WindowsAzure Storage キューの作業項目を定期的にチェックします。   これにより、電子メールサーバーへの電子メールの送信に限界遅延が発生しました。 これは慎重に検討し、個々のニーズに従って設定する必要があります。</li>  </ol></blockquote>  <ul class=\"unIndentedList\">  <li>  管理: このサービスは監視する必要があります。 実装にログ記録と監視機能を追加することをお勧めします。 </li>  <li>  信頼性: 接続エラーを処理するには、電子メール フォワーダー サービスに適切な再試行メカニズム ( <a target=\"_blank\" href=\"https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx\">指数バックオフ</a>を含む) を実装する必要があります。&nbsp;</li>  </ul>  <p>パート 2 は、今週後半にここに投稿されます。</p>  <p><iframe src=\"https://www.facebook.com/plugins/like.php?href=;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50\" style=\"overflow: hidden; width: 300px; height: 50px;\" frameborder=\"0\" scrolling=\"no\"></iframe><br><a data-url=\"\" data-count=\"horizontal\" data-via=\"Windowsazure\" href=\"https://twitter.com/share\" class=\"twitter-share-button\">つぶやき</a>  <script src=\"https://platform.twitter.com/widgets.js\" type=\"text/javascript\"></script>  </p>"
}