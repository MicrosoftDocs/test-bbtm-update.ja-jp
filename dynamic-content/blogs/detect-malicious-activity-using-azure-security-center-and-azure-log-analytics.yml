### YamlMime:Yaml
ms.openlocfilehash: 48feefd029b719677e4e6f710d3da7d0ded2d89a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896003"
Slug: detect-malicious-activity-using-azure-security-center-and-azure-log-analytics
Title: Azure Security Center と Azure Log Analytics を使用して悪意のあるアクティビティを検出する
Summary: お客様から、システムで悪意のあるアクティビティを調査すると、困難な作業が行われ、どこから始めが必要かを知るのが困難な場合があります。 Azure Security Center簡単に...
Content: >-
  <p><em>このブログ記事は、Microsoft Threat Intelligence Center によって作成されました</em><em>。 </em></p>


  <p>お客様から、システムで悪意のあるアクティビティを調査すると、困難な作業が行われ、どこから始めが必要かを知るのが困難な場合があります。 Azure Security Center、検出された脅威に簡単に対応できます。 組み込みの行動分析と機械学習を使用して脅威を検出し、試行または成功した攻撃のアラートを生成します。 前の投稿で説明したように、検出された脅威のアラートを調査パスを使用して調<a href="https://azure.microsoft.com/en-us/blog/how-azure-security-center-helps-analyze-attacks-using-investigation-and-log-search/" target="_blank"></a>べ、Azure Log Analytics を使用して、攻撃に関係しているすべてのエンティティ間の関係を示します。 現在、機械学習&rsquo;を使用して脅威を検出する Security Center の機能と、急速に進化するサイバー攻撃に対応するために Azure Log Analytics がどのように役立つのかについて説明します。</p>


  <h2>Azure Log Analytics を使用してシステムの異常を調査する</h2>


  <p>1 つの方法は、プロセス、アカウント、およびコンピューターの傾向を確認して、悪意のある可能性のあるアクティビティや望ましくないアクティビティを示すコンピューターで異常なプロセスやまれなプロセスやアカウントが実行される状況を把握する方法です。 データに対して次のクエリを実行し、過去 30 日間の異常またはまれなクエリが発生する点に注意してください。 このクエリは、コンピューターとアカウント グループによって 1 週間に実行されるプロセスを示して、新機能を確認し、過去 30 日間の動作と比較します。 この手法は、[高度な Azure Log Analytics] ウィンドウで提供される任意のログに適用できます。 この例では、セキュリティ イベント テーブルを使用しています。</p>


  <p>太字の項目は、 <strong>ノイズ </strong>に対して独自の結果をフィルター処理する例であり、特に必須ではありません。 私が含めた理由は、頻繁に実行されない特定の項目が発生し、このクエリや同様のクエリを使用すると異常として表示される可能性を明確にし、環境に固有であり、調査に集中するために手動で除外する必要がある可能性があります。 環境に基づいてフィルター処理する既知 &ldquo;の良&rdquo; い項目の独自のリストを作成してください。</p>


  <pre>

  let T = SecurityEvent

  | where TimeGenerated &gt;= ago(30d)

  | extend Date = startofday(TimeGenerated)

  | extend Process = ProcessName

  | where Process != &quot;&quot;

  | where Process != &quot;-&quot;

  <strong>| where Process !contains &quot;\\Windows\\System&quot;

  | where Process !contains &quot;\\Program Files\\Microsoft\\&quot;

  | where Process !contains &quot;\\Program Files\\Microsoft Monitoring Agent\\&quot;

  | where Process !contains &quot;\\ProgramData\\&quot;

  | where Process !contains &quot;\\Windows\\WinSxS\\&quot;

  | where Process !contains &quot;\\Windows\\SoftwareDistribution\\&quot;

  | where Process !contains &quot;\\mpsigstub.exe&quot;

  | where Process !contains &quot;\\WindowsAzure\\GuestAgent&quot;

  | where Process !contains &quot;\\Windows\\Servicing\\TrustedInstaller.exe&quot;

  | where Process !contains &quot;\\Windows\\Microsoft.Net\\&quot;

  | where Process !contains &quot;\\Packages\\Plugins\\&quot;

  </strong>| project Date, Process, Computer, Account

  | summarize count() by Date, Process, Computer, Account

  | sort by count_ desc nulls last;

  T

  | evaluate activity_counts_metrics(Process, Date, startofday(ago(30d)), startofday(now()), 1d, Process, Computer, Account)

  | extend WeekDate = startofweek(Date)

  | project WeekDate, Date, Process, PotentialAnomalyCount = new_dcount, Account, Computer

  | join kind= inner

  (

  &nbsp;&nbsp;&nbsp; T

  &nbsp;&nbsp;&nbsp; | evaluate activity_engagement(Process, Date, startofday(ago(30d)), startofday(now()),1d, 7d)

  &nbsp;&nbsp;&nbsp; | extend WeekDate = startofweek(Date)

  &nbsp;&nbsp;&nbsp; | project WeekDate, Date, Distribution1day = dcount_activities_inner, Distribution7days = dcount_activities_outer, Ratio = activity_ratio*100

  )

  on WeekDate, Date

  | where PotentialAnomalyCount == 1 and Ratio &lt; 100

  | project WeekDate, Date, Process, Account, Computer , PotentialAnomalyCount, Distribution1day, Distribution7days, Ratio

  | render barchart kind=stacked

  </pre>


  <p>上記のクエリを実行すると、次の項目のような TABLE が表示されます。ただし、日付と参照されるプロセスは異なります。 この例では、過去 30 日間の週のデータに基づいて、特定のプロセス、コンピューター、およびアカウントが以前に表示されていない場合を確認できます。 具体的には、4/15 の週と 4/17 の特定の日付に regedit.exe が表示され、次に 4/30 に PowerShell が表示され、次に過去 30 日間の各週の最初の週に 4/30 と 5/8 に Procmon が表示されるのを確認できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86537878-1ab4-45b2-94c4-3e8d81c6638f.png"><img alt="image" border="0" height="454" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/680494a1-0453-4ea7-aae0-f660b40d67a4.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="イメージ" width="1160"></a></p>


  <p>グラフ モードで結果を表示し、次に示す棒グラフのピボットを変更することもできます。 たとえば、プロセスではなく[コンピューター] でドロップダウンとピボットを使用し、このプロセスを起動したコンピューターを確認します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86b57b16-eddb-4cd2-ae68-55b90bf8b845.png"><img alt="Completed" border="0" height="213" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed4ed221-1c09-42c7-abce-df9833170dc9.png" style="background-image: none; float: none; margin-left: auto; display: block; margin-right: auto; border-image: none" title="完了" width="668"></a></p>


  <p>マウス ポインターを合わせると、特定のコンピューターと、初めて表示されたプロセスの数が表示されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0cf7a381-9966-4ece-91b1-7a90de4dcbfb.png"><img alt="Potential Anomaly Count" border="0" height="449" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8511af27-a539-4030-87a1-4cc9ea11f019.png" style="background-image: none; float: none; margin-left: auto; display: block; margin-right: auto; border-image: none" title="潜在的な異常数" width="418"></a></p>


  <p>上のクエリでは、1 日を超えて実行される項目を確認します。これは 100 未満の比率です。 これは、日付を解析し、特定のコンピューターでプロセスを実行する場合のスコープを簡単に理解する方法です。 数日間にわたって実行されたまれな項目を見て、攻撃面をさらに増やす情報を環境を探している攻撃者による手動アクティビティを検出できる可能性があります。</p>


  <p>または、過去 30 日間の 1 日にのみ実行されたプロセスを確認することもできます。これは、上記のクエリで比率 == 100 のみを選択することで実行できます。関連する行を次のように変更します。</p>


  <pre>

  | where PotentialAnomalyCount == 1 and Ratio == 100 </pre>


  <p>クエリに対する上記の変更により、まれなプロセスに対して異なるヒット セットが発生し、スクリプト化された攻撃を使用してこのシステム、複数のシステムからデータを迅速に収集する、または単に 1 日の攻撃者のアクティビティを示す可能性があります。</p>


  <p>最後に、複数の対話型プロセスが実行されます。これは、対話型ログオンを示します (たとえば、Mgmt Studio プロセス SQLなどSsms.exe。 これは、このシステムへの予期しないログオンであり、このクエリは、予期しないプロセスに加えて、この種の異常を明らかにするのに役立つ可能性があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c5337ef2-8bb0-47a4-9db6-e145e11530ca.png"><img alt="image" border="0" height="333" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7acb45c1-0926-42be-9b01-50c59866924f.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="イメージ" width="1184"></a></p>


  <p>調査するコンピューターまたはアカウントを特定したら、そのコンピューターの完全なデータをさらに詳しく調べてください。 これは、セカンダリ クエリ ウィンドウを開き、関心のあるコンピューターまたはアカウントでのみフィルター処理することで実行できます。 その例を次に示します。 その時点で、異常またはまれなプロセス実行時間に関して何が発生したのかを確認できます。 詳細なプロセスportping.exe選択し、日付の範囲を絞り込み、詳細を確認します。&nbsp; 上の表から、Date[UTC] が下の円で囲み表示されています。 この日付は、クエリが正常に動作するために最も近い日に丸められますが、これを使用するコンピューターとアカウントと共に、コンピューターで実行された期間に集中できる必要があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e8af4403-1fba-4e68-b347-aecd9c8ac8f4.png"><img alt="image" border="0" height="90" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c2e407a7-0949-48a3-b3e3-9190e868f099.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="イメージ" width="1188"></a></p>


  <p>期間に焦点を当てるには、その日付を使用して 1 日の範囲を指定します。 次に示す標準の日付形式を使用して、クエリに範囲を渡します。 黄色で強調表示されている [+] をクリックし、次のクエリをウィンドウに貼り付けます。</p>


  <p>結果では、個別の時刻が赤色でマークされます。 これは、後続のクエリで使用します。</p>


  <pre>

  SecurityEvent

  | where TimeGenerated &gt;= datetime(2018-04-16 00:00:00.000) and TimeGenerated &lt;= datetime(2018-04-16 23:59:59.999)

  | where Computer contains &quot;Contoso-2016&quot; and Account contains &quot;ContosoAdmin&quot;

  | where Process contains &quot;portping.exe&quot;

  | project TimeGenerated, Computer, Account, Process, CommandLine</pre>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f42deb19-ce2d-47ca-8588-26573c61afe3.png"><img alt="Code" border="0" height="662" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/570c1ae1-bfc9-40d4-84aa-d5de62c049db.png" style="background-image: none; float: none; margin-left: auto; display: block; margin-right: auto; border-image: none" title="コード" width="1424"></a></p>


  <p>正確な時刻が得たので、その日付を中心に、より小さな期間で発生しているアクティビティを確認できます。 通常、+5 分と -5 分のブロックを使用します。 次に例を示します。</p>


  <pre>

  SecurityEvent

  | where TimeGenerated &gt;= datetime(2018-04-16 19:10:00.000) and TimeGenerated &lt;= datetime(2018-04-16 19:21:00.000)

  | where Computer contains &quot;Contoso-2016&quot; and Account contains &quot;ContosoAdmin&quot;

  //| where Process contains &quot;portping.exe&quot;

  | project TimeGenerated, Computer, Account, Process, CommandLine</pre>


  <p>次の結果では、誰かが RDP 経由でシステムにログインしているのを簡単に確認できます。 これは、ホストとリモート RDPClip.exe間でコピーおよび貼り付け中を示す、起動中のためです。</p>


  <p>さらに、portping.exe アクティビティの後に、 コマンド netplwiz.exe または control userpasswords2 を使用してアカウントまたはパスワードの機能を変更しようとしているのが確認されます。</p>


  <p>その後、システムProcmon.exe他のプロセスが実行されているのを確認するために、アプリケーションを実行しています。 一般に、これは攻撃者がさらに悪用できる機能を理解するために行われます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9a9c3e03-4ba5-49c8-89f2-0b73db12f972.png"><img alt="Query" border="0" height="1580" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/14c9c2b3-1b1e-4474-a28a-004cf58f0a0c.png" style="background-image: none; display: inline; border-image: none" title="クエリ" width="1512"></a></p>


  <p>この時点で、このマシンをオフラインにし、侵害の程度を理解するためにさらに深く調査する必要があります。</p>


  <h2>Azure Log Analytics を使用して攻撃者によって一般的にデプロイされる隠し手法を見つける</h2>


  <p>ほとんどのセキュリティ専門家は、攻撃者が検出を回避するためにシステム上のコマンドの使用を非表示にするために使用する手法を見てきた。 コマンド ラインに表示されるのを防げる方法は確かですが、以下で使用される難読化手法は、さまざまなレベルの攻撃者によって定期的に使用されます。</p>


  <p>以下では、コマンド ライン データで base64 でエンコードされた文字列をデコードし、攻撃で使用される一般的な PowerShell メソッドを探します。</p>


  <pre>

  SecurityEvent

  | where TimeGenerated &gt;= ago(30d)

  | where Process contains &quot;powershell.exe&quot; and CommandLine contains &quot; -enc&quot;

  |extend b64 = extract(&quot;[A-Za-z0-9|+|=|/]{30,}&quot;, 0,CommandLine)

  |extend utf8_decode=base64_decodestring(b64)

  |extend decode =  replace (&quot;\x00&quot;,&quot;&quot;, utf8_decode)

  |where decode contains &#39;Gzip&#39; or decode contains &#39;IEX&#39; or decode contains &#39;Invoke&#39; or decode contains &#39;.MemoryStream&#39;

  | summarize by Computer, Account, decode, CommandLine</pre>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d1578e3b-a777-4103-a4bb-1eab2ca8f58e.png"><img alt="image" border="0" height="164" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/95098453-b8cf-4d35-928b-3ea514519aa3.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="イメージ" width="1190"></a></p>


  <p>ご覧のように、結果には、エンコードされたコマンド ラインの内容と、攻撃者が何を試みたかについての詳細が表示されます。</p>


  <p>上記のクエリの詳細を使用して、時刻とコンピューターを同じテーブルに追加することで、同時に実行された内容を確認できます。 これにより、上記で詳しく説明したプロセスである、システム上の他のアクティビティと簡単に接続できます。 注意点の 1 つは、行の最初の列の矢印でイベントを展開することで、これらを自動的に追加できる点です。 次に、TimeGenerated にマウス ポインターを合わせると、[ + ] ボタンをクリックします。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6649b6b7-76ba-4f29-b3ee-a638fdbbfd62.png"><img alt="image" border="0" height="343" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b35678e2-2dd6-455b-b107-a09a2c21ac02.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="イメージ" width="1177"></a></p>


  <p>これにより、 のようなエントリがクエリ ウィンドウに追加されます。</p>


  <pre>

  | where TimeGenerated == todatetime(&#39;2018-04-24T02:00:00Z&#39;)</pre>


  <p>次のように時間の範囲を変更します。</p>


  <pre>

  SecurityEvent

  | where TimeGenerated &gt;= ago(30d)

  | where Computer == &quot;XXXXXXX&quot;

  | where TimeGenerated &gt;= todatetime(&#39;2018-04-24T02:00:00Z&#39;)-5m and TimeGenerated &lt;= todatetime(&#39;2018-04-24T02:00:00Z&#39;)+5m

  | project TimeGenerated, Account, Computer, Process, CommandLine, ParentProcessName

  | sort by TimeGenerated asc nulls last</pre>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0abec47f-4a92-4bfe-b729-597e005d8127.png"><img alt="image" border="0" height="732" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/27572359-48f1-4428-8ace-a2a394f3ad60.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="イメージ" width="1317"></a></p>


  <p>最後に、過去 30 日間のアラートへの参加を使用して、さまざまなアラートに接続して、関連付けられているアラートを確認します。</p>


  <pre>

  SecurityEvent

  | where TimeGenerated &gt;= ago(30d)

  | where Process contains &quot;powershell.exe&quot;  and CommandLine contains &quot; -enc&quot;

  | extend b64 = extract( &quot;[A-Za-z0-9|+|=|/]{30,}&quot;, 0,CommandLine)

  | extend utf8_decode=base64_decodestring(b64)

  | extend decode =  replace (&quot;\x00&quot;,&quot;&quot;, utf8_decode)

  | where decode contains &#39;Gzip&#39; or decode contains&#39;IEX&#39; or decode contains &#39;Invoke&#39; or decode contains &#39;.MemoryStream&#39;

  | summarize by TimeGenerated, Computer=toupper(Computer), Account, decode, CommandLine

  | join kind= inner (
        SecurityAlert | where TimeGenerated &gt;= ago(30d)
        | extend ExtProps = parsejson(ExtendedProperties)
        | extend Computer = toupper(tostring(ExtProps[&quot;Machine Name&quot;]))
        | project Computer, AlertName, Description
  ) on Computer</pre>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/33dff85c-ccd1-4f72-a79e-6ccf11b6ba69.png"><img alt="image" border="0" height="198" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c1802a6e-4bb3-4c97-928d-58e60cbe4bdf.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="イメージ" width="1274"></a></p>


  <p>Security Centerは、Azure Log Analytics を使用して、データ内の異常を検出し、攻撃者が使用する一般的な隠れ手法を公開するのに役立ちます。 上記のようなダイレクト クエリを使用してデータの多くを探索すると、悪意のある異常と無害な異常が見られる場合がありますが、その際に環境の安全性が向上し、サブスクリプション内のシステムとリソースで行っているアクティビティをより深く理解できます。</p>


  <h2>詳細については、次を参照Azure Security Center</h2>


  <p>脅威検出機能のAzure Security Center&rsquo;については、脅威検出に関するドキュメント <a href="https://docs.microsoft.com/en-us/azure/security-center/security-center-detection-capabilities" target="_blank">を参照してください</a>。</p>


  <p>Azure Advance Threat Protection の詳細については、脅威保護に関する <a href="https://docs.microsoft.com/en-us/azure-advanced-threat-protection/what-is-atp" target="_blank">ドキュメントを参照してください</a>。</p>


  <p>Windows Defender Advanced Threat Protection との統合の詳細については、脅威保護の統合に関<a href="https://docs.microsoft.com/en-us/azure-advanced-threat-protection/integrate-wd-atp" target="_blank">するドキュメントを参照してください</a>。</p>


  <p>最新のお知らせについては、Azure Security Centerブログを読んで <a href="https://azure.microsoft.com/en-us/blog/topics/security/" target="_blank">サブスクライブしてください</a>。</p>
