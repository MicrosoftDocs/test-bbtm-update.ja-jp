### YamlMime:Yaml
ms.openlocfilehash: ddef2d7d1db0836674e82b4e4fa3586459a6577a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910180"
Slug: windows-azure-storage-at-pdc-2009
Title: PDC 2009 での Azure Storage の Windows
Summary: 先週の PDC 2009 では、Windows Azure Storage のいくつかの新機能が発表されました。 Windows Azure Storage を使用すると、アプリケーションは、blob を使用して、クラウド内の大きなオブジェクトやファイルを格納したり操作したりすることができ,...
Content: '<p>先週の PDC 2009 では、Windows Azure Storage のいくつかの新機能が発表されました。 Windows Azure Storage を使用すると、アプリケーションは、blob を使用してクラウド内の大きなオブジェクトやファイルを格納および操作したり、テーブルを介してサービスの状態を格納および操作したり、キューを使用して信頼性の高いメッセージ配信を提供したりできます。さらに、ストレージに近い2つの新機能も発表しました &#160;。</p>  <ul>   <li><b>Windows azure xdrive</b> –クラウドで実行されている Windows azure コンピューティングアプリケーションで、既存の NTFS api を使用して、データを永続的なドライブに格納することができます。 このドライブは、1つの NTFS ボリューム VHD としてフォーマットされた Windows azure ページ blob に支えられています。 &#160;&#160; ページ blob は、Windows azure クラウド内のドライブとしてマウントできます。これにより、すべてのバッファー/フラッシュされていない NTFS 書き込みがドライブ (ページ blob) に永続的に保持され &#160;&#160; ます。 とは、アプリケーションインスタンスを再起動するか、別のアプリケーションインスタンスで使用する別の場所に再マウントするときに再マウントできます。 &#160;&#160; ドライブは NTFS 形式のページ Blob であるため、標準の Blob インターフェイスを使用して、NTFS Vhd をアップロードし、クラウドにダウンロードすることもできます。 </li>    <li><b>Geo レプリケーション</b> –私たちは、データの地理的な場所の間に geo レプリケーションを提供するために努力しています。ここでは、「PDC 2008」で説明したように、ストレージアカウントが割り当てられている地理的な場所に &#160; 複数のコピーを保持するためにデータをレプリケートする方法について説明します。ストレージアカウントを更新すると、その geo ロケーション内の複数のコピーに更新がコミットされたときに成功 &#160;&#160; が返されます。これにより &#160; これは変更されていません。 geo レプリケーションの詳細については、更新プログラムがプライマリ geo ロケーションでストレージアカウントにコミットされた後で、その更新プログラムを同じ geo リージョン内の別の geo リージョン (米国内、ヨーロッパ内、アジアなど) に geo レプリケートすることが &#160;&#160; ます。これは、Geo-Disaster コンティンジェンシー計画の重要 &#160;&#160; な機能です。 これにより、データの複数のコピーを異なる地理的場所に保持できます。 </li> </ul>  <p>Windows azure xdrive と Geo-Replication のほか、以下に示す新しい Blob 機能の詳細については、「azure blob の Windows と詳細情報」の「PDC 2009 の話とスライド」を参照してください。</p>  <p>PDC 2009 では、Windows Azure Storage に焦点を絞った次の2つの対話もありました。</p>  <ul>   <li>azure のテーブルとキューの詳細については、Windows azure テーブルとキューの主な領域について詳しく説明 &#160;&#160;&#160; しています。これには、パーティションキーを選択する方法と、テーブルの高速で効率的なクエリを実行する方法が含まれ &#160; ます。キューについては、(a) メッセージがキューに残っている時間制限を削除する Windows (b) 非表示時間がになるまでの時間制限を削除し、(c) デキューされたメッセージの非表示時間をいつでも変更できるようにします。 </li>    <li>Windows Azure を使用したスケーラブルで信頼性の高いアプリケーションの構築– Windows Azure Storage に関して、この手順では、ストレージアカウント、blob、エンティティ、および商用利用可能なメッセージのスケーラビリティに関する設計目標について説明します &#160;&#160; 。また、データのピーク時のトラフィック需要に合わせて geo ロケーション内のデータを自動的に負荷分散する方法についても キューを使用して、計算にスケーラブルで信頼性の高いワークフローを作成する方法について説明します。また、ローリングアップグレードを使用して、テーブルのスキーマ変更 (新しいプロパティの追加) を実行する方法について説明します。 </li> </ul>  <p>PDC 2009 の新機能では、これらは ": 2009-09-19" を使用してバージョン管理されます。 既存のコマンドの機能を拡張し、新しいコマンドを導入するため、ストレージシステムに対して実行されるすべての以前のバージョンのコマンドは引き続き機能します。</p>  <p>PDC 2009 リリースでは、次の2種類の blob がサポートされるようになりました。 </p>  <ul>   <li><strong>ブロック Blob</strong> –これは、ストリーミングワークロード用に最適化された PDC 2008 以降に提供された blob の種類です。 各 blob は一連のブロックで構成され、各ブロックは blob に関連する一意のブロック ID によって識別されます。 この種類の blob を使用すると、ブロックを PutBlock でアップロードし、PutBlockList でコミットすることができます。 ブロック Blob のサイズは最大 200 GB になります。 </li>    <li><strong>ページ blob </strong>–このリリースでは、ページ blob と呼ばれるランダムな読み取り/書き込み用に最適化された新しい種類の blob が追加されました。 ページ Blob はページの配列で構成され、各ページは Blob の先頭からのオフセットによって識別されます。 PutPage は、blob に対して射程を持つ put を実行するために使用され、更新は blob に直ちに適用されます。 さらに、blob の領域は ClearPage で消去できます。これらの消去されたリージョンはストレージ領域を消費しません。 つまり、ストレージアカウントは、ページ Blob 内のページに対してのみ、データが格納されているページに対して課金されます。 ページ Blob の最大サイズは 1 TB です。 </li> </ul>  <p>両方の種類の blob の機能強化: </p>  <ul>   <li><strong>Content Delivery Network </strong>– Windows Azure CDN を使用すると、Windows Azure blob を戦略的に配置された場所にキャッシュして、ユーザーにコンテンツを配信するための最大帯域幅を提供できます。 各 blob に対して HTTP Cache-Control ポリシーを指定できるようになりました。これにより、blob が Windows Azure CDN にキャッシュされる時間の長さが決まります。 Cache-Control に有効期限 (ttl) を指定することもできますが、ttl が長すぎて、Windows Azure CDN からデータを提供するときにキャッシュヒットを取得するのに十分な頻度のコンテンツがある場合は、CDN の利点のみを忘れないでください。 Windows Azure CDN の詳細については、こちらを参照してください。       <br><a href="https://blogs.msdn.com/windowsazure/archive/2009/11/05/introducing-the-windows-azure-content-delivery-network.aspx">https://blogs.msdn.com/windowsazure/archive/2009/11/05/introducing-the-windows-azure-content-delivery-network.aspx<strong></strong></a> </li>    <li><strong>カスタム Storage ドメイン</strong>名-カスタムストレージドメイン名機能を使用すると、特定のストレージアカウントのカスタムドメイン名を登録し、そのカスタムドメインを使用して blob サービス URL ではなく blob にアクセスすることができます: https:// &lt; &gt; blob.core.windows.net/ &lt; コンテナー &lt; &gt; / blobname。 &gt; リリースでは、カスタムストレージドメイン名が、匿名アクセスだけでなく、認証されたアクセスでも使用できるようになりました。 カスタムストレージドメイン名の詳細については、こちらを参照してください。       <br><a href="https://blogs.msdn.com/windowsazure/archive/2009/11/05/accessing-windows-azure-blobs-using-custom-storage-domain-names.aspx">https://blogs.msdn.com/windowsazure/archive/2009/11/05/accessing-windows-azure-blobs-using-custom-storage-domain-names.aspx<strong></strong></a> </li>    <li><strong>スナップショット blob </strong>-blob のバックアップまたは blob のバージョン管理を作成するために使用できる、blob の読み取り専用バージョンを作成できます。 アカウントは、一意のブロックまたはページに対してのみ課金されます。スナップショット間で共有されるブロックまたはページと、その派生元のベース blob は、追加のストレージ料金が発生しません。 </li>    <li><strong>リース blob </strong>–クライアントは、blob のリースを取得し、その blob への排他書き込みアクセスを行うことができるようになりました。 リースの有効期限が切れるまで blob が排他的書き込み用にロックされ、blob に対する非排他的な読み取りアクセスが許可されます。 リース Blob の初期バージョンでは1分間のリースしかサポートされていませんが、リースを更新して、クライアントがロックを長期間保持できるようにすることができます。 リース Blob は、ページ Blob への高い同時書き込みを処理する場合に便利です。 </li>    <li><strong>Blob の取得–</strong> これは、ブロック blob とページ blob の両方を取得するために使用されます。 さらに、サイズが 4 MB 以下の範囲読み取りに対して動的に生成された MD5 を返すオプションが提供されるようになりました。 </li>    <li><strong>Blob の一覧表示– </strong>アプリケーションでは、blob を一覧表示するときに、各 blob のアプリケーションメタデータと MD5 情報を取得できるようになりました。 </li>    <li><strong>Blob のプロパティ– </strong>アプリケーションは blob とは無関係に blob のプロパティを更新できるようになりました。 blob に対して標準の HTTP Cache-Control プロパティを指定できます。 </li>    <li><strong>ルートコンテナー- </strong>ルートコンテナーに格納されている blob に対して、匿名アクセスが提供されるようになりました<strong>。 </strong>これは、Silverlight のクロスドメインポリシーアクセスをサポートするための重要な不足している機能です。 たとえば、ルート blob コンテナーに次のクロスドメインポリシーファイルを指定できます。 &#160; <a href=""></a> </li> </ul>  <p>キューの拡張機能: </p>  <ul>   <li><strong>デキュー回数</strong>– Windows Azure キューから取得した各メッセージのデキューカウントを返します。 これにより、メッセージがデキューされた回数をアプリケーションで確認できるようになります。 &#160; </li> </ul>  <p>上記の新機能に加えて、このバージョン管理された CTP リリースの一部として次のセマンティック変更が行われました。 </p>  <ul>   <li><strong>匿名 Blob アクセス– </strong>Blob API の "2009-09-19" バージョンを使用してアクセスがパブリックに設定されているすべての blob コンテナーは、2009-09-19 バージョンの blob Api を使用して匿名の要求を処理します。 以前のバージョンでパブリックに設定されているコンテナーは、CTP2008 バージョンの blob Api で引き続き匿名要求を処理します。 </li>    <li><strong>Blob 認証とキュー認証</strong> -署名の正規化の一部として追加情報を含めることにより、セキュリティ強化のために強化された署名アルゴリズムのサポートが追加されました。 </li>    <li><strong>コンテナー、キュー、および blob の一覧</strong> 表示: XML によりわかりやすいように、リスト操作の応答形式が変更されました。 </li>    <li><strong>Blob およびキューのメタデータの名前付け</strong> –コンテナーまたは blob リソースのメタデータは、リソースに関連付けられた名前と値のペアとして格納されます。 メタデータ名は、 <a href="https://msdn.microsoft.com/en-us/library/aa664670(VS.71).aspx">C# 識別子</a>の名前付け規則に従う必要があります<strong></strong> </li>    <li><strong>テーブルクエリ </strong>–テーブルクエリは、最大5秒間実行されてから、結果と可能性のある継続を返すことができます。 </li>    <li><strong>テーブル DataService のバージョン</strong> : Table service のすべての REST 呼び出しで、すべての要求に <em>DataServiceVersion</em> と<em>MaxDataServiceVersion</em> のヘッダーを含める必要があります。 Astoria クライアントライブラリを使用しているアプリケーションは、既に必要なヘッダーを送信しています。 </li> </ul>  <p>この新しいリリースの上記の機能は、Windows Azure Storage REST インターフェイスを介して入手できます。また、Windows Azure SDK と共にリリースされたばかりの新しい Storage クライアントライブラリの一部としてもサポートされています。 </p>  <p>これらの新機能の詳細については、MSDN ドキュメントの「 <a href="https://msdn.microsoft.com/en-us/library/dd894041.aspx">https://msdn.microsoft.com/en-us/library/dd894041.aspx</a> 」を参照してください。 </p>  <p>いつでも、お客様からのフィードバックをお待ちしております。 </p>  <p>Brad Calder    <br>Windows Azure ストレージ</p>'
