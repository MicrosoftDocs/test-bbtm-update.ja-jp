### YamlMime:Yaml
ms.openlocfilehash: c01c57679ca52549d6269cf8bb68938829dd16f9
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905040"
Slug: azure-app-service-updates-november-2015
Title: Azure App Service更新プログラム – 2015 年 11 月
Summary: この週の Connect(); イベントでは、新しいビデオを公開しました。このビデオでは、新しいイベントに対して行Azure App Service。
Content: >-
  <p>この週の Connect(); イベントでは、新しいビデオを公開しました。このビデオでは、新しいイベントに対して行Azure App Service。 Azure App Service が 3&rsquo;&rsquo; 月に発表されたので、フィードバックに耳を傾け、今日と明日の顧客のニーズを満たすためにプラットフォームの機能を強化するために取り組み続けています。</p>


  <p>Mobile Apps、API Apps、Logic Apps の初期ロールアウトは、Azure のお客様から非常に良く受け取られたので、これらのアプリの種類の次の手順で更新したいと考えています。 このブログ記事では、今後数週間と数か月で利用できる変更点と新機能について説明します。</p>


  <h1>Mobile Apps更新</h1>


  <p>お&rsquo;客様からのフィードバックに応じて、お客様からご意見をお寄せMobile Apps次の更新をお知せください。</p>


  <h3>Web アプリとモバイル/API バックエンドの認証/承認</h3>


  <p>モバイル バックエンド、API、Web ページを、同じターンキー認証/承認エクスペリエンスを使用して保護できます。 Azure Active Directory のすべてのサーバー フローとクライアント フロー、Facebook、Google、Twitter、Microsoft アカウント&ndash;、および Mobile Services で最初にサポートされたのと同じセットのカスタムのサポートが追加されました。 また&#39;必要なスコープ/要求を宣言する機能も追加されました。</p>


  <p><img alt="Authentication-Authorization" border="0" height="480" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fd17c232-d1b9-46bd-ae1c-930be207dc5a.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="Authentication-Authorization" width="455"></p>


  <h3>簡単なテーブルと API</h3>


  <p>お&rsquo;客様がテーブル機能の使いやすさを本当に気に入っているのはMobile Services Node.js聞いたことがあります。 この更新プログラムでは&#39;、コードなし CRUD API オーサリング エクスペリエンスをポータルAzure App Service追加しました。</p>


  <p>簡単なテーブルと呼ばれる、SQL Azureされたモバイル対応の OData CRUD API を簡単に作成できます。 データを表示し、エンティティのスキーマを設計することができます。 ブラウザーの [Node.js] にロジックを追加し、オンライン Visual Studioを使用できます。 もちろん、Easy Tables と API を使用する場合は、ニーズに応じて引き継ぎ、カスタマイズできる通常Express.js アプリをスキャフォールディングします。</p>


  <p><img alt="Easy Tables" border="0" height="189" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9dabdf06-4211-48a2-b887-fccea0b32b72.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="Easy Tables" width="640"></p>


  <h3>ファイル同期のサポート</h3>


  <p>App Service Mobile には、開発者がオフラインで動作し、さまざまなデータ バックエンド ストアと同期するアプリを構築できるデータ同期機能が含まれています。 現在、&#39;にファイルのサポートを追加App Service データ同期。この機能を使用すると、開発者は App Service Mobile テーブル コントローラー経由で公開されているエンティティからファイルを参照し、バックエンドで構成された BLOB ストレージと直接ファイルを同期できます。 クライアント側では、エンティティから参照されるファイルに対する変更を追跡します。 この機能を使用するには、次の API を利用します。</p>


  <p><font face="Courier New">mobileClient.InitializeFileSync(<font color="#4bacc6">new</font> MyFileSyncHandler(<font color="#4bacc6">this</font>), syncStore);<br>

  <font color="#4bacc6">await</font> myTable.PullFilesAsync(entity);<br>

  <font color="#4bacc6">await</font> myTable.PushFileChangesAsync();</font></p>


  <p>ここで、MyFileSyncHandler は IFileSyncHandler を実装して、ファイルをローカルに格納する場所を指示し、同期規則をオーバーライドできます。</p>


  <p>この機能は、サーバー上で、クライアントがファイルを BLOB ストレージに直接同期する SAS キーの自動発行を処理し、基本的な同期タスクを処理します。</p>


  <p>Xamarin およびアプリケーション用のクライアント ライブラリWindowsこちらから使用<a href="https://github.com/Azure/azure-mobile-apps-net-files">できます</a>。 この機能の使用の詳細なサンプルについては、こちらを参照 <a href="https://github.com/lindydonna/MobileAppsFilesSample">してください</a>。</p>


  <h1>API Apps更新プログラム</h1>


  <p>このプレビュー API Apps、多くの&rsquo;関心と導入を受け取っています。 また&rsquo;、製品を改善し、より多くの価値を提供するためのフィードバックも受け取っています。 以下では、Mobile と Web Apps に合わせ、概念数を減らし、デプロイとランタイムのパフォーマンスを向上させるために、API Apps に対して行っている基本的な変更について説明します。</p>


  <h3>変更&rsquo;する情報</h3>


  <p>認証、CORS、 &ndash; API メタデータAPI Appsの &ndash; 主な機能は、アプリケーションに直接App Service。 この変更により、この機能は Web、モバイル、および Web サイト全体でAPI Apps。 API Appsゲートウェイは、&nbsp;不要になるか、またはゲートウェイで提供API Apps。</p>


  <p><img alt="API Apps Gateway" border="0" height="375" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dd5b8ef5-1369-4496-b0ac-8298abdf8dd4.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="API Apps ゲートウェイ" width="640"></p>


  <p>更新プログラムの重要な設計原則API Appsは、選択した言語で API を使用して、API を有効にするための原則です。&nbsp; API が Web アプリまたはモバイル アプリ* として既にデプロイされている場合は、新しい機能を利用するためにアプリを再デプロイする必要があります。</p>


  <p>*<em>現在プレビュー中のお客様API Apps、更新されたサービスが利用可能になAPI Appsガイダンスを提供します。&nbsp; 既存のコードは主に機能しますが、お客様はプレビューで既にデプロイされているアプリを再デプロイAPI Appsがあります。</em></p>


  <h3>API を簡単に構築する</h3>


  <p>ホストされている API には、次の多くのターンApp Service使用できます。</p>


  <ul>
   <li><strong>認証</strong>: 「認証」セクションで前述Mobile Apps、組み込みの認証を使用してユーザーと他のサービスの両方を認証します。&nbsp; トークンの検証とユーザー/サービス認証は、App Serviceがコードに到達する前に発生します。</li>
   <li><strong>CORS</strong>: ブラウザーから API に対してクロスドメイン JavaScript 要求を行うのが許可される、オリジンのホワイトリストを指定します。</li>
   <li><strong>API 定義</strong>: Swagger 2.0 メタデータのエンドポイントを指定して、ダウンストリーム ツールでプロンプトを表示せずに検出できます。</li>
  </ul>


  <h3>API を使いやすい</h3>


  <p>上記の機能により、強力な消費エクスペリエンスが可能になります。</p>


  <ul>
   <li><strong>柔軟な認証オプション</strong>: ID&rsquo; プロバイダーのネイティブ SDK または Mobile Apps SDK を使用します。</li>
   <li><strong>SDK の</strong>生成: Swagger API 定義と組み込みの VS ツールを使用して、API の SDK を生成します。 コード ジェネレーターはコマンド ラインでも使用できます。また、.NET、Node.js、Java などもサポートされています。</li>
   <li><strong>Logic Apps</strong>: API を Logic Apps から呼び出します。 HTTP Logic Appsは、サービス プリンシパル認証をネイティブにサポートします。サービス プリンシパル認証は、サービス プリンシパル認証に組み込App Serviceです。 コネクタの今後の更新により、Swagger のサポートが追加され、ホストされている API に接続App Serviceシームレスに行&rsquo;える予定です。</li>
  </ul>


  <h3>簡単に統合API Management</h3>


  <p>Api のAPI Management、API Appsエクスペリエンスをエンド to エンドで管理するために、Azure API Managementと統合を組み合わせて使用&rsquo;します。&nbsp; API Managementホストされている API をApp Service構成し、同様に Swagger 2.0 をサポートします。</p>


  <p>上記で説明した変更API Apps数週間以内に公開される予定です。</p>


  <h1>Logic Apps更新プログラム</h1>


  <p>2016 年初めに、お客様が API やサービスとの対話を簡単に調整するために、Logic Apps に多数の新機能が導入される予定です。 ロジック アプリは引き続き完全に忠実なエクスペリエンスを提供しますが、Swagger メタデータを公開する API エンドポイントのサポートを向上するために拡張されます。</p>


  <p>ロジック アプリでのカスタム API の最適なエクスペリエンスは、ターンキー認証が有効になっている App Service API アプリとしてホストする方法です。 ただし、これは不要になったので、Web Apps や Cloud Service Web ロールなどの任意のテクノロジを使用して Web API をホストすることもできます。また、swagger エンドポイントを公開する限り、新しい完全に忠実なデザイナー エクスペリエンスを利用できます。</p>


  <p>また、新しい機能のネイティブ サポートAPI Managementします。&nbsp; これには、バックエンド API にトラフィックをルーティングAPI Management調整できるスロットルとポリシーを設定する機能が含まれます。</p>


  <p>たとえば、Contoso API を作成し、swagger を公開した場合、ロジック アプリで使用できる他のすべてのサービスと共に、その操作が自動的に表示されます (特別な構成は必要なし)。</p>


  <p><img alt="Contoso API" border="0" height="219" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7538cb27-88e5-4588-9fa1-cd17c83c03ff.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="Contoso API" width="240"></p>


  <p>カスタム API と API 管理のサポートの強化に加え、ロジック アプリ デザイナーには、次を含む他の機能強化がリリースされます。</p>


  <ul>
   <li>個々の API 操作全体のフルテキスト検索
   <ul>
    <li>カスタム API と組み込み API の両方が含まれています</li>
   </ul>
   </li>
   <li>API の出力を表すビジュアル トークン
   <ul>
    <li>高度に求められる機能により、ロジック アプリ定義言語を理解することなく、メッセージをビルドし、その外観を確認できます</li>
   </ul>
   </li>
   <li>フローの途中で入力を待機するロジック アプリを設計できるよう、ネイティブ Webhook のサポート
   <ul>
    <li>承認シナリオに役立ちます。 たとえば、承認のためにマネージャーに電子メールを送信するロジック アプリを作成し、マネージャーが承認するまで待って、次の手順に進みます。</li>
   </ul>
   </li>
  </ul>


  <p><img alt="Native Webhook" border="0" height="240" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f944cb5f-625e-4806-a3e5-51588ba8805e.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="ネイティブ Webhook" width="231"></p>


  <p>ロジック アプリに組み込API Apps HTTP アクションを使用して、更新されたバージョンのアプリケーションの使用を数週間後に開始できます。 ロジック アプリ定義言語を直接使用して、カスタム API に接続することもできます。 上記で説明したLogic Appsエクスペリエンスの向上は、来年度の早い段階から利用できます。</p>


  <h1>まとめ</h1>


  <p>Azure App Serviceな方法でアプリケーションの反復的なタスクと追加の構成を不要にしたり、可能な限り単純にしたりするための意味のある方法で進化しています。 上記のように、すべてのアプリの種類 (Web、モバイル、API、ロジック) でApp Service機能を使用できるよう取り組み中です。</p>


  <p>Azure&rsquo; プラットフォームを使用する楽しい時間です。 <a href="https://tryappservice.azure.com">無料App Service試してみてください</a>。</p>
