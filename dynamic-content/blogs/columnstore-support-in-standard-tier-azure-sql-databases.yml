### YamlMime:Yaml
ms.openlocfilehash: 680f54fcfae2653c5ab5fb7100ded35c31c17b02
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890223"
Slug: columnstore-support-in-standard-tier-azure-sql-databases
Title: Standard レベルの Azure SQL データベースでの列ストアのサポート
Summary: S3 以上の価格レベルでの Standard データベースの列ストア インデックス機能の一般提供をお知らせします。 これらの機能により、多くの新しい有用な機能が有効にされます。
Content: >-
  <p>S3 以上の価格レベル、100 eDTU 以上のエラスティック プール、およびすべての仮想コア ベースのデータベース (General Purpose と Business Critical) の Standard データベースに対するクラスター化列ストア インデックスと非クラスター化列ストア インデックスの一般提供をお知らせします。 これらの機能により、多くの新しい貴重なシナリオが可能になります。</p>


  <ul>
      <li>列ストア ベースのアプリケーションの機能開発/テスト。テスト目的で プレミアムの料金を支払う必要がない。 (もちろん、パフォーマンス テストは常にターゲット パフォーマンス構成で行う必要があります)。</li>
      <li>列ストア ベースのストレージを使用してアプリケーションをデプロイします。このストレージには、プレミアムレベルのデータベース要件に関するセクションに示されているミッション クリティカルなパフォーマンスと可用性の要件が満たされません。</li>
      <li>アプリケーション ベンダーは、列ストア機能を活用し、Standard と プレミアム パフォーマンス レベルの両方にデプロイするアプリケーションを開発できます。</li>
  </ul>


  <h2>列ストアの利点</h2>


  <p>列ストア インデックスは、数百万行および数十億行のデータをスキャンおよび集計するクエリに対して非常に効率的に設計されています。 これらは基本的に異なる構造で、行ではなく列ごとにデータを物理的にグループ化します。 OLTP スタイルのワークロードでは、通常、クエリは一度に 1 行または数行にアクセスし、従来のインデックス構造を最も効率的なアクセス パスにします。 分析クエリの場合、データを列で整理するということは、クエリに関係する列のデータを読み取る必要があるだけで、他の列をメモリに取り込む必要が全くないという意味です。 さらに、約 100 万行 (&ldquo;&rdquo;行グループ) のグループが圧縮され、行グループの各列の値の範囲に関するメタデータが保持されます。 したがって、クエリを満たすデータを含む行がない場合は、行グループ全体をスキップできます。 詳細については、列ストア インデックスの <a href="https://docs.microsoft.com/en-us/sql/relational-databases/indexes/columnstore-indexes-overview" target="_blank">ドキュメント ページを参照してください</a>。</p>


  <p>最後に、各コンテナー内のデータはすべて同じ列にあるため、値が非常に似ている傾向があります。もちろん、データ型では同じです。 これにより、非常に圧縮可能になります。 通常は、列ストア内のデータセットから領域の 90% を圧縮できます。</p>


  <p>このすべてが一緒に行われ、より多くのデータを少ない領域に格納し、クエリを満たすためにディスクからメモリに移動するデータをはるかに少なくすることができます。 これを、集計を実行するときにデータのバッチを処理する機能と組み合わせることで、パフォーマンスが大幅に向上します。 お客様は、列ストア処理に適したクエリの実際の実稼働ワークロードで、100X 以上の注文で増加しています。</p>


  <h2>質問と回答</h2>


  <p><strong>Q。すべての Standard パフォーマンス レベルは現在サポートされていますか?</strong></p>


  <p>A. 列ストア インデックスを利用するクエリでは、パフォーマンスを高め、パフォーマンスを高め、メモリフットプリントを最小限に抑えます。 最適なエクスペリエンスを確保するには、S3 以上で提供されるメモリ、または 100 eDTU 以上のエラスティック プールが必要です。&nbsp; すべての仮想コア ベースのオプションがサポートされています。</p>


  <p><strong>Q。データベースに列ストアを作成し、S3 より下にスケールダウンするとどうなるでしょうか。</strong></p>


  <p>A. スケーリング操作は成功しますが、データベースがクエリを実行するときに列ストアは選択されません。&nbsp; インデックスは、テーブル内のデータ変更に対応するために更新されるという例外を除き、休止状態になります。 データベースを S3 以上にスケールバックすると、列ストア インデックスの使用が自動的に再び開始されます。 この影響の 1 つは、テーブルにクラスター化列ストア インデックスのみを含み、S3 より下にスケールダウンされている場合です。 クラスター化列ストア インデックス&rsquo;を使用してデータを取得することはできません。そのため、データベースがスケールアップされるまでデータにアクセスすることはできません。</p>


  <p><strong>Q。この機能を有効にするには、何をする必要がありますか?</strong></p>


  <p>A. S3 パフォーマンス レベル以上のデータベースの場合、アクションは必要はありません。 列ストア インデックスの作成は、他のアクションを使用して成功します。</p>
