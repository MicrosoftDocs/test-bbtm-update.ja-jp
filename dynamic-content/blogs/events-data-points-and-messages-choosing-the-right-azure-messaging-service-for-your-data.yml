### YamlMime:Yaml
ms.openlocfilehash: 0a7bdd78afceb77909140464312c8b87fbc16fb3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896800"
Slug: events-data-points-and-messages-choosing-the-right-azure-messaging-service-for-your-data
Title: イベント、データポイント、メッセージ-データに適した Azure メッセージングサービスを選択する
Summary: >+
  Event Grid の導入により、Microsoft Azure はさらに多くのメッセージングインフラストラクチャオプションを提供するようになりました。 拡張されたメッセージングサービスは、Service Bus メッセージブローカー、Event Hubs ストリーミングプラットフォーム、および新しい Event Grid イベント配布サービスで構成されます。

Content: >-
  <p><a href="https://azure.microsoft.com/services/event-grid/">Event Grid</a>の導入により、Microsoft Azure はさらに多くのメッセージングインフラストラクチャオプションを提供するようになりました。 拡張されたメッセージングサービスは、 <a href="https://azure.microsoft.com/services/service-bus">Service Bus</a>メッセージブローカー、 <a href="https://azure.microsoft.com/services/event-hubs/">Event Hubs</a>ストリーミングプラットフォーム、および新しい Event Grid イベント配布サービスで構成されます。 これらのサービスは、データグラムの移動に重点を置いているので、双方向のポイントツーポイントのネットワーク接続ブリッジングを可能にする <a href="https://docs.microsoft.com/azure/service-bus-relay/">Azure Relay</a> によって補完されます。</p>


  <p>一見すると、Service Bus、Event Hubs、および Event Grid が互いに競合しているように見えることがあります。 これらはすべて、イベントまたはメッセージと呼ばれるデータグラムを受け入れ、コンシューマーがそれらを取得して処理できるようにします。</p>


  <p>公開されている情報の種類と、その情報がどのように使用および処理されるかを詳しく調べると、3つのサービスの使用シナリオが重複していて、それらが非常に補完的であることが明らかになります。 1つのアプリケーションで3つのサービスすべてを組み合わせて使用することができます。それぞれの機能面について、さまざまな機能に対応しています。そのためには、多数の Azure ソリューションが期待されます。</p>


  <p>この違いを理解するために、まずパブリッシャーの意図について説明 &rsquo; します。</p>


  <p>発行された情報項目がどのように処理される必要があるか、発行者が受信 &rsquo; する必要のある対象ユーザーが特定の場合は、 <em>コマンド</em>を発行するか、 <em>ジョブ </em>を割り当てるか、または共同作業アクティビティの制御を引き継ぎます<em>( </em>どちらか一方が <em>メッセージ</em>で表されます)。</p>


  <h2>メッセージ交換</h2>


  <p>多くの場合、<em>メッセージ</em>には、ワークフロー内の特定のステップを処理する baton、または処理チェーンをシステム内の別のロールに渡す情報が含まれます。 これらのメッセージ (注文書や通貨勘定科目の転送レコードなど) は、重要な金銭的価値を表すことができます。 そのようなメッセージが転送中に失われた場合は、その値が失われたり、復旧が非常に困難になったりする可能性があります。 このようなメッセージの転送は、特定の時間に実行される必要があり、特定の時刻に処理される必要がある場合があります。 また、メッセージによっては、特定のアクションを実行するための完全なコマンドを表現することもできます。 また、メッセージの受信者が処理の結果を返し、それらのレポートが返送されるようにパスを作成することもできます。</p>


  <p>この種の契約メッセージの処理は、発行元から対象ユーザーにとって、どのような処理が必要であるかを特定する必要がないという点で、非常に異なります。 このようなファクトの分布は、最適な <em>イベント</em>です。</p>


  <h2>イベントの配布とストリーミング</h2>


  <p><em>イベント</em> はメッセージでもありますが、一般に、通知を行う以外に、発行者の意図が伝達される &rsquo; ことはありません。 イベントはファクトをキャプチャし、その事実を伝えます。 イベントのコンシューマーは、pleases &rsquo; が発行元によって保持されている特定の予測を満たしていないため、ファクトを処理できます。</p>


  <p>イベントは、主に2つの大きなカテゴリに分類されます。公開アプリケーションで実行されている特定のアクションに関する情報を保持するか、継続的に公開されるストリームの要素として情報データポイントを保持するかのどちらかになります。</p>


  <p>まず、アクティビティに基づいて送信されるイベントの例を考えてみましょう &rsquo; 。 販売サポートアプリケーションによって新しい販売潜在顧客のデータレコードが作成されると、このことがわかっているイベントが生成される可能性があります。 イベントには、新しい潜在顧客に関する概要情報が含まれています。これは、受信者が詳細情報に関心があるかどうかを判断し、その詳細を取得するためのリンクまたは参照の形式を決定するのに十分であると考えられます。</p>


  <p>ソースにサブスクライブしてイベントを取得し、その後参照される情報を取得する機能は、当然、アクセス制御チェックの対象となります。 このような承認されたパーティは、独自のロジックでイベントに対応することができるため、システム全体の機能が拡張されます。</p>


  <p>たとえば、新しい販売リード &rdquo; イベントに対する &ldquo; サブスクライバーは、ニュースレターの配布を処理するアプリケーションである可能性があります。また、見込み客と、受信に同意したニュースレターに登録します。 同じイベントに対する別のサブスクライバーは、次の月のホームリージョンで発生しているトレードショーに関して、見込み客を招待リストに配置して、通常のメールで招待状の送信を開始することができます。 後者のシステム拡張機能は、イベントが数週間前に実行され、その後削除されたときに、地域オフィスの代理としてのみ実行される &rsquo; 関数である場合があります。</p>


  <p>販売サポートアプリケーション &rsquo; の中核と &rsquo; なるのは、これらの2つのサブスクライバーに対して何をするかを知らず、それも認識していないことです。 これらは、ソースアプリケーションによって発行されたイベントのコンシューマーを承認していますが、結合が非常に緩いため、これらのコンシューマー &rsquo; を削除しても、ソースアプリケーション &rsquo; の機能の整合性には影響しません。 コアアプリケーションの状態の変化に透明性を持たせることで、完全なシステム機能を永続的または一時的に拡張することができます。</p>


  <p>個別 &ldquo; のビジネスロジックアクティビティ &rdquo; について通知するイベントは、統計評価に目を通して生成されるイベントとは異なります。また、これらのイベントを出力する値は、派生した洞察に含まれます。 このような統計情報は、アプリケーションと機器の正常性と負荷の監視、ユーザーエクスペリエンスと使用状況のメトリック、およびその他のさまざまな目的で使用できます。 統計の作成をサポートするイベントは非常に頻繁に生成され、通常は特定の時点で行われたデータポイントの観測をキャプチャします。</p>


  <p>データポイントを保持するイベントの最も一般的な例として、ログデータイベントがあります。これは、web サーバーまたは別の領域で、フィールド機器の環境センサーによって生成されるためです。 通常、アプリケーション &rsquo; は、このようなポイントの観測に基づいてアクションをトリガーしますが、派生傾向になります。 ドアの近くに温度センサーがあるときに chilly 温度が示されている場合は、加熱をすぐにオンにすると、反応率が高くなる可能性があります。 しかし、気温が 1 ~ 2 分程度低下している場合は、ヒートを1ノッチにして、ドアがシャットダウンされていない可能性があるというアラートも適切な反応としています。 これらの例は、ポイントの観測だけでなく、時間の経過と共に温度の傾向を計算する一連のイベントを確認することに基づいています。</p>


  <p>データポイントを保持するこのようなイベントストリーム (特に、ほぼリアルタイムの洞察が必要な場合) の分析では、必要な時間枠と必要な数のイベントにまたがるバッファーにデータを蓄積し、いくつかの統計関数または機械トレーニングのアルゴリズムを使用して処理する必要があります。 このようなバッファーのイベントを取得する最適なパターンは、バッファーにデータをプルする、計算を実行する、時間枠を移動する、イベントの次のバッチをプルして、時間枠を埋める、次の計算を実行する、などです。</p>


  <h2>Azure メッセージングサービス</h2>


  <p>アプリケーションは、アクションイベントとデータポイントイベントをメッセージとして出力し、実行されている作業とその作業の進行状況に関する洞察を提供します。 他のメッセージは、コラボレーションパーティ間のコマンド、作業ジョブ、または制御の転送を表すために使用されます。 これらのメッセージはすべてメッセージですが、使用シナリオが異なるため、Microsoft Azure は、差別化された、コンポーザブルなサービスポートフォリオを提供しています。</p>


  <h3>Azure Event Hubs</h3>


  <p><strong><a href="https://azure.microsoft.com/services/event-hubs/">Azure Event Hubs</a></strong> は、データポイントイベントのシナリオに重点を置いて設計されています。 イベントハブは &ldquo; 、イベントデータを受け入れて格納し、そのイベントデータを高速 &ldquo; プル &rdquo; 取得に使用できるようにするイベント取り込み &rdquo; です。 特定の分析ジョブ &ldquo; &rdquo; を処理する stream analytics プロセッサは、イベントハブに移動し、時間オフセットを選択し、取り込まれたイベントシーケンスを必要なペースで再生し、フルコントロールを使用して、同じシーケンスを複数回再生する必要がある分析タスクを実行できます。 最新のシステムでは、多くのデータストリームを並行して処理するため、関連するイベント Event Hubs を保持しながら、イベントハブを通じて多重化された個々のストリームの高速かつ高度な並列処理を可能にするパーティション分割モデルがサポートされています。 各イベントハブインスタンスは、通常、同じ種類のパブリッシャーからの非常に類似した図形およびデータコンテンツのイベントに使用されます。そのため、分析プロセッサが適切なコンテンツを適切なタイミングで取得し、スキップせずに済みます。</p>


  <p>例: web ファームを構成する一連のサーバーが、トラフィックログデータを1つのイベントハブにプッシュする場合があります。また、関連するイベントをまとめて保持するために、これらのイベントのパーティション分散をそれぞれのクライアント IP アドレスに固定することができます。 このイベントハブのトラフィックログイベントは、これらのイベントのシェイプとコンテキストが異なるため、同じサーバーセットからアプリケーショントレースイベントを受け取る別のイベントハブとは異なります。</p>


  <p>前に説明した温度センサーは、デバイスの id をパーティションキーとして使用して、イベントハブのパーティション分割モデルを使用して一緒に保持される個別のストリームを生成します。 同じパーティション分割ロジックと互換性のある消費モデルが Azure IoT ハブでも使用されます。</p>


  <p><a href="https://docs.microsoft.com/azure/event-hubs/event-hubs-capture-overview">Event Hubs キャプチャ</a>機能は、キャプチャされたイベントのバッチを Azure Storage blob コンテナーまたは Azure Data Lake に自動的に書き込み、完全な生データ履歴に基づいて<a href="https://docs.microsoft.com/azure/architecture/patterns/event-sourcing">イベント</a> &rdquo; をタイムリーにバッチ処理 &ldquo; できるようにします。</p>


  <h3>Azure Event Grid</h3>


  <p><strong><a href="https://azure.microsoft.com/services/event-grid/">Azure Event Grid</a></strong>は、独立したビジネスロジックアクティビティ &rdquo; イベントのための &ldquo; 分散ファブリックであり、ストリームコンテキストの外部では役に立ちません。 これらのイベントは厳密に相関 &rsquo; しているわけではなく、バッチ処理を必要としないため、これらのイベントが処理のためにディスパッチされる方法のモデルは大きく異なります。</p>


  <p>モデルに対して最初に想定されるのは、アプリケーションまたはプラットフォームサービスによって生成されるさまざまなコンテキストに対して非常に多数の異なるイベントが発生 &rsquo; し、1つの特定のイベントの種類または1つの特定のコンテキストだけでコンシューマーが関心を持つことです。 これは、コンシューマーが、配信されるイベントの正確なサブセットを選択できるフィルター選択されたサブスクライバーモデルをためします。 &nbsp;</p>


  <p>2つ目の前提は、Web サービス呼び出しまたは &ldquo; サーバーレス &rdquo; 関数を使用して、独立したイベントを高度に並列化された方法で処理できることです。 これらのハンドラーにイベントをディスパッチするための最も効率的なモデルは、イベントをプッシュ &rdquo; し、Web サイトの既存の自動スケール機能、Azure Functions、または必要な処理容量を管理する &ldquo; Azure Logic Apps です。 Azure Event Grid が、ターゲットがビジー状態であることを示すエラーが発生した場合は、少し時間が経過すると、より多くのリソースをスピンアップできるようになります。 このようにプラットフォーム内の既存のサービス機能を使用したこの Azure Event Grid の構成により、お客様 &rsquo; は、前述のニュースレターサービス &ndash; &rsquo; をホストしているカスタム VM やコンテナーなどの実行中 &ldquo; のアイドル &rdquo; 機能に対して支払いを行う必要がなくなります</p>


  <h3>Azure Service Bus</h3>


  <p><strong> <a href="https://azure.microsoft.com/services/service-bus">Azure Service Bus</a> </strong>は &ldquo;他のすべての汎用メッセージングタスクに対するスイス陸軍ナイフ &rdquo; サービス。 Azure Event Grid と azure Event Hubs では、大規模なイベントの収集と配布に焦点を当てることができますが、優れたベロシティを使用すると、azure Service Bus 名前空間は、重要なビジネス価値のジョブを保持するキューのホストになります。 これにより、アプリケーションとアプリケーションモジュール間を移動する必要があるメッセージのルートを作成できます。 ワークフローとトランザクション処理のための堅牢なプラットフォームであり、多くのアプリケーションエラー状態を処理するための堅牢な機能を備えています。</p>


  <p>販売時点管理ソリューションに記録された販売は、財務レコードと在庫追跡レコードの両方であり、単なるイベントではありません。 これ &rsquo; は、最終的には複数の統合ブリッジを介して集中管理されるアカウンティングシステムにマージされ、情報が失われないようにする必要があります。 販売時点で在庫レベルを追跡するために個別のメッセージとして表現されることもありますが、販売時点で注文ステータスを含む自動再供給注文を開始するために使用できます。</p>


  <p>Service Bus の特定の強度は、ハイブリッドクラウドソリューションの要素と、ブランチオフィスまたは業務用サイトシステムを含むシステムの間のブリッジとしても機能します。 ファイアウォール &rdquo; の内側にあるシステムは、ネットワーク間でローミングされて &ldquo; いるか、またはオフラインの場合もありますが、プッシュ &rdquo; メッセージングを使用 &ldquo; して直接アクセスすることはでき &rsquo; ませんが、指定された受信者が取得できる場所から、合意した場所にメッセージを送信する必要があります。</p>


  <p>Service Bus キューまたはトピックのサブスクリプションは、このユースケースに最適です。ビジネスアプリケーションの中核がクラウドに存在するか、オンサイトのデータセンター、支店、作業サイト、またはサービステナントが世界中に分散されています。 このモデルは、健康ケア、税金、法務コンサルティング、レストランサービス、および小売の SaaS プロバイダーに特に人気があります。</p>


  <h2>コンポジション</h2>


  <p>&rsquo;多くの場合、さまざまなユースケース間で鋭い線を描画することは困難であるため、3つのサービスを構成することもできます。 (Event Grid はまだ早期プレビュー段階にあることに注意してください。ここで説明するコンポジション機能の一部は、今後数か月で利用可能になる予定です)。</p>


  <p>まず、Service Bus とイベントハブの両方でイベントが Event Grid に出力されます。これにより、アプリケーションは、アイドル時間にリソースを無駄にすることなく、変更にすばやく応答できます。 一定期間アイドル状態になった後、キューまたはサブスクリプションが &ldquo; メッセージによってアクティブ化 &rdquo; されると、Grid イベントが生成されます。 その後、Grid イベントは、ジョブプロセッサをスピンアップする関数をトリガーできます。</p>


  <p>これにより、重要度の高いメッセージが非常に長い場合 (1 日に数件のメッセージを送信した場合など)、アイドル状態のキューでサービスを保持し続けるには、不必要なコストがかかります。 メッセージの処理で大量のリソースが必要になった場合でも、これらのリソースのスピンアップは Event Grid イベントトリガーで固定できます。 次に、利用可能なキューメッセージが処理され、リソースを再度スピンダウンできます。</p>


  <p>キャプチャパッケージが Azure Storage コンテナーにドロップされると、event Hub は Grid イベントを生成します。これにより、パッケージを処理または移動する関数がトリガーされます。</p>


  <p>2つ目は、Event Grid により、サブスクライバーが Service Bus のキューまたはトピック、および Event Hubs にイベントをドロップできるようになります。</p>


  <p>&rsquo;Azure Storage コンテナーに表示される特定のファイルを迅速にダウンロードできるように、ハイブリッドクラウドソリューション内にオンプレミスのサービスがある場合は、NAT とファイアウォールを使用してクラウドに接続し、Azure Storage でそのイベントにサブスクライブされている Service Bus キューでリッスンできます。</p>


  <p>Grid イベントをキューにルーティングするのと同じモデルは、イベントに対応することが時間やリソースにおいて特にコストがかかる場合や、障害のリスクが高い場合 &rsquo; にも適用できます。 Event Grid は、イベントが肯定確認されるまで、最大で60秒間待機します。 &rsquo;処理に時間がかかる可能性がある場合は、 &rsquo; メッセージのロックを維持したまま処理にかかる時間が長くなるように、Service Bus のプルモデルに切り替えることをお勧めします。</p>


  <p>多くの Event Grid イベントは統計的に表示され、時間の経過と共に予測されることもあります。そのため、イベントハブに選択的にルーティングしたり、イベントハブが有効になっているさまざまな分析チャネルに追加のコードを記述することなく、それらのイベントをそこから送信したりすることができます。 イベントハブのキャプチャは、この簡単に構成されたパスを使用して、Grid イベントの優れたアーカイブ機能でもあります。</p>


  <h2>まとめ</h2>


  <p>Azure Messaging は、アプリケーションビルダーが、特定のシナリオのニーズに最適な、完全に管理されたサービスを選択できるようにするサービスを提供します。 これらのサービスは、一般的な原則に従い、開発者がサービスを選択することによって、省かを強制することがないよう &rsquo; にします。 Event Hubs、Event Grid、Service Bus、リレーで構成される主要なメッセージング車両は、さらに具体的なシナリオ ( <a href="https://azure.microsoft.com/services/logic-apps/">Logic Apps</a>、 <a href="https://azure.microsoft.com/services/iot-hub">IoT Hub</a> 、 <a href="https://azure.microsoft.com/services/notification-hubs/">Notification Hubs</a>など) を実現するために、メッセージングベースまたはメッセージ駆動型の Azure サービスによって補完されます。</p>


  <p>&rsquo;1 つのアプリケーションでは、コンポジション内の複数のメッセージングサービスに依存していることがよくあります。また、各シナリオに最適なコアサービスがいくつかあります。</p>
