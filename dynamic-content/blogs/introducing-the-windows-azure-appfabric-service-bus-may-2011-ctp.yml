### YamlMime:Yaml
ms.openlocfilehash: dbf95eb00f4cd854ea6a2e5874e771639d4d5e5c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891555"
Slug: introducing-the-windows-azure-appfabric-service-bus-may-2011-ctp
Title: Windows Azure AppFabric Service Bus 2011 年5月 CTP の導入
Summary: '[この記事は AppFabric チームによって提供されました。]多数のパートナーとお客様が、Azure Windows の主な差別化要因の1つとして Service Bus を考えていることをお知らせしています...'
Content: <p>[この記事は AppFabric チームによって提供されました。]</p><p>お客様は、お客様がクラウドインフラストラクチャへのワークロードの移行に関してどこにいるかについての事実を反映したアプリケーションを構築して相互接続することができるため、お客様は、Windows Azure platform の主な差別化要素の1つとして、Service Bus と考えています。 アプリケーションとソリューションは、デスクトップとデバイス、お客様が所有し、運用されているサーバーとデータセンター、プライベートおよびパブリッククラウド資産をまたがるします。 </p>  <p>10年以上のアプリケーション統合とプロセスの合理化の後、基幹業務アプリケーションは存在せず、もう一度島である必要があります。 </p>  <p>アプリケーションをクラウドに移行する場合、またはクラウドベースの SaaS ソリューションを個々の顧客向けのエンタープライズソリューションに統合する場合、統合には、サービスへのシームレスなアクセスや、ネットワークと信頼の境界を越えた安全で信頼性の高いメッセージフローなどの機能が必要です。 また、信頼の境界を越えてフェデレーションされ、複数のテナントで動作するように構築されたアプリケーションが増えるにつれて、多くの場合、Vpn などの従来のネットワークフェデレーションテクノロジは、管理する必要がある任意のネットワークトラフィックフローを許可することによって、パーティ間の信頼度が非常に高くなります。</p>  <p>クラウドでホストされるアプリケーションとクラウドに接続されたアプリケーション &ndash; について、Service Bus をユニバーサル接続、メッセージング、統合ファブリックに拡張するために努力していること &rsquo; を示す新しい Community Technology Preview をリリースしました。また、Windows Azure AppFabric SDK v2.0 CTP &ndash; の更新プログラムと付属のサンプルを参照してください。 &nbsp;</p>  <p>Service Bus は、ネットワークと信頼の境界を越えたグローバルエンドポイントフェデレーションを可能にする豊富なサービスリレー機能を提供することで、サービスとしてのプラットフォームの間で既に一意です。 </p>  <p>現時点では、クラウドベースのメッセージ指向ミドルウェアテクノロジの新しいセットを Service Bus に追加しています。これ &rsquo; は、長いポーリングをサポートし、スループットに最適化された接続指向の双方向 TCP プロトコルを使用して、単純かつ広範に相互運用可能な REST スタイルの HTTPS プロトコルを介して、信頼性の高いメッセージキューと持続性のあるパブリッシュ/サブスクライブメッセージング </p>  <p>新しいメッセージング機能は、MSMQ テクノロジを所有する同じチームによって構築されていますが、まったく新しいテクノロジ基盤の上に構築されていますが、Service Bus &rsquo; の名前付け機能と探索機能、および使い慣れた管理プロトコル画面と統合し、Windows Azure AppFabric Access Control サービスの最新リリースによるフェデレーションアクセス制御を許可します。 &nbsp;</p>  <h2>キュー</h2>  <p>Service Bus キューは、レプリケートされた永続的なストアによってサポートされる新しいメッセージングインフラストラクチャに基づいています。 </p>  <p>各キューは、この CTP で最大 100 MB のメッセージコンテンツを保持できます。これは、サービスが運用環境に入るときに少なくとも1つのレベルまで拡張することが予想されるクォータです。 メッセージには、最長有効期間が適用されていないユーザー定義の有効期間があります。</p>  <p>個々のメッセージのサイズは 256 KB に制限されていますが、セッション機能では、セッションが特定のコンシューマーに固定され、任意のサイズのペイロードのチャンキングが有効になるように、関連するメッセージの無制限のサイズのシーケンスを作成できます。 また、セッション状態機能では、セッションからのメッセージを処理する進行状況をトランザクションによって記録できます。また、セッションベースの相関関係もサポートします。つまり、多重化された要求/応答パスを簡単な方法で作成できます。 </p>  <p>キューは、HTTP API と .NET API の両方でのピーク/ロックなどの信頼性の高い配信パターンをサポートします。これは、分散された2フェーズトランザクションのような一般的なメカニズムが困難な場合に、信頼境界を越えた処理の整合性を確保するのに役立ちます。 これに加えて、着信メッセージの重複が組み込まれています。これにより、断続的なネットワークの問題やアプリケーションのクラッシュによってメッセージがキューに記録されているかどうかがわからない場合 &rsquo; に、クライアントはメッセージを再送信することができます。</p>  <p>キューでは、処理できないメッセージや有効期限が切れたメッセージの配信不能機能に加えて、メッセージがスケジュールされた処理順序で受信された場合にメッセージを遅延させることができます。また、メッセージが特定のメッセージに対して待機している間に、処理が進行を許可する必要があります。</p>  <p>キューでは、スケジュールされた配信 &ndash; もサポートしています。つまり、メッセージをキューインフラストラクチャに渡すことができますが、メッセージは事前に定義された特定の時点でのみ利用可能になります。これは、単純なタイマーを構築するための非常に洗練された方法です。 </p>  <h2>トピック</h2>  <p>Service Bus のトピックでは、新しいパブリッシュとサブスクライブの機能のセットを提供しており、Service Bus キュー &ndash; と同じバックエンドインフラストラクチャを基盤としており、キューについて説明したすべての機能を備えています。 </p>  <p>トピックは、キューと同様にシーケンシャルメッセージストアで構成されています。ただし、発行されたメッセージのコピーをコンシューマーに個別に生成できる多く (CTP では最大 2000) の同時実行と永続的なサブスクリプションが許可されています。 </p>  <p>各サブスクリプションでは、サブスクリプションに対してパブリッシュされたシーケンスから選択されたメッセージを指定する単純な式を使用して、一連のルールを定義できます。サブスクリプションでは、すべてのメッセージを選択できます。または、特定の値の範囲内にある特定の値を持つか、特定の値の範囲内にあるメッセージだけを選択できます。 ルールには、メッセージが選択されたときにメッセージのプロパティを変更できるようにするアクションを含めることもできます。これにより、たとえば、特定の条件によってメッセージを選択し、それらのメッセージをセッションで関連付けしたり、パーティション分割キーを使用してメッセージをスタンプしたりすることができます。 </p>  <p>各サブスクリプションによって表されるフィルター処理されたメッセージシーケンスは、前に説明したキューのすべての機能と共に、仮想キューのように機能します。 したがって、サブスクリプションには、すべてのメッセージを取得する単一のコンシューマー、または、最初に提供されたものでメッセージをフェッチする競合コンシューマーのセットを含めることができます。 </p>  <p>いくつかの例に示すように、トピックは、同じ情報を必要とする多くのコンシューマーに分離されたメッセージのファンアウトに最適です。また、ワーカーのパーティション分割されたプールに作業を分散させることができます。これは、イベントドリブンアーキテクチャ実装の優れた基盤となります。 </p>  <p>トピックは、1つのフィルター処理されていないサブスクリプションを設定し、複数の競合コンシューマーがサブスクリプションからメッセージをプルするように設定することによって、いつでもキューと同じように使用できます。 キューに関するトピックの優れた利点は、追加のサブスクリプションをいつでも追加できるようにすることです。これにより、任意の目的のためにメッセージシーケンスで追加のタップを行うことができます。ここでは、入力メッセージの事前処理をログに記録する監査タップが、大きな例です。 </p>  <h2>Access Control の統合</h2>  <p>この新しい CTP フェデレーションと、appfabriclabs.com バージョンの Access Control サービスを使用しています。これは、4月以降利用可能な Access Control &ldquo; V2 &rdquo; サービスと互換性があります。 Access Control &ldquo; V1 &rdquo; を使用した Service Bus フェデレーションの現在の市販バージョン。 </p>  <p>アクセストークンを取得するために Access Control と対話する Service Bus API は変更されていませんが、Access Control &ldquo; V2 &rdquo; の新しいフェデレーション機能をより効果的に活用するための変更が検討されています。 </p>  <p>プログラムによって Service Bus のアクセス制御規則を設定しているお客様は、Access Control サービスのこれら2つのバージョンの管理 api に大きな違いがあることがわかります。 現在の計画では、Service Bus 名前空間に対するカスタムアクセス制御規則を持つ顧客に対して段階的な移行を提供します。移行は、V1 と V2 の両方のバージョンの Access Control Service をサイドバイサイドで運用する場合に、ある程度の期間のオプションとなります。 この移行に関する具体的なガイダンスは、このブログの今週の最初の詳細と共に、今後数か月にわたって公開される予定です。</p>  <h2>何が変更され、何 &rsquo; が来るのでしょうか。</h2>  <p>クラウドで &ndash; これらの機能を提供することは、Service Bus &ndash; で既に利用可能な機能と組み合わせて、クラウドでホストされるアプリケーションとクラウドに対応したアプリケーションに対して、まったく新しい範囲を実現できると考えています。 Service Bus 上に構築されたすばらしいビジネスソリューションを見てきました。お客様からのフィードバック &rsquo; に基づいて、フル機能を備えた一連のメッセージ指向ミドルウェア機能を追加することで、さらに強力なソリューションを構築できることを確信しています。 &nbsp;この記事では、このプレビューに含まれるすべての機能を2011の後半で利用できるようにすることを目的としています。</p>  <p>Service Bus の PDC &rsquo; 10 CTP に追加された Service Bus のリレー機能の負荷分散とトラフィックの最適化機能は延期されており、この ctp では利用できなくなりました。 ただし、 &ldquo; 延期 &rdquo; は削除さ &rdquo; れるわけではなく、近日中にこれらの機能を CTP リリースに戻すこと &ldquo; を計画しています。 &rsquo;これらの機能は、多くのお客様にとってさらに重要であると考えています。 Service Bus バックエンドの非常に重要な部分を変更した場合でも、Service Bus の現在の運用リリースと、この CTP で発表した新しいバージョン &rsquo; との完全な下位互換性があるということです。 この CTP の機能が運用環境に移行するときに、Service Bus の下位互換性を完全に提供するように努めています。これには、既にデプロイされている Microsoft.ServiceBus.dll との下位互換性も含まれます。</p>  <p>.NET 以外のプラットフォームでアプリを作成できるようにするために、今後数週間の間、新しいメッセージング機能用の Java と PHP のサンプルもリリースします。 これらのサンプルは、この CTP リリースの SDK に含まれている Silverlight および Windows Phone chat サンプルに実装されているチャットクライアントのバージョンです。 </p>  <p>最後に、Community Technology Preview の目的は、コミュニティからフィードバックを収集することです。 &nbsp; &nbsp; &nbsp;ご提案、critique、良い点、質問がある場合は、ご連絡ください。 <a target="_blank" href="https://social.msdn.microsoft.com/Forums/en-US/appfabricctp/">https://social.msdn.microsoft.com/Forums/en-US/appfabricctp/</a> &nbsp;</p>  <p>私にとっては、私 &rsquo; に知らせることも @clemensv できます。</p>  <p>&nbsp;</p>  <p>Service Bus チームの場合は、</p>  <p>Clemens Vasters<br>主要な技術リーダー<br>Windows Azure AppFabric Service Bus</p>
