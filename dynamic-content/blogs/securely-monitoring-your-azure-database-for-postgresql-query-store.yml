### YamlMime:Yaml
ms.openlocfilehash: 47f55a2dfb84afd14648f3085034f7d011e3dce6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892647"
Slug: securely-monitoring-your-azure-database-for-postgresql-query-store
Title: セキュリティで保護されたAzure Database for PostgreSQL クエリ ストア
Summary: 数か月前に、メトリックに関するアラートのベスト プラクティスを、Azure Database for PostgreSQL。 Azure Database for PostgreSQL で特定の主要メトリックを監視する方法を説明できたのですが、アプリケーションが大きく依存しているクエリのパフォーマンスを監視してアラートを生成する方法については説明していけなかった
Content: >-
  <p>数か月前に、メトリック <a href="https://azure.microsoft.com/en-us/blog/best-practices-for-alerting-on-metrics-with-azure-database-for-postgresql-monitoring/" target="_blank">に関するアラートの</a>ベスト プラクティスを、Azure Database for PostgreSQL。 Azure Database for PostgreSQL で特定の主要メトリックを監視する方法を説明できたのですが、アプリケーションが大きく依存しているクエリのパフォーマンスを監視してアラートを生成する方法については説明していけなかったのです。 PostgreSQL データベースとして、PostgreSQL データベースで無期限に実行されているクエリが存在する場合は、状況を調査する必要があります。 これらの実行時間の長いクエリは、データベースの全体的なパフォーマンスを妨げる可能性があります。また、バックグラウンド プロセスでスタックする可能性があります。 このブログ記事では、クエリパフォーマンス関連のメトリックに関するアラートを設定する方法について説明します。この<a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview" target="_blank">Azure FunctionsとAzure Key Vault</a><a href="https://docs.microsoft.com/en-us/azure/key-vault/key-vault-overview" target="_blank">。</a></p>


  <h2>データのクエリ ストア?</h2>


  <p>クエリ ストアは、2018 年Azure Database for PostgreSQLの初めに<a href="https://azure.microsoft.com/en-us/updates/preview-of-query-store-for-azure-database-for-postgresql/" target="_blank"></a>発表された機能で、時間の渡るクエリのパフォーマンスをシームレスに追跡できます。 これにより、実行時間が最も長く、リソースを大量に消費するクエリをすばやく見つけ出せ、パフォーマンスのトラブルシューティングが簡単になります。 さまざまなシナリオで &ldquo; クエリ ストアを使用する方法については、ドキュメント「アプリケーションの使用シナリオ」<a href="https://docs.microsoft.com/en-us/azure/postgresql/concepts-query-store-scenarios" target="_blank">を参照クエリ ストア</a>。&rdquo;クエリ ストア有効にすると、クエリ ランタイムと待機統計の履歴が自動的にキャプチャされます。 このデータは、データベースの使用パターンを確認できるよう、時間のと一度に追跡されます。 すべてのユーザー、データベース、クエリに関するデータが Azure Database for PostgreSQL インスタンス内の <strong>azure_sys</strong> という名前のデータベースに格納されます。</p>


  <p>クエリ ストアでは、既定では有効になっていません。 ただし、このドキュメントで&ldquo;詳しく説明されている簡単な手順に従って、サーバーでオプトインする方法は非常に<a href="https://docs.microsoft.com/en-us/azure/postgresql/concepts-query-store" target="_blank">簡単</a>です(「パフォーマンスを監視する」を参照クエリ ストア。&rdquo;クエリ ストア を有効にし、アプリケーションのパフォーマンスを監視した後は、実行時間の長いクエリ、低下したクエリなど、監視するさまざまなメトリックに対してアラートを設定できます。</p>


  <h2>メトリックに対するアラートを設定クエリ ストア方法</h2>


  <p>メトリックの監視に関するほぼリアルタイムのアラートは、クエリ ストア と Azure Functionsを使用してAzure Key Vault。 この<a href="https://github.com/Azure/azure-postgresql/tree/master/samples/query-store/a-single-if-then-this-alert" target="_blank">GitHub</a>は、Azure 関数と、簡単な監視ソリューションをデプロイする PowerShell スクリプトを提供します。これにより、アラートの種類と状況を柔軟に変更できます。</p>


  <p>または、リポジトリを複製してこれを開始点として使用し、シナリオに合わせてコードを変更することもできます。 変更Visual Studioビルドすると、デプロイを完了するために必要な zip ファイルが、ここで説明されているのと同じ方法で自動的にパッケージ化されます。</p>


  <p>このレポポでは、 <strong>DeployFunction</strong> スクリプトによって、アプリケーションの監視として機能する Azure 関数がAzure Database for PostgreSQL クエリ ストア。 クエリ パフォーマンス分析情報によって <a href="https://docs.microsoft.com/en-us/azure/postgresql/concepts-query-store" target="_blank">収集されるデータを理解</a> すると、アラートを生成できるメトリックを特定するのに役立ちます。</p>


  <p>スクリプトまたは関数&#39;変更を加え、必要なパラメーターのみを <strong>DeployFunction </strong>スクリプトに指定しない場合は、次の情報を取得します。</p>


  <ul>
   <li>関数アプリ。</li>
   <li>1 分ごとにトリガーされる PingMyDatabase という関数。</li>
   <li>前回クエリ ストア データがディスクにフラッシュされた後、平均実行時間が 5 秒を超えるクエリを検索するアラート条件。</li>
   <li>アラート条件が満たされた場合の電子メール。インスタンスで実行されたプロセスの一覧と、実行時間の長いクエリの一覧が添付されています。</li>
   <li>データベースへの接続文字列と送信者の電子メール アカウントへのパスワードをそれぞれ保持する<strong> pgConnectionString</strong> と <strong>senderSecret </strong>という名前の 2 つのシークレットを含むキー コンテナー。</li>
   <li>このキー コンテナーのシークレットの Get ポリシーにアクセスできる関数アプリの ID。</li>
  </ul>


  <p>コマンド プロンプトで <strong>DeployFunction を</strong>実行するだけでWindows PowerShellできます。 このスクリプトは、次のコマンドから実行することがWindows PowerShell。 ISE Windows PowerShellを使用すると、一部のマクロが想定通り解決されない可能性があります。エラーが発生する可能性があります。</p>


  <p>次に、このスクリプトによってリソース グループが作成され、Key Vault関数アプリがデプロイされ、アプリ構成設定が更新され、必要なシークレットが設定Key Vaultされます。 デプロイ中の任意の時点で、.\logs フォルダーで使用可能な <strong>ログを表示</strong> できます。</p>


  <p>デプロイが完了したら、 のリソース グループにアクセスしてシークレットを検証Azure portal。 次の図に示すように、 <strong>pgConnString</strong> と <strong>senderSecret という 2 つのシークレット キーが作成されます</strong>。 値を更新する場合は、個々のシークレットを選択できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ff86a552-0a1b-4c80-896d-964df791a080.png"><img alt="Screenshot of two secret keys being created" border="0" height="587" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f64268fb-a941-491f-9ad6-801bdacb8f19.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="2 つのシークレット キーが作成されているスクリーンショット" width="1431"></a></p>


  <p><br>

  アプリの設定で設定された条件SENDMAILIF_QUERYRETURNSRESULTS<strong></strong>、条件が満たされた場合に電子メール アラートを受信します。</p>


  <h2>アラート条件または電子メールのサポート データをカスタマイズする方法</h2>


  <p>既定の展開が完了したら、[プラットフォーム機能] Azure portal [アプリケーションの設定] の順に<strong></strong>選択して設定<strong>を更新できます</strong>。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f26a5c0-1dfb-48d7-a146-f8ab66c5dd2d.png"><img alt="Screenshot of Platform features page" border="0" height="431" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86e84c0b-5900-4b2a-8b8d-a708972b49b0.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="[プラットフォーム機能] ページのスクリーンショット" width="640"></a></p>


  <p>以下の設定に変更を加え、終了時に保存することで、アタッチする実行間隔、メールの送信、条件、またはサポート データを変更できます。</p>


  <p>または、単純に <strong>az cli を使用して</strong> 、次のようにこれらの設定を更新することもできます。</p>


  <pre>

  $cronIntervalSetting=&quot;CronTimerInterval=0 */1 * * * *&quot;


  az functionapp config appsettings set --resource-group yourResourceGroupName --name yourFunctionAppName --settings $cronIntervalSetting</pre>


  <p>または</p>


  <pre>

  az functionapp config appsettings set --resource-group $resourceGroupName --name $functionAppName --settings &quot;SENDMAILIF_QUERYRETURNSRESULTS=select * from query_store.qs_view where mean_time &gt; 5000 and start_time &gt;= now() - interval &#39;15 minutes&#39;&quot;</pre>


  <p>デプロイ後に関数アプリの設定を更新するか、デプロイの前に <strong>DeployFunction.ps1</strong> で対応する値を更新することで、監視とアラートを行える状況の一般的なケースを次に示します。</p>


  <table border="1" cellpadding="0" cellspacing="0">
   <tbody>
    <tr>
     <td valign="top" width="119">
     <p><strong>Case</strong></p>
     </td>
     <td valign="top" width="286">
     <p><strong>関数アプリの設定名</strong></p>
     </td>
     <td valign="top" width="217">
     <p><strong>値の例</strong></p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="119">
     <p>クエリ3589441560過去 <i>15 分間に平均 x</i> ミリ秒を超える時間がかかる</p>
     </td>
     <td valign="top" width="286">
     <p>SENDMAILIF_QUERYRETURNSRESULTS</p>
     </td>
     <td valign="top" width="217">
     <p>query_store.qs_view から * を選択します。query_id = 3589441560 と mean_time &gt; x と start_time &gt;= now() - 間隔 &#39;15 分&#39;</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="119">
     <p>キャッシュが設定されたクエリのヒット率が 90% 未満</p>
     </td>
     <td valign="top" width="286">
     <p>SENDMAILIF_QUERYRETURNSRESULTS</p>
     </td>
     <td valign="top" width="217">
     <p>select * 、 shared_blks_hit / nullif(shared_blks_hit + shared_blks_read, 0) AS as cache_hit from query_store.qs_view where shared_blks_hit / nullif(shared_blks_hit + shared_blks_read, 0) &lt; 0.90</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="119">
     <p>平均実行時間が x ミリ秒を超えるクエリ</p>
     </td>
     <td valign="top" width="286">
     <p>SENDMAILIF_QUERYRETURNSRESULTS</p>
     </td>
     <td valign="top" width="217">
     <p>select * from query_store.qs_view where mean_time &gt; x and start_time &gt;= now() - interval &#39;15 minutes&#39;</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="119">
     <p>アラートの条件が満たされた場合は、進行中の自動バキューム操作が発生した場合は、実行中のプロセスを一覧表示し、結果を電子メールに添付します</p>
     </td>
     <td valign="top" width="286">
     <p>LIST_OF_QUERIESWITHSUPPORTINGDATA</p>
     </td>
     <td valign="top" width="217">
     <p>{&ldquo;count_of_active_autovacuum pg_stat_activity:&rdquo; position(&#39;autovacuum:&#39; IN query) = 1 &ldquo;,&quot;list_of_processes_at_the_time_of_alert&quot;:&quot;select now()-query_start as Running_Since,pid,client_hostname,client_addr, usename, state, left(query,60) as query_text from pg_stat_activity&quot;&rdquo;}</p>
     </td>
    </tr>
   </tbody>
  </table>


  <h2>これはどのくらいのセキュリティで保護されていますか?</h2>


  <p>このスクリプトでは、シークレットをデータ ストアに格納するメカニズムKey Vault。 シークレットは、転送中および保存中に暗号化されるのでセキュリティで保護されます。 ただし、関数アプリはネットワークをKey Vaultにアクセスします。 これを回避し、バックボーンを介して仮想ネットワーク (VNet) 経由でシークレットにアクセスする場合は、関数アプリと Key Vault の両方に VNet を構成する必要があります。 関数アプリの VNet サポートはプレビュー中であり、現在、選択した Azure リージョンで利用できます。 適切なデプロイ シナリオがサポートされている場合は、変更に対応するためにこのスクリプトを見直す場合があります。 それまでは、以下のセットアップを実行するために VNet を手動で構成する必要があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1a1214b8-224d-4d2b-991e-b3eadde0a0f1.png"><img alt="Flowchart display of manually configruing a VNet" border="0" height="457" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0699fc02-1005-4d81-8783-9873c1b0e008.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="VNet を手動で構成するフローチャートの表示" width="640"></a></p>


  <p>お客様からのフィードバックをお寄せください。 PostgreSQL&rsquo; 上の クエリ ストア に関するフィードバック、またはクエリのパフォーマンスに関する監視とアラートがある場合は、Azure Database for PostgreSQL チームにお問 <a href="mailto:AzureDatabaseforMySQLPostgreSQL@service.microsoft.com">い合わせください</a>。</p>


  <h2>謝辞</h2>


  <p>スクリプトを開発し、この投稿に貢献データ科学者、シニア コミュニティの Korhan Ileri 氏に感謝します。 パートナーチームのソフトウェア エンジニアである Tosin Adewale とAzure CLI密接に提携しています。</p>
