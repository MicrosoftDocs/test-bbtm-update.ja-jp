### YamlMime:Yaml
ms.openlocfilehash: a082bfa41c686d1147038aaf9ac9244ec4faebb3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910632"
Slug: programmatically-changing-the-firewall-settings
Title: プログラムによるファイアウォールの変更設定
Summary: '[この記事は SQL Azure チームによって提供されました。]SQL Azure には、認証ログインとパスワード SQL、および IP アドレスによるアクセスを制限するサーバー側ファイアウォールという2種類のアクセス制御があります。'
Content: "<p>[この記事は SQL Azure チームによって提供されました。]</p><p>SQL Azure には、SQL 認証ログインとパスワード、および IP アドレスによるアクセスを制限するサーバー側ファイアウォールという2種類のアクセス制御があります。 このブログ投稿では、ファイアウォール設定をプログラムで変更する方法について説明します。 プログラムによるログインの作成の詳細については、こちらのブログ投稿を参照してください。</p>  <h2>ファイアウォール</h2>  <p>SQL Azure は、SQL Azure サーバーの<a href=\"https://msdn.microsoft.com/en-us/library/ee621782.aspx\">ファイアウォール</a>を維持し、クライアントの IP アドレスへのアクセス権を付与しない限り、だれでもサーバーに接続できないようにします。 これを行う最も一般的な方法は、 <a href=\"https://sql.azure.com/\">SQL Azure ポータル</a>を使用することです。 SQL Azure を使用した場合は、ポータルを使用してファイアウォール規則を作成しました。クライアント IP アクセスが許可されるまで、SQL Azure に接続することはできません。 ポータルのスクリーンショットを次に示します。</p>  <p><a href=\"\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image001\" border=\"0\" alt=\"clip_image001\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8867.clip_5F00_image001_5F00_thumb_5F00_5ED1BD79.png\" width=\"660\" height=\"338\"></a></p>  <h2>プログラムによるファイアウォール規則の変更</h2>  <p>SQL Azure を使用すると、SQL Azure への接続を使用して master データベースで Transact SQL を実行して、ファイアウォールルールを変更できます。 ファイアウォールルールを追加するには、システム拡張ストアドプロシージャ: <b>sp_set_firewall_rule</b>を使用します。 次に示すのは、1つの IP アドレスに対してファイアウォール規則を作成するための SQL の例です。</p>  <pre class=\"csharpcode\"><span class=\"kwrd\">exec</span> sp_set_firewall_rule N<span class=\"str\">'Wayne Berry'</span>,<span class=\"str\">'206.63.251.3'</span>,<span class=\"str\">'206.63.251.3'</span></pre>      <p>Microsoft サービスと Windows Azure に対してファイアウォールを有効にする例を次に示します。</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">exec</span> sp_set_firewall_rule N<span class=\"str\">'MicrosoftServices'</span>,<span class=\"str\">'0.0.0.0'</span>,<span class=\"str\">'0.0.0.0'</span></pre>      <p>すべてのファイアウォール規則には一意の名前を指定し、大文字と小文字は区別しないことに注意してください。 ファイアウォール規則の一覧を取得するには、 <b>sys.firewall_rules</b>ビューを呼び出します。 次に、Transact-sql SQL の例を示します。</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">select</span> * <span class=\"kwrd\">from</span> sys.firewall_rules</pre>      <p>このコマンドの出力は SQL Azure サーバーで実行されます (上記のポータルのスクリーンショットを参照してください)。 SQL Server Management Studio に表示されるのは次のようになります。</p>    <p><a href=\"\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image002\" border=\"0\" alt=\"clip_image002\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6330.clip_5F00_image002_5F00_thumb_5F00_2088F308.png\" width=\"648\" height=\"109\"></a></p>    <p><b>Sp_delete_firewall_rule</b>システムの拡張ストアドプロシージャを使用して、ファイアウォールルールを削除することもできます。</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">exec</span> sp_delete_firewall_rule N<span class=\"str\">'Wayne Berry'</span></pre>      <p>これらのファイアウォール拡張ストアドプロシージャの詳細については、 <a href=\"https://msdn.microsoft.com/en-us/library/ee621782.aspx\">こちら</a>を参照してください。</p>    <h3>セキュリティに関する考慮事項</h3>    <p>サーバーレベルプリンシパルログインだけが、master データベースに接続されているときに、SQL Azure サーバーのファイアウォール設定を構成できます。 これは、SQL Azure ポータルの管理者ログインと同じログインです。</p>    <p>別の注意点として、SQL Azure に接続する前に少なくとも1つのファイアウォール規則が必要です。 <b>sp_set_firewall_rule</b>とその他の拡張ストアドプロシージャを実行するには、その接続が必要です。</p>    <h2>コマンドラインから</h2>    <p>Windows コマンドラインから sqlcmd.exe を使用して、SQL Azure に対して transact-sql SQL を実行できます。 sqlcmd.exe の使用方法の詳細については、このブログの投稿を参照してください。 コマンドラインから SQL Azure に対して transact-sql SQL を実行できるため、上記のファイアウォールコマンドをコマンドラインから SQL Azure に対して実行できます。 コマンドラインを使用すると、データベース作成スクリプト (このブログ記事を参照)、スキーマの作成、およびスキーマの同期に加えて、ファイアウォールルールをスクリプト化することができます。</p>    <h2>Windows Azure</h2>    <p>azure では、ADO.NET を使用して SQL Azure に対して transact-sql SQL を実行できます。つまり、SQL Azure azure から Windows にファイアウォールルールをプログラムで追加することができます。 Windows Windows azure を使用してこれを行うことの利点の1つは、Windows azure \"が呼び出し元のクライアント側の IP アドレスを認識していることです。</p>    <p>1つの方法として、Windows の Azure web ロールで web ページを呼び出したすべてのユーザーを許可するシンプルなインターフェイスを作成し、その IP アドレスを SQL Azure ファイアウォール規則に追加することで、SQL Azure アカウントにアクセスできるようにします。 <b>選択した認証方法を使用して、呼び出し元が Windows Azure によって認証されたことを確認する必要があります。</b>この手法により、PowerPivot または WinForms ユーザーは、web ページへの要求を行うことによって、SQL Azure への直接アクセスを許可することができます。 PowerPivot を使用した SQL Azure への接続の詳細については、こちらを Winforms。</p>    <p>作業を開始するための簡単なコード例を次に示します。</p>    <pre class=\"csharpcode\">String clientIPAddress = Request.UserHostAddress;    <span class=\"kwrd\">using</span> (SqlConnection sqlConnection =       <span class=\"kwrd\">new</span> SqlConnection(ConfigurationManager.ConnectionStrings[&quot;SqlAzureMaster&quot;].ConnectionString))  {      sqlConnection.<span class=\"kwrd\">Open</span>();        <span class=\"kwrd\">using</span> (SqlCommand sqlCommand =          <span class=\"kwrd\">new</span> SqlCommand(&quot;sp_set_firewall_rule&quot;, sqlConnection))      {          sqlCommand.CommandType = System.<span class=\"kwrd\">Data</span>.CommandType.StoredProcedure;            sqlCommand.<span class=\"kwrd\">Parameters</span>.<span class=\"kwrd\">Add</span>(&quot;@name&quot;, SqlDbType.NVarChar).<span class=\"kwrd\">Value</span>               = clientIPAddress;          sqlCommand.<span class=\"kwrd\">Parameters</span>.<span class=\"kwrd\">Add</span>(&quot;@start_ip_address&quot;, SqlDbType.<span class=\"kwrd\">VarChar</span>).<span class=\"kwrd\">Value</span>               = clientIPAddress;          sqlCommand.<span class=\"kwrd\">Parameters</span>.<span class=\"kwrd\">Add</span>(&quot;@end_ip_address&quot;, SqlDbType.<span class=\"kwrd\">VarChar</span>).<span class=\"kwrd\">Value</span>               = clientIPAddress;              sqlCommand.ExecuteNonQuery();      }  }</pre>      <h2>まとめ</h2>    <p>質問、懸念事項、コメントがありますか。 これらを下に投稿してください。</p>"
