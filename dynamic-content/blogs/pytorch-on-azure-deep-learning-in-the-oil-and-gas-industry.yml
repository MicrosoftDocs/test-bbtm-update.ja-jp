### YamlMime:Yaml
ms.openlocfilehash: 50d60762e15cdb86505da6f27e4db48450125c5e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895311"
Slug: pytorch-on-azure-deep-learning-in-the-oil-and-gas-industry
Title: 'Azure 上の PyTorch: 石油およびガス業界でのディープラーニング'
Summary: '石油とガスのドリルダウンは、地球上で最も危険な仕事の1つです。 ワーカーが公開されるのは、小規模な機器の誤動作から、火災によって火災が発生したときまでのイベントのリスクにさらされます。 '
Content: >-
  <p><em>このブログ投稿は、J &uuml; rgen Weichenberger、最高データ科学者、Accenture、Mathew Salvaris、シニアデータサイエンス、Microsoft によって共同作成されました。</em></p>


  <p>石油とガスのドリルダウンは、地球上で最も危険な仕事の1つです。 ワーカーが公開されるのは、小規模な機器の誤動作から、火災によって火災が発生したときまでのイベントのリスクにさらされます。 幸いなことに、予測資産のメンテナンスにおけるディープラーニングの適用は、自然な災害を防ぐのに役立ちます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cb710db5-eafb-4a2a-baee-daa3d5905c57.png"><img alt="image" border="0" height="307" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bb5be106-7f81-4d8c-86cd-7584fe16aa42.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="絵" width="624"></a></p>


  <p>センサーと IoT デバイスにより、お客様の機器に関してこれまで以上に多くの情報が提供されていますが、このような致命的なイベントを防ぐのに役立つように、データの処理方法についても取り組んでいます。 ディープラーニングが登場して &rsquo; います。 複数のソースからのデータを使用して予測モデルをトレーニングすることで、石油およびガス企業が差し迫った災害を予測し、積極的なアプローチに従うことができます。</p>


  <p>PyTorch のディープラーニング Microsoft Azure フレームワークを使用することにより、Accenture は、このような予測資産のメンテナンスソリューションを実装する、石油およびガスの大手企業を支援します。 このソリューションは、スタッフと環境を保護するために長い時間を要することになります。</p>


  <h2>予測資産のメンテナンスとは</h2>


  <p>予測資産のメンテナンスは、化学プラントのデジタル変革の中核となる要素です。 これは、大量のコスト効率の高いセンサー、データ処理の増加、自動化機能、予測分析における進歩によって実現されています。 リアルタイムデータと履歴データの両方の情報を、シンプルで、アクセス可能で実用的な洞察に変換する必要があります。 これは、異常を引き起こす可能性がある不具合を早期に検出して削除できるようにするためです。 たとえば、パイプを接続する封印で早期欠陥を検出するだけでは、ガスタービン全体を壊滅的に折りたたむ可能性のある障害を防ぐことができます。</p>


  <p>内部的には、予測資産のメンテナンスによって、条件ベースの監視テクノロジ、統計プロセス制御、および機器のパフォーマンス分析を組み合わせることで、プラントにあるさまざまなソースからのデータを明確かつ直感的に視覚化できるようにします。 これにより、運用と機器をより適切に監視し、プロセスを最適化し、より適切に制御し、エネルギー管理を改善することができます。</p>


  <p>このプロセスの中核となる予測分析では、プラントのオペレーターに対して、将来の確実な確実性については何も知られていないことに注意してください。 代わりに、信頼性が許容されるレベルで将来発生する可能性があることを予測します。 また、what-if &rdquo; シナリオや、リスクと営業案件の評価を提供 &ldquo; することもできます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3c503d13-e591-457e-96de-a8d6e1d438ec.png"><img alt="Asset maintenance maturity matrix" border="0" height="443" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d18cc1c1-ded8-431f-9a38-fbedd5c16a51.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="資産のメンテナンスの成熟度マトリックス" width="750"></a></p>


  <p align="center"><em>図 1 &ndash; 資産のメンテナンスの成熟度マトリックス (ソース: Accenture)</em></p>


  <h2>石油とガスの課題</h2>


  <p>イベント予測は、予測資産の保守における重要な要素の1つです。 ほとんどの予測問題では、各パターンを識別するためのモデルを作成するための十分な例があります。 残念ながら、石油やガスなどの特定の業界では、すべてが障害を回避するように調整されていますが、このような障害パターンについては、その後の例ではめったにありません。 これは、ほとんどの標準モデリングアプローチでは、経験のある人間よりもパフォーマンスが優れているか、まったく動作しないことを意味します。</p>


  <h2>PyTorch と Azure を使用した Accenture &rsquo; s ソリューション</h2>


  <p>少数の障害例が存在するだけでなく、さまざまな方法でシリーズや検査データを活用できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/575ae10c-12a3-40e4-8a96-499435169ead.png"><img alt="Approach for Predictive Maintenace" border="0" height="750" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/66a0f72d-2e2e-483e-bc73-69b825bee39d.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="予測メンテナンスのアプローチ" width="1333"></a></p>


  <p align="center"><em>図 2 &ndash; 予測メンテナンスのアプローチ (ソース: Accenture)</em></p>


  <p>ステージ1でデータを準備した後、2フェーズのディープラーニングソリューションがステージ2で PyTorch を使用して構築されました。 1つ目の方法として、定期的なニューラルネットワーク (RNN) は、ステージ2のフェーズ1である長期間の短期メモリ (LSTM) アーキテクチャと組み合わせてトレーニングされています。 ソリューションで使用されるニューラルネットワークアーキテクチャは Koprinkova-Hristova et al 2011 および Aydin と Guldamlasioglu 2017 によって設計されました。 この RNN timeseries モデルでは、重要な封印の気温などの重要な変数が予測されます。 これらの予測は、変数が安全な範囲外であることを識別するために分類子アルゴリズム (ランダムフォレスト) に取り込まれます。その場合、アルゴリズムは、専門家が調査して対処できる潜在的な原因の順位を生成します。 これにより、専門家は、潜在的な障害の根本原因に対処することができます。</p>


  <p>次に示すのは、ソリューションのトレーニングと実行に使用されたシステムの図です。&nbsp;&nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/45491e65-6f7b-44a2-b888-8443ed997ff4.png"><img alt="System Architecture" border="0" height="750" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7b734740-0799-437d-8534-60d04af45325.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="システムアーキテクチャ" width="1333"></a></p>


  <p align="center"><em>図 3-システムアーキテクチャ</em></p>


  <p>上記のアーキテクチャは、モデル化、トレーニング、および複雑な機械学習ワークフローの実行における最大限の柔軟性が、Microsoft Azure を使用していることを確認するために選択されました。 実装時に、これらの要件を満たすサービスは HDInsights とデータサイエンス Virtual Machines (DSVM) でした。 プロジェクトが現在実装されている場合は、データ処理のために HDInsights または<a href="https://azure.microsoft.com/en-us/services/databricks/" target="_blank">Azure Databricks</a>のトレーニング/推論に<a href="https://azure.microsoft.com/en-us/services/machine-learning-service/" target="_blank">Azure Machine Learning サービス</a>が使用されています。</p>


  <p>PyTorch は、計算実行のグラフを設計する際の柔軟性が非常に高く、他のディープラーニングフレームワークと同様に静的な計算の実行グラフにバインドされていないために使用されました。 PyTorch のもう1つの重要な利点は、標準的な python 制御フローを使用でき、すべてのサンプルでモデルを異なることができることです。 たとえば、ツリー構造の Rnn は、労力を費やすことなく作成できます。 また、PyTorch では Python デバッグツールを使用できるため、変数やグラデーションなどを検査するための任意の時点でプログラムを停止できます。 この柔軟性は、トレーニングとチューニングのサイクル中に非常に有益でした。</p>


  <p>最適化された PyTorch ソリューションでは、他のディープラーニングフレームワークに比べて20% 以上のトレーニング時間が短縮され、推論が12% 高速になりました。 これらの機能強化は、チームが作業していた時間の重要な環境において非常に重要でした。 テストされたバージョンは PyTorch 0.3 であることに注意してください。</p>


  <p>このプロジェクトで PyTorch を使用する利点の概要:</p>


  <ul>
   <li>トレーニング時間 <ul>
    <li>概要を示す Azure アーキテクチャで PyTorch を使用して、平均トレーニング時間を22% 削減。</li>
   </ul>
   </li>
   <li>デバッグ/バグの修正 <ul>
    <li>動的計算実行グラフと Python 標準機能の組み合わせにより、開発時間全体が10% 削減されました。</li>
   </ul>
   </li>
   <li>グラフ <ul>
    <li>Power BI に直接統合することで、1日のうちに高いエンドユーザーの同意が有効になります。</li>
   </ul>
   </li>
   <li>分散トレーニングの使用経験 <ul>
    <li>動的な計算実行グラフは、フロー制御と組み合わせて使用することで、単純な分散トレーニングモデルを作成し、全体的なトレーニング時間を大幅に改善することができました。</li>
   </ul>
   </li>
  </ul>


  <h2>最終的なモデルはどのように Accenture 運用化れましたか?</h2>


  <p>スケーラビリティと運用化は、プロジェクトの1日目からの主要な設計上の考慮事項でした。顧客は、他の複数の資産に対してプロトタイプをスケールアウトする必要がありました。 その結果、システムアーキテクチャ内のすべてのコンポーネントが条件として選択されました。 さらに、 <a href="https://azure.microsoft.com/en-us/services/data-factory/" target="_blank">Azure Data Factory</a>を使用してデータソースを追加できるようにしたいと考えています。 <a href="https://docs.microsoft.com/en-us/azure/machine-learning/service/" target="_blank">Azure Machine Learning サービス</a>とそのモデル管理機能を使用して、最終的なモデルを運用化しました。 次の図は、使用されるデプロイワークフローを示しています。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a54066e8-8610-49e8-8e03-a71169ef3582.png"><img alt="Deployment workflow" border="0" height="567" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/80181ee0-242b-4e64-9f17-eea009b2ee04.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="配置ワークフロー" width="1593"></a></p>


  <p align="center"><em>図 4 &ndash; 配置ワークフロー</em></p>


  <p>デプロイモデルは、次に示すように、継続的インテグレーション/継続的デリバリー (CI/CD) ワークフローにも統合されました。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8c519593-123c-4035-9f52-45f28a6a071c.png"><img alt="CI CD workflow" border="0" height="438" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d93f4244-f7ad-42db-acd2-660205468424.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="CI CD のワークフロー" width="640"></a></p>


  <p align="center"><em>図 5 &ndash; CI/CD ワークフロー</em></p>


  <h2>Azure での PyTorch: 連携が向上</h2>


  <p><a href="https://azure.microsoft.com/en-us/overview/ai-platform/" target="_blank">AZURE AI</a>オファリングと<a href="https://pytorch.org/" target="_blank">PyTorch</a>の機能を組み合わせることで、プロジェクトで使用されるディープラーニングアーキテクチャをトレーニングし、迅速に反復処理するための非常に効率的な方法になります。 これらの選択により、トレーニング時間が大幅に短縮され、データ科学者の生産性が向上しました。</p>


  <p>Azure は、あらゆる言語、フレームワーク、任意の開発ツールを使用して、エンタープライズレベルの AI を開発者に進化させることを約束しています。 お客様は、Azure AI オファリングを machine learning ライフサイクルのどの部分にも簡単に統合して、プロジェクトを大規模にとすることができます。その際、1つのツールやプラットフォームにロックをかける必要はありません。</p>
