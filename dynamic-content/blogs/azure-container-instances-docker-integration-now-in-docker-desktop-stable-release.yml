### YamlMime:Yaml
ms.openlocfilehash: 14ba2b0270779691185d92b8f8951c34fe82c4d2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896604"
Slug: azure-container-instances-docker-integration-now-in-docker-desktop-stable-release
Title: Azure Container Instances - Docker Desktop 安定版リリースでの Docker 統合の開始
Summary: 本日の Docker Desktop の新しい安定したリリースには、Azure Container Instances - Docker 統合が含まれています。 最新リリースをインストールまたは更新し、コンテナーのデプロイを開始して、Azure Container Instances (ACI) を開始します。
Content: >-
  <p>Docker&rsquo; Desktop の新しい安定したリリースには、Docker 統合 - Azure Container Instances <a href="https://docs.docker.com/engine/context/aci-integration/" target="_blank">が含まれています</a>。 最新リリースをインストールまたは更新し、コンテナーのデプロイを開始して、 <a href="https://azure.microsoft.com/en-us/services/container-instances/" target="_blank">Azure Container Instances (</a> ACI) を開始します。</p>


  <h2>Azure Docker の統合</h2>


  <p>Azure Docker 統合を使用すると、ローカル開発の同じ Docker コマンド ライン (CLI) コマンドを使用して、Azure Container Instances (ACI) にサーバーレス コンテナーをデプロイできます。 単 <code>docker run</code> 一コンテナーを起動する場合、 <code>docker compose up</code> または単一コンテナー ファイルで定義された複数コンテナー アプリケーションDocker Composeします。 また、ログを表示し、シェルをアタッチし、それらのコンテナーがローカルで実行されている場合と同様に、ACI で実行されているコンテナーに対して他のアクションを実行することもできます。 さらに、Compose を使用して、ローカルコンテキストまたは ACI コンテキストで <a href="https://docs.docker.com/engine/context/aci-integration/#using-azure-file-share-as-volumes-in-aci-containers" target="_blank">Azure File Share</a> ボリューム マウントをコンテナーにアタッチできます。</p>


  <p>Azure Container Instances (ACI) を使用すると、インフラストラクチャを設定することなく、クラウドで開発/テストコンテナーまたは運用コンテナーを実行できます。 ACI は、運用オーバーヘッドを最小限に抑え、クラウドでコンテナーをすばやく実行する必要がある開発者に対応するため、インフラストラクチャやプラットフォーム管理のオーバーヘッドはありません。 ACI は、運用ワークロードのニーズに合った他の Azure サービス (Azure File Share ボリュームなど) と統合して、データを保持し、Log Analytics を監視ニーズに対応します。 ACI には、1 秒後ではなく、コンテナーの<a href="https://azure.microsoft.com/en-us/pricing/details/container-instances/" target="_blank"></a>実行中に CPU&nbsp; とメモリに対する課金のみを行う、移動料金モデルがあります。&nbsp;</p>


  <h2>Docker 拡張機能 for&nbsp; Visual Studio Code</h2>


  <p>Docker Desktop に更新プログラムをリリースする Docker に加えて、Microsoft は Docker 拡張機能の更新プログラムをリリース<a href="https://aka.ms/VSCodeDocker" target="_blank">Visual Studio Code</a>。 拡張機能の新しい 1.6 リリースでは、Azure Container Registry (ACR) または <a href="https://azure.microsoft.com/en-us/services/container-registry/" target="_blank">Docker Hub</a> からイメージを右クリックし、Azure Container Instances (ACI) に直接デプロイ<a href="https://hub.docker.com/" target="_blank"></a>できます。</p>


  <p>次のアニメーションに示す通り、拡張機能によって、最初に既存の ACI コンテキストを選択するか、新しい ACI コンテキストを作成するように求めるメッセージが表示されます。 その後、このコンテキストがアクティブ コンテキストとして設定され、ツールは <code>docker run</code> コマンドを使用して ACI 内のコンテナーを起動します。 コンテナーを実行する前に、拡張機能によってイメージが検査され、ポートを開く必要があるかどうかを判断します。 これにより、実行中のコンテナーに予想されるポートからアクセスできます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d2407716-61fd-4dbb-b8e3-779aa101c967.gif"><img alt="Deploy a container to Azure Container Instances (ACI)" border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9b424351-84c1-4f45-b23f-e34a18d24a9f.gif" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1024"></a></p>


  <p>この新機能は、過去の Docker Azure Container Instancesリリースで追加した他の ACI (ACI) 機能に加えて追加されています。 この最新リリースでは、ACI 内からコンテナーを作成、デプロイ、診断するための完全なツールセットがVisual Studio Code。</p>


  <h2>今すぐ試す</h2>


  <p>&rsquo;まだ行っていない場合は、<a href="https://aka.ms/VSCodeDocker" target="_blank">必ず Visual Studio Code Docker</a> 拡張機能と <a href="https://aka.ms/dockerdesktopstable" target="_blank">Docker Desktop</a> の安定したリリースをダウンロードし、Docker CLI または Visual Studio Code を使用してコンテナーを Azure Container Instances (ACI) にデプロイします。 始めるのに最適な方法は、Azure Container Instances <a href="https://aka.ms/ACIDockerQuickstart" target="_blank">(ACI) クイック スタートを使用する方法です</a>。 以下のコメントはそのままにするか、レポ<a href="https://github.com/microsoft/vscode-docker/issues" target="_blank">ポから問題を送信GitHub勧めます</a>。</p>
