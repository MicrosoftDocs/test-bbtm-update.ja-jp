### YamlMime:Yaml
ms.openlocfilehash: 608f46ee208f243f5000595fdd09fe4960107ef6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904824"
Slug: dear-spark-developers-welcome-to-azure-cognitive-services
Title: 'Spark 開発者の皆さん: Azure Cognitive Services へようこそ'
Summary: 現在、Spark AI Summit 2019 では、テラバイト規模で Azure Cognitive Services を簡単に活用できる新しいモデル セットを SparkML エコシステムに導入して、楽しくお知らせします。
Content: >-
  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a55d1819-a3ff-4229-8aad-723064dba27b.png"><img alt="Azure Cognitive Services on Spark" border="0" height="156" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dd10b978-1bcc-4d0a-84ee-b1d2223cfa85.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Cognitive Services Spark で使用する" width="451"></a></p>


  <p><i>この投稿は、Mark Hamilton、Sudarpark Raghunathan、Chris Hoder、MMLSpark の共同作成者によって共同執筆されました。</i></p>


  <h2>データの機能をAzure Cognitive Servicesのビッグ データ ワークフロー<a href="https://databricks.com/spark/about">に統合&trade;Apache Spark</a></h2>


  <p>現在、Spark + AI Summit 2019 では、&#39;テラバイト規模で Azure Cognitive Services を簡単に活用できる新しいモデル セットを SparkML エコシステムに導入しました。 開発者は、数行のコードのみを使用して、Spark ML の既存の分散機械学習パイプライン内にコグニティブ サービスを埋め込ML。 さらに、これらの貢献により、Spark ユーザーはディープ ネットワーク、<i></i>勾配ブースト ツリー、および任意の SparkML モデルと共にサービスをチェーンまたはパイプライン化し、これらのハイブリッド モデルをエラスティックおよびサーバーレス分散システムに適用できます。</p>


  <p>画像認識から、音声認識、翻訳、テキスト読み上げを使用した物体検出まで、Azure Cognitive Services を使用すると、開発者は任意のシナリオでアプリケーションにインテリジェントな機能を簡単に追加できます。 現在まで、100 万を超える開発者が、アプリケーションの画期的なエクスペリエンスを加速Cognitive Servicesを既に発見して試みてきています。</p>


  <h2>Azure Cognitive ServicesのApache Spark&trade;</h2>


  <p>Cognitive Services Spark を使用すると、分散型コンピューティング エコシステムを使用して大規模な Azures&rsquo; Intelligent Services Apache Spark<b>&trade;</b> 使用できます。 <a href="https://azure.microsoft.com/en-us/services/kubernetes-service/"></a>Spark Cognitive Services は、Azure Databricks、<a href="https://azure.microsoft.com/en-us/services/databricks/"><b></b></a><a href="https://github.com/Azure/aztk">azure Distributed Data Engineering Toolkit</a><a href="https://github.com/Azure/aztk">(</a>&nbsp;AZTK) on Azure Batch、Spark <a href="https://cloudblogs.microsoft.com/sqlserver/2018/09/24/sql-server-2019-preview-combines-sql-server-and-apache-spark-to-create-a-unified-data-platform/">in SQL Server</a>、Azure Kubernetes Service 上の Spark クラスターなど、任意の <b>Spark 2.4 </b> クラスターと互換性があります。 さらに、PySpark、Scala、Java、R (ベータ) で慣用的なバインドを提供します。</p>


  <p>Cognitive Services Spark を使用すると、ユーザー&trade;は汎用的なモデルを埋め込み、インテリジェント なモデルを自分の計算とApache SparkにSQLすることができます。 この貢献は、インテリジェントな分散アプリケーションの作成に集中できるよう、低レベルのネットワークの詳細から開発者を引き離す目的で行います。 各 Cognitive Service は SparkML トランスフォーマーなので、ユーザーは既存の SparkML パイプラインにサービスを追加できます。 また、ユーザーが単一のスカラーまたは分散 Spark DataFrame の列でモデルをパラメーター化できる新しい種類の API を SparkML フレームワークに導入します。 この API により、簡潔でありながら強力な fluent クエリ言語が生成されます。これにより、完全な分散パラメーター化が不要になります。 詳細については、セッションを <a href="https://databricks.com/sparkaisummit/north-america/sessions-single-2019?id=124" style="font-size: 13px;">確認してください</a>。</p>


  <h3>次の 3 つのAzure Cognitive Services手順で Spark 上で次のコマンドを使用します。</h3>


  <ol>
   <li><a href="https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-apis-create-account">アカウントを作成Azure Cognitive Servicesする</a></li>
   <li><a href="https://mmlspark.blob.core.windows.net/website/index.html#install">Spark クラスターに MMLSpark をインストールする</a></li>
   <li><a href="https://github.com/Azure/mmlspark/blob/master/notebooks/samples/AzureSearchIndex%20-%20Met%20Artworks.ipynb">ノートブックの例を試す</a></li>
  </ol>


  <h2>コグニティブ サービス コンテナーを使用した低待機時間で高スループットのワークロード</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/46767e28-8944-4504-afd8-23384065aa5a.jpg"><img align="right" alt="Cognitive Services in Containers" border="0" height="281" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed28fc76-d6ed-4f3d-9d5d-01b44376446c.jpg" style="border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" title="Cognitive Services内のデータ" width="171"></a></p>


  <p>Spark 上のコグニティブ サービスは、世界中の任意のリージョンのサービスと互換性があります。ただし、多くのシナリオでは、低接続または接続なし、超低待機時間が必要です。 Spark 上のコグニティブ サービスに取り組むために、最近、いくつかのコグニティブ サービスを <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-container-support">Docker コンテナーとしてリリースしました</a>。 これらのコンテナーを使用すると、クラスターのワーカー ノード上でローカルまたは直接コグニティブ サービスを実行して、待機時間が非常に短いワークロードを実現できます。 埋め込みコグニティブ サービスを使用して Spark クラスターを簡単に作成するために、一般的なコンテナー オーケストレーション プラットフォーム Kubernetes に Spark クラスターをデプロイする Helm <a href="https://github.com/helm/charts/pull/11285">チャート</a> を作成しました。 Spark 上のCognitive Servicesをコンテナーの URL にポイント&rsquo;するだけで、ローカルに移動できます。</p>


  <h2>Spark <em>上</em>の HTTP を使用してApache Spark&trade;に <i><em>any</em></i> Web サービスを追加する</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c85cdd9d-4c79-4ae8-a0a2-9a88fb26f05c.jpg"><img alt="Http on Spark." border="0" height="268" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/20304e6d-12ea-40fe-b5fd-cb4bab7b28a0.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="459"></a></p>


  <p>このCognitive Servicesは、ネットワークを使用してエコシステム間でソフトウェアを共有する 1 つの例にすべの一例です。 Web には、便利なツールを提供し、コードを任意の言語でアクセス可能にするための標準パターンの 1 つとして機能する HTTP(S) Web サービスが充実しています。 私たちの目標は、Spark 開発者が既存の Spark パイプライン内からこの豊富さを利用できる点です。</p>


  <p>この目的を実現するために、HTTP 通信プロトコル全体と Spark サービス間の統合である HTTP on Spark をSQL。 Spark 上の HTTP を使用すると、Spark ユーザーはクラスターの並列ネットワーク機能を利用して、任意のローカル、Docker、または Web サービスを統合できます。 Spark 上の HTTP は、大きなレベルで、任意のフレームワークを Spark エコシステムに統合するためのシンプルで原則的な方法を提供します。</p>


  <p>Spark 上の HTTP を使用すると、ユーザーは SQL 操作、マップ、削減、フィルター、Spark エコシステムのツールを使用して、要求と応答を作成および操作できます。 SparkML と組み合わせると、ユーザーはサービスを一緒にチェーンし、分散マイクロサービス オーケストレーターとして Spark を使用できます。 Spark 上の HTTP は、失敗した要求に対して非同期の並列処理、バッチ処理、調整、指数バックオフを提供し、コア アプリケーション ロジックに集中できます。</p>


  <h2>実際の例</h2>


  <h3>大都市圏のアートの記念ギャラリー</h3>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/165a8356-ee66-4a73-ae4c-48826c3e6e21.jpg"><img alt="Azure Search on Spark for The MET" border="0" height="190" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1aa534dd-136b-45e8-a85c-bda74364178d.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Search on Spark for The MET" width="418"></a></p>


  <p>Microsoft では、Spark 上の HTTP を使用して、さまざまなプロジェクトや顧客に電力を供給しています。 最新 <a href="https://www.ailab.microsoft.com/experiments/gen-studio">の</a> プロジェクトでは、Spark 上の Computer Vision API と Azure Search on Spark を使用して、大都市圏のアート記念ギャラリー (THE MET) の検索可能なデータベースを作成します。 具体的には、 <a href="https://www.metmuseum.org/about-the-met/policies-and-documents/open-access">画像の METs&rsquo; Open Access</a> カタログを読み込み、Computer Vision API を使用して、検索可能な説明を使用してこれらのイメージに並列で注釈を付ける方法について説明します。 また、Spark でのCNTKと <a href="https://spark.apache.org/docs/2.1.0/ml-features.html#locality-sensitive-hashing">SparkMLs&rsquo; Locality Sensitive Hash</a> の実装を使用して、これらのイメージを未来化し、カスタムの逆画像検索エンジンを作成しました。 この作業の詳細については、 <a href="https://www.aka.ms/aiart">AI</a> ラボまたは <a href="https://github.com/Microsoft/GenStudio">GitHub を参照してください</a>。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4071316-ec42-4215-890f-8c54d9e37e8e.jpg"><img alt="Architecture of Azure Search on Spark" border="0" height="156" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f8fdc817-eb91-4865-a01d-06318c8e8a19.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Spark 上の Azure Search のアーキテクチャ" width="467"></a></p>


  <h3>The Snow Leopard Trust</h3>


  <p>私たちは、スパーク上のスノウノウトの人口を追跡して理解するために、Snow <a href="https://www.snowleopard.org/">Snow Trust</a> とCognitive Servicesしました。 始めたのは、Spark 上の画像からスノウのヒノキの画像をプルすることで、花の分類用に完全にラベル付けされたトレーニング データセットBing作成しました。 その後、Spark CNTKと Tensorflow を使用して、詳細分類システムをトレーニングしました。 最後に、SPARK 上の <a href="https://aka.ms/spark">LIME</a> を使用してモデルを解釈し、手で 1 つの境界ボックスを描画することなく、花の分類器を検知器に絞り込んだ。 詳細については、ブログ記事を <a href="https://blogs.technet.microsoft.com/machinelearning/2018/10/03/deep-learning-without-labels/">参照してください</a>。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/96feb495-1dd3-45c9-b5b2-17ed39844a2d.jpg"><img alt="Architecture of Snow Leopard classification" border="0" height="363" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/976fb667-4e3e-42be-abe8-ec84a2425f4c.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="スノウの分類のアーキテクチャ" width="415"></a></p>


  <h2>まとめ</h2>


  <p>数行のコードを使用すると、Azure Cognitive Services のビッグ データ ワークフローへの統合を開始Apache Spark<b>&trade;</b>。 Spark バインディングは高いスループットを提供し、Spark を実行する任意の場所で実行されます。 Spark Cognitive Servicesは、高パフォーマンス、オンプレミス、または低接続のシナリオのためにコンテナーと完全に統合されています。 最後に、Spark 上の任意の Web サービスを操作する一般的なフレームワークを提供しました。 オープン ソース イニシアチブ <a href="https://aka.ms/spark">MMLSpark</a> をCognitive Servicesして、プロジェクトのプロジェクトに対する新しいAzure Databricks。</p>


  <h3>詳細情報</h3>


  <p><a href="https://aka.ms/spark">Web</a></p>


  <p><a href="https://aka.ms/mmlspark">Github</a></p>


  <p><a>電子メール： </a>mmlspark-support@microsoft.com</p>
