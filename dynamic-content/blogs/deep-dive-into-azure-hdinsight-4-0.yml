### YamlMime:Yaml
ms.openlocfilehash: 3cfa0da794216ebb86096c3bf86ff3baf7d4e611
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890448"
Slug: deep-dive-into-azure-hdinsight-4-0
Title: Azure HDInsight 4.0 の詳細
Summary: 'HDInsight 4.0 をパブリックプレビューで利用できるようになったことを発表します。嬉しく思い HDInsight 4.0 は、最新の Apache Hadoop 3.0 イノベーションを提供しています。これは、オープンソースコミュニティとパートナー Hortonworks が主要な Apache フレームワークをまたいで5年を超えています。これにより、成長し続けるビッグデータと高度な分析の課題を解決できます。 '
Content: >-
  <p>HDInsight 4.0 をパブリックプレビューで利用できるようになったことを発表します。嬉しく思い HDInsight 4.0 は、最新の Apache Hadoop 3.0 イノベーションを提供しています。これは、オープンソースコミュニティとパートナー Hortonworks が主要な Apache フレームワークをまたいで5年を超えています。これにより、成長し続けるビッグデータと高度な分析の課題を解決できます。 今回のリリースでは、HDInsight 上のすべてのビッグデータオープンソースフレームワークに新しい機能強化が加えられています。</p>


  <p>このブログでは、Apache Hive 3.0、Hive Spark 統合、Apache HBase、Apache Phoenix に対して有効にする新しい機能について説明します。</p>


  <h2>Apache Hive、高速なクエリとトランザクションに対する3.0 の機能強化</h2>


  <p>これまでは、包括的な BI を大規模に履歴データとリアルタイムデータで推進することは、複雑で困難な作業にとどまります。 多くの組織は、利用可能な BI ソリューションを構築するために、複数のオープンソースと &nbsp; 独自のツールを合成しています。 多くの場合、これらのソリューションでは、データをホットに保つために、煩雑なデータ移動、複雑なパイプライン管理、または継続的な手動データの分裂が必要になります。 多くの場合、ビルド、操作が難しく、スケーリングが困難です。</p>


  <p>お客様は、さらにシンプルで強力なエンタープライズレベルのソリューションを探しています。 Microsoft では、データ湖の上にあるリアルタイム分析を直接有効にするという考え方を夢中しています。これにより、分析、BI ダッシュボード、または複雑なアドホック SQL クエリでのデータ移動の必要性が軽減されます。</p>


  <p>hive llap (HDInsight で対話型クエリと呼ばれる低待機時間分析処理) を使用すると、さまざまなデータソースに格納されているデータに対して非常に高速な SQL クエリを実現します。これは、のスケーラビリティを犠牲にしたものです。 Hive LLAP を使用すると、複雑な結合、サブクエリ、ウィンドウ関数の変換、並べ替え、Udf、および複雑な集計に関連する分析を促進できます。 Hive LLAP を使用すると、データアナリストは、データが準備されている同じストレージで対話的にデータをクエリできます。これにより、分析のためにストレージから別のエンジンにデータを移動する必要がなくなります。</p>


  <p>Hive LLAP の <a href="https://azure.microsoft.com/en-us/blog/hdinsight-interactive-query-performance-benchmarks-and-integration-with-power-bi-direct-query/">パフォーマンスとスケーラビリティ</a> が正常に確立されます。 BI ユーザーとデータ科学者は、 <a href="https://azure.microsoft.com/en-us/blog/azure-hdinsight-interactive-query-ten-tools-to-analyze-big-data-faster/">LLAP で Hive を操作するために最も気に入っているツール</a>を使用できます。</p>


  <p>Hive 3.0 を利用すると、さらにパフォーマンスが向上し、BI ユーザーはデータをより深く分析することができます。</p>


  <h3>結果のキャッシュ</h3>


  <p>クエリ結果をキャッシュすると、Hive によって同じクエリが処理された場合に、以前に計算されたクエリ結果を再利用できます。 この機能により、頻繁に使用されるクエリが大幅に高速化されます。 結果のキャッシュが有効になっている場合、クラスターはコンピューティングリソースを節約し、以前にキャッシュされた結果をはるかに迅速に返して、ユーザーが送信する一般的なクエリのパフォーマンスを向上させます。</p>


  <h3>具体化した動的ビュー</h3>


  <p>Hive は、動的具体化されたビューをサポートするようになりました。 要約 (具体化されたビュー) の事前計算は、従来のデータウェアハウスシステムでのクエリの高速化手法です。 作成された具体化されたビューは、Hive または Apache Dて Id レイヤーにネイティブに保存でき、LLAP アクセラレータをシームレスに使用することができます。 次に、オプティマイザーは Apache Calcite を使用して、射影、フィルター、結合、および集計操作を構成する多数のクエリ式のフルおよび部分的なを自動的に生成します。</p>


  <h3>Apache Hive トランザクションによって有効になるデータ品質と GDPR コンプライアンスの向上</h3>


  <p>Hive での以前のバージョンの ACID (原子性、一貫性、分離性、および持続性) には、トランザクションの有効化やバケットの実装などの特殊な構成が必要でしたが、Hive 3.0 の ACID v2 ではストレージ形式と実行エンジンの両方でパフォーマンスが向上しており、非 ACID テーブルと比較するとパフォーマンスが向上しています。 ACID on は、データ更新を完全にサポートするために、既定で有効になっています。</p>


  <p>ACID 機能が強化されたことで、お客様は行レベルでのデータ品質 (update/delete) の問題をより適切に処理できるだけでなく、GDPR などのコンプライアンス要件を満たすことができ、データを行レベルで消去することもできます。</p>


  <ul>
   <li>ACID (Hive 3.0 の既定値)</li>
   <li>パフォーマンスのオーバーヘッドなし</li>
   <li>バケットは必要ありません</li>
   <li>Spark は Hive ウェアハウスコネクタを使用して Hive ACID テーブルの読み取りと書き込みを行うことができます</li>
  </ul>


  <h3>Apache Hive llap + dを id = 1 つのツールで複数 SQL ユースケース</h3>


  <p>Dて id は、列指向の高パフォーマンスの分散データストアであり、ユーザー向けの分析アプリケーションやリアルタイムアーキテクチャに適しています。 Dて id を使用すると、分割およびダイス、ドリルダウン、検索、フィルター処理、およびイベントストリームの集計を行うためのサブ2番目のクエリに最適化されます。 Dて id が使用されるのは、多くの同時実行ユーザーによるサブ秒のパフォーマンスを必要とする対話型アプリケーションの機能を強化するためです。</p>


  <p>Hive LLAP は複雑なクエリに対して対話型のエクスペリエンスを提供するのに最適ですが、OLAP システムとしては構築されません。 複雑な SQL と OLAP 型のクエリの両方に対して単一のソリューションを提供するために、Apache dの id と Hive llap を HDInsight に統合します。</p>


  <p>1つのスタックで Dて Id と LLAP を組み合わせることにより、お客様にとって強力な BI ソリューションを実現します。 ユーザーとアプリケーションは、JDBC エンドポイントを使用してクエリを送信できます。また、クエリの性質によっては、クエリの応答には、Dて Id レイヤーまたは LLAP レイヤーを使用できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d4f0ce22-302a-461d-a710-fe0593c29c1e.png"><img alt="image" border="0" height="341" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/33814138-5147-457c-9c4e-444b233001df.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="絵" width="613"></a></p>


  <p>&nbsp;</p>


  <p>単純なクエリは、Dて Id から直接応答することができます。また、高度な OLAP の最適化を &rsquo; 利用することもできます。 より複雑な操作では、可能であれば、その Id に処理をプッシュしてから、Hive LLAP でクエリの残りの部分を実行します。</p>


  <p><em>* HDInsight 4.0 preview では、* dて id LLAP 統合が有効になっていません。もうすぐです！</em></p>


  <h2>Hive ウェアハウスコネクタを使用して更新可能なテーブルと ACID トランザクションを取得 Apache Spark</h2>


  <p>HDInsight 4.0 の Apache Spark と Hive LLAP の新しい統合により、ビジネスアナリスト、データ科学者、データエンジニア向けの新しい機能が提供されます。 ビジネスアナリストは、hive llap (対話型クエリ) の形式でパフォーマンスの高い SQL エンジンを取得します。一方、データ科学者とデータエンジニアは、hive テーブルのトランザクションデータを Apache Spark することで、ML の実験と ETL に優れたプラットフォームを手にすることができます。 この統合により、制御されたトランザクション方法でテーブルの更新を実行できない Apache Spark &mdash; の連続するギャップの1つが終了します。 以前は、使用できる唯一の機能はテーブルパーティションの操作に制限されていましたが、Hive ウェアハウスコネクタでは、ユーザーは Hive トランザクションテーブルを Spark の外部テーブルとして登録し、Spark で完全なトランザクション機能を取得できます。</p>


  <p>有効にできるシナリオは次のとおりです。</p>


  <ul>
   <li>ビジネスアナリストがレポートに使用するのと同じトランザクションテーブルに対して ML モデルトレーニングを実行する場合は、 HDInsight 4.0 の Apache Spark でこれを行うことができます。</li>
   <li>ビジネスアナリストが使用する Hive テーブルの列として、Spark ML から予測スコアまたは分類の結果を追加する必要がある場合は、 これは、Spark から ACID トランザクションを開始することで、同時実行ユーザー間での読み取りの一貫性を完全に保証することで、簡単に実現できます。</li>
   <li>Apache Spark の GDPR に従って、ユーザーデータを管理する必要がありますか。 また、Spark to Hive Warehouse コネクタを使用することもできます。</li>
   <li>Hive ストリーミングテーブルから change feed で Spark Streaming ジョブを実行する場合は、 それでも可能です。 Hive ウェアハウスコネクタは、Spark からのトランザクションおよびストリーミング Hive テーブルへの読み取りと書き込みのストリーミングをサポートします。</li>
   <li>Spark 構造化ストリーミングジョブから直接 ORC ファイルを作成する必要がありますか。 このパスは、Hive と互換性のある ORC writer が Apache Spark で利用できるようになったため、可能です。</li>
  </ul>


  <p>内部的には、Hive ウェアハウスコネクタは最新の Apache Spark データソース v2 として実装されています。 これにより、Spark エグゼキュータは Hive LLAP デーモンに直接接続し、トランザクション方式でデータを取得および更新できます。 このアーキテクチャでは、Hive トランザクション機能全体を完全にサポートすることができます。これにより、hive は &rsquo; 、最後のデータの制御を維持することができます。 アーキテクチャによって、ユーザーが誤って Spark から Hive トランザクションテーブルに直接アクセスしようとしたときに、一貫性のない結果、重複したデータ、またはデータの破損が発生するという一般的な問題が回避されます。</p>


  <p>HDInsight 4.0 の新しい世界では、テーブル型の混乱を避けるために、Spark テーブルと Hive テーブルが個別のメタストアに保持されています。 代わりに新しいアーキテクチャでは、hive ウェアハウスコネクタを介して、Hive トランザクションテーブルを Spark 外部テーブルとして明示的に登録する必要があります。 構成中に追加の手順が1つ追加されますが、この方法では、データアクセスの信頼性が大幅に向上します。 Hive ウェアハウスコネクタは、Spark エグゼキュータと Hive LLAP デーモン間の効率的な述語のプッシュダウンと Apache の矢印ベースの通信をサポートしています。 その結果、2つのシステム間の通信のオーバーヘッドが全体的に小さくなります。 Hive ウェアハウスコネクタでは、HDInsight 4.0 の Apache Spark は、成熟したトランザクション機能を提供します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/97402786-28f1-49ef-9e03-ee57b1de207c.png"><img alt="image" border="0" height="275" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/83f6164b-20b0-4358-a3cf-7931ca94a907.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="絵" width="624"></a></p>


  <p>&nbsp;</p>


  <h2>Apache HBase 2.0 と Apache Phoenix 5.0 では、新しいパフォーマンスと安定性の機能を利用する</h2>


  <p>HDInsight 4.0 には HBase 2.0 とフェニックス5.0 が導入され、いくつかのパフォーマンス、安定性、および統合が強化されています。</p>


  <p><strong>インメモリ compactions を実行すると、パフォーマンスが向上します。</strong> HBase 2.0 では、インメモリの compactions が導入されています。 HBase では、データが長期間メモリ内に保持されており、リモートクラウドストレージからフラッシュや読み取りが頻繁に行われない場合、パフォーマンスが向上します。 メモリ内の compactions を使用して Memstore のデータを定期的に再編成すると、データの読み取りと書き込みが Azure Storage から頻繁に行われないため、全体的な i/o が減少する可能性があります。</p>


  <p><strong>読み取り/書き込みパスの改善により、パフォーマンスが向上します。</strong> HBase 2.0 で完全なオフヒープの読み取り/書き込みパスが実装されるようになりました。 データが HBase のスループット操作に書き込まれると、データが HFile のストレージにフラッシュされるまで、セルオブジェクトは JVM ヒープに入りません。 これにより、RegionServer の総ヒープ使用量を削減し、データのコピーを減らし、効率を高めることができます。 バケットキャッシュは、L1 または L2 キャッシュとして構成できます。</p>


  <p><strong>プロシージャ V2。</strong> プロシージャ V2 は、障害が発生したときに複数ステップの HBase 管理操作を実行するための更新されたフレームワークです。 このフレームワークを使用すると、プロシージャ v2 を使用してすべてのマスター操作を実装し、今後 hbck ようなツールを必要としないようにすることができます。</p>


  <p><strong>非同期 Java クライアント API。</strong> HBase 2.0 に新しい Java クライアント API が追加されています。 これにより、古い Java NIO RPC サーバーが Netty RPC サーバーに置き換えられます。 Netty RPC サーバーは、非同期 Java クライアント API を簡単に使用できるようにします。</p>


  <p><strong>Apache Phoenix の機能強化。</strong> フェニックス5.0 では、新しいシステムテーブル &quot; システムを導入することで、クエリログを使用したクエリの可視性が向上しています。クラスターに対して実行されているクエリに関する情報をキャプチャするログ &quot; 。 更新されたフェニックス-hive Storage ハンドラーに加えて、更新されたフェニックス-spark ドライバーを介して spark 2.3 がサポートされているので、フェニックスでは hive 3.0 がサポートされます。</p>


  <h2>まとめ</h2>


  <p>HDInsight 4.0 は、多くの主要な拡張機能を備えた重要なリリースです。 このブログ記事では、お客様がビッグデータビジョンを実現するのに役立つ、有効にしている機能のサブセットのみをレビューしています。 HDInsight に導入されている新機能に関する追加のお知らせは、引き続きご利用ください。</p>


  <h3>Azure HDInsight を今すぐお試しください</h3>


  <p>Azure HDInsight でどのようなものが構築されるかをご紹介します。 これらのパイプラインとアーキテクチャを Azure HDInsight に実装する方法の詳細については、<a href="https://azure.microsoft.com/en-us/blog/azure-hdinsight-training-resources-learn-about-big-data-using-open-source-technologies/">この開発者ガイドを参照</a>して<a href="https://docs.microsoft.com/en-us/azure/hdinsight/hadoop/apache-hadoop-linux-tutorial-get-started">クイックスタートガイド</a>に従ってください。 最新の Azure HDInsight のニュースと機能については、Twitter <a href="https://twitter.com/search?q=%23HDInsight&amp;src=typd"> # HDInsight</a>と <a href="https://twitter.com/AzureHDInsight">@AzureHDInsight</a> に関する記事をご利用ください。 質問やフィードバックについては、まで <a href="mailto:AskHDInsight@microsoft.com">AskHDInsight@microsoft.com</a> お問い合わせください。</p>


  <h3>Azure HDInsight について</h3>


  <p>Azure HDInsight は、オープンソース分析のための簡単で費用対効果の高いエンタープライズレベルのサービスであり、お客様は、Apache Hadoop、Spark、Kafka などの一般的なオープンソースフレームワークを簡単に実行できます。 このサービスは、米国およびドイツの27のパブリックリージョンと Azure Government クラウドで利用できます。 Azure HDInsight は、さまざまなセクターでミッションクリティカルなアプリケーションを強化し、ETL、ストリーミング、対話型クエリなどの幅広いユースケースを実現します。</p>


  <p><em>このブログ投稿は、格言 Lukiyanov (プリンシパルプログラムマネージャー、Azure HDInsight) によって共同作成されました </em></p>


  <h3>その他の技術情報</h3>


  <ul>
   <li><a href="https://social.msdn.microsoft.com/forums/azure/en-us/home?forum=hdinsight">MSDN フォーラムで HDInsight に関する質問をする</a></li>
   <li><a href="https://stackoverflow.com/questions/tagged/hdinsight">StackOverflow で HDInsight に関する質問をする</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-component-versioning#hadoop-components-available-with-different-hdinsight-versions">HDInsight のオープンソースコンポーネントガイド</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/hdinsight/interactive-query/apache-interactive-query-get-started">Azure での HDInsight 対話型クエリクラスターの概要</a></li>
   <li><a href="https://azure.microsoft.com/en-us/blog/hdinsight-interactive-query-performance-benchmarks-and-integration-with-power-bi-direct-query/">Azure HDInsight のパフォーマンスベンチマーク: 対話型クエリ、Spark、Presto</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/hdinsight/">Azure HDInsight の詳細情報</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-linux-tutorial-get-started">HDInsight での Hive の使用</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-release-notes">HDInsight リリース ノート</a></li>
  </ul>
