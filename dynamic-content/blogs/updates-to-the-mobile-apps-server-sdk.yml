### YamlMime:Yaml
ms.openlocfilehash: bd89a6b1f84c90b4cfa169c080dd3a225ae89735
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910265"
Slug: updates-to-the-mobile-apps-server-sdk
Title: Mobile Apps server SDK の更新
Summary: 本日、Mobile Apps .NET サーバー SDK の更新プログラムを発表します。 SDK とそれについてのお客様からのフィードバックをよく見てきました。これを修正する作業は困難です。
Content: >-
  3月に、Azure App Service " href="https://azure.microsoft.com/blog/2015/03/24/announcing-azure-app-service/"> 発表 </a> された Azure App Service について発表しまし <a title=" た。これには、既存の Mobile Services 製品の新しいバージョンである Mobile Apps のプレビューが含まれています。 Mobile Apps を使用すると、開発者は優れた App Service 機能を利用して、モバイルデバイスから簡単に使用できるスケーラブルで機能豊富なバックエンドを構築することが簡単になります。


  本日、Mobile Apps .NET サーバー SDK の更新プログラムを発表します。 SDK とそれについてのお客様からのフィードバックをよく見てきました。これを修正する作業は困難です。 この更新プログラムでは、いくつかの重大な変更が加えられているため、マイナーバージョン番号が増分され、現在はバージョン0.2.549 になっています。 SDK はプレビューのままであるため、メジャーバージョンはまだ0であることに注意してください。


  元の SDK では、ASP.NET パイプラインの引き継ぎと構成設定の変更が非常に積極的に行われていました。 これは上級ユーザーのための問題であり、ASP.NET MVC などの特定の機能を使用できなかったことを想定していました。これは、ハイブリッド web アプリケーションやモバイルアプリケーションの開発者にとって大きな制限事項です。 この更新の主な目的は、SDK を ASP.NET サイトに適切に構成し、開発者がサイトの実行方法をより細かく制御できるようにすることでした。

  <h3>.NET サーバー SDK の使用</h3>

  新しい SDK を使い始める最も簡単な方法は、Azure 管理プレビューポータルからクイックスタートプロジェクトをダウンロードすることです。 これらの手順については、「 <a href="https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-dotnet-backend-ios-get-started-preview/">モバイルアプリの作成</a> 」チュートリアルのいずれかを試してみてください。 または、最新の<a href="https://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/">NuGet パッケージ</a>を任意の ASP.NET サイトにインストールするだけです。


  Mobile Apps Server SDK の使用を開始するために必要なコードは少ししかありません。 Webapiconfig.cs では、通常、Register () メソッドに渡される HttpConfiguration オブジェクトを取得します。 そのオブジェクトが "config" という名前の場合は、そのメソッドの先頭に次のを追加する必要があります。

  <pre class="prettyprint">new MobileAppConfiguration()
   .ApplyTo(config);
  </pre>

  これによって開始されますが、実際には優れたモバイル機能は有効になりません。 ここでは、パッケージを少し分解して、何を取得するか、および有効にする機能をより細かく制御できるようにしました。 サーバー SDK パッケージの依存関係グラフを次に示します。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/15/MobileAppsServerSDKDependencies.png"><img class="alignnone size-medium wp-image-318551" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/MobileAppsServerSDKDependencies-636x306.png" alt="MobileAppsServerSDKDependencies" width="636" height="306" /></a>


  すばやく開始する場合は、クイックスタートパッケージを取得するだけで、他のパッケージを取り込むことができます。 また、以前のバージョンの SDK と同様にすべてを設定する MobileAppConfiguration の UseDefaultConfiguration () 拡張メソッドも用意されています。 次のように使用できます。

  <pre class="prettyprint">new MobileAppConfiguration()
   .UseDefaultConfiguration()
   .ApplyTo(config);
  </pre>

  これと同様に、完全な機能を備えたモバイルバックエンドが、次の優れたアプリに対応しています。


  または、基になるメソッドを個別に呼び出すことができ、不要なメソッドを削除することもできます。

  <pre class="prettyprint">new MobileAppConfiguration()
   .AddMobileAppHomeController()             // from the Home package
   .MapApiControllers()
   .AddTables(                               // from the Tables package
    new MobileAppTableConfiguration()
     .MapTableControllers()
     .AddEntityFramework()     // from the Entity package
    )
   .AddAppServiceAuthentication()            // from the Authentication package
   .AddPushNotifications()                   // from the Notifications package
   .MapLegacyCrossDomainController()         // from the CrossDomain package
   .ApplyTo(config);
  </pre>

  <h3>その他の変更点</h3>

  機能の変更に関しては、最初に説明したように、機能を明示的に有効にする必要があります。 一般に、目的の動作について想定していません。 これにより、Autofac への依存関係を削除するなどの変更が加えられました。 これで、選択した任意の依存関係挿入フレームワークを使用できるようになりました。


  私たちが注目する大きな違いの1つは、[AuthorizeLevel] 属性がなくなったことです。代わりに、ユーザーに対して、標準 ASP.NET [承認] 属性を使用してコントローラーを装飾するように依頼します。 また、既定では Api のアプリケーションキーの保護が想定されなくなりました。実際には、アプリケーションキーとマスターキーは SDK によって使用されなくなりました。 これは、お客様が SDK のバージョンを切り替える際に注意する必要があります。


  このリリースでのもう1つの変更は、Apicontroller が既定では、どのルートにもマップされていない場合、またはモバイル固有の構成が指定されている場合です。 これにより、モバイル固有の Apicontroller と共に、独自の非モバイル Apicontroller を使用できるようになります。 ApiController をモバイルコントローラーとして指定するには、クラスで [MobileAppController] 属性を指定します。


  これらの項目以外は、既存の顧客にとって非常になじみのある SDK です。 Mobile Apps で実行できることは他にもたくさんあります。私たちが何を構築しているのか見てみましょう。


  新しい SDK に試してみてください。フィードバックは、コメント、 <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=azuremobile">フォーラム</a>、または Twitter ( <a href="https://twitter.com/AzureMobile">@AzureMobile</a> ) でお送りください。 ご意見をお待ちしております。


  それではお楽しみください。
