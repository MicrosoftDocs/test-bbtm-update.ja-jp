### YamlMime:Yaml
ms.openlocfilehash: ea8c6a0036b6ac8ea2a90b06e6c7bfc8e2e02e10
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896852"
Slug: deploy-cognitive-toolkit-model-to-azure-web-apps
Title: Azure Cognitive ToolkitにモデルをデプロイWeb Apps
Summary: Azure には、ディープ ラーニング モデル (CNTK など) をデプロイする方法がいくつか用意されています。Windows Web アプリ、Linux (Docker) Web アプリ、Azure Container Services (Docker) です。 Docker メソッドの両方が多い可能性があります。
Content: >-
  <p>Azure には、Web アプリ、Linux Web アプリ、Azure Container Services をWindowsディープ ラーニング モデルをデプロイする方法が<a href="https://gallery.cortanaintelligence.com/Tutorial/Deploy-CNTK-model-to-ACS">いくつか用意されています</a>。 Linux 環境/コンテナーの経験が少ないユーザーには、使い慣れたWindows Web Appsを提供します。 この投稿では、ResNet-18 モデルを Azure Web Apps にデプロイし、サンプル HTML インターフェイスと Python を使用してテスト画像を送信します。</p>


  <h2>デモの結果</h2>


  <h3>Python</h3>


  <p><img alt="Demo" height="326" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/python_result.JPG" width="375"></p>


  <p>上のスクリーンショットは、このノートブックから取得 <a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK/blob/master/readme_support/REST.ipynb">されています</a>。 速度テストを実行する場合、<a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK/blob/master/readme_support/REST_Speed_Test.ipynb">GitHub</a> のこのノートブックでは、作成された API に非同期要求を送信して、画像を一括で分類するのにかかる時間を確認する方法を示します。 この例では、イメージ <strong>あたり 0.86 秒を取得します</strong>。</p>


  <h2>デモをレプリケートする</h2>


  <p>1. レポポの <a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK">内容をダウンロードし</a> 、 フォルダーでコマンド プロンプトを開きます。</p>


  <p>2. 次のコマンドを実行して、git と azure-cli がインストールされていることを確認します。</p>


  <blockquote>

  <pre>

  <code>az --version  # time-of-writing: 2.0.1

  pip install azure-cli  # otherwise install azure-cli

  git --version # time of writing: 2.9.2.windows.1</code></pre>

  </blockquote>


  <p>3. ローカル Git デプロイのユーザー名とパスワードを設定します。 これは 1 回だけ行う必要があります。 次に例を示します。</p>


  <blockquote>

  <pre>

  <code>set uname=&lt;username_for_local_git_deployment&gt;

  set pass=&lt;password_for_local_git_deployment&gt;

  # Create a user-name and password for git deployment of all your apps

  az appservice web deployment user set --user-name %uname% --password %pass%</code></pre>

  </blockquote>


  <p>4. 次のコマンドを実行して、Web アプリを作成します。</p>


  <blockquote>

  <pre>

  <code># Name for your web-app

  set appn=&lt;app_name&gt;

  # Name for resource-group containing web-app

  set rgname=&lt;name_for_resource_group_that_contains_app&gt;

  # Login to azure

  az login

  # Create a resource-group

  az group create --location westeurope --name %rgname%

  # Create a paid &#39;S2&#39; plan to support your app

  # The standard paid plans are: S1, S2, S3

  az appservice plan create --name %appn% --resource-group %rgname% --sku S2

  # Create the web-app

  az appservice web create --name %appn% --resource-group %rgname% --plan %appn%

  # Configure for local git deployment (SAVE URL)

  az appservice web source-control config-local-git --name %appn% --resource-group %rgname% --query url --output tsv

  # Initialise your git repo

  git init

  # Add the azure endpoint

  git remote add azure &lt;PASTE_URL_FROM_ABOVE&gt;

  # e.g. git remote add azure https://ilia2ukdemo@wincntkdemo.scm.azurewebsites.net/wincntkdemo.git

  </code></pre>

  </blockquote>


  <p>5. Python をインストールします。 Azure Portal &quot;&quot; で Web アプリに移動し、[拡張機能] ブレードまで下にスクロールし、[選択] をクリックします。</p>


  <p><a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK/blob/master/readme_support/extensions_1.JPG"><img alt="Demo" height="194" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/extensions_1.JPG" width="251"></a></p>


  <p>6.次に、[追加] を&quot;クリックし、&quot;Python 3.5.3 x64&quot; を見&quot;つけて追加します。 <em>この拡張機能を </em><em>使用する必要があります。</em></p>


  <p><a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK/blob/master/readme_support/requirement.JPG"><img alt="Demo" height="114" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/requirement.JPG" width="401"></a></p>


  <p>これが正常にインストールされたことを示す通知が表示されていることを確認します。</p>


  <p><a href="https://github.com/ilkarman/Azure-WebApp-w-CNTK/blob/master/readme_support/extensions_2.JPG"><img alt="Demo" height="141" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/extensions_2.JPG" width="392"></a></p>


  <p>7. <em>(省略可能)</em>[アプリケーション設定] ブレード&quot;で、[Always On&quot; &quot;&quot; &quot;オン] に設定すると、モデルが読み込まれた状態が維持されるので、応答時間が短縮されます。&quot;</p>


  <p>8. 次を実行して、このデモをデプロイします。</p>


  <blockquote>

  <pre>

  <code>git add -A

  git commit -m &quot;init&quot;

  git push azure master

  </code></pre>

  </blockquote>


  <p>すべてが正常に終了した場合は、スクリプト出力に次の行が表示されます。</p>


  <blockquote>

  <pre>

  <code>remote: Successfully installed cntk-2.0rc1

  remote: ..

  remote: 2.0rc1

  </code></pre>

  </blockquote>


  <p>これで、Web アプリのアドレスに移動し、CNN: ResNet-18 に従って分類される写真をアップロードできます。</p>


  <h2>高度な変更 (独自に実行)</h2>


  <ol>
   <li>
   <p>他のモジュール (pandas や opencv など) への参照を model.py ファイルに含めることができるようになりましたが、python がモジュールをインストールするには、モジュールをrequirements.txt&quot; &quot; ファイルに追加する必要があります。 モジュールをビルドする必要がある場合は、事前構築済みの <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">wheel ファイルを wheel</a> フォルダーにダウンロードできます。 忘&#39;、ディレクトリの&quot;&quot;ルートにあるrequirements.txtファイルにホイール パスを追加してください。 <strong>注: <a href="https://azurewebappcntk.blob.core.windows.net/wheels/numpy-1.12.1+mkl-cp35-cp35m-win_amd64.whl">Numpy</a>、<a href="https://azurewebappcntk.blob.core.windows.net/wheels/scipy-0.19.0-cp35-cp35m-win_amd64.whl">Scipy</a><a href="https://azurewebappcntk.blob.core.windows.net/cntkrc/cntk-2.0rc1-cp35-cp35m-win_amd64.whl">、</a>CNTKホイールは&quot;、deploy.cmd スクリプト内に自動的にインストール&quot;されます。これを変更するには、deploy.cmd ファイルを編集して、必要な numpy ホイールを指し示します。</strong></p>
   </li>
   <li>
   <p><strong>deploy.cmd の編集 - </strong>インストール スクリプトによって、<a href="https://azurewebappcntk.blob.core.windows.net/cntkrc/cntk.zip">v2.0 rc1 のCNTKが自動的に追加されます</a>。 ただし、<strong>Python 3.6 または CNTK v2.0 rc1+</strong>&quot; を使用する場合は、deploy.cmd スクリプトで以下を変更&quot;します。</p>

   <blockquote>
   <pre>
  <code>:: VARIABLES

  echo &quot;ATTENTION&quot;

  echo &quot;USER MUST CHECK/SET THESE VARIABLES:&quot;

  SET PYTHON_EXE=%SYSTEMDRIVE%\home\python353x64\python.exe

  SET NUMPY_WHEEL=https://azurewebappcntk.blob.core.windows.net/wheels/numpy-1.12.1+mkl-cp35-cp35m-win_amd64.whl

  SET SCIPY_WHEEL=https://azurewebappcntk.blob.core.windows.net/wheels/scipy-0.19.0-cp35-cp35m-win_amd64.whl

  SET CNTK_WHEEL=https://azurewebappcntk.blob.core.windows.net/cntkrc/cntk-2.0rc1-cp35-cp35m-win_amd64.whl

  SET CNTK_BIN=https://azurewebappcntk.blob.core.windows.net/cntkrc/cntk.zip

  </code></pre>
   </blockquote>

   <p>&#39;cntk.zip&#39; ファイルを作成するには、cntk/cntk フォルダー (つまり、&#39;CNTK.exe&#39; と DLL を含むフォルダーを抽出し、ホイールを含む python サブフォルダー (存在する場合) を削除し、それを %CTNK_BIN% 環境変数で参照する必要があります。</p>
   </li>
   <li>
   <p>必要に合って別の Python 拡張機能をインストールすることもできますが、それを適切に参照してください (また、Numpy、Scipy、CNTK ホイールを取得することもできます)。 たとえば、 &quot;Python 3.5.3 x64&quot; &quot;拡張機能はディレクトリ D:\home\python353x64&quot; にインストールされます。そのため、スクリプトは次を参照します。 <code>SET PYTHON_EXE=%SYSTEMDRIVE%\home\python353x64\python.exe</code></p>
   </li>
   <li>
   <p>最後に&quot;、必要に応じて&quot; &quot;webApp&quot; フォルダー内の model.py スクリプトを HTMl &quot; テンプレートと共に変更し、テンプレートでindex.html&quot; &quot;&quot; を変更し、変更をレポポにプッシュします。</p>

   <blockquote>
   <pre>
  <code>git add -A

  git commit -m &quot;modified some script&quot;

  git push azure master</code></pre>
   </blockquote>
   </li>
  </ol>
