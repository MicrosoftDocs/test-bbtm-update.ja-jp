### YamlMime:Yaml
ms.openlocfilehash: 6ce7d90c13d9eeac1e0e7a05a587c52477d6e4e6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889993"
Slug: azure-container-service-the-cloud-s-most-open-option-for-containers
Title: 'Azure Container Service: クラウドのコンテナーに最もオープンなオプション'
Summary: コンテナーは、仮想化における次の進化です。組織はこれまで以上に機敏性を実現しています。
Content: >-
  <p>コンテナーは、仮想化における次の進化です。組織はこれまで以上に機敏性を実現しています。 これは毎日お客様から見ていきます。 開発、テスト、運用にかかわらず、アプリを1回作成し、どこにでもデプロイできます。 コンテナーは、任意のハードウェア、任意のクラウド、任意の環境で、変更なしで実行できます。 つまり、アジャイル DevOps 向けの真にオープンでポータブルなソリューションを提供します。</p>


  <p><a href="https://azure.microsoft.com/en-us/services/container-service/?wt.mc_id=AID529439_SEM_7Vqv9ItU">Azure Container Service</a> (ACS) を使用すると、クラウド内のコンテナーを管理するための独自のアプローチをお客様に提供します。これにより、実証済みのオープンソースのコンテナーオーケストレーションテクノロジを通じて、運用環境でコンテナーを簡単に拡張することができます。 現在、ACS に関する一連の更新プログラムを発表しています。 ACS は、クラウドで &mdash; コンテナーアプリケーションを実行するための最も効率的でオープンで柔軟な方法であり、クラウド orchestrator でより多くの顧客を選択できます。 現在利用可能な更新プログラムは次のとおりです。</p>


  <ul>
      <li><b>Azure Container Service での Kubernetes (プレビュー):</b> 2014年7月、Kubernetes が一般公開されてから、Azure インフラストラクチャでの Kubernetes のサポートが発表されました。 Kubernetes 1.4 では、ネイティブの Azure ネットワーク、ロードバランサー、Azure ディスク統合のサポートが提供されています。 現在、このサポートをさらに強化し、Azure Container Service で Kubernetes 1.4 のプレビューリリースを発表しています。 この Kubernetes のより詳細なネイティブサポートにより、Azure のコンテナーオーケストレーションエンジンに対して、完全にオープンなオープンソースの選択肢が提供されます。 これで、ACS でクラウド orchestrator を選択し、DC/OS、Docker の群れ、Kubernetes の3つの完全オープンソースソリューションのサポートを提供できるようになりました。 <a href="https://blog.kubernetes.io/2016/11/bringing-kubernetes-support-to-azure.html">詳細については、</a> 「Brendan 火傷 (創業時の Kubernetes の1つ)」を参照してください。</li>
      <li><b>DC/OS から1.8.4 へのアップグレード:</b> 私 &rsquo; たちは、DC/OS の ACS サポートをバージョン1.8.4 にアップグレードしました。 この新しいバージョンには、柔軟な新しい仮想ネットワーク機能が含まれており、ジョブスケジューリングと Marathon ベースのコンテナーオーケストレーションが DC/OS UI に直接組み込まれています。 さらに、GitLab、artifactory、confluent Platform、datafluent x Enterprise と独自の Operations Management Suite が、DC/OS Universe アプリストアからワンクリックインストールで使用できるようになりました。</li>
      <li><b>オープンソースの Azure Container Service エンジン: </b>現在、Azure で Azure Container Service デプロイを作成するために使用する <a href="https://github.com/Azure/acs-engine">ACS エンジン</a> のソースコードをリリースしています。 GitHub 上の新しいオープンソースプロジェクトでは、DC/OS、群れ、Kubernetes をデプロイする方法と、Azure でコンテナーを調整するためのベストプラクティス (パブリックと Azure Stack の両方) について、コミュニティと共有することができます。<b> </b>さらに、ACS エンジンを使用すると、現在のサービスの展開を変更およびカスタマイズすることができます。 最後に、お客様のヘルプを使用して、コミュニティから投稿を取得し、Azure で実行されているサービスを改善できます。</li>
  </ul>


  <p>私たちは、どのような規模の組織も、コンテナーベースのソリューションを開発/テスト環境からクラウド内の運用環境に移行することになっています。 ACS &rsquo; により高い選択肢と柔軟性を提供するだけでなく、次のような新しい更新プログラムによって、より合理化されたアジャイル開発とコンテナー管理も可能にします。</p>


  <ul>
      <li><b> <a href="https://azure.microsoft.com/en-us/blog/azure-container-registry-preview/">Azure Container Registry</a>:</b>11月14日のプレビューでご利用いただけます。 Azure Container Registry は、Azure で使用するコンテナーイメージをホストするためのプライベートリポジトリです。 Azure Container Registry を使用すると、すべての種類のコンテナー デプロイに対応する Docker 形式のイメージを格納できます。 さらに、Azure Container Registry は、Azure Container Service によって提供される orchestrator とも統合されます。 Azure Container Registry を使用すると、オープンソースの Docker Registry v2 と互換性があることがわかります。これにより、ACR でも同じツールを使用できます。</li>
      <li><b>VS、VSTS、VS Code Azure Container Service への統合とデプロイ:</b> 11 月16日に、新しいエクスペリエンスがリリースされます。これにより、Visual Studio、Visual Studio Team Services、オープンソースを使用して、複数 Linux アプリケーションの<a href="https://azure.microsoft.com/en-us/blog/continuous-integration-and-deployment-to-azure-container-service/">継続的インテグレーションとデプロイ</a>を簡単にセットアップできるようになります。Visual Studio Code。 デプロイの機敏性を引き続き実現するために、開発および CI/CD ソリューションの選択を使用して、コンテナーワークロードのための優れた開発対テストデプロイのエクスペリエンスに多大な投資を行うことを想定しています。</li>
  </ul>


  <p>Azure は、オープンソースのオーケストレーションテクノロジ、DC/OS、Docker の群れ、Kubernetes を提供するコンテナーサービスを備えた <b>唯一</b> のパブリッククラウドであり、お好みのツールを使用して、お客様やチームがクラウドでコンテナーを簡単に導入できるようにします。 これらのアジャイル特典などを利用できます。 <a href="https://azure.microsoft.com/en-us/services/container-service/">Azure Container Service</a>今すぐ、DC/OS、群れ、または Kubernetes を試してみてください。 さらに詳細を確認する場合は、 <a href="https://connectevent.microsoft.com/">Microsoft Connect ()</a> 、来週にご視聴ください。</p>


  <p>Ya を参照してください。</p>


  <p>Corey</p>
