### YamlMime:Yaml
ms.openlocfilehash: 9e5e859796aa9ad794d121704c49dd3a31a0a652
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893574"
Slug: azure-search-introduces-new-lower-cost-tier-in-preview
Title: Azure Search では、プレビューに新しい低コストレベルが導入されています
Summary: お客様からのフィードバックに基づいて、Azure Search では、既存の Free レベルと Standard レベルのギャップを埋める新しい低コストの Basic レベルがプレビューに導入されたことをお知らせします。
Content: >-
  <p>&rsquo;Azure Search の新しい Basic レベルを発表します。 Free レベルと Standard レベルの間に中間点がない Azure Search について、多数の <a href="https://feedback.azure.com/forums/263029-azure-search/suggestions/6328668-provide-a-startup-friendly-billing-model">フィードバック</a> を受け取りました。 この新しい Basic レベルは、このギャップに対処することを目的としています。</p>


  <p>Basic は、Standard の実稼働クラス特性が必要であるが、容量要件が低い場合に適しています。</p>


  <p>Basic のコストは、$ 75/月 (参照として米国の価格を使用) であり、 &rsquo; パブリックプレビュー期間中は、検索単位あたり $ 37.50/月に50% の割引料金で提供されます。 詳細とリージョン別価格については、 <a href="https://azure.microsoft.com/en-us/pricing/details/search/">価格</a>に関するページをご覧ください。</p>


  <h2>Free、basic、および standard との比較</h2>


  <p>ここでは、各サービスレベルの主要な側面をまとめた表を示し &rsquo; ます。 要約すると、Basic は Standard の小さなバージョンと考えることができます。 無料です。リソースの分離が保証され &rsquo; ないため、 &rsquo; SLA オプションは提供されず、サブスクリプションごとに1つしか使用できません。 これらの理由から、Free は運用環境のワークロードには適していません。</p>


  <table border="0" cellpadding="0" cellspacing="0">
      <tbody>
          <tr>
              <td valign="top" width="120">
              <p><a><b><font color="#000000">サービス レベル</font></b></a></p>
              </td>
              <td valign="top" width="126">
              <p><b>Free</b></p>
              </td>
              <td valign="top" width="126">
              <p><b>Basic</b></p>
              </td>
              <td valign="top" width="156">
              <p><b>Standard S1</b></p>
              </td>
              <td valign="top" width="187">
              <p><b>Standard S2 * * *</b></p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>可用性 SLA</b></p>
              </td>
              <td valign="top" width="126">
              <p>いいえ</p>
              </td>
              <td valign="top" width="126">
              <p>はい*</p>
              </td>
              <td valign="top" width="156">
              <p>はい*</p>
              </td>
              <td valign="top" width="187">
              <p>はい*</p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>最大ドキュメント数</b></p>
              </td>
              <td valign="top" width="126">
              <p>10,000</p>
              </td>
              <td valign="top" width="126">
              <p>100 万</p>
              </td>
              <td valign="top" width="156">
              <p>1 億 8,000 万</p>

              <p>(15 万/パーティション)</p>
              </td>
              <td valign="top" width="187">
              <p>&gt; 1億8000万</p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>最大パーティション数</b></p>
              </td>
              <td valign="top" width="126">
              <p>該当なし</p>
              </td>
              <td valign="top" width="126">
              <p>1</p>
              </td>
              <td valign="top" width="156">
              <p>12</p>
              </td>
              <td valign="top" width="187">
              <p>12</p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>最大レプリカ数</b></p>
              </td>
              <td valign="top" width="126">
              <p>該当なし</p>
              </td>
              <td valign="top" width="126">
              <p>3</p>
              </td>
              <td valign="top" width="156">
              <p>12</p>
              </td>
              <td valign="top" width="187">
              <p>12</p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>最大ストレージ</b></p>
              </td>
              <td valign="top" width="126">
              <p>50 MB</p>
              </td>
              <td valign="top" width="126">
              <p>2 GB</p>
              </td>
              <td valign="top" width="156">
              <p>300 GB</p>

              <p>(25 GB/パーティション)</p>
              </td>
              <td valign="top" width="187">
              <p>&gt;サービスあたり 300 GB</p>
              </td>
          </tr>
          <tr>
              <td valign="top" width="120">
              <p><b>サブスクリプションあたりの最大ユニット数</b></p>
              </td>
              <td valign="top" width="126">
              <p>1</p>
              </td>
              <td valign="top" width="126">
              <p>15 * *</p>
              </td>
              <td valign="top" width="156">
              <p>15 * *</p>
              </td>
              <td valign="top" width="187">
              <p>15 * *</p>
              </td>
          </tr>
      </tbody>
  </table>


  <p>* 読み取り SLA の場合は最低2レプリカ、読み取り/書き込みの場合は3レプリカ<br />

  * * は、Azure サポートを呼び出して増やすことができます。<br />

  Azure サポートを呼び出すことで S2 をプロビジョニングできます</p>


  <h2>パフォーマンス: 期待されること</h2>


  <p>インデックススキーマ、検索クエリ、および Azure Search のその他のオプションのバリエーションを指定した場合、一般的なパフォーマンスの &rsquo; 数値とは言えません。 ただし、ここでは、よく使用するテストワークロードからの基本のサンプル番号をいくつか紹介します。検索、フィルター、およびファセット可能の各フィールドを組み合わせた9つのフィールドのインデックスを使用しました。 各ドキュメントのサイズは約 1 KB です。</p>


  <p>1つの基本的な検索単位と良好なネットワーク接続を使用しています。 結果は次のようになります。</p>


  <ul>
      <li><b>一括インデックス作成</b>: サービスでは、1000-ドキュメントバッチで1分あたり ~ 15000 のドキュメントにインデックスを作成できました。 このハードをプッシュした場合、クエリは遅くなりますが、1時間に1回だけインデックスが作成された100万ドキュメントを取得できます。</li>
      <li><b>検索/インデックス作成ミックス</b>: 半分100万個のドキュメントを使用してインデックスを読み込み、同時に検索とインデックス作成を実行しました。 1回のインデックス作成要求を、10個の変更によって数秒ごとに実行し、データセット全体に対するバッチ更新ではなく、アプリ内のデータに対して &rsquo; 行われる一般的な定期的な更新をシミュレートしました。 同時に、3つのファセット、フィルター、および上位10件の一致を取得した検索を実行しました。 Uniform distribution を使用してランダムに選択されたキーワードを使用して、インデックスのコールド部分にヒットします。 準備が完了すると、1秒あたり5個のクエリが実行されます。これにより、クエリでは最大で200ミリ秒の遅延が発生します。これにより、数百のドキュメントが一致し、低 ~ 中のカーディナリティを持つフィールドよりも多くのファセットを検索できます 結果が10数千のドキュメントと一致する場合、QPS と待機時間が300-400 ミリ秒の範囲に増加することが予想されます。 データセット全体の重要な部分に一致するクエリを実行すると、待機時間が大幅に増加します。</li>
  </ul>


  <p>容量を使用してパラメーター内で操作する限り、基本的な検索単位から優れたパフォーマンスを得ることができます。</p>


  <p>パフォーマンスに関連するいくつかの注意点があります。</p>


  <ul>
      <li>多くのドキュメントに一致するクエリを使用しないでください。検索で同時にインデックスを作成します。</li>
      <li>必要なドキュメントまたはフィールドのみを表示する ($top と $select を使用)</li>
      <li>HTTP クライアントを再利用して、余分な待機時間が発生する接続を再作成しないようにします。</li>
  </ul>


  <h2>お試しください。</h2>


  <p>Azure Search Basic と価格の詳細については、価格に関する <a href="https://azure.microsoft.com/en-us/pricing/details/search/">ページ</a> を参照するか、 <a href="https://ms.portal.azure.com/#create/Microsoft.Search">ここをクリックし</a> て独自の基本的な検索サービスを作成してください。</p>
