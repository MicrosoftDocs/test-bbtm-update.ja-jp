### YamlMime:Yaml
ms.openlocfilehash: ba9d7eca548b6ea711faf8b435800d594b610ef2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895682"
Slug: announcing-azure-container-instances
Title: '高速で簡単なコンテナー: Azure Container Instances'
Summary: コンテナーは、開発者がアプリケーションを開発する方法、アプリケーションのデプロイ方法、システム管理者が環境を管理する方法を根本的に変更しています。 コンテナーは広く受け入れられオープンな標準を提供しており、プラットフォーム間およびクラウド間の単純な移植性を実現します。 現在、コンテナーのデプロイをさらに簡単にする新しい Azure サービスを発表することをお勧めします。
Content: >-
  <p>コンテナーは、開発者がアプリケーションを開発する方法、アプリケーションのデプロイ方法、システム管理者が環境を管理する方法を根本的に変更しています。 コンテナーは広く受け入れられオープンな標準を提供しており、プラットフォーム間およびクラウド間の単純な移植性を実現します。 現在、コンテナーのデプロイをさらに簡単にする新しい Azure サービスを発表することをお勧めします。 クラウド、Azure Container Instances (ACI) における最初のサービスは、新しい Azure サービスであり、管理する仮想マシンインフラストラクチャを必要とせずに、優れたシンプルさと速度でコンテナーを提供します。 ACIs は、クラウドでコンテナーを実行する最速かつ簡単な方法です。</p>


  <p>Azure Container Instance は、数秒で開始され、2番目のコンテナーによって課金される1つのコンテナーです。 ACI は、汎用性の高いサイズ設定を提供するため、vCPUs の正確な数とは別に正確なメモリ量を選択できるため、アプリケーションはインフラストラクチャに完全に適合します。 コンテナー &rsquo; には、要求された時間よりも長い時間がかかります。また &rsquo; 、必要以上に GB が使用されます。 ACI を使用すると、コンテナーは Azure platform のファーストクラスのオブジェクトになり、インスタンスの Role-Based Access Control (RBAC) が提供され、個々のコンテナーレベルでの使用状況を追跡する課金タグが提供されます。 サービスはコンテナーを直接公開するため、または上位レベルのクラスターオーケストレーションの概念について検討する必要がある VM 管理はありません。 これは、クラウドで実行されているコンテナー内のコードです。</p>


  <p>コンテナーでの作業を開始するには、クラウド内のコンテナーを簡単に使用できるように Azure Container Instances します。これにより、いくつかの単純なパラメーターのみを使用して新しいコンテナーをすばやく作成してデプロイできます。 Azure CLI を使用して ACI にデプロイするサンプルコマンドを次に示します。 詳細な手順については、「 <a href="https://docs.microsoft.com/en-us/azure/container-instances/container-instances-quickstart">ACI クイックスタート</a>」を参照してください。</p>


  <pre class="prettyprint">

  az container create -g aci_grp --name nginx --image library/nginx --ip-address public</pre>


  <p>また、正確な GB のメモリと CPU の数を制御する場合は、次のようにします。</p>


  <pre class="prettyprint">

  az container create -g aci_grp --name nginx --image library/nginx --ip-address public &ndash;cpu 2 --memory 5</pre>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f9c966d-1b84-4be1-8484-3b22ff325deb.gif"><img alt="ACIDemoGif-20170722" border="0" height="701" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3540255e-f83c-4155-bbbd-e8acb3121540.gif" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Acide Mogif-20170722" width="1440"></a></p>


  <p>Container Instances は現在、Linux コンテナーのパブリックプレビューでご利用いただけます。 Windows コンテナーのサポートは、今後数週間で利用できるようになります。 Azure CLI またはテンプレートを使用してデプロイできます。 さらに、Docker Hub などのパブリックリポジトリからすばやく簡単にデプロイしたり、Azure Container Registry を使用して独自のプライベートリポジトリからプルしたりすることができます。 デプロイされた各コンテナーは、実績のある仮想化テクノロジを使用して、他の顧客から安全に分離されます。</p>


  <p>上の図は、ACI の単純化を示しています。 Azure Container Instances は orchestrator ではなく、オーケストレーター置き換えることを意図したものではありませんが、オーケストレーターその他のサービスをコンテナー構成ブロックとして消費します。 実際、現在 &rsquo; の発表の一環として、オープンソースである <a href="https://github.com/virtual-kubelet/virtual-kubelet/tree/master/providers/azure">Kubernetes の ACI コネクタ</a>もリリースしています。 これは、Kubernetes クラスターを Azure Container Instances にデプロイできるオープンソースコネクタです。 これにより、Kubernetes によって調整されたオンデマンドでほぼ瞬時のコンテナーコンピューティングが可能になります。 VM インフラストラクチャを管理する必要がなく、ポータブル Kubernetes API も利用できます。 これにより、同じ K8s クラスター内で Vm とコンテナーインスタンスの両方を同時に利用できるため、両方の長所を活かすことができます。 Azure Container Instances は高速バースティングとスケーリングに使用できますが、Vm はより予測可能なスケーリングに使用できます。 これらの基盤となるインフラストラクチャモデル間では、ワークロードを移行することもできます。 これにより、他のクラウドプロバイダーとは異なり、Kubernetes をデプロイするための機敏性が向上します。これにより、基になる Vm なしで数秒で開始され、1秒あたりに課金および拡張されるサービスが可能になります。&nbsp;</p>


  <p>次に示すのは、ACI コネクタのデモです。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad5b4178-b792-4354-b3af-cb9e7de955ea.gif"><img alt="aci-connector-k8s" border="0" height="792" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/81f307ba-bb6f-4480-b9a6-0fbf49165ed9.gif" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="aci-コネクタ-k8s" width="1179"></a></p>


  <p>今後も、コンテナーと Kubernetes を使用した投資とコミュニティの取り組みを続けています。これには、最新リリースの <a href="https://github.com/Azure/draft">Draft</a>や、現在リリースされているオープンソースの ACI コネクタが含まれます。 これらのコミュニティリリースでは、この拡張されたコンテナースペースで革新的で humbling なエクスペリエンスを実現するために、オープンエコシステムを利用することが重要かどうかを引き続き学びます。 マイクロソフトの教育とコミュニティの取り組みを続けるために、Microsoft が Cloud Native Computing Foundation (CNCF) をプラチナメンバーとして参加させたことを <a href="https://azure.microsoft.com/en-us/blog/announcing-cncf">お知らせ</a> します。 cncf は、Kubernetes、prometheus、opentracing、Fluentd、Linkerd、、、grpc など、さまざまなプロジェクトをホストし、その管理を行う Linux Foundation (昨年参加した Microsoft) の共同 Project です。 cncf コミュニティと密接に連携し、Gabe Monroy (リード PM、コンテナー @ Microsoft Azure) を cncf ボードに参加させることをお勧めします。</p>


  <p>これらの新しいサービスを試して、フィードバックをお寄せいただき、幸いです。 何をビルドしようとしているのかを楽しみにしています。</p>


  <p>Ya を参照してください。</p>


  <p>Corey</p>
