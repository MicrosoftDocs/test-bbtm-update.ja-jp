### YamlMime:Yaml
ms.openlocfilehash: 1d00fb333f047355ce7d7781b8496b9f6060b725
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909948"
Slug: cloud-services-series-whats-new-in-windows-azure-caching
Title: 'Cloud Services シリーズ: Azure Caching のWindows新機能'
Summary: Windows Azure Cach Windows ing は、Azure アプリケーションを高速化し、データベースの負荷を軽減するために使用できる、分散型のメモリ内でスケーラブルで信頼性の高いキャッシュ ソリューションです。 最初の実稼働サービス...
Content: '<p><a target="_blank" href="https://www.windowsazure.com/en-us/home/features/caching/?WT.mc_id=cmp_pst001_blg_post0138cac">Windows Azure Cach Windows ing</a> は、Azure アプリケーションを高速化し、データベースの負荷を軽減するために使用できる、分散型のメモリ内でスケーラブルで信頼性の高いキャッシュ <a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0138gen">ソリューション</a>です。 最初の実稼働サービスは 2011 年 5 月にリリースされました。このサービスを使用しているお客様が複数いるのを見て、うらやむを得ない。 リリース以降、お客様から貴重なフィードバックを受け取り、キャッシュ使用の新しいパターンをサポートするためのいくつかの深い投資と共に、それらの組み込みにも苦労しています。&nbsp;この作業のプレビュー リリースは、<a href="https://go.microsoft.com/fwlink/?LinkId=254269&amp;clcid=0x409" target="_blank">Azure 2012</a> 年 6 月 SDK の Windowsリリースをお知らせします。&nbsp;プレビュー&rsquo;の概要について&rsquo;話しますが、その前に&hellip;</p>  <h3>少しの背景</h3>  <p>現在、Windows Azure Caching は、サービスが複数のテナント間で共有されている Windows Azure 内のマシンを使用する <i>Windows Azure サービス</i>として提供されています (したがって、これは <i>Windows Azure</i> &ndash; 共有キャッシュと参照されます)。 各顧客は、一定の量のメモリ (128 MB から 4 GB) を支払い、選択したメモリに基づいてトランザクションのスループットとネットワーク帯域幅に制限があります。 これにより、テナント全体ですべてが&ldquo;&rdquo;公平であり、これらの制限を超えるとキャッシュの使用量が調整されます。 これは多くのアプリケーションでキャッシュを使用する場合は非常に適切な方法ですが、お客様が事前にリソースのニーズ (メモリ、トランザクション、帯域幅) を正確に見積もる必要があり、アプリケーション内の事前に割り当てられたマシンに基づいて一貫した動作を必要とするアプリケーションもあります。 キャッシュはパフォーマンスのコア コンポーネントである場合、これらのアプリケーションの多くでパフォーマンスの一貫性が重要です。</p>  <h3>それなら...</h3>  <p>Azure SDK Windows最新版では、お客様のクラウド アプリケーションの一部としてホストされている Windows Azure Caching&rsquo; のプレビュー バージョンを導入しています。 そのため、クォータの制約は一つも設定されず、顧客によってキャッシュに割り当てられたリソースによってのみ制限されます。 &nbsp;</p>  <h3>でもそれだけじゃないんです&hellip;</h3>  <p>Windows Azure Caching のパフォーマンスがはるかに<i>向上し、</i>一貫性のあるパフォーマンスと高可用性が実現しました。 &nbsp;よりシンプルな統合された開発エクスペリエンスと、Visual Studioと&amp;管理の監視エクスペリエンスがWindows Azure portal。 このバージョンのキャッシュでは &amp; 、いくつかの新機能 (リージョン タグ、通知付きローカル キャッシュ) も利用できます。 最後に、memcached を使用するアプリケーションがある場合は、memcached &ndash; プロトコルをサポートする移行パスが提供されます。そのため、高可用性などの Windows Azure キャッシュの差別化機能を使用しながら、便利に移行できます。 お気に入りで、さらに知りたい場合は、次をお読みください。</p>  <h3>新しいデプロイ モデル</h3>  <p>前に説明したように、キャッシュは顧客アプリケーションの一部です。 キャッシュ (プレビュー) 分散サーバー&ndash;およびクライアント ライブラリは&ndash;、Azure SDK の新しいWindowsとして出荷されます。 キャッシュを使用するようにアプリケーションをビルドすると、キャッシュ ライブラリが他のアプリケーション成果物と共に cspkg ファイルにパッケージ化され、アプリケーションを Windows Azure にデプロイすると、制御する Web ロールまたは Worker&nbsp; ロールにキャッシュがデプロイされます。これらのインスタンスの大小とキャッシュのインスタンス数を選択し、他の Windows Azure ロールと同様にスケールアップまたはスケールダウンすることで、実行時にキャッシュ容量を管理できます。</p>  <h3>デプロイ モード</h3>  <p>キャッシュを使用するには、次の 2 つのデプロイ モードのいずれかを選択できます。</p>  <p><img style="display: block; margin-left: auto; margin-right: auto;" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0564.CachingUpImage.png" alt="" border="0" height="285" width="611"></p>  <ol>  <li>Web/worker ロールと一緒に配置されたキャッシュ: 一部のユーザーは、わずか数ノードでキャッシュなしで既にデプロイされているアプリケーションを持っている場合があります。 キャッシュを追加してメモリ、CPU、帯域幅の予備容量を使用することで、アプリケーションを高速化できます。 実質的&rsquo;に無料です (実際には、既に支払っていますが、これはほぼ無料のキャッシュです)。 必要なのは、Web ロールまたは worker ロールがキャッシュもホスト可能にし、完了です。 これで、アプリケーション内の任意のロールから Caching を呼び出す必要があります。</li>  <li>分離ノードでの一貫性のあるキャッシュ: 一&rsquo;貫した予測可能なパフォーマンスを必要とするより深刻なキャッシュ要件がある場合は、キャッシュをホストする専用ロールを用意する必要があります。 容量 <a target="_blank" href="https://msdn.microsoft.com/en-us/library/hh914129.aspx">計画ガイドは</a> 、キャッシュに格納する負荷の種類に基づいて、ロールのサイズと必要なインスタンスの数を決定するのに役立ちます。</li>  </ol>  <h3>そうでしょうか。</h3>  <p>閉じさえもしない。 さまざまな種類のデプロイでキャッシュを使用する柔軟性とは別に、Windows Azure Caching は、市場の他のキャッシュ ソリューションと区別する機能の組み合わせです。 利点の一部を次に &nbsp;示します。</p>  <ol>  <li><strong>コスト効率が高い:</strong>&nbsp;料金は、キャッシュがホストされているコンピューティング インスタンスのコストに対してだけ支払います。追加の Premium はありません。 コロケーション モードは実質的に無料であり、コンピューティング VM 上にある可能性がある予備の CPU、帯域幅、メモリ リソースを利用できます。</li>  <li><b>100 GB 以上のキャッシュへのエラスティック スケールアウト: </b>要件ごとにインスタンスの数を増やしたり減らしたりすると、構成を変更することなく、キャッシュ クライアントが新しいロールを自動的に利用し始めるのです。 また、負荷を分散するために、既存のデータがすべてのノード間で再配布されます。 &nbsp;キャッシュは最大 10 の XL VM でスケールアップできます。100 GB を超えるキャッシュ データが提供されます。 より大きなキャッシュが必要 &ndash; な場合は、はるかに高くなる可能性がある場合は、お問い合わせください。 さらに、キャッシュのスループットは、使用する Azure Windowsによってのみ制限されます。</li>  <li><b>高速です。</b> キャッシュを高速化するために、&rsquo;複数の機能強化が行われます。 適切に構成されたキャッシュで約 5 倍の改善を行った場合、待機時間が 1 &ndash; ミリ秒の順序で予想できます。 Azure Caching でのローカル キャッシュ機能の適切Windows使用することで、これを別の桁違いでダウンすることができます。 また、ラウンドトリップと待機時間を短縮する一括操作もサポートされています。</li>  <li><strong>新機能:</strong>&nbsp;これで、他の機能のホストにもアクセスできます。 これらの一部は、キャッシュ (Microsoft AppFabric 1.1 for Windows Server) のオンプレミス リリースで利用できます。Azure で要求Windowsでした。</li>  <ol>  <li><b>複数の名前付きキャッシュ: </b>これで、キャッシュを複数の名前付きキャッシュに論理的に分割できます。それぞれの名前付きキャッシュには、使用事例に応じて、個別のデータ ポリシー セットを適用できます。</li>  <li><b>高可用性キャッシュ:</b> キャッシュに依存するアプリケーションの場合は、キャッシュで高可用性を構成できます。 これにより、キャッシュに格納した各項目の追加コピーが別のインスタンスに保持されます。 これにより、データ損失の可能性が大幅に減少し、ノードの障害時にキャッシュ ヒットの比率が高く維持されます。 HA が有効になっていない場合でも、Windows Azure Caching は、基になるキャッシュ コンピューティング インスタンスに影響を与える Windows Azure 環境の変更によるデータの削除を防ぐために機能します。</li>  <li><b>通知と一緒</b> にローカル キャッシュを使用する: 分散されたメモリ内キャッシュへのアクセスは、DB アクセスよりも桁速くなりますが、ローカルにアクセスする方が優れた方法です。 ローカル キャッシュ機能を使用して有効にします。 これは、読み取り負荷の高いデータと、整合性要件が&rsquo;最も重要ではない場合に役立ちます。 キャッシュ クライアント ライブラリは、ローカル キャッシュをネイティブでサポートしています。通常、データの取得は非常に高速です (ネットワーク ホップなし、シリアル化/逆シリアル化のコストはありません)。さらに、通知に登録して、キャッシュ クラスターから定期的にローカル キャッシュを更新できます。</li>  <li><b>リージョンとタグを使用する: </b>この機能を使用すると、関連するオブジェクトをまとめて保持できます。 たとえば、ユーザー セッションのすべてのオブジェクトをリージョンに置いて、それらをまとめてクエリを実行できます。 さらに、API 呼び出しを使用してこれらのタグでクエリをフィルター処理できるよう、リージョン内のオブジェクトにタグを追加できます。</li>  </ol>  <li><b>コードを変更せずに memcache アプリケーションを実行します。 </b>最後に、memcache<b> </b>&ndash; という一般的なキャッシュ ソリューションの 1 つを既に使用している可能性があります。 上記の 1 つ以上の機能Windows Azure Caching に移行できますが、完全な書き換えが心配です。 ご意見を聞いた&ndash;ので、Azure Caching Windows memcache クライアントを理解しました。 そのため、memcache クライアントを Caching クラスターに直接ポイントして開始できます。 &nbsp;&ndash;これはほとんどの場合に機能しますが、パフォーマンスについて本当に気に入っている場合は、パフォーマンスを向上させる memcache クライアント shim を使用する必要があります (&lsquo;&rsquo;以前のケースでは、shim で回避されるキャッシュ クラスター内のゲートウェイを経由します)。 どちらの方法でも、クライアント アプリケーションを書き換える必要なく、キャッシュの機能を活用できます。&nbsp;</li>  </ol>  <p>今後数週間で、これらの各トピックについてさらに詳しい説明を行います。 キャッシュ&rsquo;の容量計画、監視、デバッグ、一般的な問題の修正を行う方法に関するブログを作成します。 お気&rsquo;に入り&rsquo;が何かある場合は、コメントを残してください。 その間に、azure Caching (プレビュー) Windowsテスト ドライブを提供し、その動作をお知らせします。 このブログのコメントを通じていつでもお問い合わせを受け取り、<a href="https://social.msdn.microsoft.com/Forums/en-US/windowsazuredata/threads" target="_blank"></a>フォーラムに質問を投稿してください。これは、チームが定期的に対応しています。</p>  <p>幸せなキャッシュ!</p>  <p>-提供:Pra pra prat Kumar、Azure Windowsシニア プログラム マネージャー</p>'
