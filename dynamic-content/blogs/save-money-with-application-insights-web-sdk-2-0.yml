### YamlMime:Yaml
ms.openlocfilehash: d63ab1171924676ec69a1aeb833278178198294a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892725"
Slug: save-money-with-application-insights-web-sdk-2-0
Title: Application Insights ' web SDK 2.0 を使用してコストを節約
Summary: 1年未満の前に、Application Insights SDK の最初の安定したバージョンを提供しています。 その後、この時間が経過すると、非常に長い時間がかかります。 詳細については、後の説明を参照してください。
Content: "<p>1年未満の前に、Application Insights SDK の最初の安定したバージョンを提供しています。 その後、この時間が経過すると、非常に長い時間がかかります。 その後、バグが修正され、新機能が導入され、多くのフィードバックを受け取り、ニーズをより深く理解できるようになりました。 ここで、新しいバージョンの Application Insights SDK を作成します。 Web アプリケーション用の .net Application Insights SDK 2.0 をご利用いただき、ありがとうございます。</p>\n\n<h2>互換性に影響する変更</h2>\n\n<p>.net Application Insights SDK 2.0 for Web アプリケーションでは、いくつかの重大な変更が導入されました。 重大な変更点の1つは、4月15日に発生する Application Insights sdk から HockeyApp sdk へのデバイスのサポートを移行することです。 一方、デバイスのサポートが必要な場合は、このバージョンにアップグレードしないでください。 Managed Dohmke による動機を説明する <a href=\"https://azure.microsoft.com/en-us/blog/transitioning-mobile-apps-from-application-insights-to-hockeyapp\">優れたブログ</a> 記事があります。</p>\n\n<p>もう1つの大きな変更は、削除されたインターフェイス IContextInitializer です。 コンテキスト初期化子の概念は、<a href=\"https://apmtips.com/blog/2015/06/09/do-not-use-context-initializers/\">コンテキスト初期化子を使用しない</a>という &ldquo; 記事を公開したことがわかりにくく、エラーが発生しやすくなっています。 &rdquo;メジャーバージョンの変更により、この概念を SDK から削除する機会がありました。 <a href=\"https://github.com/Microsoft/ApplicationInsights-dotnet/releases/tag/v2.0.0\">コア</a>と<a href=\"https://github.com/Microsoft/ApplicationInsights-dotnet-server/releases/tag/v2.0.0\">Web</a> nuget のリリースノートには、より小さな重大な変更が記載されています。</p>\n\n<h2>予測可能な料金</h2>\n\n<h4>アダプティブ サンプリング</h4>\n\n<p>では、 <a href=\"https://www.nuget.org/packages/Microsoft.ApplicationInsights.Web\">Web NuGet の Application Insights</a>をインストールすると、新しい SDK アダプティブ<a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-insights-sampling/\">サンプリング</a>が既定で有効になります。 アダプティブサンプリングでは、アプリケーションデータの統計的に正しい分析を維持しながら、限定されたテレメトリのセットを収集して保存します。</p>\n\n<p>サンプリングが発生したときに、同じ構成が異なる環境で動作することを確認します。 たとえば、開発環境とテスト環境では、ほとんどの場合、すべてのテレメトリデータが表示されます。 高負荷の運用環境では、SDK によって収集されるデータの量が自動的に制限されます。</p>\n\n<h4>要求を除外する</h4>\n\n<p><a href=\"https://azure.microsoft.com/en-us/blog/request-filtering-in-application-insights-with-telemetry-processor/\">フィルター処理</a>のネイティブサポートにより、収集されるデータの量を減らすことができます。 特定の URL から要求<a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-insights-api-filtering-sampling/#filtering\">を除外し</a>たり、Web SDK によって代理トラフィック &rdquo; として &ldquo; マークされたロボット &ndash; からの要求を除外したり、カスタムのハートビートイベントを除外することができます。 フィルター処理を使用すると、を決定することができます。</p>\n\n<h4>ノイズが少ない</h4>\n\n<p>また、一部の既定のフィルター処理も有効にしました。 具体的には、静的コンテンツのテレメトリは収集しません。 これにより、既定で SDK が生成するノイズが少なくなります。</p>\n\n<p>Application Insights は、多くの監視ニーズに対応する複雑なソリューションです。 さまざまなプラットフォームからテレメトリを収集し、問題の検出、トリアージ、診断を行うことができます。 積極的な検出では、予想されていない問題と分析機能が認識されます。</p>\n\n<p>これらすべての機能を使用するには、アプリケーションから大量のデータを収集する必要があります。 収集されるデータの量は、実際に追加される可能性があります。 データ収集がどの程度効率的であるかにかかわらず、常に制限とコストが関連付けられています。 Application Insights には、送信と分析に必要な量のデータに対して料金を支払うことができる柔軟なモデルが用意されています。</p>\n\n<p>データに対してカスタム分析を実行している多くのお客様がいます。 同時に、基本的な検出/トリアージ/診断シナリオには、予測可能な価格を設定する必要があり、しきい値の上限によって制限されないという、他のお客様からのフィードバックを多数受け取ります。</p>\n\n<p>.net Application Insights SDK 2.0 for Web アプリケーションでは、APM シナリオの予測可能な価格に最初の手順を行いました。 これで、テレメトリデータのフィルター処理が非常に簡単になりました。事前に定義されたフィルターがあります。 ただし、最も大きな改善点は、アプリケーションで大量の要求が発生しても、統計的に適切なデータを取得できるアダプティブサンプリング機能です。</p>\n\n<h2>Correlation</h2>\n\n<p>多くの診断シナリオでは、テレメトリの相関関係が重要です。 Application Insights を使用すると、ユーザーとセッションの関連付けを行うことができます。 特定の要求に関連付けられたテレメトリが表示されます。 たとえば、アプリケーションの特定のページで発生したすべての例外を見つけることができます。</p>\n\n<p>microsoft では、関連付けのストーリーを改善するために作業を進めています。また、Web アプリケーション用の .net Application Insights SDK 2.0 では、多くの機能強化が行われています。</p>\n\n<h4>自動生成された RequestTelemetry を公開する</h4>\n\n<p>テレメトリを現在の要求に関連付ける必要がある場合は、新しい API メソッド呼び出しを使用して現在の要求に関連付けられている RequestTelemetry オブジェクトにアクセスできるようになりました。 たとえば、ログファイルのトレースを Application Insights 要求テレメトリに関連付けるには、次のようなコードを記述します。</p>\n\n<pre class=\"prettyprint\">\nvar requestTelemetry = HttpContext.Current.GetRequestTelemetry(); \n\nTrace.WriteError(&ldquo;Error processing request with Application Insights ID: &rdquo; + requestTelemetry.Id); \n</pre>\n\n<h4>操作階層の定義</h4>\n\n<p>これで、Application Insights で operationapi を使用して操作のスコープを定義できるようになりました。 操作のスコープ下にあるすべての呼び出しには、何らかの操作 id と操作名が含まれます。 たとえば、次のコードでは、トレースと bing.com への依存関係呼び出しの両方に関連付けられた要求テレメトリオブジェクトが生成されます。</p>\n\n<pre class=\"prettyprint\">\nusing (var op = this.telemetryClient.StartOperation&lt;RequestTelemetry&gt;(&quot;request&quot;))  \n\n{  \n\n    this.telemetryClient.TrackTrace(&quot;trace1&quot;);  \n\n \n\n    HttpClient client = new HttpClient();  \n\n    client.GetStringAsync(&quot;https://bing.com&quot;);  \n\n \n\n    this.telemetryClient.TrackTrace(&quot;trace2&quot;); \n\n } \n</pre>\n\n<h2>AJAX 呼び出しをバックエンドアクティビティに関連付ける</h2>\n\n<p>Ajax 呼び出しとそれに対応するサーバー要求の間の相関関係により、AJAX 呼び出しの速度が遅い理由を実際に理解することができます。 アプリケーション &rsquo; のパフォーマンスの調査中にユーザーが直面する問題から開始すると、より顧客に影響を与えるプロセスが増加します。 この機能を使用すると、AJAX 呼び出しについて深い明確な理解が得られ、ユーザーが直面している特定の問題の母語を把握することができます。</p>\n\n<p><img alt=\"correlation\" border=\"0\" height=\"276\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f10db147-2d32-4db9-9c83-e4d88d8ec7a1.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"相関\" width=\"610\"></p>\n\n<h2>次の内容 &rsquo;</h2>\n\n<p>新しい SDK バージョンの使用を開始することをお勧めします。 より高速で構成が可能であり、多くの興味深い機能があります。</p>\n\n<p>SDK 2.x の今後のマイナーリリースでは、このデータに対する分析の機能を維持しながら、APM シナリオをより予測しやすくします。 お客様にとって最も重要なテレメトリを理解するためにスマートアルゴリズムを実装し、メトリックがより正確に &nbsp; なり、アプリケーションのテレメトリデータをより詳細に制御できるようになります。</p>\n\n<p>インプロセスとコンポーネント間のテレメトリの相関関係について多くのアイデアがあります。 この分野に投資を行います。</p>\n\n<p>Application Insights には多くの新機能が用意されているので、お客様の<a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio/category/77108-application-insights\">フィードバック</a>をお寄せください。</p>"
