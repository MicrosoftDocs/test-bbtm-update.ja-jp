### YamlMime:Yaml
ms.openlocfilehash: 7a0d747e6dc99341b2a1bc163671b65ac74ab45d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896640"
Slug: announcing-user-delegation-sas-tokens-preview-for-azure-storage-blobs
Title: BLOB のユーザー委任 SAS トークンプレビューのAzure Storage発表
Summary: Azure Storage ID に基づいて事前に承認された URL (SAS トークン) のサポートAzure Active Directoryしています。
Content: >-
  <p>クラウド ストレージは、多くの場合、ブラウザーおよびモバイル アプリケーションのコンテンツ ソースとして機能します。 これは通常、アプリケーションによって発行され、事前に承認された URL を使用して実現されます。これにより、このアクセスをプロキシするサービスを必要とせずに、特定のコンテンツへの時間制限付きアクセスが直接提供されます。</p>


  <p>Azure Storageは、Shared Access Signature トークン (SAS トークン) を使用して<a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview?toc=%2fazure%2fstorage%2fblobs%2ftoc.json" target="_blank">このパターン</a>をサポートします。 これらのトークンは、アカウント管理者によって制御されるストレージ アカウント アクセス キーを使用して承認ステートメントに署名することで、ストレージ オブジェクトへの特定の時間制限付きアクセス権を付与します。 この方法では、クライアントに必要な制限付きアクセスが提供される一方で、特定のコンテンツへの読み取りアクセスのみを必要とするアカウント全体を完全に制御できるので、これらのトークン発行サービスへのアクセスの過剰なプロビジョニングを表す場合があります。</p>


  <p>現在、新しい種類の SAS トークンであるユーザー委任 SAS トークンの <strong>プレビューを開始します</strong>。 Azure Storage の Azure AD と Azure ロールベースのアクセス制御 <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad?toc=%2fazure%2fstorage%2fblobs%2ftoc.json" target="_blank">(RBAC)</a> の最近のリリースを拡張することで、特権の低いユーザーとサービスは、この新しい種類の事前承認された URL を使用して、クライアントへのアクセスのサブセットを委任できます。 クライアントは、Azure Active Directory (AD) アカウントに関連付けされたユーザー委任キーを取得し、それを使用して、独自のアクセス権のサブセットを付与する SAS トークン<strong>を作成します</strong>。</p>


  <p>つまり、たとえば、エンド ユーザー コンテンツへの読み取りアクセス権のみを持つアプリケーション コンポーネントは、強力なアカウント アクセス キーの格納と使用に伴うリスクを伴わずに、短期間の読み取り専用 URL をクライアントに発行するように構成できます。 Azure Storageログには、このアプリケーション コンポーネントの Azure AD プリンシパルに関連付けられているこれらの SAS トークンのクライアントの使用も反映されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f6b2a3b5-21d1-464e-b17d-d2d29ba504b8.jpg"><img alt="An image showing the user delegation SAS flow" border="0" height="617" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b12f271d-20df-47c3-8ff6-1e88edf9fc72.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="ユーザー委任 SAS Flow" width="1024"></a></p>


  <p>このプレビュー期間中は、独自のコードを使用してユーザー委任 SAS トークンを生成したり、Azure PowerShellまたはAzure CLI。 まず、SAS トークンを生成するユーザー アカウントにデータにアクセスするための RBAC アクセス許可を付与する必要があります。 BLOB データへの RBAC アクセス権の付与の詳細については、 <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad#assigning-rbac-roles-for-access-rights" target="_blank">こちらを参照してください</a>。</p>


  <h2>ユーザー委任 SAS トークンを作成する方法</h2>


  <p>プレビュー機能は、すべてのユーザーが非実稼働環境で使用できます。 登録は必要ありません。</p>


  <p>開発者向けの.NET コードを使用してユーザー委任 SAS トークンを生成する例を次に示します。 また、Azure.Identity ライブラリと統合された Azure.Identity Storage用<a href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/storage/Azure.Storage.Blobs" target="_blank">の</a>新しい <a href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/identity/Azure.Identity" target="_blank">.NET クライアント ライブラリも</a>示します。</p>


  <pre style="margin-left: 40px;">

  <code>client = new BlobServiceClient(accountUri, new DefaultAzureCredential());


  //define permission set to read blob, valid from now for a specified number of minutes

  BlobSasBuilder builder = new BlobSasBuilder()

  {
      ContainerName = containerName,
      BlobName = blobName,
      Permissions = &quot;r&quot;,
      Resource = &quot;b&quot;,
      StartTime = DateTimeOffset.UtcNow,
      ExpiryTime = DateTimeOffset.UtcNow.AddMinutes(tokenLifetime)
  };


  //refresh user-delegation key as necessary, valid for up to a maximum of 7 days

  if (currentUdk == null || currentUdk.SignedExpiry &lt;= builder.ExpiryTime)

  {
      currentUdk = client.GetUserDelegationKey(DateTimeOffset.UtcNow, DateTimeOffset.UtcNow.AddDays(7)).Value;
  }


  //generate a signed SAS token using the user-delegation key

  string sasToken = builder.ToSasQueryParameters(currentUdk, accountName).ToString();</code></pre>


  <p>完全な作業例については、次のドキュメント<a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-user-delegation-sas-create-dotnet" target="_blank">をAzure Storageしてください</a>。</p>


  <p>ユーザーは、コマンド ライン ツールのプレビューを使用して、ユーザー委任 SAS トークンを生成することもできます。 ユーザーの資格情報に基Azure CLI読み取り専用 SAS&rsquo; を生成する方法の例を次に示します。</p>


  <pre style="margin-left: 40px;">

  <code>$ az login

  $ az storage blob generate-sas \

  &gt; --account-name myaccount \

  &gt; --container-name container \

  &gt; --name file.txt \

  &gt; --permissions r \

  &gt; --expiry 2019-08-30 \

  &gt; --auth-mode login \

  &gt; --as-user \

  &gt; --full-uri

  Argument &#39;--as-user&#39; is in preview. It may be changed/removed in a future release.


  https://myaccount.blob.core.windows.net/container/file.txt?se=2019-08-30&amp;sp=r&amp;sv=2018-11-09&amp;sr=b&amp;skoid=8c93ed4c-3e11-43f4-9307-3664c9c16554&amp;sktid=9341f370-b982-47de-b7c1-8dbe61328559&amp;skt=2019-08-28T22%3A57%3A38Z&amp;ske=2019-08-30T00%3A00%3A00Z&amp;sks=b&amp;skv=2018-11-09&amp;sig=7trGEakY86Uj5rXsH2ApiyCZfxFgNnh6NFy4wcnmfmQ%3D</code></pre>


  <p>詳細な例については、ドキュメントを参照して、<a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-user-delegation-sas-create-powershell" target="_blank">Azure PowerShellとAzure CLI</a><a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-user-delegation-sas-create-cli" target="_blank">。</a></p>


  <p>Azure BLOB のユーザー委任 SAS トークンを使用すると、低い特権 ID から事前に承認された URL を発行できます。また、すべての Azure クラウドと場所でプレビューで使用できます。 詳細については、ドキュメントを参照 <a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Frest%2Fapi%2Fstorageservices%2Fcreate-user-delegation-sas&amp;data=02%7C01%7Cv-jegodw%40microsoft.com%7C62e91a3df99743cc452b08d730b2cf8b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637031416849669565&amp;sdata=m92cNFsBMuCqM4lnyQZHV5nkIxfdYl3frkiA7hsSwdw%3D&amp;reserved=0" target="_blank">し</a>、試してみてください。 ご意見をお寄せください <a href="mailto:AzureStorageFeedback@microsoft.com">AzureStorageFeedback@microsoft.com</a>。</p>
