### YamlMime:Yaml
ms.openlocfilehash: 15bf0affdffca297f648844f33ba40fb296a7b8c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905228"
Slug: new-configurable-idle-timeout-for-azure-load-balancer
Title: '新規: 構成可能なアイドル タイムアウト (Azure Load Balancer'
Summary: お客様の PaaS および IaaS Azure Load Balancerの構成可能な TCP アイドル タイムアウトがサポートCloud Services。
Content: >-
  構成可能な TCP アイドル タイムアウトAzure Load Balancer、構成可能な TCP アイドル タイムアウトがサポートCloud ServicesサポートVirtual Machines。 この機能は、Service Management API <a href="https://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/" target="_blank">PowerShell</a> またはサービス モデルを使用して<a href="https://msdn.microsoft.com/en-us/library/windowsazure/ee758711.aspx" target="_blank">構成できます。</a> <a href="https://msdn.microsoft.com/en-us/library/azure/ee460799.aspx" target="_blank"></a>

  <h2>概要</h2>

  既定の構成では、Azure Load Balancer"アイドル タイムアウト" 設定は 4 分です。


  つまり、タイムアウト値を超える TCP セッションまたは http セッションで非アクティブな期間がある場合、クライアントとサービスの間で接続が維持される保証はありません。


  接続が閉じられます。クライアント アプリケーションには、"基になる接続が閉じられました:維持されている必要がある接続がサーバーによって閉じられました" のようなエラー メッセージが表示されます。


  接続を長い期間アクティブに保つ一般的な方法は、TCP キープアライブを使用する方法です (.NET の例については、こちらを参照 <a href="https://msdn.microsoft.com/en-us/library/system.net.servicepoint.settcpkeepalive.aspx" target="_blank">してください</a>)。 接続でアクティビティが検出されない場合、パケットが送信されます。 現在のネットワーク アクティビティを維持することで、アイドル タイムアウト値にヒットし、接続が長時間維持されます。


  TCP キープアライブは、バッテリが制約ではないシナリオでは適切に機能しますが、一般にモバイル アプリケーションでは有効なオプションではありません。 モバイル アプリケーションから TCP キープアライブを使用すると、デバイスのバッテリのドレインが速くなる可能性があります。


  このようなシナリオをサポートするために、構成可能なアイドル タイムアウトのサポートが追加されました。 これで、4 ~ 30 分間設定できます。 この設定は着信接続のみ使用できます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/Tcp-Idle-Timeout-.png"><img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;" title="Tcp アイドル タイムアウト " alt="Tcp Idle Timeout " src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Tcp-Idle-Timeout-_thumb.png" width="330" height="410" border="0" /></a>


  &nbsp;

  <h2>シナリオ</h2>

  PowerShell または仮想マシンを使用して <a href="https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-set-up-endpoints/" target="_blank">仮想マシン上</a> のエンドポイントへの TCP タイムアウトを構成Service Management API


  PowerShell またはエンドポイント を使用してLoad-Balancedエンドポイント セットの TCP タイムアウトを構成Service Management API。


  パブリック IP の TCP タイムアウトInstance-Level構成する


  サービス モデルを使用して Web/Worker ロールの TCP タイムアウトを <a href="https://msdn.microsoft.com/en-us/library/windowsazure/ee758711.aspx" target="_blank">構成します</a>。

  <h4></h4>

  <h2>PowerShell の例</h2>

  必ず最新のバージョンをダウンロード<a href="https://github.com/Azure/azure-sdk-tools/releases/tag/v0.8.5-July2014" target="_blank">してインストールAzure PowerShell</a>


  &nbsp;

  <h3>パブリック IP の TCP タイムアウトInstance-Level 15 分に構成します。</h3>

  <pre class="prettyprint">Set-AzurePublicIP –PublicIPName webip –VM MyVM -IdleTimeoutInMinutes 15</pre>

  IdleTimeoutInMinutes の設定は任意です。 設定しない場合、既定のタイムアウト時間は 4 分です。 4 分から 30 分の間で設定できます。


  &nbsp;

  <h3>仮想マシンでの Azure エンドポイントの作成時にアイドル タイムアウトを設定します。</h3>

  <pre class="prettyprint">Get-AzureVM -ServiceName "mySvc" -Name "MyVM1" | Add-AzureEndpoint -Name "HttpIn" -Protocol "tcp" -PublicPort 80 -LocalPort 8080 -IdleTimeoutInMinutes 15| Update-AzureVM</pre>

  &nbsp;

  <h3>アイドル タイムアウトの構成を取得します。</h3>

  <pre class="prettyprint">PS C:\&gt; Get-AzureVM –ServiceName “MyService” –Name “MyVM” | Get-AzureEndpoint


  VERBOSE: 6:43:50 PM - Completed Operation: Get Deployment


  LBSetName : MyLoadBalancedSet


  LocalPort : 80


  Name : HTTP


  Port : 80


  Protocol : tcp


  Vip : 65.52.xxx.xxx


  ProbePath :


  ProbePort : 80


  ProbeProtocol : tcp


  ProbeIntervalInSeconds : 15


  ProbeTimeoutInSeconds : 31


  EnableDirectServerReturn : False


  Acl : {}


  InternalLoadBalancerName :


  IdleTimeoutInMinutes : 15</pre>

  &nbsp;

  <h3>負荷分散エンドポイント セットでの TCP タイムアウトを設定します。</h3>

  エンドポイントが負荷分散エンドポイント セットの一部である場合は、負荷分散エンドポイント セットで TCP タイムアウトを設定する必要があります

  <pre class="prettyprint">Set-AzureLoadBalancedEndpoint -ServiceName "MyService" -LBSetName "LBSet1" -Protocol tcp -LocalPort 80 -ProbeProtocolTCP -ProbePort 8080 -IdleTimeoutInMinutes 15</pre>

  &nbsp;

  <h2>クラウド サービスの例</h2>

  <a href="https://azure.microsoft.com/blog/2014/08/04/announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4/" target="_blank">Azure SDK for .NET 2.4</a> を利用してクラウド サービスを更新できます


  クラウド サービスのエンドポイントの設定は、.csdef で行われます。 そのため、クラウド サービスのデプロイで TCP タイムアウトをアップデートするには、デプロイのアップグレードが必要です。 TCP タイムアウトがパブリック IP 向けにのみ指定されている場合は例外として扱われます。 パブリック IP は .cscfg で設定され、デプロイのアップデートやアップグレードを通じて更新されます。


  エンドポイント設定の .csdef の変更は次のように行います。

  <pre class="prettyprint">&lt;WorkerRole name="worker-role-name" vmsize="worker-role-size" enableNativeCodeExecution="[true|false]"&gt;
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="input-endpoint-name" protocol="[http|https|tcp|udp]" localPort="local-port-number" port="port-number" certificate="certificate-name" loadBalancerProbe="load-balancer-probe-name" idleTimeoutInMinutes="tcp-timeout" /&gt;
    &lt;/Endpoints&gt;
  &lt;/WorkerRole&gt;The .cscfg changes for the timeout setting on Public IPs are:


  &lt;NetworkConfiguration&gt;
    &lt;VirtualNetworkSite name="VNet"/&gt;
    &lt;AddressAssignments&gt;
      &lt;InstanceAddress roleName="VMRolePersisted"&gt;
        &lt;PublicIPs&gt;
          &lt;PublicIP name="public-ip-name" idleTimeoutInMinutes="timeout-in-minutes"/&gt;
        &lt;/PublicIPs&gt;
      &lt;/InstanceAddress&gt;
    &lt;/AddressAssignments&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  &nbsp;

  <h2>API の例</h2>

  サービス管理 API を使用して TCP アイドル タイムアウト <a href="https://msdn.microsoft.com/en-us/library/azure/ee460799.aspx">を構成できます</a>


  x-ms-version ヘッダーがバージョン 2014-06-01 以上に設定されているを追加してください。


  &nbsp;

  <h3>デプロイされているすべての仮想マシンで、指定した負荷分散入力エンドポイントの構成をアップデートします。</h3>

  <strong>Request</strong>

  <pre class="prettyprint">POST https://management.core.windows.net/&lt;subscription-id&gt;/services/hostedservices/&lt;cloudservice-name&gt;/deployments/&lt;deployment-name&gt;</pre>

  <strong>応答</strong>

  <pre class="prettyprint">&lt;LoadBalancedEndpointList xmlns="" xmlns:i="https://www.w3.org/2001/XMLSchema-instance"&gt;


  &lt;InputEndpoint&gt;


  &lt;LoadBalancedEndpointSetName&gt;endpoint-set-name&lt;/LoadBalancedEndpointSetName&gt;


  &lt;LocalPort&gt;local-port-number&lt;/LocalPort&gt;


  &lt;Port&gt;external-port-number&lt;/Port&gt;


  &lt;LoadBalancerProbe&gt;


  &lt;Path&gt;path-of-probe&lt;/Path&gt;


  &lt;Port&gt;port-assigned-to-probe&lt;/Port&gt;


  &lt;Protocol&gt;probe-protocol&lt;/Protocol&gt;


  &lt;IntervalInSeconds&gt;interval-of-probe&lt;/IntervalInSeconds&gt;


  &lt;TimeoutInSeconds&gt;timeout-for-probe&lt;/TimeoutInSeconds&gt;


  &lt;/LoadBalancerProbe&gt;


  &lt;LoadBalancerName&gt;name-of-internal-loadbalancer&lt;/LoadBalancerName&gt;


  &lt;Protocol&gt;endpoint-protocol&lt;/Protocol&gt;


  &lt;IdleTimeoutInMinutes&gt;15&lt;/IdleTimeoutInMinutes&gt;


  &lt;EnableDirectServerReturn&gt;enable-direct-server-return&lt;/EnableDirectServerReturn&gt;


  &lt;EndpointACL&gt;


  &lt;Rules&gt;


  &lt;Rule&gt;


  &lt;Order&gt;priority-of-the-rule&lt;/Order&gt;


  &lt;Action&gt;permit-rule&lt;/Action&gt;


  &lt;RemoteSubnet&gt;subnet-of-the-rule&lt;/RemoteSubnet&gt;


  &lt;Description&gt;description-of-the-rule&lt;/Description&gt;


  &lt;/Rule&gt;


  &lt;/Rules&gt;


  &lt;/EndpointACL&gt;


  &lt;/InputEndpoint&gt;


  &lt;/LoadBalancedEndpointList&gt;</pre>
