### YamlMime:Yaml
ms.openlocfilehash: aabda2178a8ffbadb74f97347b68217dfbecac38
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892434"
Slug: simplifying-security-for-serverless-and-web-apps-with-azure-functions-and-app-service
Title: サーバーレスアプリと Web アプリのセキュリティを簡素化する方法とAzure FunctionsをApp Service
Summary: 'サーバーレスと PaaS は、管理の負担を軽減し、最も重要なアプリケーション ロジックに集中できるようにすることで、開発者の生産性を引き出す方法です。 '
Content: >-
  <p>サーバーレスと PaaS は、管理の負担を軽減し、最も重要なアプリケーション ロジックに集中できるようにすることで、開発者の生産性を引き出す方法です。 しかし、&rsquo;セキュリティのコストがかかる可能性は高く、ベスト プラクティスを簡単に実現できる必要があります。 さいわい、アプリのセキュリティ保護の負担を大幅に軽減する App Service および Azure Functions プラットフォームには、多くの機能があります。</p>


  <p>本日、管理&rsquo;下の ID とシークレットを使用するために必要なコードの量を減らす新しいセキュリティ機能を発表しました。 次のようなものがあります。</p>


  <ul>
   <li>Key Vaultアプリケーション の設定 (パブリック プレビュー)</li>
   <li>ユーザー割り当てマネージド ID (パブリック プレビュー)</li>
   <li>App Service on Linux/Web App for Containersのマネージド ID (パブリック プレビュー)</li>
   <li>要求の ClaimsPrincipal バインド データAzure Functions</li>
   <li>CORS 構成での Access-Control-Allow-Credentials のサポート</li>
  </ul>


  <p>また&rsquo;、Azure リソース全体のセキュリティのプライマリ ハブとして <a href="https://azure.microsoft.com/services/security-center/" target="_blank">Azure Security Center</a> に投資し続けているのは、構成の脆弱性をキャッチして解決したり、脅威にさらされる可能性を制限したり、攻撃を検出して対応したりするための素晴らしい方法が提供されるからです。 たとえば、すべてのアプリを HTTPS&#39;制限したと思うかもしれませんが、Security Centerを確実に確認するのに役立ちます。 まだ試していない&rsquo;場合は、試してみてください。</p>


  <p>そのため、それ以上何も行わずに、これらの&rsquo;新機能の詳細について説明します。</p>


  <h2>Key Vaultアプリケーション の設定 (パブリック プレビュー)</h2>


  <p>Microsoft Ignite 2018 では、アプリがアプリケーション設定を Key Vault からソースに提供できる新しい機能について少し説明しました。 本日&rsquo;の時点で、この機能はパブリック プレビューで利用できます。</p>


  <p>セキュリティで保護されたシークレット管理ポリシーに移行する組織が多くなっています。これは非常に見て取り組みです。 <a href="https://azure.microsoft.com/en-us/services/key-vault/" target="_blank">Azure Key Vault</a> 、アクセス ポリシーと監査履歴を完全に制御して、シークレットの 1 つの情報源を提供します。 App Service と Azure Functions&rsquo; の既存の Application 設定 機能は安全であると見なされ、シークレットは保存時に暗号化されます。必要な場合があるこれらの管理機能は提供されません。</p>


  <p>ただし、従来、Key Vaultを使用するには、新しいコードを記述する必要があります。 多&rsquo;くのチームは、特&rsquo;にレガシ アプリケーションにおいて、アプリケーションがシークレットと一緒に動作するあらゆる場所を簡単に更新できるのが見つかりました。 Azure Functionsはプラットフォームによって管理されるので、トリガーも問題です。 これらのシナリオはどちらも、この新しい機能で対処されています。</p>


  <h3>アプリケーションのソース設定からKey Vault</h3>


  <p>参照Key Vault機能を使用すると、アプリが App 設定 を使用している場合と同様に動作します。つまり、コードを変更する必要はありません。 詳細については、このドキュメントのリファレンス ドキュメントから<a href="https://aka.ms/FuncKeyVaultRef" target="_blank"></a>Key Vault取得できますが、ここでは&rsquo;基本について説明します。</p>


  <p>この機能には、アプリ <a href="https://aka.ms/funcsystemassigned" target="_blank">のシステム割り当てマネージド ID</a> が必要です。 この投稿の後半では&rsquo;、ユーザー割&rsquo;り当て ID について説明しますが、ここではこれらのプレビューを分離しています。</p>


  <p>その&rsquo;後、シークレットの GET アクセス許可をアプリケーションに付与Key Vaultにアクセス ポリシーを構成する必要があります。 アクセス ポリシーを <a href="https://docs.microsoft.com/azure/key-vault/key-vault-secure-your-key-vault#key-vault-access-policies" target="_blank">構成する方法について学習します</a>。</p>


  <p>最後に、アプリケーション設定の値を次の形式の参照に設定します。</p>


  <p align="center"><em>@Microsoft.KeyVault(SecretUri=<strong>secret_uri_with_version</strong>)</em></p>


  <p>ここで <em>secret_uri_with_version</em> は、シークレットの完全な URI です。Key Vault。 たとえば、次のようになります。 https://myvault.vault.azure.net/secrets/mysecret/ec96f02080254f109c51a1f14cdb1931</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/efcee7cc-6d48-4100-af8e-f3016a06ee53.png"><img alt="Sourcing application settings from Key Vault" border="0" height="818" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/02f94eab-f728-42b5-a7a1-fae9e2ec0d52.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="アプリケーション設定を Key Vault からソーシングする" width="2164"></a></p>


  <p>これで終わりです。 コードを変更する必要はありません。</p>


  <p>この初期プレビューでは、まだ&rsquo;組み込みのローテーション処理が行われていないので、シークレット バージョンを明示的に設定する必要があります。 これは、可能な限り早く利用できるようお待ちしております。</p>


  <h2>ユーザー割り当てマネージド ID (パブリック プレビュー)</h2>


  <p>マネージド ID に対する既存のサポートは、システム割り当てと呼ばれるものがあります。 ID は、特定のアプリケーションのプラットフォームによって作成され、アプリケーションのライフサイクルに関連付けられているという考え方です。 アプリケーションを削除すると、ID はアプリケーションからすぐにAzure Active Directoryされます。</p>


  <p>現在は&rsquo;、ユーザー割り当て ID をプレビューしています。ユーザー割り当て ID は独自の Azure リソースとして作成され、その後、特定のアプリケーションに割り当てられます。 ユーザー割り当て ID を複数のアプリケーションに割り当て、アプリケーションに複数のユーザー割り当て ID を設定できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b9b02ea6-cc8b-46ff-b0ea-448a238e76cd.png"><img alt="User-assignment managed identities" border="0" height="597" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9128ac22-955d-421b-b5cb-f6406a3a8f21.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="ユーザー割り当てマネージド ID" width="1594"></a></p>


  <p>ユーザー割り当て &ldquo; ID の作成と使用の詳細については、「ユーザー割り当て ID を使用してロールを作成、一覧表示、削除、または割り当てる<a href="https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-portal" target="_blank">」を参照</a>Azure portal。&rdquo;ID を作成したら、その ID へのポインターを使用してアプリ構成を更新することで、アプリに割り当てできます。 詳細については、マネージド ID <a href="https://aka.ms/funcuserassigned" target="_blank">のドキュメントを参照してください</a>。 このプレビューはソブリン クラウドではサポートされていません。</p>


  <p><em><strong>クイック ヒント:</strong> 複数のリソースに ID を使用することができますが、ID を過剰に共有しないように注意し、必要ないリソースにアクセス許可を&rsquo;漏らさないようにしてください。最小特権の原則は常に念頭に置き、既定ではアプリケーションの各コンポーネントに対して個別の ID を作成します。本当に必要な場合にのみ共有します。</em></p>


  <h2>App Service on Linux/Web App for Containersのマネージド ID (パブリック プレビュー)</h2>


  <p>また&rsquo;、マネージド ID のサポートを App Service on Linux/Web App for Containers。 現在、Linux アプリでは、資格情報を管理することなく、ターンキー サービス間認証のエクスペリエンスを同じにできます。 このプレビューには、システム割り当てとユーザー割り当てサポートの両方が含まれています。 Key Vault や Azure Resource Manager のようなリソースへのアクセスを簡単に要求できるトークン サービスに加えて、この新しいサポートにより、Linux アプリは前に説明した Key Vault 参照機能にアクセスできます。</p>


  <p>Linux &ldquo; アプリケーションの使用を開始するには、ドキュメント「App Service および Azure Functions にマネージド ID を使用する方法」の構成手順<a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-managed-service-identity" target="_blank">に従います</a>。&rdquo;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fb2a9b01-b6c5-4568-bd8c-18bf8b05955c.png"><img alt="Managed identities for App Service" border="0" height="705" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3a234f9b-19d2-4bcb-b87d-1bff72c8460a.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="App Service のマネージド ID" width="1383"></a></p>


  <h2>要求の ClaimsPrincipal バインド データAzure Functions</h2>


  <p>この機能の最初のプレビュー Azure Functions&rsquo;、関数アプリへのアクセスを制限App Service認証/承認を使用する機能が提供されています。 現在、&rsquo;関数コードからの受信 ID を活用しやすくなりました。 現在、デプロイは終了しています。これは、週の終わりまでに Azure 内のすべての関数アプリで使用できます。</p>


  <p>.NET の場合、これは ClaimsPrincipal&rsquo; オブジェクトとして公開されます。これは、このオブジェクトに表示されるのと ASP.NET。 オブジェクトは、ILogger の挿入方法と同様に、ClaimsPrincipal オブジェクトを関数シグネチャに追加すると自動的に挿入されます。</p>


  <pre>

  using System.Net;

  using Microsoft.AspNetCore.Mvc;

  using System.Security.Claims;


  public static IActionResult Run(HttpRequest req, ClaimsPrincipal principal, ILogger log)

  {
       // ...
       return new OkResult();
  }</pre>


  <p>他の言語は、今後の更新でコンテキスト オブジェクトを介して同じ言語にアクセスできます。 それまでは、 です。NET 専用プレビュー。 この機能の詳細については、HTTP トリガーの <a href="https://aka.ms/funcclaimsprincipal" target="_blank">リファレンスを参照してください</a>。</p>


  <p>ID に依存する関数をクリーンアップする方法が非常に気に入っています。 この機能は、トークン バインディングと<a href="https://docs.microsoft.com/azure/azure-functions/functions-bindings-microsoft-graph#token-input" target="_blank"></a>&rsquo;組み合わせて使用すると、ビジネス ロジックの中核ではないコードを少し削除します。</p>


  <h2>CORS 構成での Access-Control-Allow-Credentials のサポート</h2>


  <p>最後に、少なくとも、Access-Control-Allow-Credentials ヘッダーを設定できる CORS 機能を簡単に更新しました。 これは、API の呼び出しの一環として Cookie またはトークンを送信する必要がある場合に必ず必要です。 この応答ヘッダーを設定しない場合、ブラウザーはデータを渡されません。</p>


  <p>CORS 機能とこの新しい設定の詳細については、チュートリアル「HOST <a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-tutorial-rest-api" target="_blank">a RESTful API with CORS in Azure App Service」を参照してください</a>。&rdquo; &ldquo;ヘッダーを有効にするには、&rsquo;CORS &ldquo;構成を更新して supportCredentials を true に設定する&rdquo;必要があります。</p>


  <p>Access-Control-Allow-Credentials ヘッダーは、コミュニティの優しい機能により、開発目的でローカル Functions ホスト <a href="https://github.com/Azure/azure-functions-core-tools/pull/877" target="_blank">で有効pull request</a>。</p>


  <h2>まとめ</h2>


  <p>すべてのプレビューと同様に、&rsquo;これらの機能を試して、ご自分の考えをお知らせください。</p>


  <p>新機能の要求がある場合は、UserVoice ( <a href="https://feedback.azure.com/forums/355860-azure-functions" target="_blank">Functions</a> または App Service 用) でアイデア <a href="https://feedback.azure.com/forums/169385-web-apps" target="_blank">を作成してください</a>。 Functions 固有の問題については、ご利用のレポポに問題を<a href="https://github.com/Azure/Azure-Functions/issues/new" target="_blank">GitHubしてください</a>。 Twitter でチームにアクセスできます <a href="https://twitter.com/AzureFunctions" target="_blank">@AzureFunctions</a>。</p>


  <p>ご&rsquo;意見をお待ちして、会話を続けることを本当に楽しみにしています。 次に、それらのアプリをセキュリティで保護します。</p>
