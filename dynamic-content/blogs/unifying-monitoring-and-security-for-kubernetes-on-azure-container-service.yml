### YamlMime:Yaml
ms.openlocfilehash: 0c9ec24d0df271c181b449c9cfc7b778bd7954f5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904378"
Slug: unifying-monitoring-and-security-for-kubernetes-on-azure-container-service
Title: Azure Container Service での Kubernetes の監視とセキュリティの統合
Summary: Azure Container Service での Kubernetes の監視とセキュリティの統合
Content: >-
  <p>実稼働環境で実行されているコンテナーワークロードの増加と、コンテナーのデプロイをトリミングしたツールの新しい波を見てきまし &rsquo; た &rsquo; 。 コンテナー空間にはさまざまなパートナーがあり、現在は sysdig から新しい製品を提供してきまし &rsquo; たが、Microsoft Azure です。 <a href="https://sysdig.com/product/secure">Sysdig 安全</a>で、実行時のコンテナーのセキュリティ &nbsp; とフォレンジック。</p>


  <p>コンテナーとマイクロサービスベースのアプリケーションを運用環境にプッシュすると、環境の監視とセキュリティ保護の方法が大幅に変更されます。 この記事 &rsquo; では、この新しいインフラストラクチャの課題を確認し、Sysdig を使用した Azure container service での Kubernetes の監視とセキュリティ保護の例をいくつか紹介します。</p>


  <ul>
   <li>
   <p>Sysdig での、 <a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">ヘルム</a> を使用した Azure 環境のインストルメント化方法</p>
   </li>
   <li>
   <p>Kubernetes メタデータを活用してコンテナーを最適化し、セキュリティで保護するためのベストプラクティス</p>
   </li>
   <li>
   <p>コンテナー化された環境でのトラブルシューティングとフォレンジックの変更</p>
   </li>
  </ul>


  <h3>監視 &amp; セキュリティを統合する理由</h3>


  <blockquote>

  <p>&ldquo;<strong>Devsecops</strong>の目的と目的は、セキュリティに関する決定を迅速に行うことと、必要な安全性を損なうことなく、最も高いレベルのコンテキストを保持しているユーザーに対して、セキュリティに関する決定を安全に配布する&#39;ことを目的として、セキュリティ<strong><em>&#39;に対し</em></strong>てセキュリティの決定を安全に行うことを目標とします。 &rdquo;-DevSecOps</p>

  </blockquote>


  <p>DevSecOps は、独自の開発チームのためにコンテナーベースのプラットフォームをサービスとして提供しているオペレーター向けに新しいプラットフォームを &nbsp; 作成しました。 これには、チームが実行するサービスが安定しており、セキュリティで保護されていることを確認するために必要なすべてのパフォーマンスツールをチームに提供することが含まれます。</p>


  <p>これらのプラットフォーム演算子は、次の2つの主要な概念を中心にワークフローに焦点を当てます。</p>


  <ul>
   <li>
   <p><strong>可視性</strong> &ndash; サービスのパフォーマンスはどのようなもの &rsquo; ですか? インフラストラクチャは安全ですか。</p>
   </li>
   <li>
   <p><strong>フォレンジック</strong> - クラッシュしたデプロイはどうなりましたか? 予期しない送信接続が生成されたのは何ですか。どのようなデータがディスクに書き込まれましたか。</p>
   </li>
  </ul>


  <p>監視とセキュリティに関する質問は変わりませんが、ワークフローは同じです。 Sysdig を使用すると、開発者は、システムと認知のオーバーヘッドが低い、1つのインストルメンテーションポイントからのデータを操作するための統一されたエクスペリエンスを実現できます。</p>


  <h3>Kubernetes on Azure Container Service (ACS) &amp; sysdig のはじめに</h3>


  <p><a>ACS</a>を新規に再利用する &rsquo; 場合は、<a href="https://docs.microsoft.com/en-us/azure/container-service/kubernetes/container-service-tutorial-kubernetes-deploy-cluster">この投稿</a> &nbsp; <a href="#_msocom_1" id="_anchor_1" name="_msoanchor_1" uage="JavaScript">[SD1]</a> &nbsp; <a href="#_msocom_2" id="_anchor_2" name="_msoanchor_2" uage="JavaScript">[KA2]</a> &nbsp; を参照して、Kubernetes またはお気に入りの orchestrator を数分で展開して実行するための詳細な手順を確認してください。</p>


  <p>ここ &rsquo; では、Kubernetes クラスター内の各ホスト上で Sysdig エージェントを起動する環境をインストルメント化するために、 <a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">ヘルムグラフ</a> を使用します。 Sysdig が環境からデータを収集する方法の詳細については、「機能のしくみ」ページを参照してください。</p>


  <h3>Kubernetes Services の可視性</h3>


  <h4>パフォーマンス監視</h4>


  <p>Kubernetes の最適な部分の1つは、内部ラベルを広げる方法です。 これは、Sysdig モニタのグループ内で利用されます。 コンテナーのグループ化と探索は、物理階層 (ホストポッドコンテナーなど &gt; ) に基づいて、または論理マイクロサービス階層 (名前空間 &gt; replicaset &gt; ポッド &gt; コンテナーなど) に基づいて行うこと &rsquo; ができ &gt; ます。 &gt;</p>


  <p><img alt="Screen Shot 2017-10-09 at 4.02.29 PM.png" border="0" height="248" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/55c7f795-a4c4-454c-8c34-60564b0b0a86.jpeg" width="494"></p>


  <p><img alt="Screen Shot 2017-10-09 at 4.03.00 PM.png" border="0" height="248" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/75824483-3a56-46c8-ac9e-b4643f1fbbbe.gif" width="496"></p>


  <p><em>これらの各イメージをクリックし、Kubernetes context を使用して Docker コンテナーを監視するための物理グループと論理グループの違いを確認します。</em></p>


  <p>&rsquo;基になる物理リソースの使用率に関心がある場合 ( ノイズの多い近隣ノードを識別することで、物理的な階層が非常に優れています。 しかし、アプリケーションとマイクロサービスのパフォーマンスを調査する場合は、多くの場合 &rsquo; 、論理階層を開始することをお勧めします。</p>


  <p>一般に、インフラストラクチャを即座に再グループ化する機能は、一般的なダッシュボードと比較して、環境をトラブルシューティングするためのより強力な方法です。</p>


  <h4>Kubernetes サービスのセキュリティ保護</h4>


  <p>この同じメタデータを使用して、Kubernetes サービスを保護することができます。 Kubernetes.deployment.name のようなラベルを使用して、デプロイが実行されているコンテナー、ホスト、または azure リージョンの数に関係なく、論理サービスを保護するポリシーを適用できます。</p>


  <p>ここでは、その論理サービスからの予期しない送信接続を検出することにより、redis Kubernetes のデプロイを流出イベントから保護するためのポリシーについて説明 &rsquo; します。 そこから、任意のポリシー違反に対してアクションを実行して、データが redis サービスに残される前にコンテナーを停止することもできます。</p>


  <p><strong><img alt="Adaptive run time defense .png" border="0" height="308" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad9ea3d4-c8d1-4544-ad73-78474ff1d214.jpeg" width="491"></strong></p>


  <h3>コンテナー環境におけるフォレンジック</h3>


  <p>トラブルシューティングとインシデント対応のためにフォレンジックを行うと、両方とも同じ課題に直面します。コンテナーは短期であり、必要なデータは長い時間がかかります。 また、基本的に黒い箱を &rsquo; 作り直したので、多くの場合、 &rsquo; その内部で実際に実行されているを見分ける &rsquo; のは困難です。</p>


  <p>&rsquo;Kubernetes がコンテナーを強制終了している場合は、ホストに ssh 接続してコアダンプを実行する時間はありません。 システムは、運用環境以外でデータをトラブルシューティングする機能を備えたすべてのアクティビティを事前にキャプチャする必要があります。</p>


  <p>Sysdig &rsquo; s の固有のインストルメンテーションを使用すると、ユーザー、システム呼び出し、ネットワーク、プロセス、さらにはファイルに書き込まれたコンテンツ、またはネットワークの事前ポリシー違反および <strong>ポスト</strong> ポリシー違反にあるすべてのアクティビティをキャプチャできます。 これは、1分間のビデオで最もよく説明されて &rsquo; いるデータを含むものです。 ユーザーがコンテナーでシェルを生成したときに発生する可能性のあることと、その後のアクションに関して収集できるすべてのデータを分析してください。</p>


  <p><iframe allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/QqNRNhOcpgo" width="560"></iframe></p>


  <h3>まとめ</h3>


  <p>分析の最終的な結果が監視とセキュリティプラットフォームで異なる場合がありますが、データとワークフローは多くの場合同じです。 Kubernetes レンズを使用してインフラストラクチャを表示し、ホストで発生するすべての機能に関する豊富なアクティビティを確認できる必要があります。 &rsquo;この<a href="https://attendee.gotowebinar.com/rt/4884195963262902018">ウェビナー</a>では、ホスト &nbsp; ごとに1つのコンテナーエージェントを使用した完全な可視性 &nbsp; とフォレンジック機能についての情報を参照して<a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">ください。また</a>は、3分未満で開始することもできます。</p>
