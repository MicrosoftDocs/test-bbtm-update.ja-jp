### YamlMime:Yaml
ms.openlocfilehash: 43939c5449be90db79814f3435b500013aab72d1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893215"
Slug: automatic-tuning-introduces-automatic-plan-correction-and-t-sql-management
Title: 自動チューニングでは、プランの自動修正と T-SQLが導入されます
Summary: Azure SQL Database人工知能に基づく業界初の真の自動チューニング データベースである自動チューニングでは、次の新機能をグローバルに導入することで、柔軟性とパワーが向上しています。
Content: "<p>Azure SQL Database<a href=\"https://docs.microsoft.com/en-us/azure/sql-database/sql-database-automatic-tuning\">自動</a>&rsquo;チューニングでは、業界で初めて人工知能に基づくデータベースを真に自動チューニングすることで、次の新機能のグローバルな導入により、柔軟性とパワーが向上しています。</p>\n\n<ul>\n <li>自動プラン修正</li>\n <li>T-SQL を使用した管理</li>\n <li>自動チューニング フラグによって作成されたインデックス</li>\n</ul>\n\n<p>自動チューニングは、既存のワークロードのパフォーマンスに影響を与えることなく、数十万のデータベースをシームレスにチューニングできます。 このソリューションは 2016 年からグローバルに利用可能であり、Azure でのリソース消費量を削減しながら、パフォーマンスと安定したワークロードを実現できる実績があります。</p>\n\n<p><a href=\"https://azure.microsoft.com/en-us/blog/artificial-intelligence-tunes-azure-sql-databases/\">お客様が自動チューニングを使用して達成SQL Database大きな利点については、こちらをクリックしてください。</a></p>\n\n<h2>自動プラン修正</h2>\n\n<p>SQL Server SQL Server 2017 で導入された機能である自動プラン修正は、チューニング オプション Force Last Good Plan として Azure SQL Databaseする方法を作り出しています。 この決定は、数十万の SQL データベースに対する厳格なテストの後に行われたので、Azure で実行されているワークロードの全体的な肯定的なパフォーマンス向上が確保されます。 この機能は、数百および数千のデータベースと負荷の高いワークロードを管理する場合に適しています。</p>\n\n<p>自動チューニング機能は、SQL Database ワークロードを継続的に監視し、自動プラン修正オプション Force Last Good Plan を使用して、パフォーマンスが向上した最後のプランを適用して、低下したクエリ実行プランを自動的に調整します。 システムはワークロードのパフォーマンスを自動的に監視します。ワークロードが変更された場合は、最適なパフォーマンスのクエリ実行プランを強制するためにシステムが動的に調整されます。</p>\n\n<p>各チューニング アクションが正のパフォーマンス向上を実現するために実行されたチューニング アクションはすべて、システムによって自動的に検証されます。 チューニング アクションが原因でパフォーマンスが低下した場合、システムは自動的に学習し、そのようなチューニングの推奨事項を速やかに元に戻します。 自動チューニングによって実行されるチューニング アクションは、Azure Portal と T-SQL クエリを使用して、最近のチューニングに関する推奨事項の一覧に表示できます。</p>\n\n<p><a href=\"https://docs.microsoft.com/en-us/azure/sql-database/sql-database-automatic-tuning-enable\">自動チューニングを構成する方法の詳細については、こちらをクリックしてください。</a></p>\n\n<h2>T-SQL を使用して自動チューニングを管理する</h2>\n\n<p>自動チューニング チームは、T-SQL とスクリプト作成手順を使用してデータベースを管理する大規模な専門家コミュニティのニーズを認識し、T-SQL を使用して現在および過去のチューニングの推奨事項を有効、無効、構成、および表示できる新しい機能を開発しました。 これにより、カスタム監視、アラート、レポート機能など、自動チューニングを管理するカスタム ソリューションを開発できます。</p>\n\n<p>今後のセクションでは、このブログ記事で、利用できる T-SQL 機能の一部を使用する方法に関するいくつかの例について説明します。</p>\n\n<h2>T-SQL を使用した現在の自動チューニング構成のSQL</h2>\n\n<p>個々のサーバーで構成されている自動チューニング オプションの現在の状態を表示するには、SSMS などのツールを使用して <a href=\"https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms\">SQL Database</a> に接続し、次のクエリを実行してシステム ビューを読み取sys.database_automatic_tuning_options。</p>\n\n<pre class=\"prettyprint\">\nSELECT * FROM sys.database_automatic_tuning_options </pre>\n\n<p>結果の出力は、次の例に示すように、自動チューニング オプション システム ビューの値です。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1a603d36-9438-4096-93cf-4b74b1b3b931.png\"><img alt=\"Article%2001\" border=\"0\" height=\"101\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2b6200bc-92cf-463d-b1be-6a58d381d80d.png\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Article%2001\" width=\"733\"></a></p>\n\n<p>列名には、次の 3 つの自動チューニング オプションが使用できるのが明確に示されています。</p>\n\n<ul>\n <li>FORCE_LAST_GOOD_PLAN</li>\n <li>CREATE_INDEX、および</li>\n <li>DROP_INDEX。</li>\n</ul>\n\n<p>[列desired_stateは、個々のチューニング オプションの設定を示し、その説明は列のプロパティでdesired_state_desc。 desired_stateの値は、カスタム設定の場合は 0 = OFF、1 = ON、親サーバーまたは Azure プラットフォームの既定値から設定を継承する場合は 2 = DEFAULT です。</p>\n\n<p>列の値はdesired_state_desc自動チューニング オプションが ON、OFF、または DEFAULT で継承される (列内の数値に対応する) かどうかを示desired_state。 列のactual_stateは、自動チューニング オプションが実際に動作するかどうかを示します。これは、値が 1 であることを示し、値が 0 のデータベースで動作していないかどうかを示します。</p>\n\n<p>自動チューニング オプションの 1 つが ON に設定されている場合でも、ワークロードのパフォーマンスを保護する必要があると判断された場合は、自動チューニングを一時的に無効にできます。 データベースで クエリ ストア が有効になっていない場合、または読み取り専用状態の場合は、自動チューニングも一時的に無効になる可能性があります。 この場合、現在の状態&ldquo;&rdquo;のビューはシステムによって無効にされ、列の値は 0 actual_state示されます。</p>\n\n<p>sys.database_automatic_tuning_options システム ビューの最後の部分は、各自動チューニング オプションが Azure の既定値、親サーバーの既定値、またはカスタム構成の場合に、列の理由と reason_desc を示します。 Azure プラットフォームの既定値を継承する場合、列の理由の値は 2、列の値reason_descがAUTO_CONFIGURED。 親サーバーの既定値を継承する場合、列の理由の値は 1、列の値reason_descがINHERITED_FROM_SERVER。 個々の自動チューニング オプションのカスタム設定の場合、列の理由とreason_desc値は NULL になります。</p>\n\n<p><a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-automatic-tuning-options-transact-sql\">ここをクリックすると、システム ビュービューの詳細な構造が表示sys.database_automatic_tuning_options。</a></p>\n\n<h2>T-SQL を使用して自動チューニングを有効にする</h2>\n\n<p>Azure 構成の既定値を継承する単一データベースで自動チューニングを有効にするには、次のようなクエリを実行します。</p>\n\n<pre class=\"prettyprint\">\nALTER DATABASE current SET AUTOMATIC_TUNING = AUTO /* possible values AUTO, INHERIT and CUSTOM */</pre>\n\n<p>自動チューニングを有効にできる値は、AUTO、INHERIT、CUSTOM です。 自動チューニングの値を AUTO に設定すると、自動チューニングに Azure 構成の既定値が適用されます。 値 INHERIT を使用すると、親サーバーから既定の構成が継承されます。 親サーバー上の自動調整の構成をカスタマイズする必要があり、これらのカスタム設定を継承 (INHERIT) する、このようなサーバー上にデータベースがすべて存在する場合に特に便利です。</p>\n\n<p>継承を機能するには、3 つの個別のチューニング オプション (FORCE_LAST_GOOD_PLAN、CREATE_INDEX、DROP_INDEX DEFAULT に設定する必要があります。 これは、これらの個々のチューニング オプションの 1 つまたはいくつかがカスタム構成可能であり、DEFAULT とカスタムの強制 ON または OFF 設定の組み合わせが組み合わせられた可能性があるためです。</p>\n\n<p>値 CUSTOM を使用して、使用可能な各自動チューニング オプションを手動でカスタム構成する必要があります。</p>\n\n<h2>T-SQL を使用した自動チューニング オプションのカスタム構成</h2>\n\n<p>Azure プラットフォームと親サーバーの既定値に関係ないカスタム構成が可能な自動チューニングで使用できるオプションは、FORCE_LAST_GOOD_PLAN、CREATE_INDEX、DROP_INDEXES。 これらのオプションは、次のようなクエリを実行してカスタム構成できます。</p>\n\n<pre class=\"prettyprint\">\nALTER DATABASE current \nSET AUTOMATIC_TUNING (\nFORCE_LAST_GOOD_PLAN = [ON | OFF | DEFAULT], \nCREATE_INDEX = [ON | OFF | DEFAULT],\nDROP_INDEX = [ON | OFF | DEFAULT])\n)\n</pre>\n\n<p>使用可能な 3 つのオプションのいずれかを設定できる値は、ON、OFF、DEFAULT です。 個々のチューニング オプションを ON に設定すると、カスタムで明示的にオンに設定し、OFF に設定すると、明示的にオフに設定されます。 個々のチューニング オプションを DEFAULT に設定すると、前述のように AUTO または INHERIT に設定されている AUTOMATIC_TUNING の設定に応じて、Azure プラットフォームまたは親サーバーから既定値が継承されます。</p>\n\n<p>Azure の既定値を使用している場合、自動チューニング オプションの現在の Azure の既定値は FORCE_LAST_GOOD_PLAN と CREATE_INDEX をオンにし、DROP_INDEX オプションは既定でオフになっている点に注意してください。 この決定は、ON に設定DROP_INDEX、ユーザーが作成したインデックスが未使用または重複している場合に削除されます。 この目的は、ユーザー定義インデックスを保護し、インデックスの削除を管理するための自動チューニングをユーザーが明示的に選択する方法でした。</p>\n\n<p>新しいチューニング オプションを使用DROP_INDEX場合は、次のクエリを実行して DROP_INDEX オプションを ON に設定してください。</p>\n\n<pre class=\"prettyprint\">\nALTER DATABASE current SET AUTOMATIC_TUNING (DROP_INDEX = ON) /* Possible values DEFAULT, ON, OFF */</pre>\n\n<p>結果の出力は、次の列desired_state、desired_state_descオプションが ON に設定DROP_INDEXを示します。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/23c3a43a-3853-407e-a688-d00a8ab3b6d0.png\"><img alt=\"Article%2002\" border=\"0\" height=\"101\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2f9346d7-f2b6-428d-9175-80cadb50ca1b.png\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Article%2002\" width=\"733\"></a></p>\n\n<p>T-SQL を使用して使用できる自動チューニング構成設定は、Azure Portal で使用できる構成オプションと同じ点に注意してください。自動チューニングの有効化に関するページ<a href=\"https://docs.microsoft.com/en-us/azure/sql-database/sql-database-automatic-tuning-enable\">を参照してください</a>。</p>\n\n<h2>T-SQL を使用してカスタムから継承の既定値に自動チューニングを戻SQL</h2>\n\n<p>既定の継承に戻すには、3 つの自動チューニング オプション (FORCE_LAST_GOOD_PLAN、CREATE_INDEX、および DROP_INDEX) のそれぞれを手動 (ON または OFF) でカスタム構成するために、AUTOMATIC_TUNING を CUSTOM 設定に設定した後、次の操作を行う必要があります。</p>\n\n<ul>\n <li>AUTO AUTOMATIC_TUNING INHERIT に戻す設定、</li>\n <li>継承を DEFAULT にFORCE_LAST_GOOD_PLANするCREATE_INDEX、DROP_INDEX、チューニング オプションごとに。</li>\n</ul>\n\n<p>これは、自動チューニングでは、オプションのカスタマイズ中にユーザーが明示的に行った決定が常に尊重され、オーバーライドされるのが一切ないのでです。 このような場合は、まず、Azure または親サーバーから値を継承するように基本設定を設定し、次に次のクエリを実行して、使用可能な 3 つのチューニング オプションのそれぞれを DEFAULT に設定する必要があります。</p>\n\n<pre class=\"prettyprint\">\nALTER DATABASE current SET AUTOMATIC_TUNING = AUTO /* Possible values AUTO for Azure defaults and INHERIT for server defaults */\nALTER DATABASE current SET AUTOMATIC_TUNING (\nFORCE_LAST_GOOD_PLAN = DEFAULT,\nCREATE_INDEX = DEFAULT,\nDROP_INDEX = DEFAULT\n)</pre>\n\n<p>上記のクエリを実行した結果、Azure から既定値を継承するように 3 つの自動チューニング オプションすべてが設定され、次の出力が表示されます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/60502e83-5b9a-4747-9a47-b56472f69691.png\"><img alt=\"Article%2003\" border=\"0\" height=\"101\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6063eefc-4657-43ec-a3aa-2a4577365895.png\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Article%2003\" width=\"733\"></a></p>\n\n<h2>T-SQL を使用してチューニングの推奨事項と履歴を表示SQL</h2>\n\n<p>最近の自動チューニングの推奨事項の履歴を表示するには、次のクエリを実行sys.dm_db_tuning_recommendationsシステム ビューからこの情報を取得できます。</p>\n\n<pre class=\"prettyprint\">\nSELECT * FROM sys.dm_db_tuning_recommendations </pre>\n\n<p>このビューからの出力は、自動チューニングの現在の状態に関する詳細情報を提供します。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b4ca578b-9774-471a-8383-3b323f534fd7.png\"><img alt=\"Article%2004\" border=\"0\" height=\"223\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dcb7b9cd-e1d9-403f-8136-0983e2f3231f.png\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Article%2004\" width=\"1062\"></a></p>\n\n<p>このビューで使用できる値の一部を強調表示するには、チューニングの推奨事項が行われた理由と型から始めます。 列の型は、チューニングに関する推奨事項の種類を示します。 列の理由は、特定のチューニングの推奨事項が行われた理由として識別された理由を示します。</p>\n\n<p>列valid_sinceとlast_refresh、チューニングの推奨事項が行われた時間と、システムがこのような推奨事項をワークロードのパフォーマンスに役立つと見なすまでの時間を示します。</p>\n\n<p>列の状態は、インデックス管理とクエリ実行プランに関連する豊富な情報を含む、自動的に適用される推奨事項の詳細を含む JSON ドキュメントを提供します。</p>\n\n<p>チューニングの推奨事項を自動的に実行できる場合は、is_executable_action値 1 が設定されます。 列にビット 1 のフラグが設定された自動チューニングの推奨事項is_revertable_action、必要に応じてシステムによって自動的に元に戻されるチューニングの推奨事項を示します。 列にはexecute_action_start_time推奨設定が適用された場合のタイムスタンプが表示されます。</p>\n\n<p><a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-db-tuning-recommendations-transact-sql\">ここをクリックすると、システム ビュービューの詳細な構造が表示</a>sys.dm_db_tuning_recommendations。</p>\n\n<h2>システムによって作成されたインデックス列</h2>\n\n<p>自動チューニング チームは、自動チューニングによってインデックスが作成されたかどうかを示すビットを含む新しい列 auto_created をシステム ビュー (sys.indexes) に追加しました。 これにより、システムとユーザーがデータベースに作成したインデックスを明確に区別できます。</p>\n\n<p>列 auto_createdはビット値 0 と 1 を受け取り、0 はユーザーがインデックスを作成し、1 はインデックスが自動チューニングによって作成されたかどうかを示します。</p>\n\n<p>このフラグを使用すると、ユーザーと自動チューニングによって作成されたインデックスを区別できます。 これは、自動チューニングによって作成されるインデックスの動作が、ユーザーが作成したインデックスとは動作が異なっているためです。 ユーザーが削除する列に対して自動チューニング インデックスが作成されると、自動チューニング インデックスは移動します。 そうではない場合、ユーザー インデックスは、この操作を妨げる可能性があります。</p>\n\n<p><a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql\">ここをクリックすると、システム ビュー sys.indexes の詳細な構造が表示されます</a>。</p>\n\n<h2>まとめ</h2>\n\n<p>新機能の導入により、Force Last Good Plan オプションを使用した自動プラン修正、T-SQL による自動チューニング オプションの管理、インデックスが自動的に作成された場合のフラグの提供により、最も要求の厳しいユーザーのニーズに合わせて自動チューニング ソリューションをカスタマイズする柔軟性が向上しました。</p>\n\n<p>ソリューションの使い方と、ニーズに合わせてカスタマイズした方法の例をお知らせください。 フィードバックや質問はコメントに残してください。</p>"
