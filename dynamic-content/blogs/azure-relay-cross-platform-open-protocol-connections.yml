### YamlMime:Yaml
ms.openlocfilehash: b13462d828f08cf9366d396f1c423e1efc9d70ab
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903683"
Slug: azure-relay-cross-platform-open-protocol-connections
Title: Azure Relay-クロスプラットフォームのオープンプロトコル接続
Summary: 'Azure Relay サービスは、Azure で利用可能なサービスの初期コアセットの中にあり、Azure で実行されている多くの現在のソリューション用の基本的なハイブリッドクラウド統合ツールです。 '
Content: >-
  <p>Azure Relay サービスは、Azure で利用可能なサービスの初期コアセットの中にあり、Azure で実行されている多くの現在のソリューション用の基本的なハイブリッドクラウド統合ツールです。 リレーを使用すると、クラウドとオンプレミスの資産間、またはクラウドを matchmaker として使用する異なるサイト間で、安全かつシームレスな通信をブリッジできます。 リレーはアプリケーションレベルで動作するため、ネットワーク環境に対して変更を加えることなく、ネットワークアドレス変換 (NAT) 境界とファイアウォールを完全に検査し、エンドポイント検出を完全に行うことができます。</p>


  <p>現在お客様に提供している最初の素晴らしいニュースは、リレーサービスは、Event Hubs と Service Bus メッセージングを行う同じチームによって開発、管理されるようになりました。また、最新の Azure Portal での管理と監視、およびリレーとしてのスタンドアロンサービスとして利用できるようになりました。</p>


  <p>しかし、さらにニュースがあります。</p>


  <p>今日までは、Azure Relay &rsquo; の機能は、Windows で実行されている完全な .NET Framework である特定のランタイムとプラットフォームを使用する必要がありました。 WCF 通信フレームワークを使用して必要なリレー型サービスを構築します。 長年にわたり、 &rsquo; これらの機能をクライアントとサービスで堅牢にするために、多くの場合 (非表示になることが多い) 作業を行ってきました。これらの機能は、WCF Relay の機能名で引き続き提供されます。 &rsquo;現在 WCF でリレー機能を使用している場合は、何も変わりません。</p>


  <p>Windows 以外のプラットフォームでアプリを構築している場合や、任意の言語、ランタイム、またはフレームワーク &ndash; を選択している場合は、すべてが変更されます。</p>


  <p>現在、次世代のクロスプラットフォームおよびオープンプロトコル Azure Relay 機能のパブリックプレビューを発表し、使用できるようにしています。これ &rsquo; はハイブリッド接続と呼ばれています。</p>


  <h3>ハイブリッド接続</h3>


  <p>リレーの進化は、HTTPS と Websocket に完全に基づいているため、オンプレミスのセットアップで、ファイアウォールの内側に存在するリソースとサービスを、クラウドまたは他の資産のどこにあっても、安全に接続できます。ハイブリッド接続</p>


  <p>Websocket プロトコルに基づいており、特定のフレームワークの particularities によって、セキュリティで保護された双方向およびバイナリ通信チャネルを提供しているため、Apache Thrift、Apache Avro、Microsoft Bond、その他多数の既存および最新の RPC フレームワークと簡単に統合できます。 また、データベース、リモートデスクトップ、またはシェル接続のリレーを可能にするストリーム通信ブリッジの優れた基盤としても、いくつかの例に名前を指定することができます。</p>


  <p>ハイブリッド接続は、リレーサービスの堅牢なセキュリティモデルを活用し、リレーソリューションが現在依存している、実績のある負荷分散とフェールオーバーの機能を提供します。</p>


  <p>サンプルとクライアントコードの初期セットは、GitHub の現在の C# および JavaScript (ノード) で利用できます。また、一般的な商用の可用性を実現するために、より多くの言語バインドを提供します。 C# のサンプルでは、既に Thrift と Avro との統合を示して &rsquo; います。また、オープンなオープンアームで投稿や RPC フレームワークのバインドを再招待します。 これを可能にする完全なプロトコルドキュメントは、 <a href="https://azure.microsoft.com/documentation/articles/relay-hybrid-connections-protocol/">Azure ドキュメントセンター</a>で入手できる &nbsp; ようになりまし &nbsp; た。</p>


  <h3>ハイブリッド接続と BizTalk Services</h3>


  <p>また、このハイブリッド接続機能は新しいものですが、 <a href="https://azure.microsoft.com/en-us/services/biztalk-services/">BizTalk Services</a>によってハイブリッド接続機能とは異なるバージョンになることに注意してください。 この機能は、現在の動作と同じように引き続き実行されます。課金と使用方法は変わりません。</p>
