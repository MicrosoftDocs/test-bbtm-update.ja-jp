### YamlMime:Yaml
ms.openlocfilehash: b410e2af9a90d1832d69371224085acff2bb4681
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894018"
Slug: best-practices-for-drupal-cms-on-azure-websites-2
Title: Azure Websites での Drupal CMS のベストプラクティス
Summary: Azure Websites ("Websites") は、Drupal Web サイトをホストするための優れたプラットフォームです。  このブログでは、Azure Websites で Drupal CMS サイトを実行するための移行、構成、最適化、ベストプラクティスについて説明します。
Content: >-
  <p>Drupal CMS は、PHP で記述されたオープンソースのコンテンツ管理システムであり、MySQL を使用します。 Drupal は開発者向けに洗練されたプログラミングインターフェイスを提供しており、基本的な web サイトやインストールにプログラミングスキルは必要ありません。 Drupal を使用すると、個人のブログからエンタープライズアプリケーションまで、あらゆるものを構築できます。 また、政府組織の一般的なフレームワークでもあります。 このブログ記事の主な目的は、Azure Websites プラットフォームで Drupal CMS web サイトを実行する方法と、このプロセスについて説明することです。</p>


  <ul>
   <li>既存の Drupal サイトを Azure Websites に移行する方法</li>
   <li>メディアコンテンツ用の Azure Storage モジュールをセットアップする方法</li>
   <li>キャッシュを使用してを向上させる方法</li>
   <li>Drupal CMS のベストプラクティスを使用する</li>
   <li>リージョン間でのスケーリング</li>
  </ul>


  <h2>既存の Drupal サイトを Azure Web Apps に移行する方法</h2>


  <p>Drupal web サイトを Azure &nbsp; Web アプリ &nbsp; に移行する作業は非常に簡単です。 次の手順を実行するだけで、Drupal サイト全体を1時間以内に移動できます。</p>


  <h3>Azure の Web サイトと MySQL データベースを作成する</h3>


  <p>まず、MySQL を使用して新しい Web サイトを作成する方法については、ステップバイステップのチュートリアルを参照してください。 <a href="https://azure.microsoft.com/en-us/develop/php/tutorials/website-w-mysql-and-git/">PHP-MySQL Azure の web サイトを作成し、Git を使用してデプロイします。</a> このシナリオでは、 <strong>無料の MySQL データベース</strong>を作成することに注意してください。 これは開発目的に適していますが、運用レベルサイトでは、共有データベースクラスターに対する <a href="https://www.cleardb.com/store/azure">さまざまなプラン</a> を提供する ClearDB データベースを Azure ストアから購入する必要があります。 の詳細については、「ClearDB from Azure Store」を参照してください。 共有クラスターの計画がニーズに合わない場合は、専用の MySQL データベースクラスターを選択できます。 詳細については、「 <a href="https://www.cleardb.com/pricing/missioncritical.view">ClearDB ミッションクリティカルなデータベースプラン</a>」を参照してください。 Git を使用して Drupal サイトを発行する場合は、Git リポジトリの構成方法を説明するチュートリアルの手順に従います。</p>


  <p>この情報は後で必要になるため、「リモート MySQL 接続情報の取得」の手順に従ってください。 このチュートリアルの残りの部分は、Drupal サイトをデプロイする目的では無視できますが、Azure Websites (および Git) を初めて使用する場合は、参考資料を参照してください。 MySQL データベースを使用して新しい Web サイトを設定すると、MySQL データベースの接続情報と (オプションの) Git リポジトリが作成されました。 次の手順では、Azure Websites の MySQL にデータベースをコピーします。</p>


  <h3>Azure Web Apps での MySQL へのデータベースのコピー</h3>


  <p>Azure にデータベースを移行するには、さまざまな方法があります。 MySQL データベースでうまく機能する1つの方法は、[MySqlDump] ツールを使用することです。 次のコマンドは、ローカルコンピューターから Azure Websites にコピーする方法の例を示しています。</p>


  <pre>

  mysqldump -u local_username --password=local_password drupal | mysql -h remote_host -u remote_username --password=remote_password remote_db_name</pre>


  <p>もちろん、既存の Drupal データベースのユーザー名とパスワードを入力する必要があります。 最初の手順で作成した MySQL データベースのホスト名、ユーザー名、パスワード、およびデータベース名も指定する必要があります。 この情報は、前に収集した接続文字列情報で確認できます。 接続文字列の形式は、次の文字列のようになります。</p>


  <pre>

  Database=remote_db_name;Data Source=remote_host;User Id=remote_username;Password=remote_password</pre>


  <p>データベースのサイズによっては、コピー処理に数分かかることがあります。 これで、Drupal データベースは Azure Websites にライブで公開されます。 Drupal コードをデプロイする前に、新しいデータベースに接続できるように変更する必要があります。</p>


  <h3>設定. php でデータベース接続情報を変更する</h3>


  <p>ここでは、新しいデータベース接続情報が必要になります。 <strong> &lt; Drupalsite &gt; /sites/default/setting.php</strong>ファイルをテキストエディターで開き、 <strong>&#39;</strong>配列内の &#39;database&#39;、&#39;username&#39;、&#39; password &#39;、および&#39; host $databases の値を、新しいデータベースの正しい値に置き換えます。 完了すると、次のようなものになります。</p>


  <pre>

  $databases = array (&#39;default&#39;=&gt;array (&#39;default&#39;=&gt;array (&#39;database&#39;=&gt;&#39;remote_db_name&#39;,&#39;username&#39;=&gt;&#39;remote_username&#39;,

  &#39;password&#39;=&gt;&#39;remote_password&#39;,&#39;host&#39;=&gt;&#39;remote_host&#39;,&#39;port&#39;=&gt;&#39;&#39;,

  &#39;driver&#39;=&gt;&#39;mysql&#39;,&#39;prefix&#39;=&gt;&#39;&#39;,),),);</pre>


  <p><strong>注:</strong><strong>$Base _url</strong>構成パラメーターが<strong>設定. php</strong>にある場合は、Drupal CMS によって<strong>$base _url</strong>に設定された値から url が作成されるため、コメントアウトします。 Www.exmaple.com などのカスタムドメインを使用するように azure web サイトを構成したら、 <strong>$base _url</strong> パラメーターを使用できます。 設定の <strong>php.ini </strong>ファイルを保存します。 これで、をデプロイする準備が整いました。</p>


  <h3>Git または FTP を使用して Drupal コードをデプロイする</h3>


  <p>最後の手順は、Git または FTP を使用してコードを Azure Websites にデプロイすることです。</p>


  <ul>
   <li>FTP を使用している場合は、web サイト&#39;s ダッシュボードから FTP ホスト名とユーザー名を取得します。 次に、任意の FTP クライアントを使用して、Drupal ファイルをリモートサイトの <strong>/siteフォルダー</strong> にアップロードします。</li>
   <li>Git を使用している場合は、前の手順で Git リポジトリをセットアップする必要があります。 ローカルコンピューターに Git をインストールする必要があります。 次に、リポジトリを作成した後に表示される指示に従います。 Git の構成については、この <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-php-mysql-deploy-use-git/">記事</a> をご覧ください</li>
  </ul>


  <h2>Azure Storage モジュールをセットアップする方法</h2>


  <p>Drupal をインストールしたら、メディアファイルを格納するために Windows Azure blob storage を使用する blob ストレージモジュールを有効にし、構成する必要があります。 正しく構成するには、次の手順に従います。 <strong>管理者</strong>ユーザーとしてログインし、[モジュール] タブをクリックして Azure Storage モジュールを有効にします。 このモジュールが存在しない場合は、こちら </a> の Azure Blob モジュール "> から <a href="https://www.drupal.org/project/azure_blob" title=" モジュールをインストールしてください。 <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb15.png"><img alt="image_thumb[15]" border="0" height="288" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb15_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [15]" width="1158"></a></p>


  <p>[<strong>構成</strong>] タブをクリックし、[<strong>メディア] セクション</strong>の [ <strong>Azure Storage</strong> ] をクリックします。</p>


  <p><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb13.png"><img alt="image_thumb[13]" border="0" height="559" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb13_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [13]" width="585"></a></p>


  <p>Drupal web サイトで使用する新しい Storage アカウントを追加するには、[<strong>追加</strong>] ボタンをクリックします。 ダイアログのように詳細を指定します。ストレージアカウントの名前、既存のコンテナーの名前 (このコンテナーはパブリックである必要があります)、blob ストレージ URL、プライマリアクセスキー。 ストレージが CDN にリンクされている場合は<strong>カスタム url</strong>を使用し、ここで CDN URL を入力します。 CDN を使用していない場合は、空のままにします。</p>


  <p><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb11.png"><img alt="image_thumb[11]" border="0" height="559" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb11_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [11]" width="636"></a></p>


  <p>もう一度 [<strong>構成</strong>] タブをクリックし、[<strong>メディア] セクション</strong>の [<strong>ファイルシステム</strong>] をクリックします。 <strong>Azure Blob Storage に格納され</strong>ているオプションボタンファイルを確認し、[<strong>構成の保存</strong>] ボタンをクリックします。</p>


  <p><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb9.png"><img alt="image_thumb[9]" border="0" height="559" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb9_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [9]" width="543"></a></p>


  <p>次に<strong>、[構造- &gt; コンテンツタイプ</strong>] をクリックします。 次に、[<strong>アーティクル</strong> &quot; の &quot; 種類] で [<strong>マネージャーフィールド</strong>] をクリックします。 [フィールドの管理] ダイアログボックスで、新しい記事を作成するときに<strong>イメージのアップロード</strong>オプションを表示する<strong>イメージラベル</strong>が既に追加されているかどうかを確認し<strong>ます。</strong>(画像固有の形式ではなく) ファイルのアップロードをサポートする場合は、ファイルアップロードのラベルも含めます (次に示すように、<strong>アップロード</strong>ラベル)。 <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb7.png"><img alt="image_thumb[7]" border="0" height="492" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb7_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [7]" width="1100"></a></p>


  <p>[イメージの編集] をクリックし、[<strong>アップロードの保存先</strong>] を選択して Azure Storage アカウントにします。 ファイルのアップロードに別のラベルがある場合は、同じ操作を行ってください (フィールドの種類は FILE です)。 <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb6.png"><img alt="image_thumb[6]" border="0" height="614" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb6_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [6]" width="606"></a></p>


  <p>同様に、イメージまたはファイルのアップロードをサポートするコンテンツの種類については、前述のように同じ構成を使用します。</p>


  <h2>キャッシュを使用してパフォーマンスを向上させる方法</h2>


  <p>大量のユーザートラフィックを受信する web サイト (数十万から何百万ものページビューと一意の訪問者) は、Memcached や Redis cache などの分散キャッシュサーバーを使用するメリットが得られます。 詳細については、「 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-connect-to-redis-using-memcache-protocol/">memcache プロトコル</a> &nbsp; で Azure redis cache を使用する方法」および「 <a href="https://blogs.msdn.microsoft.com/azureossds/2015/05/14/connect-to-microsoft-azure-redis-cache-from-wordpress-site/">WordPress の redis cache を構成する</a>方法」を参照してください。キャッシュの一般的なアプローチには、Content delivery network (CDN) とバックエンドキャッシュ (redis) サービスが混在しています。 Drupal は、データベースを使用してキャッシュを格納します。 コンテンツが変更された場合、Drupal はこの変更を検出し、キャッシュを期限切れにしてコンテンツの一貫性を維持します。 Memcached/redis は、Drupal&#39;s 内部キャッシュシステムを置き換えます。 CDN の代わりに、<a href="https://azure.microsoft.com/en-us/blog/using-varnish-as-front-end-cache-for-azure-web-apps/">ワニスをフロントエンドキャッシュとして</a>使用して、パフォーマンスを大幅に向上させることもできます。</p>


  <h2>Drupal CMS のベストプラクティスを使用する</h2>


  <p>クラウド上の web サイトの一般的な方法は、</p>


  <ol>
   <li><strong>将来の計画:</strong> インフラストラクチャをスケールアップまたはスケールダウンする必要がある場合や、最新の要件を満たすようにインフラストラクチャを変更する必要がある場合に、プロジェクトを開始するために、web サイトとユーザートラフィックパターンのパフォーマンスと要件を追跡する必要があります。</li>
   <li><strong>サイトをバックアップします。</strong> Web サイトとデータベースの両方をバックアップします。 バックアップと復元の手順をテストします。</li>
  </ol>


  <p>次に、Drupal CMS に注目し、Azure websites で Drupal CMS を構築して管理するためのベストプラクティスについて説明します。&#39;</p>


  <h3>セキュリティ構成:</h3>


  <ol>
   <li>機微な一時ファイルを削除するファイルを編集するときに、ファイルの末尾に .bak を付け、末尾に ~ <strong>文字を使用</strong> するなど、一時バックアップファイルが作成される可能性があります。 これらのファイルは、URL 書き換えルールを使用して <strong>web.config</strong> に制限&#39;ないと、ブラウザーに表示されます。 これにより、攻撃者が重要な情報にアクセスする可能性があります。 Web サイトに存在するそのようなファイルをすべて削除します。 これは、これらのファイルへのアクセスを拒否する URL 書き換えルールを web.config に追加するか、これらのファイルを検索して自動的に削除する単純な web ジョブを使用して自動化することによって解決できます。</li>
   <li>LoginDrupal の SSL を有効にする場合は、ユーザーがログインするときに Secure sockets layer (SSL) を使用する必要はありません。 そのため、攻撃者は web サイトへの管理アクセスを簡単に行うことができます。 Drupal.org から Secure Pages モジュールをインストールして有効にします。このモジュールは、SSL を使用して、任意の/ユーザー Url が提供されるようにすることができます。</li>
   <li>[Unsafe file uploadsFile] および [image] フィールドを許可しないと、ユーザーはファイルをアップロードできます。 悪意のあるユーザーがこれを使用して、システムで混乱を招く可能性のあるファイルをアップロードすることで、web サイトの制御を得ることができます。 ファイルとイメージのアップロードでサポートされるファイルの種類を制限し、.exe、swf、flv、.htm、.php、.vb、.vbs などの拡張子を削除します。</li>
   <li>セキュリティキットモジュールを有効にする: <a href="https://ftp.drupal.org/files/projects/seckit-7.x-1.9.zip">セキュリティキット </a>モジュールは、web サイトに便利なセキュリティ機能を提供します。たとえば、Clickjacking、クロスサイト要求偽造 (csrf)、クロスサイトスクリプティング (XSS) 保護などです。 このモジュール&#39;s 既定の構成をお勧めしますが、web サイトにこのモジュールがブロックする特別な要件がある場合は、構成を確認し、必要に応じて更新してください。 詳細については、「<a href="https://drupal.org/project/seckit">セキュリティキットモジュール</a>」を参照してください。</li>
   <li>Common admin usernamesYour を使用しないでください。管理者のユーザー名 (ユーザー ID 1) を管理者、 <strong>管理者、およびルート </strong>にすることはできません。これは一般的に使用され、web サイトのセキュリティの脆弱性を表す可能性があります。 悪用を回避するには、複雑なユーザー名または一意のユーザー名を使用します。</li>
   <li>[サイトエラーをエンドユーザーから非表示にする]: これらのエラーメッセージは、web サイトおよびそのサーバーからサイト訪問者に関する機密情報を公開できます。 Web サイトでユーザーのエラーメッセージを表示しないように構成するには、web サイトで/admin/config/development/logging の [ログとエラー] ページを開き、[表示するエラーメッセージ] セクションで [なし] を選択し、[構成の保存] をクリックします。</li>
   <li>Web サイトのパスワードポリシーの moduleContent 有効にすると、ユーザーのログイン資格情報に単純なパスワードが使用され、さらに攻撃者が攻撃を仕掛けることができるようになります。 ここで脆弱性を軽減するには、 <a href="https://drupal.org/project/password_policy">パスワードポリシーモジュール</a> を有効にして、厳格なパスワードポリシーを適用します。</li>
  </ol>


  <h3>パフォーマンス構成</h3>


  <ol>
   <li>最小キャッシュ有効期間が 5 minutesTo 未満の場合は、サイトの応答性とパフォーマンスが向上します。また、最小キャッシュ有効期間によって、Drupal がそのページをクリアしたり、設定した期間にわたってノードまたはブロックの変更をブロックしたりすることを防止できます。 最小キャッシュ有効期間が5分未満に設定されている場合、サーバーは最近変更されたコンテンツをサイト訪問者に配信することが難しくなります。 最小キャッシュ有効期間を5分以上に設定するには、web サイトで/admin/config/development/performance の [パフォーマンス] ページを開き、[最小キャッシュ有効期間] ドロップダウンから新しい値を選択します。 キャッシュ内の既存のページを使用できるようにすると同時に、適切な時間が経過した後にコンテンツが変更された場合は、最小キャッシュ有効期間をできるだけ高く設定します。</li>
   <li>ページキャッシュの最大有効期間が5未満 minutesWith ページキャッシュの最大有効期間が5分未満に設定されている場合、サーバーは頻繁にページを再生成する必要があります。 これにより、サイト&#39;のパフォーマンスが低下する可能性があります。 ページキャッシュの最大有効期間を5分以上に設定するには、web サイトで/admin/config/development/performance の [パフォーマンス] ページを開き、[ <strong>ページキャッシュの最大有効期間</strong> ] ドロップダウンから新しい値を選択します。</li>
   <li>Css/js の最適化を最適化する css/JS の最適化を無効にすると、web サイトの訪問者のページパフォーマンスが低下し、サーバーの負荷が増加します。 CSS の最適化を有効にするには、web サイトで、/admin/config/development/performance の [パフォーマンス] ページを開き、[CSS ファイルの集計と圧縮] を選択します。 JavaScript の最適化を有効にするには、web サイトで、/admin/config/development/performance の [パフォーマンス] ページを開き、[集計 JavaScript ファイル] を選択します。</li>
   <li>ページの compressionWith ページの圧縮が無効になっているため、web サイトの訪問者がページの読み込みとデータの取得に時間がかかっています。 キャッシュに格納する前にページを圧縮することで、MySQL または Memcache バックエンドに対する TCP/IP オーバーヘッドが削減されます。</li>
   <li>ページの圧縮を有効にするには、web サイトの [管理]、[管理]、[設定]、[パフォーマンス] の順に開き、[パフォーマンス] ページを開きます。 [キャッシュ] セクションで匿名ユーザーのキャッシュページが選択されていることを確認し (&#39;t が有効になっていない場合は選択し、[構成の保存] をクリックします)、[キャッシュされたページを圧縮する] を選択します。</li>
  </ol>


  <h3>Azure web サイトの構成</h3>


  <ol>
   <li>Web サーバーのログ記録を有効にし、Storage アカウントを使用してログを保存します。 メディアコンテンツ用に設定したものと同じ記憶域を再利用することができます。 詳細については、「 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-enable-diagnostic-log/">Azure web サイトの診断</a>」を参照してください。</li>
   <li>自動スケールを設定すると、web サイトのトラフィックと負荷に基づいて web サイトのスケールアップやスケールダウンを動的に行うことができます。 詳細については、「自動スケール構成」を参照してください。</li>
   <li>基本モードまたは標準モードを使用します。これにより、web サイトを実行する専用の VM インスタンスが提供され、サービスのパフォーマンスと SLA のサポートが向上します。 詳細については、「 <a href="https://azure.microsoft.com/en-us/pricing/details/web-sites/">レベル別の機能</a>」を参照してください。</li>
   <li>少なくとも2つの中規模または大規模のインスタンスを使用するようにサイトを構成します (インスタンスは、web サイト用に抽象化された VM を指します)。 1つのインスタンスを使用する場合、インスタンスが無効な状態になると、サイトはダウンします。 2つのインスタンスを使用すると、この単一障害点を回避できます。</li>
   <li>「ロードテストツール」 Visual Studio などのツールを使用して web サイトのロードテストを実行し、サイトを構成したスケールで実際に web サイトのトラフィックを処理するようにします。</li>
   <li>条件に基づいて VM インスタンスをリサイクルする web サイトの自動修復を設定します。 詳細については、「 <a href="https://azure.microsoft.com/blog/2014/02/06/auto-healing-windows-azure-web-sites/">web サイトを自動修復する方法</a>」を参照してください。</li>
  </ol>


  <h3>コーディングのプラクティス</h3>


  <ol>
   <li>Drupal Core に possibleMaking を変更すると、web サイト上で Drupal のバージョンの更新を管理するのが困難になり、web サイトの拡大に伴ってメンテナンスが困難になるため、Drupal core を変更しないようにしてください。</li>
   <li>多くの modulesDrupal を使用しないようにすると、CMS の機能セットを拡張するためにモジュールを追加する柔軟性を&#39;できますが、サイトのパフォーマンスに影響する可能性があるモジュールが多すぎるため、サイトのパフォーマンスが低下する可能性があります。</li>
   <li>Azure websites で実行する web.config を含める Azure websites では、IIS を使用します。そのため、次の構成の web.config を追加して、ファイルへの不正アクセスを保護し、クリーンな Url を管理します。 &nbsp;<a href="https://groups.drupal.org/node/25421">次</a>に示すように、Drupal web サイトのサンプル web.config を使用します。 アプリケーション要求ルーティング &nbsp; cookie を無効にする必要があります。これにより、有効になっている場合に、特定のインスタンスに対する後続の要求がユーザー&#39;にピン留めされます。 この機能を無効にすると、web サイトでプラットフォームの通常の負荷分散 &nbsp; 動作を使用できるようになります。 詳細については、「無効化 ARR Cookie」を参照してください。 web.config ファイルでこれを行うには、次のセクションを<strong>system.webserver &gt; の下 &lt; </strong>に追加します。</li>
  </ol>


  <pre>
    &lt;httpProtocol&gt;
        &lt;customHeaders&gt;
          &lt;add name=&quot;Arr-Disable-Session-Affinity&quot; value=&quot;True&quot; /&gt;
        &lt;/customHeaders&gt;
      &lt;/httpProtocol&gt;</pre>

  <h2>複数のリージョンにまたがる Drupal のスケーリング</h2>


  <p>複数のリージョンで Drupal web サイトをホストすることにより、1つのデータセンターで1つの web サイトを実行しているときに、単一障害点に関連するリスクを軽減できます。 クラウドソリューションで重要な点は、すべてのコンポーネント (web サイト、データベース、キャッシュなど) がエラーになり、ソリューションの回復性が向上する可能性があるということです。 これにより、インフラストラクチャの一部を形成するサービスの停止によって発生する運用コストが削減されます。 このシナリオでは、少なくとも2つのリージョンで Drupal web サイトをホストする必要があります。たとえば、米国東部と米国西部リージョンを選択します。 次の図は、Drupal Web サイトの Active-Active (マスター) web サイトの構成を示しています。</p>


  <ol>
   <li>それぞれの MySQL データベースにリンクされている2つの Azure Websites</li>
   <li>MySQL データベースは両方ともデータベースレプリケーションと同期されます。</li>
   <li>Azure traffic Manager は、パフォーマンス、フェールオーバー、またはラウンドロビン方式に基づいてエンドユーザーのトラフィックを負荷分散します。</li>
   <li>フェールオーバーが有効になっている管理対象の Memcached サービス</li>
   <li>Azure CDN を使用した Azure Storage (Geo 冗長)</li>
  </ol>


  <p>このアーキテクチャの作成は非常に簡単ですが、アプリケーションに特別な要件がある場合は、必要に応じて上記の構成を調整できます。 この構成は、次のように更新できます。</p>


  <ul>
   <li>Master-Slave web サイトの構成を作成する</li>
   <li>1つのマスターと複数のスレーブ web サイト構成の作成</li>
   <li>Web ジョブを使用してカスタムレプリケーションプロセスを使用する</li>
   <li>Web ジョブを使用して管理プロセスを自動化する</li>
  </ul>


  <h3>Web サイトのスケーリング</h3>


  <p>Azure Websites でのスケールアップには、2つの関連するアクション (Web ホスティングプランモードの上位レベルのサービスへの変更、および上位レベルのサービスへの切り替え後の特定の設定の構成) が含まれます。 この記事では、両方のトピックについて説明します。 標準モードのようなより高いサービスレベルでは、Azure 上のリソースをどのように使用するかを決定する際の堅牢性と柔軟性が向上します。詳細については、「 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-scale/">Azure web サイトのスケーリング方法</a>」を参照してください。</p>


  <h3>データベースのスケーリング</h3>


  <p>アプリケーションは、Azure web サイトとデータベースの2つのコンポーネントに依存します。 データベースの高可用性とディザスターリカバリーのためにデータベースを拡張できるようにするには、データベースの作成方法に応じてさまざまなオプションがあります。 たとえば、次の2つのシナリオがあります。</p>


  <ol>
   <li>クリア DB サービスを使用している場合は、 <a href="https://www.cleardb.com/developers/cdbr/introduction">ClearDB の高可用性ルーティング</a> (cdbr) を構成する必要があります。 [DB のクリア] では、リージョンペア間でのデータベースレプリケーションが提供されます (例: 米国東部と米国西部)。ただし、Azure Web ジョブを使用してデータベースをレプリケートするための独自のツールを作成することもできます。</li>
   <li>Azure 仮想マシン上の MySQL クラスターを管理するためのすべてのツールを提供する <a href="https://www.mysql.com/products/cluster/">Mysql クラスター</a> をセットアップすることもできます。 この場合は、すべての MySQL クラスター、データベースのレプリケーション、およびスケール操作を手動で管理することに注意してください。</li>
  </ol>


  <h3>Redis cache のスケーリング</h3>


  <p>Azure redis cache のスケーリング機能は、現在プレビューの段階です。 Azure redis cache には、キャッシュのサイズと機能を選択できる flexibbility を提供するさまざまなキャッシュオファリングがあります。 <a href="https://portal.azure.com/">Azure portal</a>の [<strong>価格レベルの変更</strong>」ブレードを使用して、キャッシュのサイズをスケールできます。 キャッシュをスケーリング &nbsp; する方法の詳細については、 <a href="https://azure.microsoft.com/en-us/documentation/articles/cache-how-to-scale/">ここ</a>をクリックしてください。</p>


  <h3>ユーザートラフィックをルーティングするための Traffic Manager のセットアップ</h3>


  <p>Azure traffic manager を使用すると、指定したエンドポイントへのユーザートラフィックの分散を制御できます。これには、web サイトを含めることができます。 Traffic Manager は、インターネット リソースのドメイン名に関するドメイン ネーム システム (DNS) クエリに、インテリジェントなポリシー エンジンを適用することで機能します。 クラウド サービスまたは Web サイトは、同じデータセンター内または世界各地のさまざまなデータセンター内で実行できます。 Traffic Manager には3つの方法があります。</p>


  <ul>
   <li><strong>フェールオーバー</strong>: 同じまたは別の Azure データセンター (管理ポータル内のリージョンと呼ばれます) にエンドポイントがあり、すべてのトラフィックにプライマリエンドポイントを使用するが、プライマリエンドポイントまたはバックアップエンドポイントが使用できない場合に備えてバックアップを提供する場合は、[ <em>フェールオーバー</em> ] を選択します。 詳細については、「フェールオーバーの負荷分散方法」を参照してください。</li>
   <li><strong>ラウンドロビン</strong>: 同じデータセンター内または複数のデータセンターにある一連のエンドポイントに負荷を均等に分散する場合は、[ <em>ラウンドロビン</em> ] を選択します。 詳細については、「ラウンドロビンの負荷分散方法」を参照してください。</li>
   <li><strong>パフォーマンス</strong>: 地理的に異なる場所にエンドポイントがあり、最も短い待機時間で最も近い &quot; エンドポイントを使用 &quot; するようにクライアントに要求する場合は、[<em>パフォーマンス</em>] を選択します。 詳細については、「パフォーマンスの負荷分散方法」を参照してください。</li>
  </ul>


  <p>Azure 管理ポータルから新しい Azure Traffic Manager サービスエンドポイントを作成する<a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb31.png"><img alt="image_thumb[31]" border="0" height="448" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb31_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [31] " width="1206"> </a> は、traffic manager エンドポイントのダッシュボードにアクセスし、[追加] をクリックして、トラフィックのルーティング先となる web サイトを使用するように構成します。 この <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/image_thumb33.png">。<img alt="image_thumb[33]" border="0" height="605" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb33_thumb.png" style="margin: 0px; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px;" title="image_thumb [33] " width="1204"> </a> [<strong>追加</strong>] ダイアログボックスで、[サービスの種類] として [ <strong>Web サイト</strong>] を選択し、ユーザートラフィックをルーティングする web サイトを選択します。 <img alt="Add Website Endpoints" class="alignnone size-full wp-image-150211" height="617" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Capture.png" width="791"> これで、両方のエンドポイントが Traffic Manager に追加されたのを確認できます。 Traffic Manager の URL を参照すると、構成に合ったトラフィックがルーティングされているのが表示されます &nbsp;</p>


  <h2>それをラップします。</h2>


  <p>Drupal Web サイトを Azure Websites に移行する場合の基本的なタスクと懸念事項について説明しました。 上記のソリューションを使用すると、Drupal サイトが小規模か大規模かに関係なく、Azure Web サイト サービス上の Drupal Web サイトの移行と構成が簡単になります。 次に&#39;、Azure Web サイト プラットフォームで Drupal Web サイトの構築とスケーリングを開始しましょう。</p>
