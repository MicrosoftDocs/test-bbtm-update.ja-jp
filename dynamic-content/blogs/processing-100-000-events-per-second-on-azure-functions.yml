### YamlMime:Yaml
ms.openlocfilehash: 432ed1060ddd6dfded9f1334a17332022190bfcd
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892781"
Slug: processing-100-000-events-per-second-on-azure-functions
Title: 1 秒あたり 100,000 イベントを処理Azure Functions
Summary: お客様は、多くの場合、お客様に対する使用量プランのスケーラビリティとスループットの制限についてAzure Functions。 簡単な答えは、常に "依存する、ワークロードは何か" です。
Content: >-
  <p>お客様は、多くの場合、顧客に対する使用量プランのスケーラビリティとスループットの <a href="https://azure.microsoft.com/en-us/services/functions/" target="_blank">制限についてAzure Functions</a>。 簡単な答えは、常&ldquo;に依存し、ワークロードは何のように見えますか?&rdquo; 今日は、Azure Functions で大規模な Event Hub/IOT Hub ワークロードを実行する方法と、プラットフォームから得るパフォーマンスを最大化するために注意する必要があるいくつかの重要なポイントについて説明したいと思います。</p>


  <p><a href="https://blogs.msdn.microsoft.com/azurecat/2017/01/05/hello-world-welcome-to-azurecat-guidance/">Azure CAT</a> チームと提携して、Azure Functions と<a href="https://azure.microsoft.com/en-us/services/event-hubs/"> Event Hubs</a> を使用してシンプルで代表的なイベント処理パイプラインを構築しました。テレメトリは <a href="https://azure.microsoft.com/en-us/services/application-insights/">Application インサイト</a> に送信されます。</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/845cecf2-f8a7-436d-88d8-1d38bc1d019e.png"><img alt="image1" border="0" height="360" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e919f9db-bc0f-48bf-b5b7-05765bf310f0.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="image1" width="1022"></a></p>


  <p>Functions でも実行されているロード ジェネレーターは、バッチ処理されたメッセージをインジェスト イベント ハブに書き込みます。 これらのメッセージは、特定のセンサーからの一連の読み取り値を表します。 関数は、インジェスト イベント ハブからメッセージを取得し、バッチから個々の読み取りを抽出し、メッセージをターゲット イベント ハブに書き込み、その途中で追加のテレメトリを使用してメッセージを拡張します。 使用量プランの同じ関数アプリ内の 2 つの関数は、それぞれ個々の測定値を処理し、集計されたテレメトリを App インサイト に送信します。</p>


  <h2>パフォーマンス</h2>


  <p>合計 9 日間、1 秒あたり 100,000 イベントの目標負荷でシステムを実行しました。 その間、システムは合計 760 億件のイベントを処理しました。 たとえば、メッセージをインジェスト ハブに書き込み、気象/地震関数でメッセージを処理する時間など、パイプラインの e2e 待機時間を測定しました。 結果は次のようになります。</p>


  <p>E2E 待機時間のパーセント</p>


  <table border="1" cellpadding="0" cellspacing="0" class="MsoNormalTable" style="border: currentcolor; border-image: none; border-collapse: collapse; mso-border-alt: solid #a3a3a3 .5pt; mso-yfti-tbllook: 1184; mso-padding-alt: 0in 0in 0in 0in;" summary="" title="" width="1758">
   <tbody>
    <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes;">
     <td style="padding: 4pt; border: 1pt solid rgb(163, 163, 163); border-image: none;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P50</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P90</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P95</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99.9</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="276">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99.99</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="254">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>Max (最大値)</b></p>
     </td>
    </tr>
    <tr style="mso-yfti-irow: 1; mso-yfti-lastrow: yes;">
     <td style="border-width: medium 1pt 1pt; border-style: none solid solid; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163); padding: 4pt; border-image: none; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">1,102.42ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">2,755.56ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">3,788.30ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">11,894.12ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">50,367.23ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="276">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">111,240.50ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="254">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">239,890.10ms</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>簡単な用語では、次の点が必要です。</p>


  <ul>
   <li>
   <p>メッセージの半分は、インジェスト ハブに書き込まれた 1.2 時間以内に処理されました</p>
   </li>
   <li>
   <p>10 個中 9 個のメッセージが 3 秒以下で処理された</p>
   </li>
   <li>
   <p>1000 件中 999 件のメッセージが 1 分以内に処理されました</p>
   </li>
   <li>
   <p>すべてのメッセージは 5 分以内に処理されました</p>
   </li>
  </ul>


  <h2>監視</h2>


  <p>Azure Functionsには、WebJobs ダッシュボードと Application インサイト という 2 つの監視ソリューションが組み込インサイト。 現在、Azure Functionsと App インサイトの統合はプレビュー中です。 ダッシュボードは、実行時間の長&rsquo;いジョブを念頭に置いて設計され、1 秒あたり 10,000 以上の関数の実行が発生するシナリオには最適化されません。 さいわい、App インサイト&rsquo;は非常に堅牢なテレメトリ システムであり、大規模なシナリオでAzure Functionsに機能する必要があります。</p>


  <p>App insights を有効にするのは非常に簡単です。関数アプリにインストルメンテーション キーを追加すると、Azure Functions が自動的に App インサイト にデータを送信します。 詳細については、ブログを参照してください。Azure Functions&quot;<a href="https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/" target="_blank">アプリケーション と直接統合</a>インサイト。&quot;</p>


  <p>Azure ダッシュボードは高度にカスタマイズ可能であり、App インサイトビジュアル コンポーネントをピン留めするための優れたサポートが提供されています。 このシナリオで非常に便利な監視ダッシュボードをまとめるのに 1 時間か 2 時間しかかから" ました。</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/eee53d00-4335-4036-9c98-15c7dd72d9c5.png"></p>


  <h2>構成</h2>


  <p>この結果を実現するために、いくつかの主な構成の選択を行いました。</p>


  <ul>
   <li>
   <p>関数は、メッセージをバッチで処理します</p>
   </li>
   <li>
   <p>WebJobs ダッシュボードは無効になっています。監視とテレメトリに Application インサイトを使用します</p>
   </li>
   <li>
   <p>各イベント ハブは、100 のパーティションで構成されます</p>
   </li>
  </ul>


  <ul>
   <li>
   <p>パーティション キーを使用せずにイベント ハブにデータが送信される</p>
   </li>
   <li>
   <p>イベントはプロトコル バッファーを使用してシリアル化されます</p>
   </li>
  </ul>


  <p>これらの各詳細については、以下を参照してください。</p>


  <h2>バッチ処理</h2>


  <p>イベント ハブによってトリガーされる関数は、1 つのメッセージまたはメッセージのバッチを処理するために記述できます。 後者は、パフォーマンス特性がはるかに優れたものにしています。 例として splitter 関数を使用します。</p>


  <pre>

  public static async Task Run(


  EventData[] sensorEvent,


  PartitionContext partitionContext,


  IAsyncCollector&lt;EventData&gt; outputWeatherData,


  IAsyncCollector&lt;EventData&gt; outputSeismicData,


  TraceWriter log)


    {

     foreach (var sensorData in sensorEvent)

      {


  SensorType sensorType = SensorType.Unknown;

     try

        {                   

     if (sensorData.Properties.ContainsKey(&quot;SensorType&quot;))

          {


  System.Enum.TryParse(sensorData.Properties[&quot;SensorType&quot;].ToString(), out sensorType);


          }


          await ProcessEvent(sensorData, sensorType, partitionContext, outputWeatherData, outputSeismicData);


        }


  catch(Exception ex)


        {


  telemetryHelper.PostException(ex, sensorData, partitionContext.Lease.PartitionId, sensorType.ToString());


        }


      }                                   


    }</pre>


  <p>このコードに関する主な注意点は次の点です。</p>


  <ul>
   <li>
   <p>イベントの配列は、1 回の実行で関数に渡されます</p>
   </li>
   <li>
   <p>例外処理ブロックは、各イベントの処理をラップします</p>
   </li>
  </ul>


  <p>配列ベースのアプローチは、主に関数ごとの実行オーバーヘッドが原因でパフォーマンスが向上します。 システムは関数を呼び出す際に多数のアクションを実行します。これらのアクションは、イベントごとに 1 回ではなく、イベントの配列に対して 1 回だけ実行されます。 JavaScript 関数の場合、&rsquo;バッチ処理を有効にするには、function.json のカーディナリティ プロパティを明示的に多くに設定する必要があります。 バッチ処理を有効にする<a href="https://github.com/Azure/azure-webjobs-sdk-templates/blob/df94e19484fea88fc2c68d9f032c9d18d860d5b5/Functions.Templates/Templates/EventHubTrigger-JavaScript/function.json">例については</a>、GitHub。</p>


  <p>メッセージを紛失したりスキップしたり&rsquo;しない場合は、例外処理に対するこのアプローチが重要です。 通常は、&rsquo;後で処理および分析のために失敗したイベントを格納する例外ハンドラーを記述します。 この方法は重要Azure Functionsに対する組み込み文字が組み込Event Hubs。</p>


  <h2>WebJobs ダッシュボード</h2>


  <p>前述のように、監視に App インサイトを使用していたため、ダッシュボードを無効にしました。 これを行うには、アプリケーション設定に移動し、AzureWebJobsDashboard 設定を削除します。</p>


  <h2>パーティション構成</h2>


  <p>Azure Functions SDK で提供されている EventProcessorHost を使用して、Event Hubs ハブ メッセージを処理します。 詳細については、ドキュメントの「プログラミング ガイド&quot;」<a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-programming-guide" target="_blank">を参照Azure Event Hubs</a>。&quot;EventProcessorHost の動作方法は、アプリを実行している各 VM が一部のパーティションのリースを取得し、それらのパーティションでメッセージを処理できる方法です。 つまり、イベント ハブにパーティションが 2 つしかない場合、特定の時点でメッセージを処理できるのは 2 つの VM のみです。つまり、パーティション数によって関数のスケーラビリティに上限が設定されます。</p>


  <p>Event Hubs の Basic レベルと Standard レベルには、イベント ハブあたり 32 のパーティションの既定の制限がありますが、課金サポートに問い合わせる場合は、この制限を <a href="https://portal.azure.com/" target="_blank">引き上げすることができます</a>。 イベント ハブに 100 のパーティションを設定することで、各関数を 100 台の VM で同時に実行できるようになりました。 1 分間のテレメトリを見て、気象関数を実行した一意の VM の数をカウントすると、これを確認できます。</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/875b464a-0582-4168-920f-a8654c9275d7.png"></p>


  <p>別の単純なクエリを使用して、これらの 94 の VM に対して作業が均等に分散された方法を確認できます。</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6be8d4fc-0265-467d-b5cc-52babc9d90b5.png"></p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d50a9927-3e25-4ea5-ab33-85eaa0c03a5f.png"></p>


  <h2>パーティション キー</h2>


  <p>イベント ハブ プログラミング ガイドには、パーティション キーの<a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-programming-guide" target="_blank"></a>概要と、それらを使用する場合の概要が示されています。 このシナリオには順序付けやステートフル性の要件はないので、パーティション キーなしでイベントが生成されます。 これにより、実行の全体的なスループットと可用性が向上しました。</p>


  <h2>プロトコル バッファー</h2>


  <p>&rsquo;1 秒に 100,000 を超えるイベントの書き込みと読み取りを行う場合は、シリアル化の手順を実行するために必要な時間と、ワイヤ上のサイズの両方の観点から、これらのイベントのシリアル化と逆シリアル化を可能な限り効率的にします。 <a href="https://developers.google.com/protocol-buffers/" target="_blank">プロトコル バッファー</a> は、操作が容易な高パフォーマンスのシリアル化形式です。 イベント&rsquo;からの気象測定値のバッチを逆シリアル化して処理するコード例を次に示します。</p>


  <pre>

  if (sensorType == SensorType.Weather)


  {

    var batch = WeatherReadingBatch.Parser.ParseFrom(sensorData.GetBytes());

    var messages = batch.SensorReadings

  .Select(reading =&gt; EnrichData(enqueuedTime, reading));

    await WriteOutput(messages, sensorData.PartitionKey, outputWeatherData);

  }</pre>


  <p>このシナリオ&rsquo;で使用される .proto ファイルを確認する場合は、 のプロトコル バッファーの例を参照<a href="https://gist.github.com/paulbatum/c918e19cadb43fdfcce978d58d97d235" target="_blank">GitHub</a>。</p>


  <h2>コスト</h2>


  <p>9 日間の実行に対して関数アプリとその依存関係を実行する総コストは約 1,200 米ドルでした。 各&rsquo;サービスの 1 時間あたりのコストを次に示します。</p>


  <table border="1" cellpadding="0" cellspacing="0">
   <tbody>
    <tr>
     <td valign="top" width="443">
     <p><b>サービス</b></p>
     </td>
     <td valign="top" width="435">
     <p><b>1 時間あたりのコスト (USD)</b></p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>関数</p>
     </td>
     <td valign="top" width="435">
     <p>$2.71</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>Storage</p>
     </td>
     <td valign="top" width="435">
     <p>$1.80</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>Application Insights</p>
     </td>
     <td valign="top" width="435">
     <p>$1.03</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>注意が必要な重要な点を次に示します。</p>


  <ul>
   <li>
   <p>このデータには、ロード ジェネレーターのコストは含まれておりEvent Hubsの最適化に費やされていないので、コストは発生します。</p>
   </li>
   <li>
   <p>このAzure Storageは、1 時間あたり約 5,000 万トランザクションに基づいて計算されます。 これらのトランザクションのほとんどすべてが、チェックポイント処理Event Hubs関連しています。</p>
   </li>
   <li>
   <p>Application インサイトコストは、1 時間あたり 450 mb のデータ インジェストに基づいて行います。</p>
   </li>
  </ul>


  <p>関数アプリのコストの詳細については、関数アプリで使用できる実行数と実行単位のデータを使用Azure Monitor REST API。 詳細については、次のフォーラム<a href="https://stackoverflow.com/questions/41128329/how-can-i-programmatically-access-azure-functions-usage-metrics" target="_blank"> Stack Overflowしてください</a>。 1 時間分のデータのクエリを実行すると、次のようになります。</p>


  <ul>
   <li>
   <p>関数の実行数: 6,500,012</p>
   </li>
   <li>
   <p>関数の実行単位: 90,305,037,184</p>
   </li>
  </ul>


  <p>ここでの関数の実行単位は mb ミリ秒で測定されます。 これらを gb 秒に変換するには、1024000 で除算します。 関数の<a href="https://azure.microsoft.com/en-us/pricing/details/functions/" target="_blank">価格の詳細と、以下を</a>支援するために作成した簡単なプログラムを確認できます。<a href="https://gist.github.com/paulbatum/2b16c5f92351ed1c59e3a2b8a727ca97" target="_blank"> </a></p>


  <p>時間あたりのコスト = (6,500,012 実行 * ( $0.20 / 1,000,000 )) + ((90,305,037,184 ユニット/ (1024 * 10000)) * $0.000016) = $2.71 USD</p>


  <p>まとめ</p>


  <p>Azure Functions の使用量プランでは、数百の VM で実行するアプリをスケーリングできます。このため、大量のコンピューティング容量を事前に予約して支払う必要なく、高パフォーマンスのシナリオを実現できます。 サーバーレス テクノロジでのクラウド Azure Functionsと構築の詳細については、Functions の製品ページ<a href="https://azure.microsoft.com/en-us/services/functions/" target="_blank"> から始める必要があります</a>。</p>
