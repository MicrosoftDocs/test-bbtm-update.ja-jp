### YamlMime:Yaml
ms.openlocfilehash: c973a0fcc787a892a3f86fdd6b4cfb09607f7285
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910695"
Slug: new-azure-cosmosdb-javascript-sdk-2-0-now-in-public-preview
Title: '新しい Azure #CosmosDB JavaScript SDK 2.0 がパブリックプレビューに'
Summary: Azure Cosmos DB チームは、SQL API 用の JavaScript SDK のバージョン 2.0 RC を発表することができるようになりました。現在パブリックプレビュー中です。
Content: >-
  <p>Azure Cosmos DB チームは、SQL API 用の JavaScript SDK の<a href="https://github.com/Azure/azure-cosmos-js" target="_blank">バージョン 2.0 RC</a>を発表することができるようになりました。現在パブリックプレビュー中です。</p>


  <p>一般公開の前に、この RC を通じてフィードバックを受け取ることができます。ぜひお試しください。ご意見をお聞かせください。 次のものを使用して、npm を使用して <a href="https://www.npmjs.com/package/@azure/cosmos" target="_blank">最新バージョン</a> を取得できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/15e81c88-3e05-4139-bc50-6d3d21a89d03.png"><img alt="npm install azure cosmos" border="0" height="60" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/daf4316b-cf96-4e00-a82f-845f2af02211.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="npm install azure cosmos" width="240"></a></p>


  <h2>Azure Cosmos DB とは</h2>


  <p><a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB</a> は、グローバル分散型のマルチモデル データベース サービスです。 ターンキーグローバル分散を提供し、99パーセンタイルで1桁のミリ秒の待機時間を保証し、スループットとストレージのエラスティックスケーリングを実現します。</p>


  <p><a href="https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-introduction" target="_blank">SQL API</a>では、javascript SDK と Node.js プロジェクトからの Azure Cosmos DB に対して開発を可能にする<a href="https://github.com/Azure/azure-cosmos-js" target="_blank">javascript SDK</a>をサポートしています。 SDK のバージョン2.0 は TypeScript で完全に記述されており、オブジェクトモデルを再設計し、約束のサポートを追加しまし &rsquo; た。 これらの更新プログラムについて説明 &rsquo; します。</p>


  <h2>新しいオブジェクトモデル</h2>


  <p>ユーザーからのフィードバックに基づいて、 &rsquo; オブジェクトモデルを再設計し、Cosmos DB に対する操作と操作の実行を容易にします。&nbsp;</p>


  <p>&rsquo;以前のバージョンの JAVASCRIPT SDK を使い慣れている場合は、 &rsquo; API サーフェイス全体が DocumentDBClient からハングすることに気付くことがあります。 前の設計では、メソッドのエントリポイントを簡単に見つけることができますが、次に示すように、煩雑な IntelliSense エクスペリエンスのコストも発生しました。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b07ae447-49d9-4c67-8bbf-e831e6475816.png"><img alt="DocumentDBClient" border="0" height="256" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/356512b2-7250-4609-b80e-35c3fd8c1abe.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDBClient" width="455"></a></p>


  <p>また、各メソッドがリソースの URL を参照する必要があるため、データベース、コレクション、またはドキュメントに対する操作を実行するのが困難であるというフィードバックも寄せられています。&nbsp;</p>


  <p>これに対処するために、新しい最上位レベルの<strong>CosmosClient</strong>クラスを作成して<strong>documentdbclient</strong>を置き換え、そのメソッドをモジュール式のデータベース、コンテナー、および項目クラスに分割しまし &rsquo; た。</p>


  <p>たとえば、新しい SDK では、新しいデータベースとコンテナーを作成し、そこに項目を追加することができます。すべて10行のコードが対象となります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69bbffb2-fe9a-40d4-a40d-c3d993bdb55f.png"><img alt="Create a new database" border="0" height="335" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/63965962-1475-4fa5-8109-f73b51f4c620.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="新しいデータベースの作成" width="1364"></a></p>


  <p>これをビルダー &rdquo; パターンと呼び &ldquo; ます。これにより、Cosmos DB のリソース階層に基づいてリソースを参照できます。これは、脳が Cosmos DB について考える方法と似ています。 たとえば、項目を作成するには、まずそのデータベースとコンテナーを参照し、次に items. create () を呼び出します。</p>


  <h2>コンテナーと項目</h2>


  <p>また、Cosmos DB では複数の API モデルがサポートされているため、以前のコレクションとドキュメントの概念を置き換える<a href="https://docs.microsoft.com/en-us/azure/cosmos-db/faq#what-is-a-container" target="_blank">コンテナーと項目</a>の概念を SDK に導入しまし &rsquo; た。 つまり、以前はコレクション &rdquo; と呼ばれて &ldquo; いたものは、コンテナーと呼ばれる &ldquo; ようになりました。&rdquo;</p>


  <p>1つのアカウントは1つ以上のデータベースを持つことができ、データベースは1つ以上のコンテナーで構成されます。 API に応じて、コンテナーは、コレクション (MongoDB api の SQL または Azure Cosmos DB)、graph (グリーンイン API)、またはテーブル (Tables api) のいずれかとして投影されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f859dbe3-3e38-4381-a5ae-48aaa77157b1.png"><img alt="Container and Items" border="0" height="357" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4e25d7ac-2d6a-44f5-b190-866804a90a67.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="コンテナーと項目" width="652"></a></p>


  <h2>約束のサポート</h2>


  <p>最後に、ユーザーが自分で SDK をラップするカスタムコードを記述しなくなるように、 &rsquo; 約束の完全なサポートを追加しました。 これで、SDK に対して非同期/待機を直接使用できるようになりました。</p>


  <p>この違いを確認するには、新しいデータベースとコレクションを作成し、以前の SDK でドキュメントを追加するために、次のような操作を行う必要があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/61c90bb0-49ba-492b-a962-3362084df754.png"><img alt="SDK" border="0" height="1566" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d96e45ef-6de6-45f8-afcf-d87a8d499a05.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="』" width="1364"></a></p>


  <p>新しい SDK では、次に示すように、非同期関数内から直接 Cosmos DB の呼び出しを待機するだけで済みます。</p>


  <p>また、データベースとコンテナーに対して、簡単な方法である<u>Createifnotexists ()</u>を追加しまし &rsquo; た。これは、データベースを読み取るロジックをラップし、状態コードを確認し、存在しない場合は &rsquo; 作成します。</p>


  <p>&rsquo;次に示すのは、新しい SDK を使用した同じ機能です。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/94088a0c-76fe-4353-a488-bc466e927143.png"><img alt="promisesNewImageUseThisOne" border="0" height="1614" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b83418d3-0079-4349-9fa5-ac34ccb5f745.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="promisesNewImageUseThisOne" width="2672"></a></p>


  <h2>オープンソースモデル</h2>


  <p>Azure Cosmos DB JavaScript SDK はオープンソースであり、チームはオープンですべての開発を計画しています。 最終的には、問題のログ記録、フィードバックの追跡、および GitHub での PR &rsquo; の受け入れを行います。</p>


  <h2>作業の開始</h2>


  <p>この新しい SDK を使用すると、開発者エクスペリエンスが向上します。 まず、 <a href="https://docs.microsoft.com/azure/cosmos-db/create-sql-api-nodejs" target="_blank">クイックスタートガイド</a>を確認してください。 &rsquo;ご意見をお寄せください。 <a href="https://github.com/Azure/azure-cosmos-js/issues" target="_blank">GitHub リポジトリ</a>の電子メール <a target="_blank">cosmosdbsdkfeedback@microsoft.com</a> またはログに問題があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/36d54aaf-fc07-485d-a036-803e75b568e2.png"><img alt="npm install azure cosmos" border="0" height="60" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2521a944-f599-4fb1-a8e1-c37b8b24465a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="npm install azure cosmos" width="240"></a></p>


  <p>最新の Azure <a href="https://twitter.com/search?q=%23cosmosdb" target="_blank"> # CosmosDB</a>ニュースと機能については、Twitter <a href="https://twitter.com/azurecosmosdb" target="_blank">@AzureCosmosDB</a> に関する記事に従って最新の情報を入手してください。 Azure Cosmos DB によってどのようなものが構築されるかをご紹介します。</p>
