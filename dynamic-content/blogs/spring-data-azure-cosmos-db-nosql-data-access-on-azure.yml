### YamlMime:Yaml
ms.openlocfilehash: 717ca72ef6c47cfc803ba18897acc905dd5b4421
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892329"
Slug: spring-data-azure-cosmos-db-nosql-data-access-on-azure
Title: 'Spring data Azure Cosmos DB: Azure での NoSQL データアクセス'
Summary: SQL API を使用して Azure Cosmos DB の spring data Azure Cosmos DB が提供されるようになったことをお知らせします。 Microsoft のグローバルな Azure Cosmos DB
Content: >-
  <p><a href="https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-introduction" target="_blank">SQL API</a>を使用して<a href="https://azure.microsoft.com/en-us/services/cosmos-db/" target="_blank">Azure Cosmos DB</a>の spring data <a href="https://github.com/Microsoft/spring-data-cosmosdb" target="_blank">Azure Cosmos DB</a>が提供されるようになったことをお知らせします。 Azure Cosmos DB は、Microsoft &rsquo; のグローバルに分散されたマルチモデルデータベースサービスであり、優れたスケーラビリティとパフォーマンスを備えています。</p>


  <p>Spring data Azure Cosmos DB を使用すると、Java 開発者はすぐに、Azure 上のアプリの NoSQL データアクセスを構築できます。 データアクセスのための Spring based のプログラミングモデルが用意されています。また、基になるデータストアの特別な特徴を Azure Cosmos DB で保持します。 Spring Data Azure Cosmos DB の特徴には、Azure Cosmos DB コレクションと対話するための POJO 中心モデルと、拡張可能なリポジトリスタイルのデータアクセス層が含まれます。</p>


  <h2>作業の開始</h2>


  <p><a href="https://github.com/Microsoft/spring-data-cosmosdb/tree/master/samplecode" target="_blank">Spring Data Azure Cosmos DB Sample Project</a>をダウンロードして使い始めることができます。 このサンプルでは、注釈を使用してコレクションと対話したり、特定のフィールドでクエリ操作をカスタマイズしたり、クライアント用に探索可能な REST API を公開したりするプロセスについて説明します。</p>


  <p><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/SD-CosmosDB%20(002).jpg" style="width: 700px; height: 400px;"></p>


  <h3>新しいデータベースインスタンスの作成</h3>


  <p>最初に、Azure portal を使用して <a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-boot-starter-java-app-with-cosmos-db#create-an-azure-cosmos-db-by-using-the-azure-portal" target="_blank">新しいデータベースインスタンスを作成</a> します。 <strong>Azure Cosmos DB</strong>はデータベースにあり、API の<strong>SQL (ドキュメント DB)</strong>を選択できます。 データベースが作成されたら、[概要] ページで URI とキーを見つけることができます。 値は、Spring Boot アプリケーションを構成するために使用されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b47c0f3a-f8d8-4ec7-a584-7b9bb7ee745c.png"><img alt="New database instance" border="0" height="677" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9ae29125-5f06-4ede-a0f2-070c9d7683c7.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="新しいデータベースインスタンス" width="1186"></a></p>


  <h3>プロジェクトを構成する</h3>


  <p><a href="https://start.spring.io" target="_blank">Spring 初期化 r</a>を使用して単純な spring Boot アプリケーションを作成し、アプリのディレクトリで pom.xml ファイルを見つけることができます。 pom.xml ファイルで、依存関係の一覧に <em>cosmosdb</em> を追加します。 <em>spring cosmosdb</em> は <a href="https://search.maven.org/" target="_blank">Maven Central Repository</a>で公開されています。 <a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-boot-starter-java-app-with-cosmos-db" target="_blank">データベース接続の構成</a>の詳細な手順については、このチュートリアルを参照してください。 &nbsp;</p>


  <pre>

  &lt;dependency&gt;
      &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;
      &lt;artifactId&gt;spring-data-cosmosdb&lt;/artifactId&gt;
      &lt;version&gt;2.0.3&lt;/version&gt;
  &lt;/dependency&gt;

  </pre>


  <h2>Spring Data Azure Cosmos DB の特徴</h2>


  <p><a href="https://github.com/Microsoft/spring-data-cosmosdb" target="_blank">Spring data Azure Cosmos DB</a>を使用すると、Azure でのアプリの NoSQL データアクセスの構築をすぐに始めることができます。</p>


  <h3>注釈を使用してコレクションを操作する</h3>


  <p><strong> @Id 注釈:</strong>ドメインクラス @Id のフィールドに注釈を付けます。このフィールドは Azure Cosmos DB のドキュメント id にマップされます。</p>


  <p><strong> @Document 注釈:</strong>既定では、コレクション名はドメインクラスの名前を使用します。 カスタマイズするには、注釈<em> @Document (collection = &quot; yourCollectionName &quot; )</em>を追加します。</p>


  <pre>

  @Document(collection = &quot;mycollection&quot;)

  public class User {
      @Id
      private String id;
      private String email;
      private String name;
      private Address address;
      private List&lt;Role&gt; roleList;
     ...
  }</pre>


  <h3>クエリ操作のカスタマイズ</h3>


  <p>カスタマイズされたクエリは、リポジトリのエンティティに対する制約クエリを作成する場合に便利です。 さまざまな business logics の基本 <em>DocumentDbRepository</em> を拡張できます。</p>


  <pre>

  public interface UserRepository extends DocumentDbRepository&lt;User, String&gt; {

      List&lt;User&gt; findByName(String firstName);
      List&lt;User&gt; findByEmailAndAddress(String email, Address address);
      ...
  }</pre>


  <h3>検出可能な REST API を公開します</h3>


  <p><strong> @RepositoryRestResource 注釈:</strong>ドメインモデルの検出可能な REST API を公開します。</p>


  <pre>

  @Repository

  @RepositoryRestResource(collectionResourceRel = &quot;user&quot;, path = &quot;user&quot;)

  public interface UserRepository extends DocumentDbRepository&lt;User, String&gt; {

      List&lt;User&gt; findByName(String firstName);
      ...

  }</pre>


  <div>&nbsp;</div>


  <div>より高度な機能については、 <a href="https://github.com/Microsoft/azure-spring-boot">GitHub リポジトリ</a>を参照してください。</div>


  <div>&nbsp;</div>


  <h2>次の手順</h2>


  <p>Azure での Spring の使用の詳細については、次のページを参照してください。</p>


  <ul>
   <li>GitHub: <a href="https://github.com/Microsoft/spring-data-cosmosdb" target="_blank">Spring Data Azure Cosmos DB</a></li>
   <li>GitHub: <a href="https://github.com/Microsoft/azure-spring-boot" target="_blank">Azure サービスの Spring Boot</a> starter</li>
   <li>チュートリアル: <a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/" target="_blank">Azure デベロッパーセンターでの Spring</a></li>
   <li>チュートリアル: <a href="https://docs.microsoft.com/en-us/java/azure/" target="_blank">Azure デベロッパーセンターでの Java</a></li>
  </ul>


  <h2>フィードバック</h2>


  <p>改善のためにご意見やご感想をお寄せください。 <a href="https://gitter.im/Microsoft/spring-on-azure" target="_blank">Gitter</a>でお問い合わせいただけます。</p>
