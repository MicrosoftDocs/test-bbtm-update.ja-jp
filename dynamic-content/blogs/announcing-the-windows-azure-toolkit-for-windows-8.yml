### YamlMime:Yaml
ms.openlocfilehash: 05e296f7d1e0430bbff4042433608ce99e2d3444
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891858"
Slug: announcing-the-windows-azure-toolkit-for-windows-8
Title: Windows 8 用の Azure Toolkit Windows の発表
Summary: Windows 8 用の azure Toolkit Windows は、開発者が azure コンピューティングと Windows Storage の機能を活用できる Windows Metro スタイルアプリケーションを簡単に作成できるように設計されています。 ...
Content: '<p class="ppBulletList"><a target="_blank" href="https://watwindows8.codeplex.com/">Windows 8 用の azure Toolkit Windows</a>は、開発者が azure コンピューティングと Windows Storage の機能を活用できる Windows Metro スタイルアプリケーションを簡単に作成できるように設計されています。 これには、Visual Studio 用の Windows 8 クラウドアプリケーションプロジェクトテンプレートが含まれています。これにより、開発者は Windows Azure のサービスを利用する Windows Metro スタイルアプリケーションを簡単に作成できます。 このテンプレートは、Windows Azure プロジェクト、ASP.NET MVC 3 プロジェクト、Windows Metro スタイル JavaScript アプリケーションプロジェクトを生成します。 &nbsp;すぐに使用できるクライアントおよびクラウドプロジェクトは、Windows プッシュ通知サービス (WNS) でプッシュ通知を有効にするために統合されます。 さらに、Windows azure プロジェクトは、WNS レシピの使用方法と、azure Blob と Table storage Windows を活用する方法を示しています。</p>  <p class="ppBulletList">Windows 8 用の Azure Toolkit Windows を<a target="_blank" href="https://watwindows8.codeplex.com/">ダウンロード</a>できます。</p>  <h2>プッシュ通知クラウドサービスのアーキテクチャ</h2>  <p>Windows Phone 7 と Microsoft プッシュ通知サービス (MPNS) の操作に慣れているユーザーにとっては、Windows プッシュ通知サービス (WNS) が非常に似ていることを理解しておく必要があります。 では、WNS のしくみについて、鳥のアーキテクチャビューを見てみましょう &rsquo; 。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3223.NHImage1.png" alt="" border="0"></p>  <p>通知を送信するプロセスには、次の手順が必要です。</p>  <ol start="1">  <li><b>チャネルを要求</b>します。 WinRT API を使用して、WNS からチャネル Uri を要求します。 &nbsp; チャネル Uri は、アプリケーションインスタンスに通知を送信するために使用する一意の識別子になります。</li>  <li><b>Windows Azure cloud services にチャネルを登録</b>します。 チャネルを作成したら、チャネルを格納し、特定のチャネルに通知を送信するようにサービスが決定 &rsquo; するまで、アプリケーション固有のデータ (ユーザープロファイルなど) に関連付けることができます。</li>  <li><b>WNS に対して認証</b>します。 チャネル URI に通知を送信するには、最初に OAuth2 を使用して WNS に対して認証を行い、次に WNS にプッシュする通知ごとに使用されるトークンを取得する必要があります。</li>  <li><b>チャネルの受信者にプッシュ通知</b>します。 チャネル、通知ペイロード、WNS アクセストークンを取得したら、HttpWebRequest を実行して、クライアントに配信するための通知を WNS に送信できます。</li>  </ol>  <p>幸いなことに、 <a target="_blank" href="https://watwindows8.codeplex.com/">azure Toolkit Windows 8 の Windows</a>によって開発が高速化されます。このプロジェクトテンプレートを使用すると、簡単なファイルの新しいプロジェクトエクスペリエンスで Windows Azure クラウドサービスからの通知配信を開始することができます。 &nbsp;ツールキットのコンポーネントを見てみましょう &rsquo; 。</p>  <h2>Toolkit コンポーネント</h2>  <p>Windows 8 用の Azure Toolkit Windows には、Dependency Checker、Windows プッシュ通知サービスレシピ、開発11プロジェクトテンプレート、VS 2010 プロジェクトテンプレート、サンプルアプリケーションなどの豊富な資産のセットが含まれています。</p>  <h3><b>Dependency Checker</b></h3>  <p>この依存関係チェッカーは、Windows Metro スタイルアプリの両方を開発するために必要な依存関係を特定し、Windows 8 に Windows Azure ソリューションをインストールするのに役立つように設計されています。</p>  <p>&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4087.NHImage2.png" alt="" border="0"></p>  <h3><b>開発 11 Windows Metro スタイルアプリ</b></h3>  <p>Dev 11 Windows Metro スタイルアプリには、単純な UI と、WinRT API を使用して WNS からチャネルを要求する方法を示すために必要なすべてのコードが用意されています。 &nbsp;たとえば、次の一覧では、WNS からチャネル URI を要求しています。</p>  <p><span style="font-size: small;"><span style="color: #3366ff;">var</span> push = Windows。ネットワーク. PushNotifications;</span><br> <span style="font-size: small;"><span style="color: #3366ff;">var</span> promise = push。PushNotificationChannelManager. createPushNotificationChannelForApplicationAsync ();</span><br><br> <span style="font-size: small;">promise。 then (<span style="color: #3366ff;">function</span> (ch) {</span><br> <span style="font-size: small;">&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">var</span> uri = ch. uri;</span><br> <span style="font-size: small;">&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">var</span>有効期限 = expirationTime;</span><br> <span style="font-size: small;">&nbsp;&nbsp;&nbsp; updateChannelUri (uri, 有効期限);</span><br> <span style="font-size: small;">});</span></p>  <p>チャネルを作成したら、このチャネルを Windows Azure クラウドサービスに登録する必要があります。 これを行うには、サンプルアプリは updateChannelUri を呼び出します。ここでは、単純な JSON ペイロードを構築し、WinJS API を使用して Windows Azure で実行されている WCF REST サービスに通知します。</p>  <p><span style="color: #3366ff;">関数</span> updateChannelUri (Channel、channelexpiration 期限) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">if</span> (channel) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">var</span> serverUrl = <span style="color: #800000;">" https://myservice.com/register "</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">var</span>ペイロード = {有効期限: channelexpiration 期限。 toString ()、<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URI: channel};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">var</span> xhr = <span style="color: #3366ff;">new</span> WinJS ({<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;種類: "POST"、<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: serverUrl、<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ヘッダー: { <span style="color: #800000;">"content-type": "application/json;charset = utf-8 "</span> },<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; データ: json.stringify (ペイロード)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; })。 then (<span style="color: #3366ff;">function</span> (req) { &hellip; });<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } }</p>  <h3><b>VS 2010 Windows Azure クラウド Project テンプレート</b></h3>  <p>ソリューションによって提供される Windows azure クラウドプロジェクトは、プッシュ通知を配信するための Windows azure サービスを構築するためのいくつかの資産を示しています。 &nbsp;次のような資産があります。</p>  <p>1. &nbsp; クライアントアプリケーションの WCF REST サービス。チャネルを登録し、TableServiceContext を使用して Windows Azure Table Storage に格納する方法を示します。 次のコードリストでは、プロジェクトによって公開されている単純な WCF REST インターフェイスを確認できます。<br> <br> ServiceContract<br><span style="color: #3366ff;">パブリックインターフェイス</span><span style="color: #33cccc;"> IWNSUserRegistrationService</span><br>{<br>&nbsp;&nbsp;&nbsp; [WebInvoke (Method = <span style="color: #993300;">"POST"</span>, Bodystyle = WebMessageBodyStyle)]<br>&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">void</span>Register (WNSPushUserServiceRequest userChannel);<br>&nbsp;<br>&nbsp;&nbsp;&nbsp; [WebInvoke (Method =<span style="color: #993300;"> "DELETE"</span>, Bodystyle = WebMessageBodyStyle)]<br>&nbsp;&nbsp;&nbsp;<span style="color: #3366ff;">void</span>登録解除 (WNSPushUserServiceRequest userChannel);<br>}<br>&nbsp;<br>2. &nbsp; WNS レシピを使用してクライアントにトースト、タイル、バッジの通知を作成して送信するための ASP .NET MVC 3 ポータル。<br><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3058.NHImage3.png" alt="" border="0"><br>3. &nbsp; タイルとトースト通知イメージの Blob Storage を使用する方法の例。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2437.NHImage4.png" alt="" border="0"><br><br>4. &nbsp; wns に対する認証、ペイロードの構築、wns への通知の送信を行うための単純なマネージ API を提供する、ポータルで使用される Windows プッシュ通知のレシピ。<br> <br> Windows<span style="color: #3366ff;">を使用</span>します。レシピ。<br>Windows<span style="color: #3366ff;">を使用</span>します。レシピ。 Security;<br>&nbsp;<br>...<br>&nbsp;<br><span style="color: #339966;">WNS からアクセストークンを accquire する WNSAccessTokenProvider を構築します。</span><br>IAccessTokenProvider _tokenProvider = <span style="color: #3366ff;">new</span> WNSAccessTokenProvider (<span style="color: #993300;">"ms-app% 3a% 2F% 2fs-1-15-2-1633617344-1232597856-4562071667-7893084900-2692585271-282905334-531217761", "XEvTg3USjIpvdWLBFcv44sJHRKcid43QXWfNx3YiJ4g"</span>);<br>&nbsp;<br>指定された CchannelUrl に対してトースト通知を作成します<br>var トースト = <span style="color: #3366ff;">new</span> toastnotification (_tokenProvider)<br>{<br>&nbsp; ChannelUrl = <span style="color: #993300;">" https://db3.notify.windows.com/?token=AQI8iP%2OtQE%3d "</span>;<br>&nbsp; ToastType = ToastType. ToastImageAndText02;<br>&nbsp; Image = <span style="color: #993300;">" https://127.0.0.1/devstoreaccount1/tiles/WindowsAzureLogo.png "</span>;<br>&nbsp;Text =<span style="color: #3366ff;">新しい</span>リスト &lt; <span style="color: #3366ff;">文字列</span> &gt; {<span style="color: #993300;">"Windows Azure WebRole"}; から通知を送信し</span>ています。&nbsp;&nbsp;<br>};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;<br><span style="color: #339966;">通知を WNS に送信する</span><br>NotificationSendResult result = トースト。Send ();<br>&nbsp;<br>5. &nbsp; Windows プッシュ通知レシピを使用すると、通知を3行に送信するために必要なコードの量が簡略化されます。</p>  <p><br>これらの各資産の最終的な結果は、Windows 8 用の Azure Toolkit Windows を使用して配信されたトーストの下のスクリーンショットに示すような通知です。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6661.MHImage5.png" alt="" border="0"></p>  <p>演習として、web サイトを使用して、トースト、タイル、バッジの各通知の種類で使用できる豊富なテンプレートセットを調べることをお勧めします。</p>  <h3><b>サンプル アプリケーション</b></h3>  <p>現時点では、次の2つのサンプルアプリケーションがツールキットに含まれており、その他の Windows Azure 機能の使用方法を示しています。</p>  <ol>  <li><b>pnworker</b>: このサンプルでは、Azure Storage キュー Windows を作成して、Windows Azure ワーカーロールに通知を配信する作業をオフロードする方法を示します。 &nbsp;詳細については、 <a href="https://watwindows8.codeplex.com/">CodePlex</a>のドキュメントを参照してください。</li>  <li><b>ACSMetroClient</b>: Windows Metro スタイルアプリケーションで ACS を使用する方法の例を示します。 &nbsp;詳細については、Vittorio による<a target="_blank" href="https://blogs.msdn.com/b/vbertocci/archive/2011/09/14/using-acs-in-metro-style-applications.aspx">この投稿</a>を参照してください。</li>  <li><b>マージーズ &rsquo; トラベル:</b> John shewchuk によるデモの基調講演に見られるように、マージーズ &rsquo; s トラベルは、Metro スタイルアプリが Windows Azure と連携する方法を示すサンプルアプリケーションです。 詳細については、 <a target="_blank" href="https://www.wadewegner.com/2011/09/metro-style-apps-with-windows-azure">この投稿</a> を参照してください。 このサンプルアプリケーションは、ビルド conferene の直後に出荷されます。</li>  </ol>  <h3><b>まとめ</b></h3>  <p>Windows 8 用の azure Toolkit Windows は、開発者に対して、Windows 8 の Metro スタイルアプリケーションから迅速に Windows Azure の使用を開始する方法を示す、さまざまな再利用可能な資産のセットを提供します。 &nbsp;toolkit をダウンロードして、ステップバイステップチュートリアルを参照するには、 <a target="_blank" href="https://watwindows8.codeplex.com/">Windows Azure Toolkit を</a>参照して Windows 8 を参照してください。</p>  <p><em>Harris は、Azure Windows のテクニカルエバンジェリストです。<a target="_blank" href="https://twitter.com/#!/cloudnick">@cloudnick</a>次の手順に従います。</em></p>'
