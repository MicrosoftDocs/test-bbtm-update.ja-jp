### YamlMime:Yaml
ms.openlocfilehash: 297a84cb89f9454ee45ad5fe2e781253c68dbb4e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890513"
Slug: best-practices-for-the-windows-azure-content-delivery-network
Title: Windows Azure コンテンツ配信ネットワークのベスト プラクティス
Summary: '抜粋: https://msdn.microsoft.com/en-us/library/gg680299.aspx web.config を使用して、ホストオブジェクトと配信のキャッシュ動作をCDNできますか?  Azure content delivery... Windows Azure Content Delivery...'
Content: '<p><i>抜粋元: </i><a target="_blank" href="https://msdn.microsoft.com/en-us/library/gg680299.aspx"><i>https://msdn.microsoft.com/en-us/library/gg680299.aspx</i></a></p>  <p><b>ホストオブジェクトの配信web.configキャッシュ動作を管理するために、CDNできますか?</b></p>  <p>Azure Windows (Content Delivery Network) はCDNサービスによって提供されるキャッシュ制御ヘッダーを受け入れ、 コンテンツが Web ロールによって提供される場合、これは IIS によって制御されます。 静的コンテンツのキャッシュ 制御ヘッダーは、&lt;Web 構成の staticContent&gt; 要素の clientCache&gt; &lt;要素を変更することでカスタマイズできます。</p>  <p>次に例を示します。</p>  <p>次の構成サンプルでは、応答に HTTP "Expires: Expires: Gmt, 19 Jan 2038 03:14:07 GMT" ヘッダーを追加します。このヘッダーは、今から何年も経過した要求を構成します。</p>  <p>&lt;構成&gt;</p>  <p>&nbsp;&nbsp;&lt;system.webServer&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;staticContent&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;clientCache cacheControlMode="UseExpires"</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpExpires="Gmt, 19 Jan 2038 03:14:07 GMT" /&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/staticContent&gt;</p>  <p>&nbsp;&nbsp;&lt;/system.webServer&gt;</p>  <p>&lt;/configuration&gt;</p>  <p>ページ ASP.NET 既定の動作は、キャッシュ コントロールを private に設定します。 この場合、このWindows Azure CDNはキャッシュされません。 この動作をオーバーライドするには、Response オブジェクトを使用して、既定のキャッシュ制御設定を変更します。</p>  <p>次に例を示します。</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Cache.SetCacheability(HttpCacheability.Public);</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Response.Cache.SetExpires(DateTime.Now.AddYears(1));</p>  <p>設定のルートの場所に含まれているファイルは、すべてのサブフォルダーに継承されます。&nbsp;また、オリジン内の任意のサブディレクトリに web.config ファイルを配置して、特定のサブディレクトリ ツリーに適した個々の構成設定を制御することもできます。&nbsp;</p>  <p>IIS の既定値ではない MIME web.configを追加するには、ファイルを使用する必要があります。&nbsp;アプリケーションを使用してweb.config標準の MIME の種類を再定義すると、IIS は 500 を返す可能性があります (「」を参照)。&nbsp; <a target="_blank" href="https://blogs.msdn.com/b/chaun/archive/2009/12/04/iis7-error-cannot-add-duplicate-collection-entry-of-type-mimemap-with-unique-key-attribute-fileextension.aspx">https://blogs.msdn.com/b/chaun/archive/2009/12/04/iis7-error-cannot-add-duplicate-collection-entry-of-type-mimemap-with-unique-key-attribute-fileextension.aspx</a>&nbsp;一般に、新しいファイルの種類を配信しようとして 404 を受信する場合にのみ、MIME の種類を設定する必要があります。&nbsp;例えば。 新しいファイルの種類をテストして配信し、必要に応じて、一般的にリンクを公開する前に MIME の種類を追加します。</p>  <p><b>Azure プロジェクトでさまざまな環境をCDNするためのベスト プラクティスWindowsはありますか?</b></p>  <p>たとえば、テスト環境と実稼働環境に対して別の CDN エンドポイントを同じプロジェクトに構成する場合は、実行時にこれらの値を変更できるので、異なるドメインを構成設定 (ServiceConfiguration.cscfg) に設定することをお勧めします。 ただしweb.configは許容されるリポジトリです。</p>  <p><b>コンテンツが最新の情報を確実に得る最善の方法は何ですか? </b></p>  <p>適切なキャッシュ有効期限ヘッダーの設定は、鮮度を確保し、コストを制御し、クライアントに最高のパフォーマンスを提供する最も簡単な方法です。&nbsp;</p>  <p><a target="_blank" href="https://msdn.microsoft.com/en-us/library/gg680305.aspx">https://msdn.microsoft.com/en-us/library/gg680305.aspx</a> をご覧ください。</p>  <p><b>フォルダー内で別のフォルダー名を使用Windows Azure CDN。</b></p>  <p>はい、絶対に。 Azure Windowsの<b></b>CDNソース コンテンツに URL 構造を反映するだけで、必要に応じて深く入れ子にできます。</p>  <p>SDK 1.4 のホステッド サービス オブジェクト配信の場合、サービスの /cdn フォルダー ルートでの発行に制限されます。</p>  <p><b>キャッシュでクエリ文字列パラメーターを使用する方法</b></p>  <p>ホステッド サービス オブジェクトの配信では、ホストされているサービスで Windows を有効に開発者ポータル Azure CDNでこの動作を切り替えできます。 有効にすると、クエリ文字列全体がオブジェクトのキャッシュ キーの一部として使用されます。つまり、同じルート URL パスを持つがクエリ文字列が異なるオブジェクトは、個別のオブジェクトとしてキャッシュされます。 "無効" は、異なるクエリ文字列値が無視され、ルート URL パスだけがキャッシュ キーとして使用され、異なるクエリ文字列が同じオブジェクトとして扱われるので、1 回だけキャッシュされます。</p>  <p>BLOB ストレージのオリジンでは、クエリ文字列は常に無視されます。 特に、共有アクセス文字列を使用して、プライベート コンテナー CDNを有効にすることはできません。 </p>  <p><b>HTTPS 配信を使用する方法の例は何ですか?</b></p>  <p>セキュリティで保護されたセッションWindows必要CDNパブリックに利用可能なオブジェクトを配信するために、Azure<b> </b>CDN での HTTPS 配信が使用されます。 たとえば、ショッピング カートでは、グラフィックス、ボタン、静的スクリプト、その他の再利用可能な要素を含む多くの "chrome" オブジェクトを使用できます。セキュリティで保護されたショッピング カート のページ フローでは、ブラウザーの警告を回避するために、これらのオブジェクトを HTTPS 経由で配信する必要があります。</p>  <p><b>レプリケーションのWindows Azure CDN方法</b></p>  <p>レプリケーションはありません。 Azure Windowsでの<b></b>ファイルCDNは "pull" です。 ファイルは 1 つの場所 (オリジンなど) にアップロードされ、クライアントからの要求に基づいてキャッシュ ノードにプルされます。</p>  <p><b>サービスがデプロイWindows Azure CDNのノードは何ですか?</b></p>  <p>Windows Azure CDN にデプロイすると、すべての場所に自動的に "デプロイ" され、オンラインになると、追加の各場所に追加されます。&nbsp;"新しい" ノードの使用を開始するために何もするCDNはありません。 このWindows Azure CDNエニキャストを使用して、エンド ユーザーを最も近いノードにルーティングします。</p>  <p><b>データ 型のバイト範囲要求のベスト プラクティスは何Windows Azure CDN。</b></p>  <p>大きなファイルの末尾に署名/目次/カタログを置き、バイト範囲の GET を使用して取得します。&nbsp; これにより、パフォーマンスが最適ではありません。&nbsp; 署名ファイルは、ファイルの先頭に配置するか、別のファイルに配置する必要があります。</p>  <p><b>圧縮されたコンテンツWindows Azure CDNでどのように動作しますか?</b></p>  <p>オブジェクトWindows Azure CDN圧縮を変更 (または追加) しません。 この<b></b>Windows Azure CDN、"Accept-Encoding" ヘッダーに基づいて、オリジンによって提供される圧縮を尊重します。 1.4 の現在、Azure Storage圧縮はサポートされていません。 ホステッド サービス オブジェクト配信を使用している場合は、圧縮されたオブジェクトを返す IIS を構成できます。</p>  <p><b>アプリケーション内のコンテンツを消去または無効化Windows Azure CDN。</b></p>  <p>1.4 の現在、消去関数は使用できません。 この機能は開発中です。 最良の鮮度制御は、このドキュメントと MSDN の詳細なドキュメントで説明するように、良好なキャッシュWindows Azure CDN設定する方法です。</p>  <p><b><i>問題レポートの例: "CDN が新しいオブジェクトを取得しない"、または "CDN が 72 時間オブジェクトをキャッシュしているようです"</i></b><b></b></p>  <p>Cache-Control ヘッダー、または CDN に意味のない値を出力していないので、それを無視し、最大 72 時間キャッシュします。</p>  <p>キャッシュ制御ヘッダーは "public" で、値が 300 より大きい必要があります。または、CDNでは無視されます。&nbsp;意図的に Cache-Control &lt; 値 300 を出力する場合、そのコンテンツは最初に CDN に配置すべきではありません。</p>  <p>次の説明に従って、オリジンの有効期限をより良い値に調整してください。&nbsp; <a target="_blank" href=""></a></p>  <p><b>オブジェクトはどのくらいの頻度CDNから更新されますか?</b><b></b></p>  <p>これは、オブジェクトのキャッシュ制御ヘッダー (またはその欠如)、オブジェクトの人気、親のキャッシュ可能性、エッジ使用率によって異なります。&nbsp; 更新時間ごとにノードごとに少なくとも 1 回オリジンにヒットし、更新時に If-Modified-Since 要求をフォローアップします。</p>  <p>ヘッダーがCache-Control場合は、上記の "72 時間" の質問を参照してください。</p>  <p><iframe src="https://www.facebook.com/plugins/like.php?href=https://blogs.msdn.com/b/windowsazure/archive/2011/03/18/best-practices-for-the-windows-azure-content-delivery-network.aspx;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50" style="overflow: hidden; width: 300px; height: 50px;" frameborder="0" scrolling="no"></iframe><br>ツイートします  <script type="text/javascript" src="https://platform.twitter.com/widgets.js"></script>  </p>'
