### YamlMime:Yaml
ms.openlocfilehash: 338b2ff332614075b60addc78899a99a1f9f8496
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891189"
Slug: azure-automation-controlling-runbook-streams-for-testing-and-troubleshooting
Title: 'Azure Automation: テストおよびトラブルシューティングのための Runbook ストリームの制御'
Summary: この記事では、runbook のデバッグとトラブルシューティングに役立つ runbook ストリームを制御するためのいくつかの概念とベストプラクティスについて説明します。
Content: >-
  <p><strong>重要な注意: &nbsp; </strong>最新情報については、このコンテンツの記事「 <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-runbook-output-and-messages/" target="_blank">Azure Automation での Runbook の出力とメッセージ</a>」を参照してください。</p>


  <p><a href="https://azure.microsoft.com/en-us/services/automation/" target="_blank">Azure Automation</a>を使用して runbook を作成して実行する場合、作成時の runbook のテストと、運用環境での runbook ジョブのトラブルシューティングという2つの主要なタスクがあります。 &nbsp;どちらの場合も、有効なログメッセージを生成するために runbook が必要になるため、実行中に何が起こっているかを知ることができます。 &nbsp;幸いなことに、Azure Automation の runbook を利用するエンジンである PowerShell ワークフローには複数のメッセージストリームがあり、テストやトラブルシューティングの際に最適な利点を得るために制御できます。 &nbsp;この記事では、runbook のデバッグとトラブルシューティングに役立つ runbook ストリームを制御するためのいくつかの概念とベストプラクティスについて説明します。</p>


  <h2>Azure Automation でのテスト</h2>


  <p>Runbook を作成するには、Azure Automation runbook の作成ページを使用します。 &nbsp;これには、PowerShell ワークフローコードを編集するためのペイン、テスト出力を表示するためのウィンドウ、アクティビティ、runbook、およびアセットを挿入するためのコントロールがあります (「デバッグのための Runbook 出力」セクションのスクリーンショットを参照してください)。 &nbsp;Runbook を作成するときは、機能が期待どおりに動作することを保証するために、重要なポイントでテストすることがあります。 ドラフトの runbook のテストを開始するのは簡単です。 [ <strong>テスト</strong> ] ボタンをクリックするだけです。 &nbsp;テストジョブが開始されると、[出力] ウィンドウが表示され、runbook からのストリームがこのペインに書き込まれます。 &nbsp;もちろん、ストリームに格納する情報と使用する特定のストリームは、runbook をデバッグする方法にとって非常に重要です。 &nbsp;この問題に対処するために、次のセクションでは、PowerShell ワークフローで使用できるさまざまなストリームを制御する方法について説明します。</p>


  <h2>Runbook ストリームの制御</h2>


  <p>PowerShell ワークフローでは、それぞれ異なる目的を持つ6つの異なるストリーム &ndash; へのレコードの書き込みをサポートしています。 Runbook は、次のコマンドレットを使用してこれらのストリームに書き込むことができます。</p>


  <ul>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849921.aspx" target="_blank">書き込み-出力</a>

   <ul>
    <li>Runbook 処理によって生成される出力オブジェクト</li>
    <li>これらは、多くの場合、この runbook を呼び出した親 runbook によって使用される戻りデータとして使用されます。</li>
   </ul>
   </li>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849931.aspx" target="_blank">書き込み-警告</a>
   <ul>
    <li>警告メッセージ</li>
   </ul>
   </li>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849962.aspx" target="_blank">書き込み-エラー</a>
   <ul>
    <li>エラー メッセージ</li>
    <li>エラーは例外 &ndash; とは異なり、既定ではエラーは runbook の実行を停止しませんが、キャッチされない例外によって runbook は中断されます。</li>
   </ul>
   </li>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849951.aspx" target="_blank">書き込み-詳細</a>
   <ul>
    <li>一般的なメッセージとデバッグ情報の詳細レコード</li>
   </ul>
   </li>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849902.aspx" target="_blank">書き込み-進行状況</a>
   <ul>
    <li>進行状況レコードは、runbook の各活動の開始時と終了時にワークフローによって自動的に生成されます。</li>
   </ul>
   </li>
   <li><a href="https://technet.microsoft.com/en-us/library/hh849969.aspx" target="_blank">書き込み-デバッグ</a>
   <ul>
    <li>これは PowerShell コンソールの使用を目的としているため、Azure Automation では <strong>使用</strong> しないでください。</li>
   </ul>
   </li>
  </ul>


  <p>各ストリームを使用するタイミングについて学習することで、runbook 作成の作成/デバッグフェーズ中や、運用 runbook ジョブのトラブルシューティング中に、有用性を最大限に活用できます。 Azure Automation には、runbook の作成ページと runbook のジョブページを表示 &ndash; できる主な場所が2つあります (以下のスクリーンショットを参照してください)。 Runbook の作成ページ &nbsp; では、作成時とテスト時に runbook をデバッグするときにストリームを表示することができます。 &nbsp;Runbook が発行され、運用環境で実行された後、runbook ジョブの問題のトラブルシューティングを行うときに、[runbook ジョブ] ページで、ストリームを表示することができます。</p>


  <h2>デバッグ用の Runbook の出力</h2>


  <p>Runbook の作成中に、runbook をテストすると、既定では出力、警告、およびエラーストリームのみが出力ウィンドウに書き込まれます。 &nbsp;次のスクリーンショットでは、この動作を確認できます。 <img alt="Default stream output" border="0" height="440" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/StreamDefaultTest.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="既定のストリーム出力" width="610"> これら3つのストリームのみが書き込まれる理由は、ストリームに設定されている既定の設定に関連しています (詳細については、PowerShell ユーザー設定<a href="https://technet.microsoft.com/en-us/library/hh847796.aspx" target="_blank">変数</a>に関する記事を参照してください)。 &nbsp;次のスクリーンショットに示すように、警告とエラーの既定の設定は続行 &rdquo; さ &ldquo; れますが、Verbose &ldquo; の設定は SilentlyContinue &rdquo; です。 &nbsp;つまり、Write-Verbose コマンドレットを使用すると、メッセージは出力ウィンドウに書き込まれません (コマンドレットの呼び出しに Verbose スイッチが含まれて &ndash; いる場合を除きます)。 <img alt="Default stream preference settings" border="0" height="219" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/PreferencesInAuthoring.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="既定のストリームの基本設定" width="484"></p>


  <h3>テスト用の既定のストリーム設定の変更</h3>


  <p>テスト中は、詳細ストリームの既定の設定を上書きできます。</p>


  <ul>
   <li>すべての詳細メッセージを出力ウィンドウに表示するには、runbook の上部にある [$VerbosePreference = &rdquo; 続行 &rdquo; ] を設定します。
   <ul>
    <li>詳細メッセージを選択するだけの場合 &nbsp; は、特定の Write-Verbose 呼び出し (または詳細メッセージを含む任意のコマンドレット) に-verbose &rdquo; スイッチを追加 &ldquo; できます。</li>
   </ul>
   </li>
  </ul>


  <p>&nbsp; 次のスクリーンショットは、この設定が runbook と結果に設定されていることを示しています。 <img alt="Updated Verbose stream preference" border="0" height="304" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/UpdatedPreferencesInAuthoring.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="詳細ストリームの設定が更新されました" width="489"> &nbsp; <img alt="Stream test with Verbose stream set to display" border="0" height="505" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/StreamTestVerboseEnabled.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="詳細ストリームが表示されるように設定されるストリームテスト" width="610"> <strong>ベストプラクティス:</strong> &nbsp;作成時に Azure Automation runbook デバッグには Write-Verbose を使用します。 &nbsp;&rsquo;デバッグメッセージには Write-Debug または Write-Output を使用しない: Write-Debug は対話型コンソールの使用のみを目的としており、Write-Output は別のプロセスへの入力として使用される出力オブジェクト (子 runbook としてこの runbook をインラインで呼び出す runbook など) に対してのみ使用されます。 <strong>ベストプラクティス:</strong> &nbsp;テストとトラブルシューティングのためにジョブ出力に表示する一般的なコメントには、Write-Verbose を使用します。 &nbsp;ここでも、Write-Output は使用しないでください。 <strong>ベストプラクティス:</strong> &nbsp;Runbook で Write-Progress を使用しない &rsquo; でください。 &nbsp;進行状況レコードは、コンソールの進行状況バーに表示されるため、[テスト出力] ウィンドウに表示されないため、デバッグには役立ちません。 &nbsp;次のセクションの運用ジョブに関するセクションでは、トラブルシューティング時に進行状況レコードがいくつか使用されていることがわかりますが、PowerShell ワークフローエンジンによって自動的に生成されるのは進行状況レコードのみです。</p>


  <h2>運用ジョブログの Runbook 出力</h2>


  <p>Runbook の作成が完了し、運用環境で使用できるように公開したら、runbook ジョブに関する問題のトラブルシューティングに必要な情報量を考慮する必要があります。 実稼働ジョブ (テストジョブと同様) の場合、既定では、出力、警告、およびエラーレコードのみが各ジョブのデータベースに書き込まれます。 &nbsp;これらのレコードが既定で格納される理由は、これらのレコードが、ルーチンに必要な最も重要な情報であるためです。 &nbsp;Runbook 内で警告またはエラーの基本設定変数を SilentlyContinue &rdquo; に &rdquo; 設定して発行した場合、運用環境では、runbook の構成でこれらのストリームのログが有効になっていても、runbook はこれらのストリームに対してメッセージを出力しません。 次に示すのは、ジョブの [ダッシュボード] ページと [履歴] ページの2つのスクリーンショットで、出力、警告、およびエラーレコードが既定でどのように表示されるかを示しています。 &nbsp; ストレージ領域を節約するために、既定では進行状況レコードと詳細レコードは保存されません。 &nbsp; (詳細については、 <a href="https://azure.microsoft.com/blog/2014/06/12/azure-automation-monitoring-and-troubleshooting-your-runbook-jobs-2/" target="_blank">runbook の監視とトラブルシューティング</a>に関するブログを参照してください)。 <img alt="Runbook Job Dashboard" border="0" height="568" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/RunbookJobOutputDashboard.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="Runbook ジョブダッシュボード" width="406"> &nbsp; <img alt="Default Runbook Job Streams" border="0" height="274" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/RunbookJobOutputDefault.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="既定の Runbook ジョブストリーム" width="610"></p>


  <h3>運用環境でのトラブルシューティングの既定のストリーム設定の変更</h3>


  <p>各 runbook の [構成] ページで、詳細レコードと進行状況レコードのログ記録の既定の設定を変更できます。 ログ記録を有効にするためにこれらの設定が変更された次のスクリーンショットを参照してください。 これらの構成設定は、発行された runbook の運用中にのみ適用されることに注意してください。 runbook がドラフトモードの場合、runbook の作成/テストページでは cache-control ません。 これらの設定は、Set-AzureAutomationRunbook コマンドレットを使用して変更することもできます。 <strong>ベストプラクティス:</strong> &nbsp;運用 Azure Automation runbook のトラブルシューティングを行うためにジョブ履歴に表示する全般的な情報、進行状況、デバッグ情報には Write-Verbose を使用します。 この情報には、Write-Debug または Write-Output を使用しない &rsquo; でください。 <img alt="Runbook Configure Stream Logging" border="0" height="211" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/RunbookConfigureLogging.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="Runbook でのストリームのログの構成" width="352"> 次のスクリーンショットでは、詳細レコードと進行状況レコードのログ記録を有効にした結果を確認できます。 <img alt="All Runbook Job Streams" border="0" height="584" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/RunbookJobOutputAllStreams.png" style="border: 0px currentColor; border-image: none; margin-right: auto; margin-left: auto; float: none;" title="すべての Runbook ジョブストリーム" width="610"> [ジョブ履歴] ページで、さらに多くの情報が利用可能になったことを確認できます。 この追加情報は、Runbook での運用上の問題のトラブルシューティングに不可欠です。 <strong>ベストプラクティス:</strong> &nbsp;詳細ストリームおよび進行状況ストリームの既定の設定は [<strong>オフ</strong>] のままにし、問題のトラブルシューティングが必要な場合にのみオンにします。 進行状況レコードは特に多数あります。 &nbsp;既定では、ワークフローエンジンは、アクティビティが開始されたときに、ワークフロー &ndash; 内の各アクティビティについて2つの進捗状況レコードを書き込み、アクティビティが完了すると進行状況レコードを1つ書き込みます。 &nbsp;トラブルシューティングのために runbook の進行状況を追跡するためにこの情報が必要な場合を除き、進行状況のログ記録が無効になっていることを確認してください。 <strong>ベストプラクティス:</strong> &nbsp;Runbook で Write-Progress を使用しない &rsquo; でください。 &nbsp;トラブルシューティング中に進行状況を追跡する必要がある場合は、PowerShell ワークフローエンジンによって自動的に生成される進捗状況レコードによって、十分な情報が得られます。</p>


  <h2>まとめ</h2>


  <p>ご覧のとおり、最適なデバッグとトラブルシューティングを可能にするために、runbook のログ記録ストリームを簡単に制御できます。 &nbsp;ベストプラクティスに従うと、runbook のデバッグとトラブルシューティングについて、問題のない制御を行うことができます。 Azure Automation ユーザーではありませんか? <a href="https://account.windowsazure.com/PreviewFeatures?fid=automation" target="_blank">プレビューにサインアップ</a> し、 <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-create-runbook-from-samples/" target="_blank">はじめにガイド</a>を確認してください。</p>
