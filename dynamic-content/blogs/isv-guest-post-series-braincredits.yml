### YamlMime:Yaml
ms.openlocfilehash: 50f5af081e83b746c1fae1ca7ae5a1c9e971627d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908911"
Slug: isv-guest-post-series-braincredits
Title: 'ISV ゲスト ポスト シリーズ: BrainCredits'
Summary: Windows Azure ISV ブログ シリーズの目的は、Windows Azure アプリケーションの開発とデプロイの間に使用した ISV&rsquo; の成果の一部を強調&.
Content: '<p>Windows Azure ISV ブログ シリーズの目的は、Azure アプリケーションの開発とデプロイの間に使用した ISV&rsquo; の成果の一部を強調Windowsです<a target="_blank" href="https://azure.microsoft.com/en-us/?WT.mc_id=cmp_pst001_blg_post0026"></a>。&nbsp;今日&rsquo;の投稿では、Azure ISV BrainCredits&rsquo; Windowsと、Azure を使用してオンライン サービスを配信する方法Windowsについて説明します。</p>  <p target="_blank" href="https://windowsazure.com/en-u/">BrainCredits&nbsp; は、ウェビナー、クラス、チュートリアル、書籍、カンファレンス、ブログ、ビデオなど、講師による指導付き学習や自己学習学習など、仮想トランスクリプトで非公式の学習をすべて追跡するのに役立つシステムを提供します。このシステムは、高可用性の高ボリューム Web ベースの Model-View-Controller (MVC) アプリケーションとして設計され、小規模な増分リリースを実稼働環境にプッシュするアジャイル プロセスに従って構築されています。 これを行うには、チームは高速読み取り操作をサポートし、アプリケーション全体を再コンパイルまたは再テストすることなく、非常に対象を絞った更新を可能にするアーキテクチャを必要としました。 CQRS (コマンド クエリ責任分離) スタイルのアーキテクチャを決定しました。 また、トラフィックとバックグラウンド ワークロードに応じて個別に個々のサブシステム (Web ロールまたは worker ロール) のきめ細かいスケーリングを利用するために、Windows Azure <a target="_blank" href="https://windowsazure.com/en-u/"></a>でアプリケーションをホストすることを決定しました。</p>  <p>CQRS アーキテクチャでは、基本的に書き込<i>みアクションと読み取りアクション</i><i>が分離されます</i>。 BrainCredits では&rsquo;、講師による指導付きクラスへの登録などの書き込みアクションと、オンライン履歴書の表示などの読み取りアクションがあります。 BrainCredits は、Web ロールに要求 (別名コマンド) を収集して書き込みアクションを処理し、キューを介してワーカー ロールに非同期的にルーティングします。 これにより、UI 応答時間を非常に高速にし、Web ロールの負荷を軽減できます。 この場合、BrainCredits は Web ロールに対して Small インスタンスをデプロイし、各インスタンスが 1 つのコアを使用しました。</p>  <p>基本的なアーキテクチャは次のとおりです。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4382.BrainCredits.png" alt="" border="0"></p>  <p>Web ロールと worker ロール間の非同期通信を実現するために、Azure オブジェクトWindows次の方法が使用されています。</p>  <ul>  <li>Windows Azure キュー。 Web ロール インスタンスはキュー内のメッセージを削除し、コマンドを処理する必要があるワーカー ロール インスタンスに警告します。</li>  <li>Windows Azure BLOB。 BLOB にはシリアル化されたコマンドが格納され、各コマンド キュー メッセージは特定の BLOB をポイントします。 注: BrainCredits ユーザーが発行されるコマンドの一部に自由形式のテキストを追加し、その結果、8k を超える可能性がある予期しないメッセージ サイズ (現在のキュー メッセージ サイズの制限) が発生する可能性があるため、BLOB を使用してコマンドを格納します。 2011 年 8 月に発表された新しい 64K メッセージ サイズ制限により、この間接参照は不要である可能性があります。</li>  <li>Windows Azure Table Storage を使用します。 イベント ソーシング データは、Azure テーブルWindowsキャプチャされます。 イベントがドメインによって発生すると、イベントはテーブル ストレージに格納され、CQRS フレームワークによって使用され、後続の要求時にドメイン オブジェクトを再初期化します。 Windows Azure Table Storageは、ユーザー UI クリック (ドメイン イベントとは無関係) などのコマンド データを格納するためにも使用されます。 ドメイン イベント テーブルを使用すると、BrainCredits システム管理者は、ユーザーがサイトへのアクセス中に行ったすべての UI ステップ (実行された検索、ページの読み込みなど) を再作成できます。</li>  <li>Windows Azure Cache。 キャッシュは、要求間でデータを格納するために使用され、実行されているが、まだ完了していないコマンドに関するフィードバックをユーザーに提供します。 これにより、BrainCredits は、非同期アプリケーションでの同期エクスペリエンスの外観をユーザーに提供するために、アプリケーションの最終的な整合性を処理できます。</li>  </ul>  <p>VM サイズに関する 1 つのポイント: 小規模な VM インスタンスでは、約 100 Mbps の帯域幅が提供されます。 BrainCredits が、大規模なコマンドまたはイベントのラウンドトリップ処理時間の合計に影響を与えたコマンドおよびイベント コンテンツの読み取りおよび書き込みによってパフォーマンスのボトルネックが見つかった場合、より大きな VM サイズが実行可能な解決策でした。 ただし、テストに基づいて、Small インスタンスは非常に許容される顧客向けパフォーマンスを提供しました。 VM サイズを Small (1 &ldquo;&rdquo; コアなど) に維持することで、アイドル時間のコストは最小限に抑えます (たとえば、2 つの小規模な Web ロール インスタンス + 1 つの Small Worker ロール インスタンスは、ベースラインの毎月のコンピューティング コストとして約 270 ドルに相当します)。 中規模の VM では、この最小コストが約 540 ドルに増加します。 必要&rsquo;に応じて複数の VM インスタンスにスケールアウトした後、ビジー状態の少ない期間にスケールバックする方がはるかに経済的です。</p>  <p>BrainCredits アーキテクチャには、いくつかの重要なポイントが示されています。</p>  <ul>  <li>エンド ユーザー エクスペリエンスに重点を置く。 CQRS アプローチに従い、更新を非同期的に処理することで、Web 応答時間は実行時間の長いバックグラウンド プロセスの影響を受けません。</li>  <li>スケーラビリティ。 BrainCredits は、すべてのバックグラウンド処理をワーカー ロールに分割します。 Web ロール&rsquo; スレッドでキューを非同期的に処理する場合は完全に可能ですが、これはスケールアウト オプションに影響します。 別の Worker ロールを使用すると、ユーザー トラフィックとバックグラウンド処理の負荷を個別に処理するためにシステムを微調整できます。</li>  <li>コストフットプリント。 最小実行レートを検討する場合は、VM サイズの選択が重要です。 大規模な&rsquo;&rsquo; VM に向かうのは魅力的ですが、多くの場合、メモリ、CPU、ネットワーク帯域幅のニーズに基づいて、最小の VM サイズを選択する方がコスト効率が高い場合があります。 VM サイズの詳細については、この <a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/ee814754.aspx">MSDN の記事を参照してください</a>。</li>  </ul>  <p>多くの場合、特定の問題を解決する方法がいくつかあることを思い出してください。 これらのソリューション パターンを独自のアプリケーションに自由に組み込むか、改善するか、または完全に異なるアプローチを採用してください。 コメントや提案はこちらでも自由に共有できます。</p>  <p>Azure ISV&rsquo; ブログ シリーズの次の投稿Windows、次回は Digital Tunedos&rsquo; エクスペリエンスを Azure と共有Windowsしてください。</p>'
