### YamlMime:Yaml
ms.openlocfilehash: 480b47719a40727e6147f884c04c7f58b3d7ad77
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908894"
Slug: isv-guest-post-series-sociobridge-by-reedrex
Title: 'ISV ゲストポストシリーズ: sociobridge、ReedRex 別'
Summary: Windows azure isv ブログシリーズの目的は、azure アプリケーションの開発とデプロイの Windows 中に働いていた isv &rsquo; から、いくつかの業績を強調することです。 &...
Content: '<p>Windows azure isv ブログシリーズの目的は、azure アプリケーションの開発とデプロイの Windows 中に取り組んできた isv &rsquo; から<a target="_blank" href="https://azure.microsoft.com/en-us"></a> 、いくつかの業績を強調することです。 &nbsp;Microsoft 日本の azure 開発者エバンジェリストである<a target="_blank" href="https://satonaoki.wordpress.com/">naoki sato o</a>によって作成された今日 &rsquo; の投稿は、azure ISV reedrex のコロケーション Windows と、azure Windows azure を使用して、Facebook ページ用の CMS サービスを配信する方法 &rsquo; について説明しています。</p>  <p>ReedRex は最近、 <a target="_blank" href="https://www.facebook.com">Facebook</a> ページ専用のコンテンツ管理システム (CMS) サービスである sociobridge と呼ばれる新しい SaaS サービスを発表しました。 Sociobridge は、上位の日本語の Ad 企業 Dentsu Razorfish によって、Dentsu と Razorfish によって共同で確立されました。&nbsp;</p>  <p>会社および ad 機関のスタッフは、sociobridge を使用して次のことを行うことができます。</p>  <ul>  <li>Facebook ページの作成と管理</li>  <li>投稿のスケジュール設定</li>  <li>壁、コメント、およびいいね! を監視する&nbsp;</li>  </ul>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7585.sociobridge1.png" alt="" height="414" border="0" width="639"></p>  <p>sociobridge は、ASP.NET MVC と<a target="_blank" href="https://facebooksdk.codeplex.com">Facebook C# SDK</a> <a href="https://facebooksdk.codeplex.com/"></a> で記述された2つのマルチテナント web アプリケーションで構成されています。 1つの Web ロールでサブスクライバーポータルが実行されます。このポータルは、サブスクライバー (顧客企業および ad 機関) 用のコンテンツ管理アプリケーションです。 もう1つは、エンドユーザーのパブリック Facebook ページをホストするアプリケーションランタイムを実行します。</p>  <p>また、Facebook の監視やその他のバックグラウンド処理を担当するワーカーロールインスタンスもあります。</p>  <p>sociobridge は<a target="_blank" href="https://www.windowsazure.com/en-us/home/tour/storage/?WT.mc_id=cmp_pst001_blg_post0051">Windows Azure Storage</a> (テーブルおよび Blob) を永続的なデータストアとして使用します。 これは、Windows Azure Storage によってスケーラビリティが向上し、コストが大幅に削減されるためです。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7446.sociobridge2.png" alt="" border="0"></p>  <p>サブスクリプション (テナント)、ユーザーアカウント、スケジュールされた投稿、ポーリング結果、統計などに関する情報が Table Storage に格納されます。 Azure Table Storage Windows には、次の2つのテーブルがあります。</p>  <ul>  <li>サブスクリプションのメタデータ</li>  <li>サブスクライバーデータ</li>  </ul>  <p>Table Storage では、テーブルはストレージノード間の負荷分散をサポートするようにパーティション分割されます。 テーブル &rsquo; s のエンティティは、パーティションによって整理されます。 パーティションは、同じパーティション キー値を処理する連続した範囲のエンティティです。&nbsp;</p>  <p>SQL Azure などのリレーショナルデータベースシステムは、一般に ACID と呼ばれるプロパティを持つトランザクションサポートを提供します。</p>  <ul>  <li>Atomic: トランザクション内のすべての処理が成功するか、ロールバックされます。</li>  <li>・. トランザクションでは、データベースが不整合な状態のままになることはできません。</li>  <li>分離。 トランザクションが相互に干渉することはできません。</li>  <li>永続的。 トランザクションの結果は永続的に格納されます。</li>  </ul>  <p>リレーショナルデータベースシステムとは異なり、Windows Azure Table Storage では、トランザクション内での複数の操作 (Insert、Update、Delete エンティティなど) はサポートされていません。 ただし、トランザクションの一部としての操作の対象となるすべてのエンティティが同じパーティションキー値 (および同じパーティションに属している) を持つ場合は、エンティティグループトランザクション &rdquo; または EGT と &ldquo; 呼ばれるバッチ更新でこれらの操作を実行できます。 EGT &rsquo; s の詳細については、 <a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/dd894038.aspx">こちら</a>を参照してください。&nbsp;</p>  <p>Table Storage のスキーマのないデータモデルと EGT を活用するために、異なる種類のデータが1つのデータテーブルに格納されます。 サブスクリプション ID はパーティションキーとして使用されるため、各サブスクリプション &rsquo; のデータは異なるパーティションに格納され、テーブルへのアクセスは多くのストレージサーバーに分散され、スケーラビリティが確保されます。 行キーは、データ型と、何らかの種類の一意の行 ID を組み合わせたものです。</p>  <p>サブスクライバーポータルからのすべてのテーブルクエリは、パーティションキー (サブスクリプション ID) を指定するように慎重に設計されています。これにより、クエリが1つのパーティションに限定され、多数のパーティションに対するフルテーブルスキャンが行われなくなります。</p>  <p>1つのサブスクリプション &rsquo; データには、複数の種類のデータのトランザクションがありますが、2つ以上のサブスクリプション &rsquo; データのトランザクションはありません。 したがって、このテーブルの設計では、単一のトランザクションのデータが1つのテーブル内の1つのパーティションに存在するため、EGT (エンティティグループトランザクション) を使用したアトミックトランザクションが有効になります。&nbsp;</p>  <p>現時点では、Windows Azure Storage Analytics は、ストレージアカウントごとにメトリックデータを提供します。 このテーブルの設計では、サブスクライバーごとのテーブルストレージのコストを見積もることはできません。 このテーブルの設計は、上記で説明した利点とストレージアカウントの数のクォータによって選択されました。</p>  <p>顧客の会社や ad 機関のスタッフは、サブスクライバーポータルで Facebook ページを作成し、管理します。 Facebook ページの定義とメタデータが作成または変更されると、Facebook ページの実際の web コンテンツは事前に生成され、Blob Storage に格納されます。</p>  <p>サブスクライバーは、1つの Facebook ページに複数のカスタムタブを作成できます。 各カスタムタブには独自の Blob コンテナーがあり、各タブの web コンテンツがそこに格納されます。 Facebook ページは本質的にパブリックであるため、Blob コンテナーのアクセス許可はパブリックに設定されています。</p>  <p>実行時:</p>  <ol>  <li>エンドユーザーが Facebook ページ (HTML インラインを使用して Facebook に含まれる) を参照する</li>  <li>フレーム)。</li>  <li>Web ブラウザーは、Web ロール上のアプリケーションランタイムに HTTP POST 要求を送信します。</li>  <li>アプリケーションランタイムは、Blob Storage URL を照会するために Table Storage にアクセスします。</li>  <li>アプリケーションランタイムは、(HTTP 302 を使用して) Blob Storage URL を返します。</li>  <li>Web ブラウザーは Blob Storage の web コンテンツにリダイレクトされます。</li>  </ol>  <p>このアーキテクチャの目的は、動的な web コンテンツの生成を回避し、多くの Facebook ユーザーから大きな要求を処理するためにスケーラビリティを大幅に向上させることにより、Web ロールのワークロードを削減することです。</p>  <p>HTTP POST 要求を処理するには、Facebook ページが必要です。 ただし、Blob Service REST API の get Blob &rdquo; 操作は、名前に示されている &ldquo; ように、HTTP get 要求である必要があります。 &nbsp;このため、Blob Storage への直接アクセスは機能しません。 HTTP POST を処理するには、アプリケーションランタイムが必要です。</p>  <p>Blob Storage のパーティションキーは、コンテナー名と blob 名を組み合わせたものであるため、異なる Facebook ページ (blob) へのアクセスは異なるパーティションに分散されます。</p>  <p><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx">Windows Azure Storage の抽象化とそのスケーラビリティターゲット</a> &rdquo; に &ldquo; よれば、1つの Blob のターゲットスループットは最大 60 MB/秒です。パフォーマンステストでは、sociobridge アプリケーションランタイム (1 つの小さなインスタンス) のスループット &nbsp; が約200要求/秒であることが判明しています。</p>  <p>大まかに言えば、1つの Facebook ページのみがホストされていて、Facebook ページのサイズが300KB 未満の場合、アプリケーションランタイムはボトルネックになります。 300 kb を超える場合、Blob Storage はボトルネックになります。 &nbsp;Web ロールインスタンスを追加し、それぞれ Windows Azure CDN を利用することで、これらのボトルネックを解消することができます。 &nbsp;通常、複数の Facebook ページ (Blob) がホストされ、Blob アクセスはスケールアウトされることに注意してください。&nbsp;</p>  <p>sociobridge は Windows Azure、特に Windows Azure Storage の機能を利用するように設計されています。 高度なテーブル設計 (テナント ID をパーティションキーとして持つ) と EGT (エンティティグループトランザクション) の使用は、マルチテナントアプリケーションの設計に役立ちます。&nbsp;</p>  <p>Windows Azure Storage のスケーラビリティの詳細については、次のブログの投稿を参照してください。</p>  <ul>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/12/30/windows-azure-storage-architecture-overview.aspx">Windows Azure Storage アーキテクチャの概要</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx">抽象化とそのスケーラビリティターゲットを Windows Azure Storage</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/11/06/how-to-get-most-out-of-windows-azure-tables.aspx">Windows Azure テーブルを最大限に活用する方法</a>&nbsp;</li>  </ul>  <p>この投稿については、Takekazu Omi に感謝します。 ReedRex で sociobridge をリードアーキテクトに感謝します。</p>'
