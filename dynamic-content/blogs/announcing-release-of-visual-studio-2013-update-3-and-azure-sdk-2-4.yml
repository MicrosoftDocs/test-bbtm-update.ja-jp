### YamlMime:Yaml
ms.openlocfilehash: c304ab240a0df011afb81697425c9648d34c5609
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890917"
Slug: announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4
Title: Visual Studio 2013 Update 3 および Azure SDK 2.4 のリリースの発表
Summary: 本日は、Visual Studio 2013 Update 3 および Azure SDK 2.4 for .NET のリリースをお知らせします。 この投稿では、これらのリリースで有効になっている Azure 開発用の新しいツール機能について説明します。
Content: >-
  本日は、Visual Studio 2013 Update 3 および Azure SDK 2.4 for .NET のリリースをお知らせします。 この投稿では、これらのリリースで有効になっている Azure 開発用の新しいツール機能について説明します。


  <span style="text-decoration: underline;">Visual Studio Update 3</span> [<a href="https://go.microsoft.com/fwlink/?LinkId=403040">ダウンロード</a>]

  <ul>
   <li><strong>Web サイト</strong>: コンソールまたは Web プロジェクトから Web ジョブを発行します。</li>
   <li><strong>Mobile Services</strong>: プロジェクトを作成するときに、クラウドに開発/テスト環境Mobile Servicesします。 .NET でプッシュ通知ウィザードを使用Mobile Services。</li>
   <li><strong>Notification Hubs</strong>: デバイスの登録を表示および管理します。</li>
  </ul>

  &nbsp;


  <span style="text-decoration: underline;">Azure SDK 2.4 for .NET</span> [<a href="https://go.microsoft.com/fwlink/p/?linkid=323510&amp;clcid=0x409">VS 2013 downloadVS</a> |  <a href="https://go.microsoft.com/fwlink/p/?linkid=323511&amp;clcid=0x409">2012 download</a>]


  Azure SDK 2.4 for .NET の追加インストールでは、次の機能を利用することもできます。

  <ul>
   <li><strong>Virtual Machines</strong>: リモート デバッグ 32 ビット Virtual Machines。 動的Virtual Machinesの &amp; インストール構成 (マルウェア対策、Puppet、Chef、カスタム スクリプトなど) を含む、新しい機能を構成します。 ディスク状態の仮想マシン スナップショットを作成します。</li>
   <li><strong>Storage</strong>: 診断Storageアクティビティ ログを表示します。 geo 冗長Read-Accessから geo 冗長StorageプロビジョニングVisual Studio。</li>
   <li><strong>Cloud Services</strong>: Emulator Express は新しいプロジェクトの既定のオプションです (完全なEmulatorは非推奨です)。 サービス モデルで新しいネットワーク機能を構成します。</li>
  </ul>

  &nbsp;


  また、現在の <a href="https://go.microsoft.com/?linkid=9811175">0.8.6</a> リリースを含め、Azure PowerShellに対する多くの更新プログラムを開始しました。新機能の詳細については、変更ログを <a href="https://github.com/Azure/azure-sdk-tools/blob/master/ChangeLog.txt">参照してください</a>。

  <h2>Web サイト: コンソール プロジェクトから Web ジョブを発行する</h2>

  1 月に、 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs">WebJobs</a> という機能を追加しました。これにより、バックグラウンド コード (プログラムまたはスクリプト) を簡単に取得し、Web サイト内で実行できます。 今日まで、Web ジョブを発行するには、ポータルまたはポータルを使用する必要Azure PowerShell。 今日のリリースでは、WebJobs を webJobs 内からVisual Studio。


  開始するには、既存のコンソール プロジェクトを開くか、新しく作成します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo.png" alt="foo" width="500" height="345" border="0" />


  Main メソッドを実装します。 必須ではないが、<a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs">WebJobs SDK Microsoft Azure使用できます</a>。 <a href="https://www.nuget.org/packages/Microsoft.Azure.Jobs/">NuGet</a> パッケージとして利用できる SDK を使用すると、特に Azure Storage を統合し、項目がキュー、BLOB、またはテーブルに追加されると、プログラムで関数をトリガーできます。


  プロジェクトを Azure に発行する準備ができたら、プロジェクトを選択し、右クリックして [ <b>Azure WebJob として発行] コマンドを選択</b> します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo2.png" alt="foo2" width="360" height="177" border="0" />


  次に、Web ジョブを構成し、実行方法を選択するための画面が表示 <b>されます。[</b>継続的に実行する]、 [スケジュールに従って実行する]、または [オンデマンドで実行] です。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo3.png" alt="foo3" width="500" height="268" border="0" />


  連続オプションを選択する場合は、無限ループで実行するコードが記述されている必要があります。 [OK] <b>を選択</b>すると、発行先の Web サイトを選択する [Web の発行] ダイアログが表示されます。 既存の Web サイトの一部として Web ジョブをデプロイするか、新しい Web サイトを作成できます。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo4.png" alt="foo4" width="450" height="353" border="0" />


  最後に、Web ジョブAzure portal Web ジョブを含む Web サイトに移動します。 [ <b>Web ジョブ] タブを </b>選択すると、Web ジョブに関する有用な情報が表示されます。 これには、ログを表示し、状態を監視するダッシュボードへのリンクが含まれます。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo5.png" alt="foo5" width="500" height="273" border="0" />

  <h2>Web サイト: Web プロジェクトから Web ジョブを発行する</h2>

  WebJobs を一度に 1 つ発行する代わりに、Azure Web サイトの発行の一環として Web ジョブを簡単に発行することもできます。 この方法では、Web サイトとすべての関連 Web ジョブを発行する 1 つの手順にすらと同じ方法です。 Web Project を右クリックし、新しいコンソール プロジェクトまたは既存のコンソール プロジェクトを関連付ける [<b>Add-New&gt; Azure WebJob Project</b>] または [<b>Add-Existing&gt; Project as Azure WebJob</b>]を選択します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo6.png" alt="foo6" width="500" height="323" border="0" />


  [発行] を <b>選択</b> してプロジェクトを Azure Web サイトに発行すると、関連付けられている Web ジョブもデプロイされます。

  <h2>Mobile Services: .NET アプリケーションのプッシュ通知ウィザードMobile Services</h2>

  Visual Studio 2013 Update 3 では、プッシュ通知ウィザードに .NET Mobile Services のサポートが追加され、Windows Phone および Windows Store アプリケーションにプッシュ通知を簡単に追加できます。 ウィザードは、プッシュ通知用にクライアントを登録し、プッシュ通知を送信するためのサンプル バックエンド ロジックを提供するのに役立ちます。 ウィザードを呼び出す場合は、プロジェクトを選択し、右クリックして [追加 <b>-&gt; プッシュ通知] コマンドを選択</b> します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image002[7]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0027.png" alt="clip_image002[7]" width="334" height="494" border="0" />

  <h2>Mobile Services: 作成中Mobile ServicesプロビジョニングProjectする</h2>

  プロジェクトを作成する場合は、開発/テスト環境として使用できるモバイル サービスを作成して、それに付随するサービスを作成できます。 プロジェクトを開発する場合は、付属のモバイル サービスにすばやく発行して、ライブ サービスに対してコードをテストできます。 新しいモバイル サービスをプロビジョニングするには、[新しいモバイル <b></b> サービス] ダイアログの [クラウドでホストする] チェック ボックス ASP.NET Projectします。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="FileNewMobile" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/FileNewMobile.png" alt="FileNewMobile" width="610" height="456" border="0" />

  <h2>Notification Hubs: デバイス登録の表示と管理</h2>

  Notifications Hubs には、デバイス (Windows Phone、Windows Store、iOS、Android、Kindle Fire) へのテスト通知の送信が既にサポートされています。 Update 3 Visual Studioでは、デバイスの登録の表示、タグの編集、登録の削除を行うツールが追加されました。 また、プラットフォーム別の登録数も提供し、簡単な概要ビューを提供します。 通知ハブ ツールにアクセスするには、 [通知ハブ] <strong></strong> ノードを [サーバー エクスプローラー] で右クリックし、[ 診断] を選択<strong>します</strong>。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="NotificationsHub" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/NotificationsHub.png" alt="NotificationsHub" width="588" height="500" border="0" />

  <h2>Virtual Machines: 構成</h2>

  Azure SDK の 2.4 リリースでは、引き続き、Azure SDK から IaaS 仮想マシンを使用するためのサポートVisual Studio。 Azure 仮想マシンで実行されるサービスを構築する場合でも、仮想マシンを使用して開発環境またはテスト環境をホストする場合でも、Visual Studio ツールを使用して作業を容易にすることができます。


  このリリースでは、サーバー エクスプローラーのコンテキスト メニューに [構成] オプションが<b></b>表示Virtual Machines。 [ <b>構成]</b> をクリックして仮想マシンの構成ウィンドウを開きます。このウィンドウでは、VM のプロパティと、その VM のエンドポイント、拡張機能、ディスク構成を表示および編集できます。 [VM の構成] ウィンドウから、<b>開始</b>、シャットダウン<b></b>、Connect、<b>キャプチャなどの操作</b>を実行することもできます (詳細については、後で説明します)。 <b></b>


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image001[9]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0019.png" alt="clip_image001[9]" width="438" height="426" border="0" />


  [VM 構成] ウィンドウを使用すると、一度に複数の VM を開き、構成間で簡単に比較できます。


  エンドポイントを追加するには、使用可能なエンドポイントの一覧からエンドポイントの種類を選択し、[追加] をクリックします。 エンドポイントが追加された後は、ニーズに合った名前やポートを変更できます。 [ <strong>更新]</strong> をクリックして、VM に変更を適用します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image003[7]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0037.png" alt="clip_image003[7]" width="610" height="366" border="0" />


  同様に、構成ウィンドウから仮想マシンに拡張機能を追加または構成できます。 仮想マシン拡張機能は、VM の機能を拡張し、VM を望ましい状態にしたり、VM で最新のマルウェア対策を実行したりなど、さまざまな VM 管理操作を簡略化するソフトウェア コンポーネントです。 詳細については <a href="https://azure.microsoft.com/blog/2014/04/11/vm-agent-and-extensions-part-1/">、VM 拡張機能に関するブログ</a> 投稿を参照してください。 拡張機能を追加するには、使用可能な拡張機能の一覧から拡張機能を選択し、[追加] をクリック <strong>します</strong>。拡張機能を誤って追加した場合は、まだ [更新] をクリックしていない場合は削除できます。


  追加する拡張機能の種類によっては、構成を指定する必要がある場合があります。これを行うには、拡張機能を選択して [構成] をクリックします。 拡張構成の形式とスキーマは、拡張パブリッシャーによって定義されます。 拡張機能の構成の詳細については、構成ダイアログの下部にあるリンクをクリックしてください。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="ConfigureExtension" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ConfigureExtension.png" alt="ConfigureExtension" width="551" height="399" border="0" />


  拡張機能の構成ダイアログから、パブリック構成とプライベート構成の両方を指定できます。 パブリック構成は、必要に応じて読み取りおよび更新できます。 プライベート構成は書き込み専用です。 プライベート構成を適用すると、拡張機能によってのみ読み取り可能です。 このファイルは、Visual Studio、または他のツールから取得することはできません。 拡張機能の発行元は、パスワードなどの機密情報をプライベート構成に格納するように選択できます。

  <h2>Virtual Machines: スナップショット</h2>

  スナップショットを使用すると、同じ VM のレプリカを作成するために使用できる VM イメージを簡単にキャプチャできます。 Imagineに構成された仮想マシンがある場合は、新しいサービスをインストールし、ファイアウォールを構成し、接続されたデータ ディスクをニーズに合った方法で構成している可能性があります。 これは、カスタマイズされた VM を使用して将来レプリカを作成できるよう、VM イメージを作成する良い時期です。


  VM イメージを作成するには、VM 構成ウィンドウの <strong>[イメージ</strong> のキャプチャ] ボタンをクリックします。 これにより、VM イメージのイメージ ラベルと説明を指定できるダイアログが表示されます。 VM をWindows一般化された VM イメージを作成するには、VM で Sysprep を実行する必要があります。 Sysprep は、新しい VM のテンプレートとして簡単に再利用Windowsシステム固有の情報を削除します。 Sysprep を実行している場合は、[仮想マシンで Sysprep を実行しました] のチェック ボックスをオンにして、[<strong></strong>キャプチャ] ボタンをクリックして VM イメージをキャプチャできます。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CaptureVM" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CaptureVM.png" alt="CaptureVM" width="600" height="396" border="0" />


  VM イメージをキャプチャしたら、そのイメージ スナップショットに基づいて新しい仮想マシンを作成できます。 新しい<strong>仮想マシンの</strong>作成ウィザードを表示するには、Virtual Machines <strong></strong> ノードのサーバー エクスプローラーメニューから [仮想マシンの作成] オプションを選択します。 ウィザードの [イメージの選択] ページで、[<strong></strong>イメージの種類] ドロップダウンを [<strong>プライベート イメージ - VM イメージ</strong>] に設定して、キャプチャした VM イメージを表示します。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CreateNewVM" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateNewVM.png" alt="CreateNewVM" width="610" height="431" border="0" />


  ウィザードの次のページに進み、Machine 設定、Cloud Service、Endpoints など、新しい VM に関する追加情報を提供できます。 エンドポイントの構成が完了したら、[作成] をクリックして、キャプチャした VM イメージに基づいて新しい仮想マシンを作成できます。

  <h2>Virtual Machines: 32 ビット のリモート デバッグVirtual Machines</h2>

  Visual Studio、Azure Virtual Machines で実行されている 32 ビット アプリケーションのリモート デバッグがサポートVirtual Machines。 仮想マシンの特定のインスタンスのデバッグは、仮想マシンのコンテキスト メニューから有効サーバー エクスプローラー。

  <h2>Storage: Read-Access Geo-Redundant StorageからVisual Studio<b></b></h2>

  Read-Access Geo-Redundant Storage (RA-GRS) を使用すると、セカンダリロケーションにレプリケートされたデータへの "読み取り専用" アクセスを提供することで、ストレージ アカウントの読み取り可用性を高くすることができます。 ストレージ アカウントを作成するときに、ストレージの冗長性オプションとして RA-GRS を選択Visual Studio。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CreateStorageAccount" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateStorageAccount.png" alt="CreateStorageAccount" width="490" height="359" border="0" />

  <h2>Storage: アクティビティ ログStorageを表示する</h2>

  Azure Storageログは、診断に使用できるストレージ アカウントに対して実行された要求のトレースを提供します。 BLOB コンテナー、テーブル、またはキューに対してログ記録が有効になっている場合、ログは BLOB コンテナー$logsされます。 同様に、$metricsテーブルには、BLOB コンテナーの容量と、BLOB コンテナー、キュー、テーブルのトランザクションに関する情報が含まれています。 これで、BLOB コンテナーを表示し、$logsの$metricsから直接テーブルサーバー エクスプローラー表示Visual Studio。


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image010" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010.png" alt="clip_image010" width="396" height="410" border="0" />

  <h2>Cloud Services: Emulatorとして Express を使用します。完全なコンピューティング サービスのEmulator</h2>

  管理者特権をEmulator、ローカルでマルチロール のテストを行Cloud Services長年の顧客の要求に対処するために、Express を開始しました。 その後、これは、お客様が新しいプロジェクトに使用する主要なコンピューティング エミュレーターになります。 今後の投資を 1 つのコード ベースに集中するために、Emulator Express を使用してフル Emulator予定です。


  SDK 2.4 Cloud Servicesの新しいプロジェクトでは、既定で Emulator Express が使用されます。 ただし、Express のインスタンスはEmulator 1 つのインスタンスに制限されています。

  <h2>Cloud Services: サービス モデルの新しいネットワーク機能</h2>

  次の機能は、PowerShell を介して IaaS で使用できます。 今日の SDK 2.4 リリースでは、サービス モデルを介して Cloud Services (Web ロールと worker ロール) で使用できます。

  <h3>内部負荷分散 (ILB)</h3>

  ILB を使用すると、ユーザーは信頼境界内でのみアクセスできる高可用性サービス (この場合はクラウド サービス) を実行できます。内部ロード バランサーの設定は、サービス モデルのデプロイ レベルで定義されます。


  .cscfg には、ロード バランサー情報を含む展開全体の <b>NetworkConfiguration</b> セクションが拡張されています。

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    …
    &lt;LoadBalancers&gt;
      &lt;LoadBalancer name="name"&gt;
        &lt;FrontendIPConfiguration type="private" subnet="subnet-name" staticVirtualNetworkIPAddress="static-IP-address"/&gt;
      &lt;/LoadBalancer&gt;
    &lt;/LoadBalancers&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  その後、.csdef のエンドポイント定義で内部ロード バランサーが参照されます。 ILB の参照は、 <b>InputEndpoints でのみサポートされます</b>。 ILB の参照は、すべてのロールの種類 (worker ロールと Web ロール) でサポートされています。

  <pre class="prettyprint">&lt;WorkerRole name="worker-role-name" vmsize="worker-role-size" enableNativeCodeExecution="[true|false]"&gt;
    …
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="input-endpoint-name" protocol="[http|https|tcp|udp]" localPort="local-port-number" port="port-number" certificate="certificate-name" loadBalancerProbe="load-balancer-probe-name" loadBalancer="load-balancer-name" /&gt;
    &lt;/Endpoints&gt;
  &lt;/WorkerRole&gt;</pre>

  <h3>仮想マシンとロール インスタンスのパブリック IP アドレス</h3>

  ユーザーは、ロール インスタンスの公開された外部の IPS を取得できます。 これにより、これらのパブリック IP アドレスのトラフィックは、ポートにかかわらず、指定した VM またはロール インスタンスにリダイレクトされます。


  インスタンス レベルのパブリック IPS は、サービス モデルのデプロイ レベルで定義されます。 ロール内のすべてのインスタンスの外部 IPS を CSCFG スキーマに追加する必要があります。 例:

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    &lt;VirtualNetworkSite name="VNet"/&gt;
    &lt;AddressAssignments&gt;
      &lt;InstanceAddress roleName="VMRolePersisted"&gt;
        &lt;PublicIPs&gt;
          &lt;PublicIP name="public-ip-name"/&gt;
        &lt;/PublicIPs&gt;
      &lt;/InstanceAddress&gt;
    &lt;/AddressAssignments&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  この構文は、将来、さまざまな種類 (IPv4、IPv6) と複数のパブリック IP アドレスをサポートするように設計されています。ただし、現在のところ、1 つのパブリック IP アドレスに制限されています。 IP アドレスの種類は IPv4 と推定されます。

  <h3>構成可能なアイドル タイムアウト (Azure Load Balancer</h3>

  構成Azure Load Balancer構成可能な TCP アイドル タイムアウトがサポートされます。 受信接続の場合のみ、4 ~ 30 分間設定できます。 アイドル タイムアウト時間を構成することで、接続のアクティビティが発生していない場合でも、アプリケーションは TCP 接続を最大 30 分間維持できます。


  クラウド サービスのエンドポイントの設定は、.csdef で行われます。 そのため、クラウド サービスのデプロイで TCP タイムアウトをアップデートするには、デプロイのアップグレードが必要です。 TCP タイムアウトがパブリック IP 向けにのみ指定されている場合は例外として扱われます。 パブリック IP は .cscfg で設定され、デプロイのアップデートやアップグレードを通じて更新されます。


  エンドポイント設定の .csdef の変更は次のように行います。

  <pre class="prettyprint">&lt;WorkerRole name="worker-role-name" vmsize="worker-role-size" enableNativeCodeExecution="[true|false]"&gt;
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="input-endpoint-name" protocol="[http|https|tcp|udp]" localPort="local-port-number" port="port-number" certificate="certificate-name" loadBalancerProbe="load-balancer-probe-name" idleTimeoutInMinutes="tcp-timeout" /&gt;
    &lt;/Endpoints&gt;
  &lt;/WorkerRole&gt;</pre>

  パブリック IPS のタイムアウト設定に対する .cscfg の変更は次のとおりです。

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    &lt;VirtualNetworkSite name="VNet"/&gt;
    &lt;AddressAssignments&gt;
      &lt;InstanceAddress roleName="VMRolePersisted"&gt;
        &lt;PublicIPs&gt;
          &lt;PublicIP name="public-ip-name" idleTimeoutInMinutes="timeout-in-minutes"/&gt;
        &lt;/PublicIPs&gt;
      &lt;/InstanceAddress&gt;
    &lt;/AddressAssignments&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  <h2>まとめ</h2>

  <a href="https://go.microsoft.com/fwlink/?LinkId=403040">Visual Studio 2013 Update 3</a> と Azure SDK 2.4 を使用すると、リッチ クラウド アプリケーションの開発をこれまで以上に簡単に開始できます。 <a href="https://azure.microsoft.com/en-us/develop/net/">Azure デベロッパー センターの</a>成長を続ける .NET 開発者リソースのセットに加え、今日のリリースでは、開発エクスペリエンスをより楽しく効率的にする必要があります。


  Azure アカウントをまだ持ってない場合は、無料試用版にサインアップして、上記のすべての<a href="https://azure.microsoft.com/en-us/pricing/free-trial/"></a>機能の使用を開始できます。 その後、 <a href="https://azure.microsoft.com/en-us/documentation/">Azure デベロッパー センターにアクセス</a> して、アプリをビルドする方法の詳細を確認します。

  <h3>謝辞</h3>

  このブログ記事は、複数のユーザーのコラボレーションです。 Saurabh Bhatia と Azure Cloud Tools チームの貢献に感謝します。
