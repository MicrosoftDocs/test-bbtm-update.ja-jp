### YamlMime:Yaml
ms.openlocfilehash: 5ddceb2d68052467c9fbff0b345e2f97188494e8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892589"
Slug: see-whats-new-for-azure-app-service-on-linux-preview
Title: Azure App Service Web App on Linux の新機能を確認する (プレビュー)
Summary: Linux での App Service (プレビュー) を使用すると、開発者は、Linux Docker コンテナーでクラウドアプリアプリをネイティブに実行できます。 これにより、Linux プラットフォームでホストされている既存のアプリを他の場所で簡単に移行できます...
Content: >-
  <p><a href="https://go.microsoft.com/fwlink/?linkid=848517">Web App on Linux</a> (プレビュー) を使用すると、開発者は Linux 用の Docker コンテナーでネイティブにクラウドアプリを実行できます。 これにより、Linux プラットフォーム用にホストされ最適化された既存のアプリを Azure App Service に簡単に移行できます。 さらに、カスタム Docker コンテナーをサポートすることで、開発者は、Docker ツールだけでなく、業界をリードする PaaS の Azure App Service の機能を活用しながら、多くのプログラミング言語とスタックでアプリケーションを実装できます。</p>


  <p>現在、Linux でアプリを構築しているのか、または既にコンテナーとしてパッケージ化されているのかにかかわらず、多くの差別化された PaaS 機能が開発者に提供されることを発表しています。 開発者は、継続的インテグレーション (CI)、テストおよびステージング環境、運用環境のテスト、パフォーマンステスト機能、SSH サポートなどの機能により、生産性の向上に向けて招待されています。</p>


  <p>また、米国西部、西ヨーロッパ、東南アジアに加えて、オーストラリア東部リージョンでの Web App on Linux の可用性も発表いたします。</p>


  <p>Linux Preview で App Service に追加した主な機能強化の一部を次に示します。</p>


  <h2>サイトスロット &amp; のスワップ</h2>


  <p>デプロイスロットは Azure App Service で最も使用されている機能の1つであり、Linux およびコンテナーのオファリングは完全には完成していません。 現時点では、既存のアプリケーションをスロット &rdquo; に &ldquo; 複製し、実稼働前スロットと運用スロット間でスワップ操作をシームレスに実行できます。 <a href="https://go.microsoft.com/fwlink/?linkid=848518">デプロイスロット</a>の詳細についてはこちらをご覧ください。 プレビュー &rdquo; 、 &ldquo; ロールバック &rdquo; 、 &ldquo; アプリケーションのウォームアップ &rdquo; などの高度な機能 &ldquo; は、すぐに追加されます。</p>


  <h2>自動スケール</h2>


  <p>Linux とコンテナーのアプリをオンデマンドで、または自動で簡単に App Service 拡張できるようになりました。 このリリースでは、自動スケールによって、CPU、ディスクキューの長さ、およびメモリトリガーがサポートされます。 その他の種類のトリガーは、すぐに続きます。</p>


  <h2>SSH のだれか。</h2>


  <p>&rsquo;そうですね。 これで、管理エンドポイントからアプリに SSH (webssh) を実行できるようになりました。 <a href="https://&lt;mysite&gt;.scm.azurewebsites.net/webssh/host">Https:// &lt; &gt; scm.azurewebsites.net/webssh/host</a>を参照して試してみましょう。</p>


  <p>Linux での App Service に関する SSH のサポート &amp; に関する注意事項の詳細については、こちらの <a href="https://go.microsoft.com/fwlink/?linkid=848519">記事を参照してください</a>。</p>


  <p><strong>注:</strong> SSH サーバーは、すべて &ldquo; の株式 &rdquo; コンテナー (組み込みイメージ) にインストールされます。 カスタム Docker コンテナーの場合、ssh を使用するには SSH サーバーをインストールする必要があります。 <a href="https://hub.docker.com/u/appsvc/">組み込みのイメージの一覧</a>をご覧ください。</p>


  <h2>VSTS を使用した継続的デリバリーのセットアップ</h2>


  <p>Visual Studio Team Services で継続的デリバリーを使用すると、Linux またはコンテナーアプリ用に堅牢なデプロイパイプラインを簡単にセットアップできます。 &nbsp;既定では、パイプラインはコンテナーイメージを構築し、イメージをコンテナーレジストリにプッシュして、Azure App Service に新しいイメージをデプロイします。 別の Linux またはコンテナーアプリをパイプラインに簡単に追加して、運用環境に到達する前に変更を検証することができます。 独自の機能テストを作成して、各手順で動作していることを確認します。 <a href="https://go.microsoft.com/fwlink/?linkid=848435">VSTS を使用した継続的</a>デリバリーの設定の詳細については、こちらをご覧ください。</p>


  <h2>Docker hub からの docker イメージの CI/CD</h2>


  <p>新しいバージョンが Docker hub にプッシュされたときに、カスタム Docker イメージを自動的に再デプロイします。</p>


  <ol>
   <li>管理エンドポイントにプッシュするために、Docker hub で web フックを設定します。<br>
   <a href="https://&lt;publishingusername&gt;:&lt;publishingpwd&gt;@&lt;sitename&gt;.scm.azurewebsites.net/docker/hook">https:// &lt; 発行ユーザー名 &gt; : &gt; &lt; @ &gt; &lt; scm.azurewebsites.net/docker/hook</a></li>
   <li>App Service <strong>DOCKER_ENABLE_CI</strong> と呼ばれるアプリケーション設定を作成し、値を <strong>TRUE</strong>に設定します。</li>
  </ol>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d53fb303-153e-44bd-950d-d4e24e709d61.png"><img alt="Application Setting" border="0" height="221" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/091a7d87-729b-4169-9bff-b9446c8bd196.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="アプリケーション設定" width="804"></a></p>


  <p>Docker <a href="https://go.microsoft.com/fwlink/?linkid=848520">のイメージ CI/CD の</a>詳細については、docker hub を参照してください。</p>


  <h2>Linux で WordPress をデプロイする</h2>


  <p>現在 &rsquo; の発表の後、App Service で <a href="https://go.microsoft.com/fwlink/?linkid=848521">Azure Database for MySQL (プレビュー)</a>がサポートされるようになりました。 Azure Database for MySQL (プレビュー) でサポートされている WordPress パッケージを簡単にインストールできるようになりました。 Windows および Linux の App Service Web Apps で使用できるようになりました。 詳細については、 <a href="https://go.microsoft.com/fwlink/?linkid=848522">App Service Linux での WordPress の作成に</a>関する説明を参照してください。</p>


  <h2>Linux の App Service を試す</h2>


  <p>また、 <a href="https://azure.microsoft.com/en-us/try/app-service/linux/">App Service を試すために Linux に Web Apps</a>が追加されたことをお知らせします。 Azure にサインアップしたりクレジットカードを入力したりしなくても、App Service で Linux またはコンテナーベースのアプリケーションを無料でビルドできるようになりました。</p>


  <p>詳細については、こちらの <a href="https://go.microsoft.com/fwlink/?linkid=848523">ブログを参照してください</a>。</p>


  <h2>本日発表されるその他の機能</h2>


  <ul>
   <li><strong>ワイルドカードドメイン名のサポート:</strong> これで、ワイルドカードドメイン名を web アプリに割り当てることができるようになりました。 たとえば、*. constoco.com のようになります。</li>
   <li><a href="https://go.microsoft.com/fwlink/?linkid=848524"><strong>運用環境でのテスト (TiP)</strong></a><strong>:</strong> この機能を使用すると、アプリケーションのスロットまたはベータサイトにトラフィックの x% を送ることができます。 詳細については、リンク先のページを参照してください。&nbsp;</li>
   <li><a href="https://go.microsoft.com/fwlink/?linkid=848525"><strong>Always ON</strong></a><strong>:</strong> この機能を使用すると、web アプリを常に実行したままにして、アイドル状態のタイムアウトによるコールドスタートを回避できます。 詳細については、リンク先のページを参照してください。&nbsp;</li>
   <li><strong>Azure ポータルと API からのサイトの再起動:</strong> このオプションを使用して、コンテナーと web アプリを再起動できます。 このオプションは、キャッシュされたイメージからコンテナーを強制的に再読み込みします。&nbsp;</li>
   <li><strong>カスタムイメージの自動ポート検出:</strong> Web アプリのポート AppSetting を設定する必要はありません。 Docker ファイルを読み取り、内部ポートを自動的に構成しようとします。 アプリケーションがをリッスンしています。 ポートアプリケーション設定が既に構成されている場合は、優先されます。</li>
  </ul>


  <p>これらの機能の更新をお客様にお届けします。 その他の質問については、 <a href="https://go.microsoft.com/fwlink/?linkid=848584">FAQ</a>をご確認ください。</p>


  <p>いつでも、 <a href="https://aka.ms/webapps-uservoice">UserVoice</a>でアイデアやフィードバックを送信してください。 タイトルの先頭に [Linux] または [Container] を追加してください。</p>
