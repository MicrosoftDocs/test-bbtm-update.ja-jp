### YamlMime:Yaml
ms.openlocfilehash: be8cb0269876d1b9601ea8dec4ce411c1cad3033
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895748"
Slug: visual-studio-lightswitch-beta-2-where-have-you-been-all-my-life
Title: Visual Studio LightSwitch Beta 2 –自分の生活がある
Summary: '[この記事は SQL Azure チームによって提供されました。]Visual Studio LightSwitch Beta 2 は今週以前にリリースされており、パブリックダウンロードが可能になりました。 &nbsp;LightSwitch アプリケーションの利用...'
Content: '<p>[この記事は SQL Azure チームによって提供されました。]</p><p><a href="">Visual Studio LightSwitch Beta 2</a>は<span style="color: #000000;">今週以前にリリースされており、パブリックダウンロードが可能になりました</span> <a href=""></a>。 &nbsp;L<span style="color: #000000;">ightSwitch アプリケーションは、ブラウザーまたはデスクトップで実行できる Silverlight を利用しています。 &nbsp;Beta 2 では Windows Azure と SQL Azure にデプロイする新機能が導入されたため、実際に試してみる必要がありました。 &nbsp; </span></p>  <p><span style="color: #000000;">このツールを使用していない場合、2時間後には非常に感心になりました。 &nbsp;LightSwitch は、単純なデータベースの設計、ユーザー画面の作成、基本的なフィールド検証の実装、Azure Windows へのデプロイに役立っています。 &nbsp;すごい。 &nbsp;次の週では、作成したアプリと LightSwitch 開発エクスペリエンスのビデオを投稿します。</span></p>  <p><span style="color: #000000;">CRUD (作成、読み取り、更新、削除) データドリブンアプリケーションを Azure および SQL Azure Windows するために使用することは非常に簡単で、部門別アプリケーションやビジネスアプリケーションに最適です。 &nbsp;ビジネスアナリストや専門家以外の開発者にとって、これは、コーディングや .NET に関する知識が非常に少ないことを必要とする優れたツールです。 &nbsp;サンプルアプリで作成したのは、 &nbsp; 1 行のコードを記述しただけです。 &nbsp;SQL Azure レポートや SQL Azure データ同期など、現在の CTP SQL Azure サービスと組み合わせて使用される Visual Studio LightSwitch を使用すると、部門や小規模のビジネスシナリオに対応したハイブリッドアプリケーションを簡単に迅速に作成できます。 &nbsp; </span></p>  <p>&nbsp;LightSwitch の詳細については、 <a href="https://blogs.msdn.com/b/jasonz/archive/2011/03/15/announcing-lightswitch-beta-2.aspx">Jason Zander</a> <span style="color: #000000;">と</span> <a href="https://blogs.msdn.com/b/somasegar/archive/2011/03/15/visual-studio-lightswitch-beta-2-available-today.aspx">Somasegar</a><span style="color: #000000;">からのブログ投稿を参照して</span>ください。 &nbsp;<span style="color: #000000;">ここでは、これを使用した経験の詳細と、作成したアプリのスクリーンショットと LightSwitch 開発自体について説明します。 &nbsp;お楽しみください。</span></p>  <h2><span style="color: #000000;"></span></h2>  <h2><span style="color: #000000;">Caveman を簡単にしたり、Cavewomen によって実行したりできます。</span></h2>  <p><span style="color: #000000;">簡単なテストとして、妻と I がアクセスできる食料品リストを記録するアプリケーションを作成しました。 &nbsp; </span></p>  <p><span style="color: #000000;"><b><i>LightSwitch エクスペリエンス内ですべて</i></b>: </span></p>  <ul>  <li><span style="color: #000000;">データベースを視覚的にデザインしました ([ok]、2つのテーブルのみ)。</span></li>  <li><span style="color: #000000;">CRUD 操作用に3つの画面を作成しました。店舗の追加、食料品の項目の表示、および店舗別の食料品の表示</span></li>  <li><span style="color: #000000;">計算フィールドを計算するために、アプリ全体で1行の .NET を作成しました。</span></li>  <li><span style="color: #000000;">SQL Azure にデータベーススキーマをデプロイし、構成ファイルを編集しなくても、最終的な発行手順で Azure を Windows するアプリケーションを展開しました。</span></li>  </ul>  <p><b><i><span style="color: #000000;">この作業は、チュートリアルドキュメントの前または最後にツールを使用しなくても、2時間以内に完了しました。</span></i></b></p>  <p style="text-align: center;"><b><i>&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4201.Screen-1.jpg" border="0"></i></b></p>  <p align="center"><span style="color: #000000;"><i>Windows Azure と SQL Azure にデプロイした LightSwitch アプリケーションのスクリーンショット</i>&nbsp;</span></p>  <p align="center"><em><span style="color: #000000;"></span></em></p>  <h2><span style="color: #000000;">セットアップ &amp; のインストール-はるかに簡単</span></h2>  <p><span style="color: #000000;">LightSwitch Beta 2 のダウンロードとインストールは簡単でした。 &nbsp;その他のツールは必要ありません。 &nbsp;Azure のデプロイに追加の sdk は必要なくなりました。また、SQL Server または SQL Azure に接続するための追加のツールは必要ありません。 &nbsp;これは、web/worker ロールのデプロイ用に開発環境を構成し、/server 開発 SQL Azure に SSMS (SQL Server Management Studio) をインストールするよりもはるかに簡単です。</span></p>  <p><span style="color: #000000;">Visual Studio 2010 が既にインストールされている場合、LightSwitch は VS エクスペリエンス内の別のプロジェクトの種類になります。</span></p>  <h2><span style="color: #000000;">開発-異なる、簡単</span></h2>  <p><span style="color: #000000;">LightSwitch は、データ駆動型アプリケーションの作成に関するものです。 &nbsp;LightSwitch アプリを作成するとき、既存のデータベース、SharePoint サイト、または WCF RIA サービスに接続できます。 SQL Azure/server エクスペリエンスは、非常にクリーンで使いやすいものです。 &nbsp;未開発アプリケーションの作成とデータベースの設計も、非常に簡単で生産性の高いものになります。 &nbsp;これには、SQL Express、SQL Server、および SQL Azure に対して動作するフレンドリエンティティモデルが含まれています。これは、データベースに nvarchar として格納されている "Email" や "PhoneNumber" などの一般的なデータ型を使用します。 &nbsp; ただし、LightSwitch では、これらのフィールドが、バックグラウンドで regexp 式と共に正しく入力され 作成されたデータベーススキーマは、3つの<sup>rd</sup>標準形式で完全に読み取ることができます。また、データベースに対して書き込んだ他の開発者が簡単に使用したり、SQL Azure レポートやオンプレミスの SQL Server Reporting Services 用にを使用してレポートを作成したりすることができます。</span></p>  <p align="center"><span style="color: #000000;">&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2541.Screen-2.jpg" border="0"></span></p>  <p align="center"><i><span style="color: #000000;">LightSwitch テーブルデザイナー</span></i></p>  <p><span style="color: #000000;">LightSwitch の最も興味深い開発パラダイムは、画面がデータによって完全に駆動されることです。 &nbsp; レイアウト用の従来のフォームデザイナーはありません。いくつかのウィザードのいずれかを選択すると、LightSwitch によって画面とデータバインディングが自動的に作成されます。 &nbsp; フォントとレイアウトに関するカスタマイズは、生産性と複雑さを軽減するために意図的に制約されています。 &nbsp; 一度だけコードビューに戻って、数量に基づいて各食料品の小計を計算しました。</span></p>  <p><span style="color: #000000;">UX のカスタマイズは、デザイン時に行うことも、Silverlight デザイナーを使用して管理者が実行することもできます。</span></p>  <p align="center"><span style="color: #000000;">&nbsp;</span><a href=""><span style="color: #000000;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3250.Form-Designer.jpg" border="0"></span></a></p>  <p align="center"><span style="color: #000000;"><i>LightSwitch フォームデザイナー</i>&nbsp;</span></p>  <h2><span style="color: #000000;">デプロイ-既に簡単に言っていますか。 &nbsp; もう一度言います。 &nbsp; 使い.</span></h2>  <p><span style="color: #000000;">LightSwitch アプリケーションは Silverlight ベースであり、デスクトップ、IIS、Windows Azure にデプロイできます。これらはすべて、発行ウィザードのラジオボックスを使用して構成できます。 &nbsp;ユーザーが既に azure アカウントを持っている場合は、サブスクリプション情報を切り取って Windows azure アカウントに貼り付け、接続文字列情報を SQL Azure データベースに貼り付けることが重要になります。 &nbsp;もちろん、IIS サーバーと SQL Azure データベースにも配置することもできます。</span></p>  <p><span style="color: #000000;">これは簡単ですが、アカウントが既にあり、セキュリティ証明書がデプロイされていて、空の Windows Azure サービスと SQL Azure データベースをプロビジョニングする必要があります。 &nbsp;LightSwitch は、これを可能な限り簡単にしました。 &nbsp;[Publish (発行)] をクリックすると、すべて Windows Azure に数分でデプロイされ、非常に簡単になりました。 &nbsp;プロセス全体を通じて1つの XML 構成ファイルを開いたり編集したりする必要はありませんでした。</span></p>  <p><span style="color: #000000;">データベーススキーマを SQL Azure に配置することは、完全にシームレスで透過的です。 &nbsp;データを配置するだけではありませんが、 <b>"ただ動作する" だけ</b>です。 &nbsp;これは非常に優れています。スキーマを実装するスクリプトを作成して実行する必要はありません。 &nbsp; </span></p>  <p align="center"><span style="color: #000000;">&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8078.Screen-4.jpg" border="0"></span></p>  <p align="center"><span style="color: #000000;"><i>LightSwitch アプリケーション発行ウィザード</i>&nbsp;</span></p>  <h2><span style="color: #000000;">セキュリティ &amp; 承認</span></h2>  <p><span style="color: #000000;">内部設置型の配置の場合、Windows とフォーム認証を使用できます。 &nbsp;Azure のデプロイ Windows では、フォーム認証が唯一のオプションです。 &nbsp;フォーム認証では、ASP.NET と同じ認証メカニズムを使用して、ロールとユーザー情報を格納するための SQL Azure データベースに7つの "aspnet_x" テーブルを作成します。 &nbsp;管理画面は LightSwitch アプリに含まれており、LightSwitch でアプリが公開されるときに管理者として識別されたユーザーがアクセスできます。</span></p>  <p><span style="color: #000000;">&nbsp;</span></p>  <p align="center"><span style="color: #000000;">&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0576.Screen-5.jpg" border="0"></span></p>  <p align="center"><span style="color: #000000;"><i>LightSwitch アプリケーション内のユーザーとロールの管理</i>&nbsp;</span></p>  <h2><span style="color: #000000;">まとめ</span></h2>  <p><span style="color: #000000;">私は、LightSwitch を使用してアプリを作成し、デプロイしていた生産性について驚きました。 &nbsp;試してみることをお勧めします。 &nbsp;ここでは、SQL Azure での使用を開始するまでにかかる時間について説明します。</span></p>  <p><span style="color: #000000;">  <p>-上田</p>  </span></p>'
