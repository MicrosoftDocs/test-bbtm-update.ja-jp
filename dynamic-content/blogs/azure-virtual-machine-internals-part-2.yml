### YamlMime:Yaml
ms.openlocfilehash: 2b350f0dcedc1f16ee349eb3ab83078bb8584186
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890869"
Slug: azure-virtual-machine-internals-part-2
Title: Azure 仮想マシンの内部 – パート 2
Summary: Azure VM のしくみの詳細を確認し、内部の詳細の一部を確認します。
Content: >-
  <h2>パート 1 からの継続</h2>


  <p><a href="https://azure.microsoft.com/en-us/blog/azure-virtual-machine-internals-part-1/">Azure Virtual Machine Internals Part 1</a> では、VM に対してWindowsを作成し、いくつかの時間を費やしてリードに従いました。 このパートでは、前に作成した VM を変更します。</p>


  <h2>ディスクの追加</h2>


  <pre>

  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm disk attach-new -g BlogRG -n BlogWindowsVM -z 60 -d newdatadisk -c ReadWrite -o blogrgdisks562 -r newdatadiskc


  info:    Executing command vm disk attach-new


  + Looking up the VM &quot;BlogWindowsVM&quot;


  + Looking up the storage account blogrgdisks562


  info:    New data disk location: https://blogrgdisks562.blob.core.windows.net/newdatadiskc/newdatadisk.vhd


  + Updating VM &quot;BlogWindowsVM&quot;


  info:    vm disk attach-new command OK


  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm show -g BlogRG -n BlogWindowsVM -d full --json</pre>


  <p>次のスニペット:</p>


  <pre>
        {

          &quot;lun&quot;: 1,

          &quot;name&quot;: &quot;newdatadisk&quot;,

          &quot;vhd&quot;: {

            &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/newdatadiskc/newdatadisk.vhd&quot;

          },

          &quot;caching&quot;: &quot;ReadWrite&quot;,

          &quot;createOption&quot;: &quot;Empty&quot;,

          &quot;diskSizeGB&quot;: 60

        }</pre>

  <p>キャッシュは既定で readwrite &ndash; に設定されています。つまり、読み取りトランザクションに加えて、書き込みトランザクションはキャッシュされ、永続ストレージに後からフラッシュされます。 そのため、データがフラッシュされる前に何らかの理由で VM が失敗した場合、データは失われます。 キャッシュを含むデータ ディスク <a href="https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/">のトピックについて説明します</a>。 このオプションは、アプリケーションに適した値に設定します。</p>


  <p>この段階では、VM に RDP 接続し、ディスクを初期化、パーティション分割、フォーマットする必要があります。 これは、多数の VM またはディスクに対して時間がかかっている可能性があります。 オートメーションを使用できる例 <a href="https://blogs.technet.microsoft.com/heyscriptingguy/2013/05/29/use-powershell-to-initialize-raw-disks-and-to-partition-and-format-volumes/">があります</a>。</p>


  <h2>キャプチャ</h2>


  <p>VM への RDP 接続と sysprep、一般化、シャットダウン。</p>


  <p><img alt="Run Sysprep" border="0" height="252" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/141ddd5b-c3bd-4e96-aa52-6865eee5386a.png" width="342"></p>


  <p>VM は、想定した通り、ポータルで "停止中" と表示されます。</p>


  <p><img border="0" height="311" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/97988ee2-2d91-4198-afd7-5008077f5ede.jpeg" width="624"></p>


  <p>コンピューティング料金の発生を続けることに関する警告が重要です。 Azure では、VM で発生する使用量に対して顧客に課金されます。 コア リソースを使用すると、VM はコンピューティング、コンピューティング、およびネットワークStorage個別に発生する可能性があります。</p>


  <p>VM がプロビジョニングされている場合、コンピューティング料金が発生します。 AZURE では引き続きその VM スロットが顧客にプロビジョニングされているので、VM &lsquo;&rsquo; が停止状態 (上の警告に示すように) である場合でも、料金が発生します。 コンピューティング料金が発生しないようにする唯一の方法は、VM の割り当て解除またはプロビジョニング解除です。</p>


  <p>VM の割り当て解放を停止すると、VM スロットの割り当てが解放され、別の顧客に割り当てられる可能性があります。 ただし、VM の定義とディスクの状態は維持され、顧客の選択時に VM を再プロビジョニング&rsquo;できます。 停止の取り当て済み VM ではコンピューティング料金は発生しないが、ディスクが削除されないStorage料金が引き続き発生します。</p>


  <p>この段階では、一般化された VM があります。つまり、OS ディスクには、ロケール、タイムゾーン、管理者資格情報などの設定を含め、VM が最初に作成された時点で OS のカスタマイズが行われたのではありません。 停止&rsquo;した VM をポータルから&lsquo;&rsquo;起動するとどうなるかを確認します。 開始 &lsquo;操作&rsquo; は単純な電源開始を実行し、プロビジョニングの一部として VM を専用のシーケンスから実行する必要があります。</p>


  <p>[ポータルで &lsquo;開始]&rsquo; をクリックし、数秒後に VM に [実行中] と表示 &lsquo;されます&rsquo;。 RDP で RDP が使用 &ndash; されるのを試してください。ブート診断を使用して、この問題を取り込む必要があります。</p>


  <p><img alt="https://blogrgdiag337.blob.core.windows.net/bootdiagnostics-blogwindo-694733ec-46a0-4e0b-a73b-ee0863a0f12c/BlogWindowsVM.694733ec-46a0-4e0b-a73b-ee0863a0f12c.screenshot.bmp" border="0" height="468" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ee9b7115-de62-4700-b61a-f8c3de2322c7.jpeg" width="624"></p>


  <p>予想通り、この VM は&lsquo;&rsquo;ディスクが一般化され、顧客の入力を待機している特殊化シーケンス内にあるのを検出しました。 この VM は正常に起動できません。</p>


  <p>VM を sysprep し、そのディスクを一般化した場合は、次の管理操作に従って、1 つ以上の新しい VM の作成に使用できる一般化されたイメージを実現する必要があります。</p>


  <p><u>VM の停止 </u>&ndash; VM の電源をオフにします。</p>


  <pre>

  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm stop -g BlogRG -n BlogWindowsVM


  info:    Executing command vm stop


  + Looking up the VM &quot;BlogWindowsVM&quot;


  warn:    VM shutdown will not release the compute resources so you will be billed for the compute resources that this Virtual Machine uses.


  info:    To release the compute resources use &quot;azure vm deallocate&quot;.


  + Stopping the virtual machine &quot;BlogWindowsVM&quot;


  info:    vm stop command OK


  <u>Generalize </u>&ndash; meta data change on the VM to mark it generalized


  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm generalize -g BlogRG -n BlogWindowsVM


  info:    Executing command vm generalize


  + Looking up the VM &quot;BlogWindowsVM&quot;


  + Generalizing the virtual machine &quot;BlogWindowsVM&quot;


  info:    vm generalize command OK


  <u>Capture </u>&ndash;


  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm capture -g BlogRG -n BlogWindowsVM -p CaptureBlogWVM -R capturecontainer -t C:\temp\CaptureVMTemplate.json


  info:    Executing command vm capture


  + Looking up the VM &quot;BlogWindowsVM&quot;


  + Capturing the virtual machine &quot;BlogWindowsVM&quot;


  info:    Saved template to file &quot;C:\temp\CaptureVMTemplate.json&quot;


  info:    vm capture command OK</pre>


  <p>生成されたテンプレートを使用して、一般化されたイメージに基づいて新しい VM を作成できます。</p>


  <p>CaptureVMTemplate.json のストレージ プロファイルを確認する</p>


  <pre>
          &quot;storageProfile&quot;: {

            &quot;osDisk&quot;: {

              &quot;osType&quot;: &quot;Windows&quot;,

              &quot;name&quot;: &quot;CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;,

              &quot;createOption&quot;: &quot;FromImage&quot;,

              &quot;image&quot;: {

                &quot;uri&quot;: <a href="https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd"><u>https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd</u></a></pre>

  <p>上記は、キャプチャ操作によって生成された一般化されたイメージの URL です。 イメージは、他のディスク VHD と同様にページ BLOB VHD であるのに気付く場合があります。 次のVisual Studio Cloud Explorer、OS データ用にキャプチャされた 3 つの VHD と 2 つのデータ ディスクを確認できます。 ストレージの用語では、ディスク ページ BLOB の BLOB スナップショットです。 BLOB スナップショットは、元のディスク blogrgdisks562 と同じストレージ アカウント &ndash; に含まれます。</p>


  <p><img border="0" height="103" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3c6c5b9f-27cf-4105-81cf-4a00d0037365.jpeg" width="624"></p>


  <p>一般化された OS ディスク BLOB の詳細を見て (コマンドを使用して、ノード Azure Storage BLOB list -vv )、いくつかの点に気付くでしょう。</p>


  <pre>
    {

      &quot;name&quot;: &quot;Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;,

      &quot;lastModified&quot;: &quot;Sun, 21 Aug 2016 19:14:25 GMT&quot;,

      &quot;etag&quot;: &quot;0x8D3C9F75DB60C73&quot;,

      &quot;contentLength&quot;: &quot;136367309312&quot;,

      &quot;contentSettings&quot;: {

        &quot;contentType&quot;: &quot;application/octet-stream&quot;,

        &quot;contentEncoding&quot;: &quot;&quot;,

        &quot;contentLanguage&quot;: &quot;&quot;,

        &quot;contentMD5&quot;: &quot;en7n+5uiKTbMlrhW59lEGg==&quot;,

        &quot;cacheControl&quot;: &quot;&quot;,

        &quot;contentDisposition&quot;: &quot;&quot;

      },

      &quot;sequenceNumber&quot;: &quot;8&quot;,

      &quot;blobType&quot;: &quot;PageBlob&quot;,

      &quot;lease&quot;: {

        &quot;status&quot;: &quot;unlocked&quot;,</pre>

  <p>これは一般化されたイメージであり、未処理のリースを使用してロック解除されています</p>


  <pre>
        &quot;state&quot;: &quot;available&quot;

      },

      &quot;copy&quot;: {

        &quot;id&quot;: &quot;b069a713-599d-44ad-85d0-e7e255f9a92c&quot;,

        &quot;progress&quot;: &quot;136367309312/136367309312&quot;,

        &quot;bytesCopied&quot;: 136367309312,

        &quot;totalBytes&quot;: 136367309312,

        &quot;source&quot;: <a href="https://blogrgdisks562.blob.core.windows.net/vhds/BlogWindowsVM2016713231120.vhd?sv=2014-02-14&amp;sr=b&amp;sk=system-1&amp;sig=HTMp66d7wK37Cc12cb2LzDsS6w1YjGyHsIHxPjR2%2F%2F8%3D&amp;st=2016-08-21T18%3A59%3A23Z&amp;se=2016-08-21T20%3A14%3A23Z&amp;sp=rw">https://blogrgdisks562.blob.core.windows.net/vhds/BlogWindowsVM2016713231120.vhd?sv=2014-02-14&amp;sr=b&amp;sk=system-1&amp;sig=HTMp66d7wK37Cc12cb2LzDsS6w1YjGyHsIHxPjR2%2F%2F8%3D&amp;st=2016-08-21T18%3A59%3A23Z&amp;se=2016-08-21T20%3A14%3A23Z&amp;sp=rw</a>,</pre>

  <p>これは、停止した VM の OS ディスクであるソース BLOB である BlogWindowsVM です。 コピー証跡に従って、BLOB のコピー方法をトレースできます。 BTW では、ソース BLOB はディスクとして VM に接続されているので、ソース BLOB に対して無限のリース (ここでは示されません) が残っています。</p>


  <pre>
        &quot;status&quot;: &quot;success&quot;,

        &quot;completionTime&quot;: &quot;Sun, 21 Aug 2016 19:14:25 GMT&quot;

      },

      &quot;metadata&quot;: {

        &quot;microsoftazurecompute_capturedvmkey&quot;: &quot;/Subscriptions/f028f547-f912-42b0-8892-89ea6eda4c5e/ResourceGroups/BLOGRG/VMs/BLOGWINDOWSVM&quot;,

        &quot;microsoftazurecompute_imagetype&quot;: &quot;OSDisk&quot;,

        &quot;microsoftazurecompute_osstate&quot;: &quot;Generalized&quot;,

        &quot;microsoftazurecompute_ostype&quot;: &quot;Windows&quot;

      }

    }</pre>

  <p>キャプチャ テンプレート json の継続-</p>


  <pre>
              },

              &quot;vhd&quot;: {

                &quot;uri&quot;: <a href="https://blogrgdisks562.blob.core.windows.net/vmcontainerb05604df-5f0f-4ef2-ab18-76ab7b644cfd/osDisk.b05604df-5f0f-4ef2-ab18-76ab7b644cfd.vhd"><u>https://blogrgdisks562.blob.core.windows.net/vmcontainerb05604df-5f0f-4ef2-ab18-76ab7b644cfd/osDisk.b05604df-5f0f-4ef2-ab18-76ab7b644cfd.vhd</u></a></pre>

  <p>上記の Vhd URI はまだ存在しません。 このテンプレートがデプロイされると作成されます。</p>


  <p>このテンプレートを使用して複数の VM を作成する場合は、2 つ目の VM 以降で一意に VHD URI を変更する必要があります。</p>


  <pre>
              },

              &quot;caching&quot;: &quot;ReadWrite&quot;

            },

            &quot;dataDisks&quot;: [

              {

                &quot;lun&quot;: 0,

                &quot;name&quot;: &quot;CaptureBlogWVM-dataDisk-0.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;,

                &quot;createOption&quot;: &quot;FromImage&quot;,

                &quot;image&quot;: {

                  &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-dataDisk-0.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;

                },

                &quot;vhd&quot;: {

                  &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/vmcontainerb05604df-5f0f-4ef2-ab18-76ab7b644cfd/dataDisk-0.b05604df-5f0f-4ef2-ab18-76ab7b644cfd.vhd&quot;

                },

                &quot;caching&quot;: &quot;ReadWrite&quot;

              },

              {

                &quot;lun&quot;: 1,

                &quot;name&quot;: &quot;CaptureBlogWVM-dataDisk-1.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;,

                &quot;createOption&quot;: &quot;FromImage&quot;,

                &quot;image&quot;: {

                  &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-dataDisk-1.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd&quot;

                },

                &quot;vhd&quot;: {

                  &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/vmcontainerb05604df-5f0f-4ef2-ab18-76ab7b644cfd/dataDisk-1.b05604df-5f0f-4ef2-ab18-76ab7b644cfd.vhd&quot;

                },

                &quot;caching&quot;: &quot;ReadWrite&quot;

              }

            ]

          },</pre>

  <p>この時点で、元の VM は停止されますが、コンピューティングとコンピューティングの使用量は引き続きStorage。 &ndash; VM を長い間停止したままにしておく場合は、Hyper-V ホスト上の VM の割り当てを割り当てない VM の割り当てを停止し、VM メタデータとディスク BLOB を Storage に保持することで、コンピューティング料金を節約できます。</p>


  <pre>

  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm deallocate -g BlogRG -n BlogWindowsVM


  info:    Executing command vm deallocate


  + Looking up the VM &quot;BlogWindowsVM&quot;


  + Deallocating the virtual machine &quot;BlogWindowsVM&quot;


  info:    vm deallocate command OK


  get-instance-view command will show the VM status as deallocated (snippets of result below)


  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure vm get-instance-view -g blogrg -n blogwindowsvm &ndash;json

      &quot;osDisk&quot;: {

        &quot;osType&quot;: &quot;Windows&quot;,

        &quot;name&quot;: &quot;BlogWindowsVM&quot;,

        &quot;vhd&quot;: {

          &quot;uri&quot;: <a href="https://blogrgdisks562.blob.core.windows.net/vhds/BlogWindowsVM2016713231120.vhd"><u>https://blogrgdisks562.blob.core.windows.net/vhds/BlogWindowsVM2016713231120.vhd</u></a></pre>

  <p>VM の停止と取り当てが停止しても、OS ディスクとデータ ディスクは保持されます</p>


  <pre>
        },

        &quot;caching&quot;: &quot;ReadWrite&quot;,

        &quot;createOption&quot;: &quot;FromImage&quot;

      },

      &quot;dataDisks&quot;: [

        {

          &quot;lun&quot;: 0,

          &quot;name&quot;: &quot;BlogWindowsVM-20160814-191501427&quot;,

          &quot;vhd&quot;: {

            &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/vhds/BlogWindowsVM-20160814-191501427.vhd&quot;

          },

          &quot;caching&quot;: &quot;ReadWrite&quot;,

          &quot;createOption&quot;: &quot;Empty&quot;,

          &quot;diskSizeGB&quot;: 50

        },

        {

          &quot;lun&quot;: 1,

          &quot;name&quot;: &quot;newdatadisk&quot;,

          &quot;vhd&quot;: {

            &quot;uri&quot;: &quot;https://blogrgdisks562.blob.core.windows.net/newdatadiskc/newdatadisk.vhd&quot;

           },

          &quot;caching&quot;: &quot;ReadWrite&quot;,

          &quot;createOption&quot;: &quot;Empty&quot;,

          &quot;diskSizeGB&quot;: 60

        }

      ]


  ---


  ---

      &quot;statuses&quot;: [

        {

          &quot;code&quot;: &quot;ProvisioningState/succeeded&quot;,

          &quot;level&quot;: &quot;Info&quot;,

          &quot;displayStatus&quot;: &quot;Provisioning succeeded&quot;,

          &quot;time&quot;: &quot;2016-08-22T02:58:42.797Z&quot;

        },

        {

          &quot;code&quot;: &quot;OSState/generalized&quot;,

          &quot;level&quot;: &quot;Info&quot;,

          &quot;displayStatus&quot;: &quot;VM generalized&quot;</pre>

  <p>OS は一般化されています。そのため、この VM は特殊化することで再作成できます</p>


  <pre>
        },

        {

          &quot;code&quot;: &quot;PowerState/deallocated&quot;,

          &quot;level&quot;: &quot;Info&quot;,

          &quot;displayStatus&quot;: &quot;VM deallocated&quot;</pre>

  <p>コンピューティング VM リソースの割り当てが解放される</p>


  <p>VM の取り当てが取り出された場合でも、そのディスク ストレージ BLOB は、VM が実行されている場合と同様にロックされます。 これは、誤って削除されるのを防ぐためです。</p>


  <p>ディスク BLOB の BLOB プロパティを見て、Azure は引き続き BLOB の無限リースを維持しているのに気付きます。</p>


  <pre>

  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure storage blob list -vv


  name: &#39;BlogWindowsVM-20160814-191501427.vhd&#39;,


  lastModified: &#39;Sun, 21 Aug 2016 19:10:50 GMT&#39;,


  etag: &#39;0x8D3C9F6DD886DB5&#39;,


  contentLength: &#39;53687091712&#39;,


  contentSettings: {

      contentType: &#39;application/octet-stream&#39;,

      contentEncoding: &#39;&#39;,

      contentLanguage: &#39;&#39;,

      contentMD5: &#39;&#39;,

      cacheControl: &#39;&#39;,

      contentDisposition: &#39;&#39;

  },


  sequenceNumber: &#39;1&#39;,


  blobType: &#39;PageBlob&#39;,


  lease: {

      status: &#39;locked&#39;,

      state: &#39;leased&#39;,

      duration: &#39;infinite&#39;

  }</pre>


  <h2>VM の複製</h2>


  <p>この時点で、キャプチャした一般化されたイメージから VM を複製できます。 キャプチャ テンプレート json を使用するか、パラメーター値として一般化されたイメージを含む FromImage オプションを使用して新しいイメージを作成できます。</p>


  <p>Azure クイックスタート テンプレートからテンプレートを取得し、それを十分に変更し、それをデプロイして CopyBlogVM という名前の新しい VM を作成しました。</p>


  <pre>

  C:\Program Files (x86)\Microsoft SDKs\Azure\CLI\bin&gt;node azure group deployment create -g BlogRG -n CopyVMDeployment -f &quot;C:\temp\copyvmtemplate\template.json&quot; -e &quot;C:\temp\copyvmtemplate\parameters.json&quot;


  info:    Executing command group deployment create


  + Initializing template configurations and parameters


  + Creating a deployment


  info:    Created template deployment &quot;CopyVMDeployment&quot;


  + Waiting for deployment to complete


  +


  The relevant snippet from the VM template is the storage profile:


  &quot;storageProfile&quot;: {


  &quot;osDisk&quot;: {


  &quot;name&quot;: &quot;[concat(parameters(&#39;virtualMachineName&#39;),&#39;-osDisk&#39;)]&quot;,


  &quot;osType&quot;: &quot;[parameters(&#39;osType&#39;)]&quot;,


  &quot;caching&quot;: &quot;ReadWrite&quot;,


  &quot;createOption&quot;: &quot;fromImage&quot;,


  image&quot;: {


  &quot;uri&quot;: &quot;[parameters(&#39;osDiskVhdUri&#39;)]&quot;


  },


  &quot;vhd&quot;: {


  &quot;uri&quot;: &quot;[concat(concat(reference(resourceId(&#39;blogrg&#39;, &#39;Microsoft.Storage/storageAccounts&#39;, parameters(&#39;storageAccountName&#39;)), &#39;2015-06-15&#39;).primaryEndpoints[&#39;blob&#39;], &#39;vhds/&#39;), parameters(&#39;virtualMachineName&#39;), &#39;20161228010921.vhd&#39;)]&quot;


  }


  },


  &quot;dataDisks&quot;: []


  },</pre>


  <p>OsDiskvhdUri は、パラメーター ファイルで一般化されたイメージ ファイルに設定されます</p>


  <pre>

  &quot;osDiskVhdUri&quot;: {


  &quot;value&quot;: <a href="https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd"><u>https://blogrgdisks562.blob.core.windows.net/system/Microsoft.Compute/Images/capturecontainer/CaptureBlogWVM-osDisk.694733ec-46a0-4e0b-a73b-ee0863a0f12c.vhd</u></a>


  },</pre>


  <p>CopyBlogVM は、OsDiskvhdUri によって参照される一般化された OS ディスクのコピーとして起動する OS ディスクで正常に作成されます。 一般化された OD ディスクをテンプレートとして使用すると、任意の数の新しい VM をスタンプアウトできます。一般的なシナリオは、新しい更新プログラム/パッチを使用して一般化された VM をキャプチャし、更新されたイメージに基づいて新しい VM を作成する場合です。</p>


  <h2>結論として</h2>


  <p>2 つの投稿では、Azure VM の動作に関する詳細の一部について説明しました。 バックアップ、暗号化、ライセンス、計画メンテナンス、ネットワークの詳細など、まだ説明していないその他の機能があります。 時間が許される場合は&nbsp;、今後の投稿でこれらのトピックにアクセスします。</p>
