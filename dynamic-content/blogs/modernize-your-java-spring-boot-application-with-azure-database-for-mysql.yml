### YamlMime:Yaml
ms.openlocfilehash: 7def6c13fc4cced6c62b084dd03f65287475a946
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893894"
Slug: modernize-your-java-spring-boot-application-with-azure-database-for-mysql
Title: Azure Database for MySQL で Java Spring Boot アプリケーションを最新化する
Summary: Spring は、最新のビジネスニーズに対応する web アプリケーションやエンタープライズアプリケーションを構築するための、よく知られている Java ベースのフレームワークです。 Spring Boot フレームワークを使用する利点の1つは、リレーショナルデータストアと NoSQL データストアからのデータアクセスを簡略化することです。
Content: >-
  <p><em>このブログ投稿は、Parikshit Savjani、シニアプログラムマネージャー、 &nbsp; AZURE OSS Database サービスによって共同で作成されています。</em></p>


  <p>Spring は、最新のビジネスニーズに対応する web アプリケーションやエンタープライズアプリケーションを構築するための、よく知られている Java ベースのフレームワークです。 Spring Boot フレームワークを使用する利点の1つは、リレーショナルデータストアと NoSQL データストアからのデータアクセスを簡略化することです。 MySQL Database バックエンドを使用した Spring Boot framework は、ビジネスアプリケーションのオンライントランザクション処理のニーズに対応するために確立されたパターンの1つです。 最新のビジネスアプリケーションは、Azure Kubernetes service (AKS) などのクラウドネイティブマイクロサービスプラットフォームで構築およびデプロイされており、従来のモノリシック設計から、柔軟なスケールと移植性のニーズに対応しています。 一方、データベースには、原子性、一貫性、耐久性、回復性を備えたステートフルな要件があり、障害が発生してもデータ損失はゼロになります。 そのため、これらの要件を満たす Azure Database for MySQL サービスなどの管理されたデータベースサービスで、Kubernetes 環境以外でデータベースを実行する方が適しています。</p>


  <p>開発者やお客様は、Azure platform で Java Spring Boot マイクロサービスアプリケーションを簡単に構築してデプロイできるため、開発者の生産性が向上し、企業は次のソリューションによってさらに多くのことを実現できます。</p>


  <ul>
   <li><a href="https://azure.microsoft.com/en-us/blog/introducing-azure-devops/" target="_blank">Azure DevOps</a>、自動化された堅牢な CI/CD パイプラインを構築するための開発プラットフォームです。</li>
   <li>Managed Kubernetes platform である<a href="https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes" target="_blank">Azure Kubernetes Service</a>。</li>
   <li>Azure <a href="https://azure.microsoft.com/en-us/blog/announcing-azure-container-instances/" target="_blank">Container Instance</a>。コンテナー化されたソリューションを azure で実行するためのサーバーレスコンテナープラットフォームです。</li>
   <li><a href="https://docs.microsoft.com/en-us/azure/mysql/" target="_blank">Azure Database for MySQL</a>、完全に管理されたエンタープライズ対応のコミュニティ MySQL データベースをサービスとして利用できます。</li>
  </ul>


  <p>次に示すのは、Azure での po サービスと呼ばれる Java Spring Boot マイクロサービスアプリケーションの関数型アーキテクチャサンプルです。 この Spring Boot アプリケーションは、Azure Kubernetes Service (AKS) で、コンテナー化されたアプリケーションとして注文書マイクロサービスを構築してデプロイする方法を示しています。 デプロイされたマイクロサービスは、注文書に対するすべての CRUD 操作をサポートしています。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b927e0b5-d520-4e78-a027-371bb893451b.jpg"><img alt="Functional architecture sample of a Java Spring Boot microservices application called po-service" border="0" height="521" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fd4b3ef0-a99f-4848-8e99-204cabae6a1a.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Po サービスと呼ばれる Java Spring Boot マイクロサービスアプリケーションの機能アーキテクチャのサンプル" width="643"></a></p>


  <p>Azure Kubernetes services で実行されているマイクロサービスアプリケーションを Azure Database for MySQL サービスで実行されているデータベースと統合できるようにするために、開発者は<a href="https://github.com/kubernetes-incubator/service-catalog" target="_blank">Kubernetes Service Catalog</a>と共に<a href="https://docs.microsoft.com/en-us/azure/aks/integrate-azure" target="_blank">Open Service Broker for azure を</a>利用し、利用できます。</p>


  <p>上記のアーキテクチャを<a href="https://github.com/ganrad/k8s-springboot-data-rest/tree/master/extensions/po-deploy-azuredb-mysql" target="_blank">GitHub リポジトリ</a>に構築してデプロイするための詳細な手順について説明しました。 このステップバイステップガイドの全体的な目標は次のとおりです。</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/azure/aks/integrate-azure"> <strong>azure の Open Service Broker</strong> </a>を使用して、azure Kubernetes サービスからの Azure Database for MySQL をプロビジョニング、デプロイ、統合する方法を、DevOps パイプラインを使用してシームレスに行う方法を示します。</li>
   <li>Kubernetes (AKS) でコンテナー化されたアプリケーションを配置するための、 <strong>ヘルム</strong> (CLI) の使用方法を示します。 ヘルムは Kubernetes のパッケージマネージャーであり、CNCF の一部です。 ヘルムは、グラフと呼ばれる Kubernetes パッケージの管理に使用されます。</li>
   <li>SSL/TLS (HTTPS トランスポート) を使用してマイクロサービス (REST API) エンドポイントをセキュリティで保護し、AKS の受信 <strong>コントローラー</strong> アドオンで公開する方法を説明します。</li>
   <li><strong>Azure Container Instances</strong> (ACI) にマイクロサービスをデプロイして、サーバーレスコンテナーソリューションをデモンストレーションするには</li>
  </ul>


  <h2>次の手順</h2>


  <p>Azure での管理されたデータベースサービスを使用したマイクロサービスアプリケーションの構築とデプロイの概要については、こちらをご覧ください。 <a href="https://github.com/ganrad/k8s-springboot-data-rest/tree/master/extensions/po-deploy-azuredb-mysql" target="_blank">GitHub リポジトリ</a>の指示に従って、Azure Kubernetes service または Azure Container Instances (ACI) で任意のマイクロサービスアプリケーションを構築してデプロイできます。 これを行うには、完全に管理された Azure database services (PaaS) で、Azure DevOps で実行されているエンドツーエンドの CI/CD プラットフォームを使用して実行されているデータベースを使用します。 開発者コミュニティは、再利用して問題を提起したり、プル要求を送信して投稿したりすることをお勧めします。</p>


  <p>次に参照する <a href="https://feedback.azure.com/forums/597982-azure-database-for-mysql" target="_blank">機能についてのフィードバック</a> を引き続き提供してください。 ヘルプが必要な場合、または質問がある場合は、 <a href="https://docs.microsoft.com/en-us/azure/mysql/" target="_blank">Azure Database for MySQL のドキュメント</a>を参照してください。 最新のニュースと発表については、Twitter <a href="https://twitter.com/AzureDBMySQL" target="_blank">@AzureDBMySQL</a> でフォローしてください。</p>
