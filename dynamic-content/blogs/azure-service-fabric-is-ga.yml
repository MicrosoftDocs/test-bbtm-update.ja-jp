### YamlMime:Yaml
ms.openlocfilehash: 6255035c57c4ecd1bd18b7efbbac2d7261995dca
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893558"
Slug: azure-service-fabric-is-ga
Title: Azure Service Fabric は GA です。
Summary: 本日、ビルドカンファレンスで、azure Service Fabric が azure のサービスとして一般公開 (GA) されたことを発表しました。
Content: >-
  <p>本日、ビルドカンファレンスで、azure Service Fabric が azure のサービスとして一般公開 (GA) されたことを発表しました。 また、Windows サーバーの Service Fabric のプレビューについても発表しました。これにより、アプリケーションの移植性を最大化するために Service Fabric をオンプレミスと他のクラウドにインストールできるようになります。 最後に、Linux の Service Fabric のプレビューを発表しました。</p>


  <p>まず、ちょっとした歴史です。 Microsoft では、 &rsquo; お客様と同様にクラウドへの移行を行ってきました。 オンプレミスからクラウド、およびモノリシックからマイクロサービスベースのアプリケーションまで、独自の内部進化をサポートするために、このような課題に対処するために数年 Service Fabric を作成しました。</p>


  <p>Service Fabric は、ライフサイクル管理、ステートレスおよびステートフルサービス、大規模なパフォーマンス、24時間365日の可用性、コスト効率のサポートが組み込まれた、成熟した機能豊富なマイクロサービスアプリケーションプラットフォームです。 マイクロサービスアーキテクチャとマイクロサービスプラットフォームの利点の詳細については、Mark Russinovich &rsquo; s 入門ブログの <a href="https://azure.microsoft.com/en-us/blog/microservices-an-application-revolution-powered-by-the-cloud/">投稿</a> と <a href="https://channel9.msdn.com/Blogs/Seth-Juarez/An-Introduction-to-Microservices-with-Mark-Russinovich">ビデオ</a>をご覧ください。</p>


  <p>Service Fabric は、Microsoft で5年以上にわたって運用環境で使用されており、azure SQL データベース、azure DocumentDB、Intune、Cortana、Skype for Business などの幅広いサービスを利用しています。 これらの大部分では、Service Fabric は数百台のサーバーで数百のステートフルおよびステートレスマイクロサービスを管理します。 これとまったく同じテクノロジを使用して、Azure でサービスとして Service Fabric をリリースしまし &rsquo; た。 また、Windows サーバーの Service Fabric のスタンドアロンプレビューを使用すると、独自のデータセンターや他のクラウドにクラスターを作成できます。</p>


  <h2>Visual Studio を使用したマイクロサービスアプリケーションの開発</h2>


  <p>&rsquo;Visual Studio で Service Fabric マイクロサービスベースのアプリケーションを簡単に開発、検証、起動できます。 Visual Studio &rsquo; と Service Fabric とのシームレスな統合により、コーディングとデプロイがシンプルになり、単一の開発者 &rsquo; のローカルコンピューターで実行されるのと同じ Service Fabric ランタイム環境が含まれ、テストやデバッグのためにマルチサーバー Service Fabric クラスターを模倣します。 開発者のコンピューターで実行されるものはすべて Azure で実行されます。この方法では、エミュレーターを取得することはできません。 また、Service Fabric には、アプリケーションによってホストマシンと個々のマイクロサービスの障害が発生する可能性があり、実際の障害が発生しても運用環境で確実に保持できるように、fault analysis Service が含まれています。</p>


  <p><img alt="Service Fabric actor programming in Visual Studio" border="0" height="329" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/19c9d514-1386-4855-99eb-09c2db46bd94.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="Visual Studio でのアクタープログラミングの Service Fabric" width="610"></p>


  <h2>プログラミングモデルとフレームワーク</h2>


  <p>Service Fabric には、reliable services と reliable actor の2つのマイクロサービスベースのプログラミングモデル &lsquo; が用意されて &rsquo; います。 Reliable services はステートレスおよびステートフルマイクロサービスをサポートしています。後者は、Dictionary や Queue などの reliable collection によって有効になっています。 reliable actor プログラミングモデルは、マイクロサービスを独立したオブジェクト ( &ldquo; アクター &rdquo; ) としてモデル化することによってマイクロサービスの開発を簡素化し、Service Fabric はアクター間のデプロイ、スケーリング、および通信を処理します。</p>


  <p>また Service Fabric を使用すると、Node.js、ASP.NET コアなど、任意の他の開発フレームワークをデプロイして、開発の柔軟性を最大限に高めることができます。 また、マイクロサービスモデルを使用すると、同じアプリケーション内のマイクロサービス間でフレームワークを混在させることができます。</p>


  <h2>Service Fabric での DevOps</h2>


  <p>Service Fabric には、モデル駆動型の宣言型のマイクロサービスアプリケーションモデルが用意されています。アプリケーションは、それぞれ独立してバージョン管理され、アップグレード可能なマイクロサービスのコレクションで構成されます。 アプリケーションのライフサイクルを管理するために、Service Fabric は個々のマイクロサービスのローリングアップグレードをサポートしており、アップグレードによってアプリケーション &rsquo; の正常性が低下したことが検出された場合は、以前のバージョンに自動的にロールバックします。 たとえば、アプリケーションが失敗するようなマイクロサービスの v2 がデプロイされている場合、Service Fabric はこれを v1 にロールバックします。 これにより、安全な展開が可能になり、アプリケーションが一貫性のない状態または不明な状態のままになることはありません。</p>


  <p><img alt="Service Fabric Explorer monitoring a five-node cluster" border="0" height="301" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6eb76234-fcdb-4ef6-8d3e-834040625a30.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="5ノードクラスターの監視 Service Fabric Explorer" width="610"></p>


  <p>Service Fabric は PowerShell (または Linux では Azure CLI) を使用して完全にスクリプト化でき、アプリケーションのライフサイクルに簡単に接続できるため、マイクロサービスベースのアプリケーションを管理する両方のシームレスな継続的インテグレーション (CI)/継続的デリバリー (CD) が可能になります。</p>


  <h2>ステートフルマイクロサービス</h2>


  <p>ほとんどの PaaS プラットフォームでは、状態が外部ストアまたはデータベースに格納されているステートレスマイクロサービスのみがサポートされます。 Service Fabric は、ステートフルマイクロサービスのネイティブサポートに固有であり、状態はマイクロサービスでローカルに保持され、ローカルディスクに保存されます。この場合、マイクロサービスが失敗した場合にレプリカを介して Service Fabric によって高可用性が維持されます。 ステートフルマイクロサービスでは、待機時間を大幅に短縮し、パフォーマンスを向上させ、外部ストアへの依存関係を削減し、アプリケーションが大規模なスケールアウトを実現できるようにします。</p>


  <h2>Azure の Service Fabric</h2>


  <p>Microsoft Azure のサービスとして、Service Fabric は azure の機能やサービスと統合され、操作と管理が簡単になり、azure クラウドの機能を活用できます。 azure で Service Fabric を実行する利点には、azure Portal を使用したクラスターのプロビジョニングの合理化と Azure Resource Manager、ホスト OS の更新時の信頼性の向上、アプリケーションのダウンタイムなしでの Service Fabric ランタイムへの自動アップグレードなどがあります。</p>


  <p><img alt="Provisioning a new Service Fabric cluster in Azure" border="0" height="302" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b595dcdc-d6d4-4d5b-a689-f9679d453ca3.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="Azure での新しい Service Fabric クラスターのプロビジョニング" width="610"></p>


  <p>Service Fabric は、Azure &ndash; で追加料金なしでご利用いただけます。お支払いは、Service Fabric クラスターとマイクロサービスで使用される、基になるコンピューティング、ネットワーク、およびストレージに対してのみです。 複数の業界で400を超えるお客様は、BMW、 <a href="https://blogs.msdn.microsoft.com/azureservicefabric/2016/03/15/service-fabric-customer-profile-talktalk-tv/">TalkTalk</a>、Schneider 電気、 <a href="https://azure.microsoft.com/en-gb/documentation/videos/careotter-makes-healthcare-personal-with-azure-service-fabric/">careotter 社</a>などの Service Fabric を使用して既にソリューションを構築しています。</p>


  <p>現在 &rsquo; の発表の詳細については、 <a href="https://blogs.msdn.microsoft.com/azureservicefabric/">Service Fabric チームのブログ</a>を参照してください。</p>


  <p><font><a href="https://channel9.msdn.com/Blogs/Seth-Juarez/3102016-Mark-Russinovich-Part-2">Mark Russinovich</a></font>と Channel 9 &rsquo; s seth Juarez との Service Fabric を確認します。</p>
