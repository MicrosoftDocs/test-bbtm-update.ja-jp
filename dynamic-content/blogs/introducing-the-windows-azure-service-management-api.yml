### YamlMime:Yaml
ms.openlocfilehash: 8d1b328590b68857a6b6ca13946c00b96a7c7f43
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909771"
Slug: introducing-the-windows-azure-service-management-api
Title: Azure WindowsのService Management API
Summary: 現在、デプロイ、ホストされたサービス、ストレージ アカウントの管理に役立Windows Azure Service Management API のプレビューをリリースします。 これは、ユーザーがコードを実行できる REST ベースの API です。
Content: '<p>現在、デプロイ、ホストされたサービス、ストレージ アカウントの管理に役立Windows Azure Service Management API のプレビューをリリースします。 これは、ユーザーが自分のサービスを管理するために選択したツールセットでコード化できる REST ベースの API です。 </p>  <p><b>API の詳細の概要</b></p>  <ul>   <li>ドキュメント (Azure ドキュメントの残りの部分と共に) Windows確認<a href="https://go.microsoft.com/fwlink?LinkID=160765" mce_href="https://go.microsoft.com/fwlink?LinkID=160765">できます</a>。 </li>    <li>これは、認証に X509 クライアント証明書を使用する REST ベースの API です。 ユーザーは、.cer 形式の有効な X509 証明書を Windows Azure 開発者ポータルにアップロードし、API 要求を行う際にクライアント証明書として使用できます。 </li>    <li>現在、次の操作がサポートされています。      <ul>       <li>デプロイ – 構成設定の表示、作成、削除、スワップ、変更、インスタンス数の変更、デプロイの更新。 </li>        <li>ホストされているサービス、ストレージ アカウント、アフィニティ グループのプロパティの一覧と表示 </li>     </ul>   </li>    <li>この API を操作してデプロイを管理するのに役立つ csmanage.exe と呼ばれる小さなツールをまとめました。 csmanage は、他 <a href="https://code.msdn.microsoft.com/windowsazuresamples" mce_href="https://code.msdn.microsoft.com/windowsazuresamples">のサンプル</a> と共にこちらに表示されます。 </li> </ul>  <p><b>開始方法</b></p>  <p>ドキュメント <a href="https://go.microsoft.com/fwlink?LinkID=160765" mce_href="https://go.microsoft.com/fwlink?LinkID=160765">には</a> この詳細な情報がありますが、クイック スタートを次に示します。</p>  <ol>   <li>最初の手順では、キー サイズが 2048 ビット以上の有効な X509 証明書を保持します。 簡単な方法の 1 つは、IIS 7 を使用して自己署名証明書を生成する方法です。 もう 1 つのオプションは<code>makecert.exe</code>、 (Windows SDK に含まれています) を使用し、次のようなコマンドを使用する方法です。       <br><code>makecert -r -pe -a sha1 -n &quot;CN=Windows Azure Authentication Certificate&quot; -ss My -len 2048 -sp &quot;Microsoft Enhanced RSA and AES Cryptographic Provider&quot; -sy 24 testcert.cer</code> </li>    <li>次の手順では、.cer ファイルを開発者ポータルにアップロードして、Windows プロジェクトでの API 操作の証明書を信頼する必要があるという情報を Azure に提供します。 これで、ポータルの [アカウント] タブの下に "API 証明書" という新しいセクションが追加されました。このセクションでこれを行えます。 <a href="" mce_href=""><img style="border-right-width: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image002_thumb.jpg" width="431" height="76" mce_src=""></a> </li>    <li>作成した API 要求に対&#160;手順 1. の証明書を使用します。 csmanage ツールは、API によって提供される機能を再生して探索するための便利な方法です。 ユーザーが独自のツールを展開する場合、ほぼすべてのメインストリーム プログラミング プラットフォームでクライアント証明書がサポートされています。 .NET ユーザーは、System.Net.HttpWebRequest の ClientCertificates プロパティを使用する必要があります。 また、このタスクを間もなく簡略化するために、クライアント ライブラリを公開する予定です。 </li> </ol>  <p><b>パイプライン内</b></p>  <p>今後数週間、サンプルの .NET クライアント ライブラリとサンプル (すべてソース コードを含む) を公開して、API の機能を使用する方法を示します。&#160; この API は現在 CTP 形式であり、ユーザーはフィードバックに基づいてサービスを改善するために変更を期待する必要があります。</p>  <p>いつものように、フィードバックをお寄せください。 API を使用して、ご自分の考えをお聞かわせください。</p>'
