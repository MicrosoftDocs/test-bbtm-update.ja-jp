### YamlMime:Yaml
ms.openlocfilehash: 06c12129778ff5fa086e4a8aa83920c552b3811f
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895318"
Slug: on-demand-spark-clusters-on-docker
Title: アプリケーションのインフラストラクチャを使用して Docker にオンデマンドの Spark クラスター Azure Batchプロビジョニングする
Summary: Azure Distributed Data Engineering Toolkit - オンデマンドの Spark クラスターをプロビジョニングし、CLI から直接 Spark ジョブを送信できるオープン ソースの Python CLI ツールです。
Content: "<p>3 年前のリリース以降、Apache Sparkはビッグ データ ユーザーの間で人気が高まっていますが、HPC 空間でもますます一般的になりました。 ただし、オンデマンドで Spark クラスターを起動すると、複雑で低速になる場合があります。 代わりに、Spark 開発者は多くの場合、会社が管理する既存のクラスターを IT チーム&#39;共有します。 これらのシナリオでは、Spark 開発者は、使用率が低いクラスターと容量不足の間で一定の流動的な静的クラスターで Spark アプリケーションを実行します。 容量&#39;、またはアイドル状態のノードで&#39;を使い戻す必要があります。</p>\n\n<p><strong><a href=\"https://www.github.com/azure/thunderbolt\" target=\"_blank\">Azure</a> <a href=\"https://www.github.com/azure/aztk\">Distributed Data Engineering Toolkit</a> - のベータ リリースを発表して、オンデマンドの Spark クラスターをプロビジョニングし、CLI から直接 Spark ジョブを送信できるオープン ソースの Python CLI ツールをお知らせします。&#39;</strong></p>\n\n<p>Spark ユーザーがクラスターとやり取りする方法を詳細に調査した後、Azure Distributed Data Engineering Toolkit を設計して、ネイティブの Spark エクスペリエンスを拡張し、クラスターをプロビジョニングし、Spark を大規模に実行するための完全なエンド エンド エクスペリエンスを提供します。 さらに、このツールキットでは、Azure Batch&#39;のプロビジョニング時間が継承されます。Spark クラスターのプロビジョニングには 3 分から 5 分しかかから \"か\"\" ます。 Spark ネイティブ エクスペリエンスと高速なスピンアップ時間により、このツールキットを使用すると、Spark 実験を簡単に実行できます。これにより、より多く、簡単に、より少ない時間で実行できます。</p>\n\n<p>Spark アプリケーション用に事前にインストールされた特定のソフトウェアが必要なユーザーに対して、このツールキットを使用すると、独自の<a href=\"https://github.com/Azure/thunderbolt/tree/master/docker-image\"> <strong>Docker</strong></a> イメージを取り込む機能も提供され、セットアップが簡単で再現可能になります。</p>\n\n<p>Azure 分散データ エンジニアリング Toolkit無料で使用できます。使用するコアに対して支払う必要があります。 Azure Batch 上に構築されているため、優先順位の低い VM をプロビジョニングする機能を<a href=\"https://docs.microsoft.com/en-us/azure/batch/batch-low-pri-vms\" target=\"_blank\"></a>備え、Spark ジョブを 80% の割引で実行できます。これは、実験、テスト、その他の低優先度の作業に最適なツールです。</p>\n\n<p><em>現在、このツールキットは Spark のみをサポートしますが、同様の技術で他の分散データ エンジニアリング フレームワークをサポートする予定です。</em></p>\n\n<h2>Spark クラスターを作成する</h2>\n\n<p>Azure Distributed Data Engineering サービスがインストールToolkit、次の簡単な CLI コマンドを使用して Spark クラスターを作成します。</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong>$ aztk spark cluster create \\\n    --id &lt;my_spark_cluster_id&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --size &lt;number_of_nodes&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --vm-size &lt;vm_size&gt;</strong></pre>\n\n<p><strong>--size を使用する代</strong>わりに、必要に応じて <strong>--size-low-priority</strong><strong>&nbsp;</strong> を使用して、低優先度の VM をプロビジョニングできます。</p>\n\n<p>- <strong>-username</strong><b> </b>パラメーターと <strong>--ssh-key パラメーターを追加</strong> して、クラスターのユーザーを作成することもできます。 これは、必要に応じて、別の <strong>aztk spark クラスター add-user コマンドで実行</strong> できます。</p>\n\n<h2>ジョブの送信</h2>\n\n<p>Spark クラスターの準備ができたら、<strong>aztk spark cluster submit</strong> コマンドを使用して、標準の <em>spark-submit</em> コマンドを使用してクラスターに対してジョブを送信します。</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\">$ aztk spark cluster submit \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --id &lt;my_spark_cluster&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --name &lt;my_spark_job_name&gt; \\\n    [options] \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   &lt;app jar | python file&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   [app parameters]</strong></pre>\n\n<p>標準の spark-submit コマンドと同様に、出力はコンソールにストリーミングされます。</p>\n\n<h2>クイック スタート デモ</h2>\n\n<p>次&#39;、優先順位の低い VM を持つ 2 TB Spark クラスター (80% 割引) を約 5 分で取得する方法の例を示します。</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\">$ aztk spark cluster create --id my_cluster --size-low-pri 16 --vm-size Standard_E16_v3\n\n# Grab some coffee...\n\n# BOOM! Your 2TB Spark cluster is up. Start submitting jobs!\n$ aztk spark cluster submit --id my_cluster --name my_massive_job my_pyspark_app.py\n</strong></pre>\n\n<h2>対話モード</h2>\n\n<p>作業を開始するには、ほとんどのユーザーが Spark クラスターを対話的に操作する必要があります。 Azure Distributed Data Engineering Toolkit では、クラスター&#39;のマスター ノードに SSH 接続するのに役立つ <strong>aztk spark クラスター ssh </strong>コマンドを対話形式で操作できますが、Spark Web UI と Spark ジョブ UI をローカル コンピューターに移植することもできます。</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong>$ aztk spark cluster ssh --id &lt;my_spark_cluster_id&gt;</strong>\n</pre>\n\n<p>既定では、Spark Web UI を localhost:8080 に、Spark ジョブ UI を localhost:4040 に、Jupyter を localhost:8888 に移植します。 これらの既定値は、必要に応じて .bolt/ssh.yaml ファイルで構成できます。</p>\n\n<p>コマンドを実行すると、ローカル コンピューターで localhost:8080 にアクセスして、Spark Web UI と対話できます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/87efb9c3-7ac1-4f45-9a06-fdd25ba869f7.png\"><img alt=\"spark_web_ui_screen_shot\" border=\"0\" height=\"315\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/821fd04a-7e79-4bc4-8fff-64a8225ecaa6.png\" style=\"margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"spark_web_ui_screen_shot\" width=\"562\"></a></p>\n\n<div>\n<h2>Spark クラスターの管理</h2>\n\n<p>Spark クラスターの管理に使用できる他のコマンドの一部を確認します。</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\"># Get a summary of all the Spark clusters you have created with Azure Thunderbolt\n$ aztk spark cluster list\n\n# Get a summary on a specific Spark cluster\n$ aztk spark cluster get --id &lt;my_spark_cluster_id&gt;\n\n# Delete a specific Spark cluster\n$ aztk spark cluster delete --id &lt;my_spark_cluster_id&gt;</strong>\n</pre>\n\n<p style=\"font-family: tahoma, &quot;Helvetica Neue&quot;, arial, helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: normal;\">&nbsp;</p>\n</div>\n\n<hr style=\"font-size: 13px;\">\n<p>これらの機能を使用し、フィードバックをお待ちしております。 フィードバックについては、 までお問い <a target=\"_blank\">askaztk@microsoft.com</a> 合わせください。または、GitHub リポジトリに自由 <a href=\"https://www.github.com/Azure/aztk\" target=\"_blank\">に投稿してください</a>。</p>\n\n<h2>関連情報</h2>\n\n<ul>\n <li><a href=\"https://www.github.com/azure/aztk\" target=\"_blank\">Azure Distributed Data Engineering Toolkit をダウンロードして使用Toolkit</a></li>\n <li>Github を使用 <a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">して問題を自由に送信してください</a></li>\n</ul>\n\n<h2>その他の技術情報</h2>\n\n<ul>\n <li>Azure <a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">distributed</a> Data Engineering Azure Batchによって使用される基になる Azure サービスである、次の記事を参照Toolkit</li>\n <li><a href=\"https://azure.microsoft.com/en-us/solutions/high-performance-computing\" target=\"_blank\">Azure でのより汎用的な HPC</a></li>\n</ul>"
