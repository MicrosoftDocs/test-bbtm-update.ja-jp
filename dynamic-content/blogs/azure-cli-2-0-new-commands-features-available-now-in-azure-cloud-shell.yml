### YamlMime:Yaml
ms.openlocfilehash: d0f084bc82f28e9c393c568a54720a6012f79914
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894891"
Slug: azure-cli-2-0-new-commands-features-available-now-in-azure-cloud-shell
Title: 'Azure CLI 2.0: 新しいコマンド、機能、Azure Cloud Shell で利用可能になりました'
Summary: 私たちのブログで既に発表されているように、新機能を追加し、過去数か月間に 2.0 Azure CLI を安定化しています。
Content: "<p>この <a href=\"https://azure.microsoft.com/en-us/blog/author/kamalb/\">ブログ</a>で既に発表されているように、新機能の追加と、過去数か月間の 2.0 Azure CLI の安定化については、継続的な進行を続けています。</p>\n\n<p><a href=\"https://build.microsoft.com/\">Microsoft ビルド 2017</a>では、Azure CLI 2.0 で利用できる新しい機能が発表されました。これには、appservices、cdn、認知サービス、cosmosdb、data lake analytics とストア、dev/test labs、functions、monitor、mysql、postgres、service fabric client、vsts の各コマンドモジュールを使用します。</p>\n\n<p>これらの変更の一部には、既存の CLI コマンドの新しい構文と変更された名前が含まれます。 他のいくつかのリリースでは、以前の CLI コマンドを使用し続けることができますが、その後はこれらのコマンドを廃止し、新しいコマンドの使用を開始する必要があります。 できるだけ早く新しいコマンドに切り替えることをお勧めします。 今後のリリースで削除するコマンドに非推奨の警告を追加しました (すべてが現在 &quot; プレビュー &quot; リリースモードです)。</p>\n\n<h2>新しいインストーラー</h2>\n\n<p>過去2-3 か月間、当社のお客様と Azure CLI 2.0 の新しい開発者からの取り組みが増加しています。これは非常に推進されています。 ほとんどのフィードバックはこれまでに肯定的なものですが、エクスペリエンス &rsquo; が最適ではない分野がいくつかあります。 インストールに関する問題 (特に Windows) は、多くの早期導入により、oft が訴えています。 これに基づいて、Windows 用に Azure CLI 2.0 の MSI インストーラーをリリースするようになりました。 これにより、正しいバージョンの Python とその他の依存関係が適切なフォルダーにインストールされるのが複雑になります。これは、今後のアップグレードや Azure CLI のアンインストールシナリオにも役立ちます。 Mac および Linux では、インストールをシームレスにするために、Curl、Apt、PIP インストーラーが既に用意されています。 Azure CLI 2.0 の最新バージョンをインストールまたはアップグレードする方法の詳細については、更新された <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli\">インストールページ</a> を参照してください。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3ab2d168-7b90-4bd7-bb90-19e789d1d57a.png\"><img alt=\"Installing Microsoft CLI 2.0 for Azure\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9b1c1916-0c69-4c30-83c5-f3919a1466dd.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Azure 用 Microsoft CLI 2.0 をインストールする\" width=\"618\"></a></p>\n\n<p>サポートされている他のプラットフォームについては、今後数か月に多くのネイティブインストーラーをリリースする予定です。</p>\n\n<h3>対話モードと Azure Cloud Shell</h3>\n\n<p>4月前半には、対話モードで 2.0 Azure CLI 実行するスタンドアロンインストールが別途 <a href=\"https://azure.microsoft.com/en-us/blog/announcing-azure-cli-shell-preview-more-azure-cli-2-0-commands-now-generally-available/\">発表</a> されました。 お客様からのフィードバックに基づいて、この機能を Azure CLI 2.0 に直接マージし、Azure CLI 2.0 を対話モードで実行するために個別のインストールを行う必要がないように &rsquo; しました。 対話型 &quot; コマンドを実行 &quot; するだけで、CLI を対話モードで起動できるようになりました。</p>\n\n<pre class=\"prettyprint\">\naz interactive</pre>\n\n<p>その後、Azure CLI 2.0 は独自の対話型シェル内で実行されます。これにより、コマンドドロップダウンと自動キャッシュされた候補が提供され、各コマンドの使用例など、オンザフライのドキュメントと組み合わせて使用できます。 対話モードは、Azure CLI 2.0 &rsquo; s の機能、コマンドの構造、および出力形式を学習する場合に非常に便利です。 これは、(自動化スクリプトを実行するのではなく) 単一のコマンドの実行に対して最適化されています。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9a1e7a14-718e-4c57-a3c4-ce181df42982.jpg\"><img alt=\"Az interactive\" border=\"0\" height=\"419\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b08af13e-9d26-4ce0-92f7-eb79446d9b0a.jpg\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Az interactive\" width=\"737\"></a></p>\n\n<p>対話モードを終了するには、このモードで quit &quot; を実行 &quot; します。</p>\n\n<p>独自のクライアントコンピューターで Azure CLI を実行するだけでなく、Azure 管理ポータルから直接 <a href=\"https://aka.ms/cloudshell\">Azure Cloud Shell</a> に実行することもできます。 Azure Cloud Shell は、Azure リソースを管理するために Microsoft によって管理されるブラウザーベースのシェルエクスペリエンスです。 Cloud Shell は、一般的なコマンドラインツールと共にインストールされ、セッション間でストレージを永続化するために Azure ファイル共有をアタッチします。 これにより、Azure 管理ポータルでログオンしたログイン資格情報を使用して、ブラウザーで直接 CLI 2.0 コマンドを実行できます。 これは、Azure 用に必要なすべてのクライアント側ツールがインストールされているコンピューターへのアクセス準備が整っていない場合 &rsquo; に非常に便利です。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f1e53f4d-c5eb-4006-9f37-eb4f00dd4353.png\"><img alt=\"Azure Cloud Shell from Azure Management Portal\" border=\"0\" height=\"371\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d0cffcef-bb59-453d-a02c-6ecc58a0b24a.png\" style=\"border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Azure 管理ポータルからの Azure Cloud Shell\" width=\"686\"></a></p>\n\n<p>独自の Bash または command.exe 環境で Azure CLI 2.0 をクライアントコンピューターで実行する場合でも、上記のすべてのインストールメカニズムを使用して Azure CLI 2.0 をインストールできます。</p>\n\n<p>Azure CLI 2.0 のこの最新リリースには、多くのパフォーマンス向上が伴います。 一般的に使用される多くのコマンドと使用シナリオについて、時間が大幅に短縮されます。 これは、継続的に作業し、改善を試みる領域です。 そのため、コマンドまたは自動化スクリプトの実行について最適ではない経験がある場合は、お客様からのご意見をお待ちしております。また、使用シナリオ、パターン、構成について詳しくお聞かせください。 に直接メールで azfeedback@microsoft.com お問い合わせください。 また、CLI 内から az フィードバック &quot; コマンドを直接使用 &quot; して、フィードバックを送信することもできます。</p>\n\n<h3>App Services、MySQL、Azure Functions 用の新しいコマンド</h3>\n\n<p>Azure CLI 2.0 は、 <a href=\"https://docs.microsoft.com/en-us/azure/app-service/app-service-value-prop-what-is\">Azure でアプリサービス</a>を作成および管理するための完全な管理機能を提供します。 Web アプリは app service プラン内に作成されます。このプランでは、ホストされているアプリケーションのリソース (場所、ワーカーの数)、SKU (選択した課金プランに基づく) を定義します。 App service プラン内では、複数の web アプリを作成し、それらを管理することができます (開始、停止、更新)。</p>\n\n<p>Azure では、クラウド上で <a href=\"https://docs.microsoft.com/azure/mysql/\">MySQL</a> および <a href=\"https://docs.microsoft.com/azure/postgresql/\">PostgreSQL</a> データベースを実行するための完全に管理されたサービスも提供するようになりました。 また、Azure CLI 2.0 を使用して、これらの構成と管理を行うこともできます。 MySQL を使用して PHP web サイトを Azure にデプロイするために使用できる Azure CLI の2.0 コマンドをいくつか次に示します。</p>\n\n<h4>Azure で MySQL データベースを作成し、ローカルで web アプリで使用する</h4>\n\n<p>まず、Azure サブスクリプションに MySQL データベースと関連付けられているファイアウォール規則を作成します。</p>\n\n<pre class=\"prettyprint\">\n# login to your Azure account from the Azure CLI\naz login  \n\n# select the Azure subscription you want to use in your account\naz account set &ndash;-subscription &ldquo;My Demos&rdquo;  \n\n# create a new resource group in your subscription (or skip this step if\n# using an existing resource group)\naz group create &ndash;-location westus2 &ndash;-name MyResourceGroup\n\n# create a new server in Azure MySQL database within the selected resource\n# group \naz mysql server create &ndash;-name MySQLServer &ndash;-resource-group MyResourceGroup `\n--location westus2 &ndash;-user AdminUser &ndash;-password AdminPassword\n\n# create a new firewall rule for your MySQL database to allow client\n# connections\naz mysql server firewall-rule create &ndash;-name MyFirewallRule &ndash;-server `\nMySQLServer &ndash;-resource-group MyResourceGroup &ndash;-start-ip-address 0.0.0.0 `\n--end-ip-address 255.255.255.255\n</pre>\n\n<p>これで、サーバーの作成時に指定した管理者ユーザー名とパスワードを使用して、コマンドウィンドウからこの MySQL サーバーに接続できるようになりました。 接続したら、mysql コマンドを使用して、MySQL サーバーに新しいデータベースと新しいデータベースユーザーを作成します。 次に、データベースの作成時に指定した接続文字列とデータベースのユーザー名とパスワードを更新することで、Azure MySQL で実行されているこの新しいデータベースを使用するように PHP web アプリを構成できます。 ローカルコンピューターで実行されているアプリは、この時点で Azure MySQL 上のこのデータベースに接続できる必要があります。</p>\n\n<h4>MySQL データベースと共に Azure で web アプリをホストする</h4>\n\n<p>次に、その内部に Azure App Service と Web アプリを作成し、ローカル GIT リポジトリからソースの更新を取得するように設定します。</p>\n\n<pre class=\"prettyprint\">\n# create new app service plan in the selected resource group\naz appservice plan create &ndash;-name MyAppSvcPlan &ndash;-resource-group `\nMyResourceGroup &ndash;-sku FREE\n\n# create a new web app in the above app service plan, set PHP runtime version\n# and configure for local Git deployment (all in one simple command)\naz webapp create -g MyResourceGroup -n MyWebApp --plan MyAppSvcPlan --runtime &quot;php|7.0&quot; --deployment-local-git\n\n# set the deployment user for the web app to deploy it from your local\n# machine using Git\naz webapp deployment user set &ndash;-user-name LocalGitUser &ndash;-password `\nLocalUserPassword\n</pre>\n\n<p>ローカルの Azure MySQL データベースを使用するように Azure web アプリを設定します。</p>\n\n<pre class=\"prettyprint\">\n# update the web app config settings to use MySQL database\naz webapp config appsettings update &ndash;-name MyWebApp &ndash;-resource-group `\nMyResourceGroup &ndash;-settings DB_HOST=MySQLServer.windows.net `\nDB_DATABASE=&rdquo;sampledb&rdquo; DB_USERNAME=&rdquo;dbuser@MySQLServer&rdquo; `\nDB_PASSWORD=&rdquo;dbuser_password&rdquo;\n</pre>\n\n<p>これで、php.ini ファイルと php.ini ファイルを更新することで、この MySql データベースに接続するように PHP web アプリを更新できるようになりました。 新しいアプリケーションキーを生成し、PHP アプリの env 設定に保存します。</p>\n\n<pre class=\"prettyprint\">\n# update app-key with generated application key for your web app on Azure\naz webapp config appsettings update &ndash;-name MyWebApp &ndash;-resource-group `\nMyResourceGroup &ndash;-settings APP_KEY=&rdquo;generated app key&rdquo; APP_DEBUG=&rdquo;true&rdquo;\n</pre>\n\n<p>その後、GIT コマンド (GIT remote および GIT push) を使用して、web アプリを Azure にプッシュし、デプロイすることができます。 これで、web アプリの準備が完了し、Azure で実行できるようになりました。</p>\n\n<p>MySQL を使用して PHP web サイトを Azure アプリ Services にデプロイする方法の詳細な手順については、 <a href=\"https://docs.microsoft.com/azure/app-service-web/app-service-web-tutorial-php-mysql\">この記事</a> を参照してください。</p>\n\n<p>他の CLI コマンドを使用して、app service プランの変更、web アプリのスケール設定、web アプリの開始または停止などを行うことができます。</p>\n\n<h3>Azure CLI 2.0 を使用して Azure Functions を作成する</h3>\n\n<p><a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview\">Azure Functions</a> は、小規模なコード ( &ldquo; 関数 &rdquo; ) をクラウドで簡単に実行するためのソリューションです。 サポートされているさまざまな言語で実行するコードだけを記述し、それをホストして実行するために必要なアプリケーションやインフラストラクチャを気にせずに Azure にデプロイすることができます。 Azure CLI 2.0 を使用すると、コマンドラインを使用してこのコードを簡単にデプロイおよび管理できます。</p>\n\n<p>Azure Functions するためにピースコードを作成してデプロイするには、次の単純で強力なコマンドを使用できます。</p>\n\n<pre class=\"prettyprint\">\naz functionapp create -g MyFunctionRG1 -n myfunction -s myfuncstg -c westus2 &ndash;u https://github.com/mygithubact/azure-func-test.git</pre>\n\n<p>上記のコマンドでは、新しい function app の名前を定義し、リソースグループとストレージアカウントを作成する従量課金プランと共に指定します。 最後に、関数アプリのソースコードがある GIT ベースのリポジトリを直接ポイントすることもできます。 関数が作成され、GIT リポジトリからのソースコードが1回の手順でデプロイされます。</p>\n\n<p>この処理が完了すると、関数を実行する準備が整います。 Azure 管理ポータルに移動し、関数の URL を取得します。この URL をブラウザーまたはクライアント側アプリで直接実行して、関数コードの結果を確認することができます。</p>\n\n<p>&ndash; &rsquo; Azure CLI 2.0 のようなものです。 スマートな既定値を使用して、コマンドを実行するパラメーターの最小数を求め、バックグラウンドで複数の手順を実行します。また、多くのオプションやその他の設定可能なパラメーターを使用して何が起こるかを完全に制御できます。</p>\n\n<h3>Azure CLI 2.0 の使用を今すぐ開始しましょう!</h3>\n\n<p>既存の CLI ユーザーでも、新しい Azure プロジェクト &rsquo; を開始する場合でも、cli を <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli\">直接</a>、または <a href=\"https://portal.azure.com/\">Azure Cloud Shell</a>で簡単に開始できます。 更新された <a href=\"https://docs.microsoft.com/en-us/cli/azure/\">ドキュメントとサンプル</a>を使用して、コマンドラインを学習し、マスターします。</p>\n\n<p>Azure CLI 2.0 はオープンソースであり、 <a href=\"https://github.com/azure/azure-cli\">GitHub</a>にあります。</p>\n\n<p>数か月後に、さらに多くの更新プログラムを &rsquo; 提供します。 それまでの間、お客様のご意見をお待ちしております。 現在 GA リリースになっているコマンドを使用しているお客様は、Azure サポートに問題がないか、azure cli タグを使用して StackOverflow 経由で連絡するか、に <a href=\"mailto:azfeedback@microsoft.com\">azfeedback@microsoft.com</a> 直接お問い合わせください。 また、CLI 内から az フィードバック &quot; コマンドを直接使用 &quot; して、フィードバックを送信することもできます。</p>"
