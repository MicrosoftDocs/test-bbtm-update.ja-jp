### YamlMime:Yaml
ms.openlocfilehash: ec842d5834905246e71557da66957815dc419138
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910409"
Slug: roles-based-access-control-in-mobile-services-and-azure-active-directory-aspx
Title: Mobile Services および Azure Active Directory での Access Control の Roles-Based
Summary: 11月に、Mobile Services の id プロバイダーとして Azure Active Directory (AAD) のプレビューを発表しました。 任務は、企業の開発者が従業員を構築するための簡単なソリューションを提供することでした-...
Content: >-
  11月に、Mobile Services の id プロバイダーとして Azure Active Directory (AAD) のプレビューを <a href="https://weblogs.asp.net/scottgu/archive/2013/11/21/windows-azure-general-availability-release-of-biztalk-services-traffic-manager-azure-ad-app-access-xamarin-support-for-mobile-services.aspx">発表</a>   しました。 この使命は、従業員向けモバイルアプリを構築するための簡単なソリューションを企業の開発者に提供することでした。 基本認証はすばらしい開始ですが、多くの場合、現在のプレビューのお客様は、承認の決定を行うためにユーザーの種類を区別する必要がありました。 ロールベースのアクセス制御 (RBAC) は、ユーザーが保持できるロールにアクセス許可を割り当てることによって、特定のユーザーの特定のクラスが実行できる操作と実行できない境界を適切に定義することを意味します。 さいわいにも、基本的な RBAC を Azure Mobile Services に追加するのは非常に簡単です。この記事では、これを実現する方法について説明します。

  <strong>この記事の残りの部分に従うには、Azure Active Directory 統合のために Mobile Services preview に登録する必要があります。アクセスを希望する場合は、メール MobileServices@microsoft.com でお問い合わせください。</strong>

  <h4> 背景</h4>

  ここでは、販売チーム専用のアプリケーションを開発するとします。 アプリにアクセスするには、ユーザーが会社のディレクトリのメンバーであるだけでなく、sales グループにも割り当てられている必要があります。ここでは、販売チームの認証されたメンバーだけがアプリにアクセスできるようにするために、サーバー側に追加する必要があるロジックを見てみましょう。 (Mobile Services で Azure Active Directory 認証を開始するだけの場合は、この <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-how-to-register-active-directory-authentication/">入門用チュートリアル</a>が役に立つことがあります)。


  基本的なアプローチは、Azure AD テナントのユーザーのセキュリティグループメンバーシップを利用することです。 AAD には、ロールとグループの両方の概念がありますが、現在のシナリオでは、適切なユーザーメンバーシップが既に存在する既存のグループを使用します。 ここでは、Azure AD テナントと同期されるオンプレミスの AD テナントからグループを管理します。 office 365 および Windows Intune のお客様は、オンプレミス Active Directory とのディレクトリ同期を設定することによって、強力な機能を備えていることを証明できます (また、これらのテナントを使用して Mobile Services を構築することもできます)。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1321.RBAC_5F00_1.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1321.RBAC_5F00_1.png" border="0"></a>


  &nbsp;


  今日では、[パスワード同期] オプションを使用しますが、複数のシナリオがサポートされています。 実際には、高度なハイブリッドシナリオで ADFS をポイントするように AAD を設定できます。 これらのオプションを使用して再生する場合は、Windows Server 2012 R2 Datacenter を実行する Azure VM を起動し、Active Directory Domain Services の役割をインストールします。 次に、 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/jj573653.aspx">ディレクトリ同期の手順</a>に従います。

  <h4>グループの作成</h4>

  自分のディレクトリ内で、ユーザー (Alice、Bob、Carol、および Dave) と "Sales" ドメインセキュリティグループを作成したことがわかります。 このグループの Alice と Bob のメンバーを作成しましたが、Carol と Dave はその外部にとどまり、アプリにアクセスすることはできません。 それ以外はすべて既定値です。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1121.RBAC_5F00_2.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1121.RBAC_5F00_2.png" border="0"></a>

  <h4>Azure Mobile Services に接続しています</h4>

  これで、アプリバックエンドの構築を開始する準備ができました。 Azure モバイルサービスでは、提供されている内容に加えて、追加の承認ロジックを使用して、各スクリプトと Api を保護したいと考えています。 いくつかの追加の正常性を高めるために、保護されたエンドポイントごとに "認証されたユーザーのみ" にアクセス許可を設定します。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8156.RBAC_5F00_3.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8156.RBAC_5F00_3.png" border="0"></a>


  複数のスクリプトで実行するロジックを作成しているので、モバイルサービスの <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-store-scripts-source-control/">Git リポジトリ</a>の [共有スクリプト] セクションにコードを配置します。 スクリプト rbac.js に名前を付けています。


  グループメンバーシップを決定するための最初の手順は、AAD graph API にアクセスすることです。 この設定については、このブログの投稿と <a href="https://code.msdn.microsoft.com/windowsazure/How-to-integrate-a-Nodejs-3df9338f#content">このサンプル</a>に記載されています。 作業を開始するには、次のようにします。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/0083.code-1.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/0083.code-1.png" border="0"></a>


  Graph アクセストークンを取得したら、 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn151601.aspx">Ismemberof</a>   graph エンドポイントを呼び出す必要があります。 これにより、指定されたユーザーが特定のグループのメンバーであるかどうかが確認されます (推移的なメンバーシップを含む)。 チェックされているスクリプトからユーザー ID を取得できます。すべてのテーブルスクリプトは、明示的にユーザーオブジェクトを受信します。また、要求. user にアクセスして、カスタム API から取得することもできます。 管理ポータルで便利なグループ ID を取得する必要があります。 Azure AD テナントに移動し、[グループ] タブを開いてグループを選択し、[構成] タブの [オブジェクト ID] をコピーします。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4276.RBAC_5F00_4.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4276.RBAC_5F00_4.png" border="0"></a>


  使いやすくするために、共有スクリプトからの値をフレンドリ名でエクスポートします。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/7723.code-2.png"><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/7723.code-2.png" border="0"></a>


  ここで、AAD ismemberof エンドポイントへの呼び出しをラップする関数を記述します。 既に説明したように、userID と、先ほど取得した groupID の両方が必要です。 要求には、取得したアクセストークンを含める必要もあります。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1805.code-3.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1805.code-3.png" border="0"></a>


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1220.code-4.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1220.code-4.png" border="0"></a>


  プログラミングモデルを少し簡略化し、グループ ID だけでなく Mobile Services user オブジェクト (objectID を取得できる) を必要とします。 ここでは、グラフトークンを取得して呼び出しを行うために、適切にラップします。 実稼働環境では、このトークンを毎回フェッチするのではなく、実際にキャッシュする必要があることに注意してください。 トークンには有効期限の値が含まれています。この値を使用して、新しいトークンをいつフェッチするかを決定できます。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8662.code-5.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8662.code-5.png" border="0"></a>


  これは、共有スクリプトのためのものです。 ここで、RBAC で保護する各スクリプトに対して、いくつかの行を追加し、スクリプトの処理をコールバックで実行する必要があります。 次に、テーブルの読み取り例を示します。


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4530.code-6.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4530.code-6.png" border="0"></a>

  <h4>まとめ</h4>

  これで完了です。 アプリの使用量は、それを必要とする従業員のサブセットに制限されました。 ここから、さまざまな RBAC シナリオの構築を開始できます。 特定のユーザーのクライアント UI を区別する必要がある場合は、メンバーシップの確認をカスタム API として公開し、ログイン直後に呼び出すことができます。


  Azure Active Directory は、グループのサポートによっていくつかのクールな機能を実行しており、管理ポータルから直接行うことができます。 AAD プレミアムユーザーは、新しい <a href="https://blogs.technet.com/b/ad/archive/2014/02/24/more-preview-enhancements-for-windows-azure-ad-premium.aspx">セルフサービスのグループ管理サポート</a>を確認する必要があります。


  エンタープライズモバイルアプリの開発に関心がある場合は、新しい Mobile Services <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started/">.net バックエンドプレビュー</a>もご確認ください。 現時点では、AAD サポートは組み込まれていませんが、心配はありません。 間もなく使用できるようになります。


  ここでも、AAD プレビューへ  <a href="mailto:mobileservices@microsoft.com">mobileservices@microsoft.com</a> の参加に関心がある場合、またはご質問がある場合は、までお問い合わせください。


  その他の機能やシナリオについては、uservoice にお送りください。
