### YamlMime:Yaml
ms.openlocfilehash: 978198b0828b7cd288ee937a87fac0fa0dc4b6cc
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892082"
Slug: streaming-blobs-to-and-from-sql-azure
Title: ストリーミング BLOB のコピー SQL Azure
Summary: '[この記事は、チームによってSQL Azureされました。]アプリケーションのリモート性SQL Azure、大きなバイナリ オブジェクトを処理するためのコーディング ツールボックスにいくつかのテクニックがある場合に役立ちます。'
Content: <p>[この記事は、チームによってSQL Azureされました。]</p><p>SQL Azure のリモート性のため、大きなバイナリ オブジェクト (SQL Azure の <b>varbinary(max)</b> データ型) を処理するためのコーディング ツールボックスにいくつかのテクニックが役立ちます。 これらの 1 つは、一度にデータの一部を読み取りまたは書き込む、大きなバイナリ オブジェクト (BLOB) をストリーム配信できる方法です。</p>  <p>この記事では、 <b>C# コードで記述された SqlStream</b> クラスを提供します。 クラスは、 の <b>varbinary(max)</b> データ型の抽象 <b>Stream</b> クラスを実装SQL Azure。<b>Stream</b> は、.NET CLR で定義されている抽象クラスであり、十分にサポートされ、非常に汎用性があります。 この<b>クラスと</b>一緒に使用する場合SQL Azure SqlStream クラスを使用すると、1 つの BLOB を一度に 1 つのチャンクで操作できます。</p>  <p>提供されている <b>SqlStream クラスを</b> 使用すると、次の処理を実行できます。</p>  <ul>  <li>BLOB データのファイルをコマンド ラインからコピー SQL Azureコピーするコンソール アプリケーションを作成します。BLOB 全体をメモリに読み込む必要があります。 </li>  <li>BLOB を Windows読み取り、BLOB を読み取り、SQL Azureに格納する azure ロールを作成Windows Azure Storage。 </li>  <li>BLOB を SQL Azure から Winform アプリケーションに一度に 1 つのチャンクでストリーム配信します。進行状況バーを含む適切な状態ダイアログを提供できるという利点が追加されています。 </li>  <li>CLR <b>の BinaryWriter</b>、 <b>BinaryReader</b>、 <b>FileStream</b>、 <b>MemoryStream</b> のクラスを使用して、すべてのデータをメモリに読み込む必要なく <b>varbinary(max)</b> データ型の読み取りおよび書き込みを行います。 </li>  </ul>  <p>このブログ記事はシリーズの開始です。今後数日間で、上記のアプリケーションの一部を構築します。 ここでは、SqlStream クラスを使用するサンプル <b>を示</b> します。 SqlStream <b>クラスの </b>独自の .cs ファイルを投稿の下部にダウンロードします。</p>  <h4>サンプル</h4>  <p>最初のサンプルでは<b>、SqlStream </b>クラスを使用して、SQL Azure にデプロイされた Adventure Works データベースからイメージを読み取り、ファイルに保存します。 Adventure Works データベースは、次のデータベース <a href="https://msftdbprodsamples.codeplex.com/releases/view/37304">サンプルSQL Serverダウンロードできます</a>。</p>  <pre class="csharpcode"><span class="kwrd">using</span> (SqlConnection sqlConnection = <span class="kwrd">new</span> SqlConnection(      <span class="str">"Server=tcp:yourServer.database.windows.net;"</span> +       <span class="str">"Database=AdventureWorksLTAZ2008R2;"</span> +      <span class="str">"User ID=yourLogin@yourServer;Password=yourPassword;"</span> +      <span class="str">"Trusted_Connection=False;Encrypt=True;"</span>))  {      sqlConnection.Open();        <span class="kwrd">using</span> (SqlStream sqlStream = <span class="kwrd">new</span> SqlStream(          sqlConnection, <span class="str">"SalesLT"</span>, <span class="str">"Product"</span>,          <span class="str">"ThumbNailPhoto"</span>, <span class="str">"ProductID"</span>, SqlDbType.Int, 884))      {          Byte[] buffer = <span class="kwrd">new</span> Byte[1024];          Int32 read = 0;            <span class="kwrd">using</span> (BinaryReader binaryReader =                           <span class="kwrd">new</span> BinaryReader(sqlStream))          {              <span class="kwrd">using</span> (FileStream fileStream = <span class="kwrd">new</span> FileStream(                  <span class="str">"c:\\temp\\image.jpg"</span>, FileMode.Create))              {                  <span class="kwrd">using</span> (BinaryWriter binaryWriter =                          <span class="kwrd">new</span> BinaryWriter(fileStream))                  {                      <span class="kwrd">do</span>                      {                          read = binaryReader.Read(buffer, 0, 1024);                          binaryWriter.Write(buffer, 0, read);                      } <span class="kwrd">while</span> (read &gt; 0);                  }              }          }      }  }</pre>  <p>    </p>  <p>このサンプルでは<b>、SqlStream</b> クラスを使用して、ファイル内のデータを、SQL Azure にデプロイされた Adventure Works データベースで定義されている <b>varbinary(max)</b> 列に書き込みします。</p>  <pre class="csharpcode"><span class="kwrd">using</span> (SqlConnection sqlConnection = <span class="kwrd">new</span> SqlConnection(      <span class="str">"Server=tcp:yourServer.database.windows.net;"</span> +      <span class="str">"Database=AdventureWorksLTAZ2008R2;"</span> +      <span class="str">"User ID=yourLogin@yourServer;Password=yourPassword;"</span> +      <span class="str">"Trusted_Connection=False;Encrypt=True;"</span>))  {      sqlConnection.Open();        <span class="kwrd">using</span> (SqlStream sqlStream = <span class="kwrd">new</span> SqlStream(sqlConnection,           <span class="str">"SalesLT"</span>,          <span class="str">"Product"</span>,          <span class="str">"ThumbNailPhoto"</span>,           <span class="str">"ProductID"</span>,           SqlDbType.Int, 884))      {          Byte[] buffer = <span class="kwrd">new</span> Byte[1024];          Int32 read = 0;            <span class="kwrd">using</span> (BinaryWriter binaryWriter =                           <span class="kwrd">new</span> BinaryWriter(sqlStream))          {              <span class="kwrd">using</span> (FileStream fileStream = <span class="kwrd">new</span> FileStream(                  <span class="str">"c:\\temp\\image.jpg"</span>,                  FileMode.Open))              {                  <span class="kwrd">using</span> (BinaryReader binaryReader =                           <span class="kwrd">new</span> BinaryReader(fileStream))                  {                      <span class="kwrd">do</span>                      {                          read = binaryReader.Read(buffer, 0, 1024);                          binaryWriter.Write(buffer, 0, read);                      } <span class="kwrd">while</span> (read &gt; 0);                  }              }          }      }  }</pre>  <p>    </p>  <h4>&nbsp;</h4>  <h4>まとめ</h4>  <p>質問、懸念事項、コメントはありますか? 以下に投稿すると、対処を試みることができます。</p>
