### YamlMime:Yaml
ms.openlocfilehash: a331c84b75a8ba6ca790086b97d5c31d6257b234
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895378"
Slug: minecraft-earth-and-azure-cosmos-db-part-1-extending-minecraft-into-our-real-world
Title: 'Minecraft地球と Azure Cosmos DB の第 1 部: Minecraftの世界への拡張'
Summary: この投稿は、組織が Azure Cosmos DB を使用して実際のニーズを満たす方法と、それが実際に生み出している違いについて、2 部構成のシリーズのパート 1 です。
Content: >-
  <p><i>この投稿は、組織が Azure Cosmos DB&rsquo; を使用して実際のニーズを満たす方法と、組織に対する違いについて、2 部構成のシリーズのパート 1 です。パート 1 では、Minecraft Earth のサービス開発者が Azure Cosmos DB&rsquo;&mdash; を選ぶという課題と、それを使用して世界中のすべてのプレーヤーが実行したほぼすべてのアクションを超低遅延でキャプチャする方法について説明します。パート <a href="https://azure.microsoft.com/blog/minecraft-earth-and-azure-cosmos-db-part-2-delivering-turnkey-geographic-distribution" target="_blank">2 では</a>、&rsquo;ソリューションのワークロードと、Azure Minecraft DB 上に構築することにより、Earth サービス開発者がどのようにメリットを得たCosmosします。</i></p>


  <h2>世界を現実Minecraft世界に拡張する</h2>


  <p>自分&rsquo;でプレイしていない場合でもMinecraftゲームについて&rsquo;聞いたことがあるでしょう。 これは&rsquo;、2011 年から 1 億 7,600 万部を超える売り上がりを見た、最も売れたビデオ ゲームです。 現在、Minecraft には 1 億 1,200&rsquo; 万人を超える月間プレーヤーがいます。このプレーヤーは、生素材を発見して収集し、ツールを作り、ゲームのイマーシブで手続き的に生成された <a href="https://www.engadget.com/2015/03/04/how-minecraft-worlds-are-made/" target="_blank">3D</a> ワールドで構造や地球を構築できます。 ゲーム モードに応じて、プレーヤー&mdash;はコンピューターによって制御された敵を相手にし、他のプレーヤーと協力して&mdash;競争することもできます。</p>


  <p>2019 年 5 月、Microsoft は、2019 年 12 月に世界規模のロールアウトを開始した Minecraft Earth の今後のリリースを発表しました。 Minecraft Minecraft 地球では、Minecraft の前のゲームとは異なり、Minecraft Earth は、拡張現実 (AR) の力を通じて、プレイヤーが現実世界内の Minecraft の世界を体験することで、全く新しいレベルにまで上がっています。</p>


  <p>地球Minecraftでは、&mdash;周囲の世界と深く統合されているのに、このエクスペリエンスはすぐになじみがあります。 ただし、Microsoft の Minecraft チームの開発者の場合、Minecraft Earth&mdash; の&mdash;配信には、ゲームをサポートするために必要な権限のあるバックエンド サービスが特に用意されている場合は、完全に新しい何かを構築する必要があります。</p>


  <p>Minecraft Earth サービス開発チームのシニア ソフトウェア エンジニアである Nathan Sosn engineere 氏は、次の説明を行います。</p>


  <p style="margin-left: 40px;"><em>&ldquo;vanilla Minecraftでは、独自のサーバーをホストすることもできますが、一元化されたサービス機関はありません。Minecraftは&mdash;&lsquo;&rsquo;&rsquo;、一元化された権限を持つサービスに基づいており、このサービスは、私たちがこの地物用に構築する必要があった最初の重Minecraftしました。&rdquo;</em></p>


  <p>&rsquo;このケース スタディでは、Minecraft Earth&mdash; サービス開発者が必要なことを提供する際に直面した課題と、それらのニーズを満たすために Azure Cosmos DB を使用した方法について説明します。</p>


  <h2>技術的な課題: ゲーム内のラグを回避する</h2>


  <p>iOS ベースMinecraft Android ベースの AR 対応デバイスで実行される Minecraft Earth クライアント内では、プレーヤーが実行するほぼすべてのアクションによって、コア Minecraft Earth サービスへの書き込みになります。 各書き込みは REST POST であり、ゲーム内で顕著な遅延が発生しないように、すぐに受け入れて確認する必要があります。</p>


  <p style="margin-left: 40px;"><em>&ldquo;サービスの観点からは、Minecraft書&rdquo;き込みと中待機時間の読み取りが必要な場合、Sosn perspectivee について説明します。 &ldquo;&mdash;&rsquo;&rsquo;書き込みは高速である必要があります。たとえば、プレーヤーがリソースをタップしてリソースを表示するときに、対応する REST 要求が処理されている間にビジュアルをハングしたくない場合など、クライアントごとに確認が必要な場合などです。サービスの背後にあるバッキング モデルを読み取り用に更新できるまで、クライアント側シミュレーションを使用できるので、中待機時間の読み取りは許容されます。&rdquo;</em></p>


  <p>課題を複雑にするために、Minecraft Earth サービス開発者は、プレーヤーの場所に関係なく、低待機時間の書き込みを確保する&rsquo;必要がありました。 これには、Minecraft Earth が提供される各地域内の複数の場所でサービスのコピーを実行する必要がありました。また、Minecraft Earth クライアントをサービスがデプロイされている最も近い場所にルーティングする組み込みのインテリジェンスも必要でした。</p>


  <p style="margin-left: 40px;"><em>&ldquo;米国東部と西の間の一般的なネットワーク待機時間は 70 ~ 80 ミリ秒&rdquo;です。Sosn weste は言います。 &ldquo;ニューヨークのプレーヤーがサンフランシスコで実行されているサービスに依存する必要がある場合、またはその逆の場合、ゲーム内のラグは許容されません。同時に、このゲームは Minecraft Earthmeaning&mdash; と呼ばれるので、サンフランシスコとニューヨークの選手が同じゲーム内エクスペリエンスを共有できる必要があります。これをすべて実現するには、各&mdash;&mdash;地域内の複数の地理的に分散したデータセンターにサービスとそのデータをレプリケートする必要があります。&rdquo;</em></p>


  <h2>ソリューション: Azure Cosmos DB に基づくイベント ソーシング パターン</h2>


  <p>技術的な要件を満たすために、Minecraft Earth サービス開発者は、Azure Cosmos DB <a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing" target="_blank"></a> に基づいてイベント ソーシング <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/introduction" target="_blank">パターンを実装しました</a>。</p>


  <p style="margin-left: 40px;"><em>&ldquo;最初は Azure Table Storage&rdquo; を使用して追加専用のイベント ログを格納する方法を検討しましたが、読み取りおよび書き込みの待機時間に対する SLA が不足し、それが実現不能であると Sosn appende &ldquo; は述べています。最終的には、読み取りと書き込みの両方に 10&rdquo; ミリ秒の SLA と、各地域内の複数の場所でサービスをレプリケートするために必要なグローバル分散とマルチマスター機能が提供される Azure Cosmos DB を選択しました。 </em></p>


  <p>イベント ソーシング パターンでは、データの現在の状態を格納する代わりに、Minecraft Earth&rsquo; サービスは、Azure Cosmos DB&mdash; に基づく追加専用のデータ ストアを使用して、この場合にデータに対して実行された一連のアクションをすべて記録し、プレーヤーによって実行される各ゲーム内アクションにマッピングします。 正常な書き込みの即時受信確認がクライアントに返された後、追加専用イベント ストアをサブスクライブするキューは後処理を処理し、収集されたイベントを <a href="https://azure.microsoft.com/en-us/services/storage/blobs" target="_blank">Azure Blob Storage</a> に保持されているドメイン状態に非同期的に適用します。 さらに最適化するために、Minecraft Earth&mdash;&mdash; 開発者はイベント ソーシング パターンをドメイン駆動設計と組み合わせ、インベントリ項目、文字プロファイル、アチーブメントなどの各アプリ ドメインに独自のイベント ストリームを提供しました。</p>


  <p style="margin-left: 40px;"><em>&ldquo;データを&rdquo;追加専用ログに格納されているイベントのストリームとしてモデル化し、さまざまなクライアント ビューを駆動するために使用されるメモリ内モデルの状態を変更しました。Sosn国&ldquo;語は述べています。キャッシュされた状態は Azure Blob Storage に保持されます。読み取りには十分な速度であり、Azure Cosmos DB の要求ユニット コストを最小限に抑えるのに役立ちます。多くの点で、&rsquo;Azure Cosmos DB で行ったことは&rsquo;、本当に回復力のある書き込みキャッシュの構築に似たものがあります。&rdquo;</em></p>


  <p>次の図は、Azure Cosmos DB に基づくイベント ソーシング パターンを示しています。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/26f4e883-2dd4-43eb-843b-46c0cc30b1f4.png"><img alt="Event sourcing pattern based on Azure Cosmos DB workflow diagram." border="0" height="534" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dfd8c989-e0f7-4554-8e02-d4fbc1046c4f.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Cosmos DB ワークフロー図に基づくイベント ソーシング パターン。" width="634"></a></p>


  <h2>Azure Cosmos DB を配置する</h2>


  <p>Azure Cosmos DB を使用するには、開発者がいくつかの設計上の決定を行う必要があります。</p>


  <p><b>Azure Cosmos DB API。</b> 開発者は、Azure Cosmos DB Core (SQL) API を使用することを選択しました。これは、最適なパフォーマンスと最も使いやすさと、他の必要な機能が提供されたためです。</p>


  <p style="margin-left: 40px;"><em>&ldquo;システムをゼロ&rdquo;から構築していたので、既存のコードの移行に役立つ互換性レイヤーは必要ない、と Sosn migratee は説明します。 &ldquo;さらに、一部の Azure Cosmos DB&mdash; 機能は、<a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.cosmos.transactionalbatch?view=azure-dotnet" target="_blank">コア</a>&mdash; (SQL) API でのみサポートされています。さらに利点として、コア (SQL) API は非常に直感的でした。チームは一般的にSQL慣れ親しんだのでです。&rdquo;</em></p>


  <p>詳細 <a href="https://devblogs.microsoft.com/cosmosdb/introducing-transactionalbatch-in-the-net-sdk/" target="_blank">については、「.NET SDK での TransactionalBatch</a> の導入」を参照してください。</p>


  <p><b>パーティション キー。</b> 開発者は最終的に、ユーザーに基づいて Azure Cosmos DB 内でデータを論理的にパーティション分割することを決定しました。</p>


  <p style="margin-left: 40px;"><em>&ldquo;&mdash;&mdash;当初はユーザーとドメインにデータをパーティション分割しました。インベントリ項目や実績である例では、この内訳が細かく、Azure Cosmos DB&rdquo; 内のデータベース トランザクションを使用してその可能性を完全に引き出すのを妨げる結果が見つかりました。Sosn prevente は言います。&rdquo;</em></p>


  <p><b>整合性レベル。</b> <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels" target="_blank">Azure Cosmos DB</a> でサポートされている 5 つの整合性レベルの中で、開発者はセッションの整合性を選択しました。これは、データが適切に書き込まれるように、重い <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/database-transactions-optimistic-concurrency" target="_blank">etag</a> チェックと組み合わされました。</p>


  <p style="margin-left: 40px;"><em>&ldquo;&rdquo;これは、ログの末尾へのポインターとして機能するヘッド ドキュメントを含む追加専用ログとしてモデル化されたデータを格納する方法が理由で機能します。Sosn、sosn、 &ldquo;データベースへの書き込みには、ヘッド ドキュメントとその etag の読み取り、N+1 ログ ID の派生、および以前に読み取った etag を使用してヘッド ポインターを上書きし、ログ エントリ用の新しいドキュメントを作成するトランザクション バッチ操作が作成されます。ログが既に書き込まれた可能性が低い場合、etag チェックと、既に存在するドキュメントを作成しようとすると、トランザクションが失敗します。これは、別の要求が&lsquo;&rsquo;書き込みに勝ったかどうか、または要求が少し古いデータを読み取ったかどうかに関係なく発生しました。&rdquo;</em></p>


  <p>この<a href="https://azure.microsoft.com/blog/minecraft-earth-and-azure-cosmos-db-part-2-delivering-turnkey-geographic-distribution" target="_blank">シリーズのパート 2</a><strong> </strong>&rsquo;では、現在のワークロードのソリューションと、Minecraft Earth サービス開発者が Azure Cosmos DB 上にソリューションを構築する利点を確認します。</p>


  <h2>概要 Azure Cosmos DB を使用する</h2>


  <ul>
      <li><a href="https://azure.microsoft.com/en-us/services/cosmos-db/" target="_blank">Azure Cosmos DB にアクセスします</a>。</li>
      <li><a href="https://azure.microsoft.com/en-us/solutions/gaming/" target="_blank">Azure for Gaming の詳細を確認してください</a>。</li>
  </ul>
