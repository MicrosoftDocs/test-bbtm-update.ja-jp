### YamlMime:Yaml
ms.openlocfilehash: 230f507223c81c881c5632c5b8d71ee7b354c7d4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891425"
Slug: perform-advanced-analytics-on-application-insights-data-using-jupyter-notebook
Title: Jupyter Notebook を使用して Application Insights データに対して高度な分析を実行する
Summary: テレメトリデータを活用し、Azure アプリケーションの動作をより適切に監視するために、Application Insights の機能を拡張する Jupyter Notebook テンプレートを用意することをお勧めします。
Content: >-
  <p>テレメトリデータを活用し、Azure アプリケーションの動作をより適切に監視するために、Application Insights の機能を拡張する<a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/template.ipynb" target="_blank">Jupyter Notebook テンプレート</a>を用意することをお勧めします。 問題が発生したときに Application Insights ポータルでアドホッククエリを作成する代わりに、テレメトリデータを定期的にクエリして高度な分析を実行し、派生したデータを監視およびアラートの Application Insights に送信する Jupyter Notebook を作成できるようになりました。 Jupyter Notebook は、スケジュールに従って、または webhook 経由で Azure Web ジョブを使用して実行できます。</p>


  <p>この方法では、クエリ言語または制限の制約を超えてテレメトリデータを操作および分析できます。 既存のアラートシステムを利用して、生のインストルメンテーションデータではなく、新しく派生したデータを監視することができます。 派生データは、根本原因分析のために他のメトリックと関連付けたり、機械学習モデルのトレーニングに使用したりすることもできます。 このブログ投稿では、テレメトリデータに対して高度な分析を実行するために、このテンプレートを運用するためのステップバイステップガイドを紹介し、実装例を紹介します。</p>


  <h2>Jupyter Notebook の作成</h2>


  <p><a href="https://notebooks.azure.com/">新しいノートブックを作成する</a> か <a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/template.ipynb">、テンプレートを複製</a>します。 Jupyter ではさまざまなプログラミング言語がサポートされていますが、このブログの投稿では、Python 2.7 の高度な分析の実行に焦点を当てています。</p>


  <h2>Application Insights からのテレメトリデータのクエリ</h2>


  <p>Application Insights リソースからのテレメトリデータを照会するには、アプリケーション ID と API キーが必要です。 どちらも、Application Insights ポータルの [ <em>API アクセス</em>] ブレードと [<em>構成</em>] の下にあります。</p>


  <pre class="prettyprint">

  !pip install --upgrade applicationinsights-jupyter


  from applicationinsights_jupyter import Jupyter


  API_URL = &quot;https://api.aimon.applicationinsights.io/&quot;

  APP_ID = &quot;REDACTED&quot;

  API_KEY = &quot;REDACTED&quot;

  QUERY_STRING = &quot;customEvents\
        | where timestamp &gt;= ago(10m) and timestamp &lt; ago(5m)\
        | where name == &#39;NodeProcessStarted&#39;\
        | summarize pids=makeset(tostring(customDimensions.PID)) by cloud_RoleName, cloud_RoleInstance, bin(timestamp, 1m)&quot;

  jupyterObj = Jupyter(APP_ID, API_KEY, API_URL)

  jupyterObjData = jupyterObj.getAIData(QUERY_STRING)

  </pre>


  <p><a href="https://github.com/jacobmsft/ApplicationInsights_Jupyter">API</a>にアクセスして詳細情報を取得します。</p>


  <h2>派生データを Application Insights に返信する</h2>


  <p>Application Insights リソースにデータを送信するには、インストルメンテーションキーが必要です。 これは Application Insights ポータルの [<em>概要</em>] ブレードで確認できます。</p>


  <pre class="prettyprint">

  !pip install applicationinsights


  from applicationinsights import TelemetryClient


  IKEY = &quot;REDACTED&quot;

  tc = TelemetryClient(IKEY)


  tc.track_metric(&quot;crashCount&quot;, 1)

  tc.flush()

  </pre>


  <p><a href="https://github.com/Microsoft/ApplicationInsights-Python">API</a>にアクセスして詳細情報を取得します。</p>


  <h2>Azure Web ジョブを使用して Notebook を実行する</h2>


  <p><a href="https://docs.microsoft.com/en-us/azure/app-service-web/websites-webjobs-resources">Azure Web ジョブ</a>を使用して notebook を実行するには、notebook、その依存関係、および Jupyter サーバーを<a href="https://azure.microsoft.com/en-us/services/app-service/">Azure App Service</a>コンテナーにアップロードする必要があります。</p>


  <h3>必要なリソースを準備する</h3>


  <ol>
      <li>Notebook をコンピューターにダウンロードします。</li>
      <li>Anaconda を使用して Jupyter サーバーを<a href="https://www.continuum.io/downloads">インストール</a>します。</li>
      <li>コンピューターで Notebook を<a href="https://nbconvert.readthedocs.io/en/latest/execute_api.html">実行</a>してすべての依存関係をインストールします。 App Service コンテナーでは、モジュールが自動的にインストールされるディレクトリを変更することはできません。</li>
      <li>App Service container &rsquo; s ディレクトリを反映するように、依存関係のパスを更新します。 Anaconda2/Scripts/jupyter-.py の最初のスクリプトをに置き換えます。<br>
      #!D:/home/site/wwwroot/App_Data/resources/Anaconda2\python.exe</li>
      <li>Pip コマンドを除く、ノートブックのローカルコピーを更新します。</li>
      <li>次のスクリプトを含む実行 .cmd ファイルを作成します。<br>
  D:\home\site\wwwroot\ App_Data \resources\Anaconda2\Scripts\jupyter nbconvert--Notebook 名 &gt; を実行 &lt; します。 ip/b</li>

  </ol>


  <h3>FTP リソース</h3>


  <ol>
      <li>デプロイ資格情報と FTP 接続情報を<a href="https://docs.microsoft.com/en-us/azure/app-service-web/app-service-deploy-ftp">取得</a>します。</li>
      <li>Anaconda2 フォルダーを FTP App Service コンテナー内の新しいディレクトリに追加する<br>
  D:\home\site\wwwroot\ App_Data \ リソース</li>

  </ol>


  <h3>Notebook を運用化</h3>


  <ol>
      <li>新しい Azure Web ジョブを<a href="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-create-web-jobs">作成</a>し、Notebook をアップロードして、.cmd ファイルを実行します。</li>
  </ol>


  <h2>実装例</h2>


  <p>このテンプレートは、独自のサービスの1つであるテレメトリデータに対して高度な分析を実行してきました。</p>


  <p>このサービスでは、クラウドインスタンスごとに4つの Node.js プロセスを実行します。 根本原因を分析すると、Node.js のクラッシュが発生する可能性があります。 ただし、SDK の制限により、クラッシュが発生したときにログを記録することはできません。 そのため、既存のテレメトリデータを分析して Node.js のクラッシュを検出する Jupyter Notebook を作成しました。</p>


  <p>新しい Node.js プロセスがクラウドインスタンスで開始されると、カスタムイベント <em>Nodeprocessstarted</em> ログに記録されます。 通常、4つのプロセスはすべて、8-11 時間ごとにリサイクルされるとほぼ同時に開始されます。 そのため、 <em>Nodeprocessstarted</em> イベントが異なる頻度で発生していることがわかった場合は、新しいプロセスが最近クラッシュしたプロセスの置き換えを開始したと推測できます。</p>


  <p>この実装された<a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/nodecrashdetection.ipynb">テンプレート</a>では、テレメトリデータを照会し、データを分析し、分析を強化するためのテレメトリデータを照会してから、派生したデータを Application Insights に送信する方法を説明します。</p>


  <p>&nbsp;</p>


  <p>このテンプレートは、テレメトリデータから実用的な洞察を引き出し、Azure アプリケーションの管理を強化するのに役立ちます。</p>
