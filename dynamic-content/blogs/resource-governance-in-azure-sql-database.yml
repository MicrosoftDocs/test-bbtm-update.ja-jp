### YamlMime:Yaml
ms.openlocfilehash: 6f699a1d0f29f815407599382ee400d5fe4ebb10
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910441"
Slug: resource-governance-in-azure-sql-database
Title: Azure SQL Database でのリソース ガバナンス
Summary: このブログ記事では、Azure SQL Database アーキテクチャ シリーズを続けて、サービスを最初に作成したアーキテクトによる説明に従って、サービスの実行方法に関する背景を共有しています。
Content: >-
  <p>このブログ記事では、Azure SQL Database アーキテクチャ シリーズを続けて、サービスを最初に作成したアーキテクトによる説明に従って、サービスの実行方法に関する背景を共有しています。 最初の 2 つの<a href="https://azure.microsoft.com/en-us/blog/data-integrity-in-azure-sql-database/" target="_blank">投稿では、</a>データの整合性とAzure SQL Databaseデータベース管理者のクラウド速度の向上SQL Server<a href="https://azure.microsoft.com/en-us/blog/how-cloud-speed-helps-sql-server-dbas/" target="_blank">説明しました</a>。 このブログ記事では、ガバナンスを使用してバランスの取れたシステムを実現する方法について説明します。</p>


  <h2>割り当て済みリソースと管理リソース</h2>


  <p>特定の Azure SQL Database サービス レベルを選択すると、CPU、ストレージの種類、ストレージの制限、メモリなどの複数のディメンションにわたって、割り当てられたリソースの定義済みのセットを選択します。 アプリケーションのワークロードの需要を満たすサービス レベルを選択するのが理想的ですが、サイズを超える場合やサイズが小さい場合は、それに応じて簡単にスケールアップまたはスケールダウンできます。</p>


  <p>サービス レベルを選択するごとに、本質的にリソース使用量の境界または制限のセットも選択します。 たとえば、8 コアのビジネス クリティカルな Gen 4 データベースには、次のリソース割り当てと関連する制限があります。</p>


  <table border="0" cellpadding="2" cellspacing="0">
   <tbody>
    <tr>
     <td valign="top"><strong>コンピューティング サイズ</strong></td>
     <td valign="top"><strong>BC_Gen4_8</strong></td>
    </tr>
    <tr>
     <td valign="top">メモリ (GB)</td>
     <td valign="top">56</td>
    </tr>
    <tr>
     <td valign="top">インメモリ OLTP ストレージ (GB)</td>
     <td valign="top">8</td>
    </tr>
    <tr>
     <td valign="top">ストレージの種類</td>
     <td valign="top">ローカル SSD</td>
    </tr>
    <tr>
     <td valign="top">データの最大サイズ (GB)</td>
     <td valign="top">650</td>
    </tr>
    <tr>
     <td valign="top">最大ログ サイズ (GB)</td>
     <td valign="top">195</td>
    </tr>
    <tr>
     <td valign="top">TempDB のサイズ (GB)</td>
     <td valign="top">256</td>
    </tr>
    <tr>
     <td valign="top">IO 待機時間 (概算)<br>
     <br>
  ターゲット IOPS (64 KB)</td>
     <td valign="top">1 ~ 2 ミリ秒 (書き込み)<br>
  1 ~ 2 ミリ秒 (読み取り)<br>

  40000</td>
    </tr>
    <tr>
     <td valign="top">ログのレート制限 (MBps)</td>
     <td valign="top">48</td>
    </tr>
    <tr>
     <td valign="top">最大同時実行ワーカー (要求) 数</td>
     <td valign="top">1600</td>
    </tr>
    <tr>
     <td valign="top">最大同時ログイン (要求) 数</td>
     <td valign="top">1600</td>
    </tr>
    <tr>
     <td valign="top">許可される最大セッション数</td>
     <td valign="top">30000</td>
    </tr>
    <tr>
     <td valign="top">レプリカの数</td>
     <td valign="top">4</td>
    </tr>
   </tbody>
  </table>


  <p>レベル内のリソースを増やすと、特定のしきい値までの制限の変更が表示される場合があります。 さらに、これらの制限は時間の間に自動的に緩和できますが、お客様に対するペナルティなしでさらに制限される可能性はありません。</p>


  <p>サービス レベル別のリソース割り当てと、関連するリソース ガバナンスの制限を次のリソースに文書化します。</p>


  <ul>
   <li><strong>仮想コア モデル</strong>: <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-single-databases" target="_blank">1 Azure SQL Databaseの仮想コア</a>ベースの購入モデルの制限を設定する</li>
   <li><strong>DTU モデル: DTU</strong> ベースの購入モデル <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-single-databases" target="_blank">を使用した単一データベースのリソース制限</a></li>
  </ul>


  <p>サービス レベル別のリソース割り当ては、支払いを多くする分、リソースの取得量が多く、リソース ガバナンスと境界が従来、顧客に対する主題の明確化が少なかったため、お客様には直感的です。 これらの管理メカニズムに関する透明性が高まっていますが、サービスとしてのデータベース (DBaaS) のリソース ガバナンスの背後にあるより広範な目的を理解することが重要です。 ここでは、バランスの&rsquo;取れたシステムを実現するために必要なことについて次に説明します。</p>


  <h2>サービスとしてのバランスの取れたデータベースの提供 (DBaaS)</h2>


  <p>このブログ記事のコンテキストでは、ボトルネックが発生することなくすべてのリソースが十分に最大化されている場合、システムをバランスの取れたシステムとして定義します。 このバランスには、CPU、IO&rsquo;、メモリ、アプリケーションのワークロード特性と組み合わせされたネットワーク、最大許容待機時間、必要なスループットなどのリソースの相互運用が含まれます。</p>


  <p>このAzure SQL Database、バランスの取れたシステムのビューは、明確な DBaaS 要件と顧客の期待を満たすために、広範で包括的な視点を取る必要もあります。</p>


  <p>Azure SQL Database、お客様に次の追加の利点を提供する目的で、使い慣れた一般的なデータベース エコシステムが提供されます。</p>


  <ul>
   <li><strong>スケールの弾力性</strong> &ndash; お客様は、アプリケーションのスループット要件に基づいてデータベースをプロビジョニングできます。 スループット要件が変化すると、顧客は簡単にスケールアップまたはスケールダウンできます。</li>
   <li><strong>任意の時点へのセルフサービス復元による自動バックアップ</strong> &ndash; データベース バックアップはサービスによって自動的に処理され、ログ バックアップは一般に 5 分から 10 分ごとに実行されます。</li>
   <li><strong></strong> &ndash;高可用性Azure SQL Databaseは、インフラストラクチャ障害に対する可用性ゾーンの回復性によって、最大 99.995% の差別化された可用性 SLA をサポートします。</li>
   <li><strong>予測可能なパフォーマンス</strong> &ndash; 同じプロビジョニングされたリソース レベルの顧客は、常に同じワークロードで同じパフォーマンスを得る。</li>
   <li><strong>予測可能なスケーラビリティ</strong> &ndash; ハイパースケール サービス レベルを使用しているお客様は、検証可能なスケーリング SLA によってサポートされるオンライン スケーリング操作の予測可能な待機時間に依存できます。 これにより、お客様は信頼性の高いツールを使用して対応し、コンピューティング容量の需要を時間に応じて変更できます。</li>
   <li><strong>自動アップグレード</strong> &ndash;Azure SQL Databaseは、透過的なハードウェア、ソフトウェアのアップグレード、および定期的で軽量なソフトウェア更新プログラムを容易にするように設計されています。</li>
   <li><strong>グローバルスケール</strong> &ndash; お客様は、世界中にデータベースをデプロイし、地理的に分散したデータベース レプリカを簡単にプロビジョニングして、リージョンのデータ アクセスとディザスター リカバリー ソリューションを実現できます。 これらのソリューションは、強力な geo レプリケーションとフェールオーバー SLA によってサポートされています。</li>
  </ul>


  <p>Azure SQL Databaseエンジニアリング チームの場合、顧客にバランスの取れた DBaaS システムを提供する方法は、購入した CPU、IO、メモリ、ストレージを提供する以外に十分です。 また、前述のすべての要因を尊重し、これらの主要な DBaaS 要因と全体的なパフォーマンス要件のバランスを取る必要があります。</p>


  <p>次の図は、サービス内で管理されている主要なリソースの一部を示しています。</p>


  <p align="center"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9f5f838e-3a80-478a-a23f-37250dbdd456.png"><img alt="Image list of governed resources in Azure SQL Database" border="0" height="326" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e9e7f03b-c923-47e8-be9b-723ba5f9dbba.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="684"></a> Azure SQL Database図 1: Azure SQL Database の管理された<em>リソースの画像一覧</em></p>


  <p>このバランスの取れたシステムを、時間の流れたサービスを継続的に改善できるような方法で提供する必要があります。 継続的な改善のためのこの要件は、必要なレベルのコンポーネントの抽象化と過剰なガバナンスを意味します。 ガバナンスはAzure SQL Database、スケール、高可用性、回復可能性、ディザスター リカバリー、予測可能なパフォーマンスに関する要件のバランスを適切に確保します。</p>


  <p>例として、&rsquo;<a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-resource-limits-database-server#transaction-log-rate-governance" target="_blank">バランスの取</a>れた DBaaS を提供するために積極的に管理する理由の例として、トランザクション ログ レート ガバナンスを使用します。 トランザクション ログ ガバナンスは、一括挿入Azure SQL Database、インデックス作成などのワークロードの高いインジェスト率を制限するために使用される、トランザクション ログ ガバナンスのプロセスです。</p>


  <p>この種類のアクティビティを管理する理由 次のディメンションと、トランザクション ログ生成率の影響を考慮してください。</p>


  <table border="1" cellpadding="0" cellspacing="0" style="width: 907px; height: 290px;">
   <tbody>
    <tr>
     <td valign="top">
     <p><b>ディメンション</b></p>
     </td>
     <td valign="top">
     <p><b>ログ生成率の影響</b></p>
     </td>
    </tr>
    <tr>
     <td valign="top">
     <p>データベースの回復性</p>
     </td>
     <td valign="top">
     <p>トランザクション ログのバックアップ頻度に基づいて、可能なデータ損失の最大時間を保証します。</p>
     </td>
    </tr>
    <tr>
     <td valign="top">
     <p>高可用性</p>
     </td>
     <td valign="top">
     <p>ローカル レプリカは、SLA に合わせて回復性と可用性 (アップタイム) 範囲内に維持する必要があります。</p>
     </td>
    </tr>
    <tr>
     <td valign="top">
     <p>障害復旧</p>
     </td>
     <td valign="top">
     <p>グローバル分散レプリカは、データ損失を最小限に抑える回復可能性の範囲内に維持する必要があります。</p>
     </td>
    </tr>
    <tr>
     <td valign="top">
     <p>予測可能なパフォーマンス</p>
     </td>
     <td valign="top">
     <p>ログ生成率は、システムを過剰に飽和状態にしたり、予測できないパフォーマンスを生み出したりしなけりする必要があります。</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>ログ速度をさまざまなシナリオで実現し維持できるとともに、ユーザー負荷への影響を最小限に抑えながらシステム全体の機能を維持できように、ログ速度が設定されます。 ログ レート ガバナンスにより、トランザクション ログ バックアップが公開された回復可能性 SLA 内に保持され、セカンダリ レプリカでの過剰なバックログが防止されます。 CPU、メモリ、データ IOP など、他の管理領域全体で同様の影響と相互依存関係があります。</p>


  <h2>リソースを管理するAzure SQL Database</h2>


  <p>ガバナンスには多面的なアプローチを使用しますが、現在では主に、ジョブ オブジェクト、ファイル サーバー Resource Manager (FSRM)、および SQL Server Resource Governor という 3 つの主要なテクノロジに依存しています。</p>


  <h3>ジョブ オブジェクト</h3>


  <p>Azure SQL Databaseデータベースの全体的なパフォーマンスを管理するための複数のメカニズムを利用します。 利用する機能の 1 つは、Windows オブジェクトを使用<a href="https://docs.microsoft.com/en-us/windows/desktop/procthread/job-objects#job-limits-and-notifications" target="_blank"></a>することで、プロセスのグループを 1 つの単位として管理および管理できます。&nbsp;&nbsp;この機能を使用して、ファイルの仮想メモリのコミット、ワーキング セットの上限、CPU アフィニティ、レート 上限を管理します。 新しいガバナンス機能は、チームがリリースWindowsにオンボードします。</p>


  <h3>ファイル ソース Resource Manager (FSRM)</h3>


  <p>Windows Server で使用できます。<a href="https://docs.microsoft.com/en-us/windows-server/storage/fsrm/fsrm-overview" target="_blank">FSRM</a> を使用してファイル ディレクトリのクォータを管理します。</p>


  <h3>SQL Server Resource Governor</h3>


  <p>1 SQL Serverインスタンスには、ユーザー要求やシステム タスクなど、リソースの複数のコンシューマーが含まれます。 <a href="https://docs.microsoft.com/en-us/sql/relational-databases/resource-governor/resource-governor?view=sql-server-2017" target="_blank">SQL Server Resource Governor</a>リソースの公平な共有を確保し、制御外の要求が他の要求を使い切るのを防ぐために導入されました。 この機能は SQL Server 年前に導入され、SQL Server インスタンスの CPU、物理 IO、メモリなど、いくつかのリソースを管理するために拡張されました。 Azure SQL Database では、この機能を使用して、ローカルとリモートの両方の IOP、CPU の上限、メモリ、ワーカー数、セッション数、メモリ許可の制限、同時要求の最大数を管理できます。</p>


  <p>3 つの主要なテクノロジを超えて、トランザクション ログレートを管理するための追加 <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-resource-limits-database-server#transaction-log-rate-governance" target="_blank">のメカニズムも作成しました</a>。</p>


  <h2>安全で予測可能な操作の構成</h2>


  <p>データベース ファイルの設定、最大メモリ、並列処理の最大次数など、十分に調整されたオンプレミスの SQL Server インスタンス用に構成する必要があるすべての設定を検討してください。 このAzure SQL Database同様のベスト プラクティスに基づいて、いくつかの設定を事前に構成します。 前述のように、公平性を実現し、SQL Server Resource Governorを防ぐために、ジョブ オブジェクト、FSRM、およびジョブ オブジェクトを事前に構成します。 この背後にある理由は、安全で予測可能な操作を目的とします。 また、サービスに定義されている安全性の制限に準拠している場合に、ワークロードと特定のニーズに基づいて、お客様にさまざまな設定を提供することもできます。</p>


  <h2>時間の過ぎた改善</h2>


  <p>場合によっては、特定の操作のパフォーマンスとスケーラビリティを向上させるソフトウェア変更を展開します。 お客様は自動的に特典を受け、定義された制限を超え、将来すべての顧客に対して増やされる可能性があります。 さらに、マシン、ストレージ、ネットワークのハードウェアを強化する場合、これらの利点はアプリケーションで透過的に利用できる場合もあります。 これは、特定の物理マシンを提供するのではなく、この DBaaS 抽象化レイヤーを定義したためです。</p>


  <h2>ガバナンスの進化</h2>


  <p>エンジニアリング チームAzure SQL Database、サービスで使用されるガバナンス機能を定期的に強化しています。 フィードバックと実稼働テレメトリに基づいてモデルを継続的に確認し、使用可能なリソースを最大化し、安全性を高め、システム タスクの影響を軽減するために制限を変更しています。</p>


  <p>ご意見をお寄せください。ご意見をお寄せください。 この問題に関するフィードバックやコメントをエンジニアリング チームに問い合わせするには、 までメールでお問い合わせください <a href="mailto:SQLDBArchitects@microsoft.com">SQLDBArchitects@microsoft.com</a>。</p>
