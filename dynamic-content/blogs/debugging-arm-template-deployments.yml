### YamlMime:Yaml
ms.openlocfilehash: 518a6f1f5e28be78bf12837e71bfc2d29f8524a0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904819"
Slug: debugging-arm-template-deployments
Title: ARM テンプレート デプロイのデバッグ
Summary: テンプレートのデプロイエラーを簡単にデバッグできる新しい機能が追加されました。
Content: "<p>テンプレートのデプロイエラーを簡単にデバッグできる新しい機能が追加されました。 この新しい機能により、デプロイに関連付けられている各デプロイ操作の要求コンテンツ、応答コンテンツ、またはその両方を取得できます。 この情報は、各展開操作で送信または返送された正確なコンテンツを確認できるので、多くのシナリオで非常に役立ちます。</p>\n\n<p>新しいデプロイの作成中に、PowerShell または CLI からこの設定を有効にすることができます。 PowerShell では、この設定を有効にするために New-AzureRmResourceGroupDeployment に新しいパラメーターを追加しました。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/65afecd7-c25a-4df9-80c6-5cd7ef2d7ff5.png\"><img alt=\"image\" border=\"0\" height=\"117\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/36b32d69-31e6-4d11-b956-cf9a0f43590b.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: 0px; margin-left: 0px; display: inline; background-image: none;\" title=\"絵\" width=\"760\"></a></p>\n\n<p>前述のように、主に3つのオプションがサポートされています。</p>\n\n<ul>\n <li><strong>Requestcontent: </strong>この値が設定されている場合、 &nbsp; 各配置操作の http 要求に関連付けられているコンテンツがログに記録されます。 コンテンツの種類は JToken です。 操作の書き込み要求の内容がログに記録されます。 非同期操作の状態を確認する次の要求の内容はログに記録されません。たとえば &ndash; 、create resource、POST For listKeys などの場合、PUT のコンテンツが含まれます。</li>\n <li><strong>次のようになります。 </strong>この値が設定されている場合、各配置操作の http 応答に関連付けられているコンテンツがログに記録されます。 これは、その操作の最後の応答の内容になります。</li>\n <li><strong>すべての</strong> &ndash;この値が設定されている場合、各デプロイ操作の要求コンテンツと応答コンテンツの両方がログに記録されます。</li>\n</ul>\n\n<p><strong>注:</strong> デバッグの詳細をログに記録するときは注意してください。 リソースプロパティや listKeys 操作で使用されるパスワードなどのシークレットをログに記録して公開し、展開操作を取得するときに返されるようにすることができます。</p>\n\n<p>CLI では、次のように同じ設定を適用できます。</p>\n\n<pre class=\"prettyprint\">\nazure group deployment create --debug-setting</pre>\n\n<p>単純なテンプレートをデプロイして、この追加情報をデバッグに使用する方法を確認できます。 &nbsp;この例では、Windows 仮想マシンをプロビジョニングするクイックスタートギャラリーから<a href=\"https://github.com/Azure/azure-quickstart-templates/tree/master/101-vm-simple-windows\">このテンプレート</a>を使用しました。 いくつかの変更を行い、それを展開しようとしました。</p>\n\n<p>次のメッセージでデプロイが失敗しました:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f1b8bfb-4a22-4685-acdd-8e2f022a1130.png\"><img alt=\"image\" border=\"0\" height=\"144\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44d2be04-d7c1-458e-b916-604c36d632d6.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"絵\" width=\"1209\"></a></p>\n\n<p>上記のメッセージから、仮想マシンのサイズに問題があることが明らかになり &rsquo; ました。 &rsquo;しかし、選択されたサイズと、その結果として失敗した理由はわかりません。 この新機能により、デプロイの各操作で送信された要求コンテンツを取得できるようになりました。 そのため、上記のようにデプロイの作成時にこの設定を有効にした場合は、次のコマンドを実行して操作を取得できます。</p>\n\n<pre class=\"prettyprint\">\n$operations = Get-AzureRmResourceGroupDeploymentOperation &ndash;DeploymentName &lt;deploymentName&gt; &ndash;ResourceGroupName &lt;resourceGroupName&gt; </pre>\n\n<p>これにより、この展開に含まれていたすべての操作が提供されます。 各操作の要求と応答の内容は、次のようにプロパティバッグから取得できます。</p>\n\n<pre class=\"prettyprint\">\n$operations[0].Properties.Request</pre>\n\n<pre class=\"prettyprint\">\n$operations[0].Properties.Response</pre>\n\n<p>各操作のプロパティを使用して問題を特定するのではなく、次のように、すべてのデプロイ操作の要求と応答の内容を取得できます。</p>\n\n<pre class=\"prettyprint\">\nforeach($operation in $operations)\n\n{\n    Write-Host $operation.id\n    Write-Host &quot;Request:&quot;\n    $operation.Properties.Request | ConvertTo-Json -Depth 10\n    Write-Host &quot;Response:&quot;\n    $operation.Properties.Response | ConvertTo-Json -Depth 10\n}\n</pre>\n\n<p>このような操作の場合、要求と応答は次のようになります。</p>\n\n<pre class=\"prettyprint\">\nRequest: \n\n{\n    &quot;Content&quot;: {\n        &quot;Location&quot;: &quot;westus&quot;,\n        &quot;Properties&quot;: {\n            &quot;HardwareProfile&quot;: {\n                &quot;VmSize&quot;: &quot;[concat(<span style=\"background-color: rgb(255, 255, 0);\">\\u0027Standard\\u0027,\\u0027_D1\\u0027</span>&quot;\n            },\n            &quot;OsProfile&quot;: {\n                &quot;ComputerName&quot;: &quot;SimpleWindowsVM&quot;\n            },\n            &quot;StorageProfile&quot;: {\n                &quot;ImageReference&quot;: {\n                    &quot;Publisher&quot;: &quot;MicrosoftWindowsServer&quot;,\n                    &quot;Offer&quot;: &quot;WindowsServer&quot;,\n                    &quot;Sku&quot;: &quot;2012-R2-Datacenter&quot;,\n                    &quot;Version&quot;: &quot;latest&quot;\n                },\n                &quot;OsDisk&quot;: {\n                    &quot;Name&quot;: &quot;osdisk&quot;,\n                    &quot;Vhd&quot;: {\n                        &quot;Uri&quot;: &quot;https://xxyy.blob.core.windows.net/vhds/osdiskforwindowssimple.vhd&quot;\n                    },\n                    &quot;Caching&quot;: &quot;ReadWrite&quot;,\n                    &quot;CreateOption&quot;: &quot;FromImage&quot;\n                },\n                &quot;DataDisks&quot;: [{\n                    &quot;Name&quot;: &quot;datadisk1&quot;,\n                    &quot;DiskSizeGB&quot;: &quot;100&quot;,\n                    &quot;Lun&quot;: 0,\n                    &quot;Vhd&quot;: {\n                        &quot;Uri&quot;: &quot;https://xxyy.blob.core.windows.net/vhds/datadisk1.vhd&quot;\n                    },\n                    &quot;CreateOption&quot;: &quot;Empty&quot;\n                }]\n            },\n            &quot;NetworkProfile&quot;: {\n                &quot;NetworkInterfaces&quot;: [{\n                    &quot;Id&quot;: &quot;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGro\n                               ups/ravdeleterg4/providers/Microsoft.Network/networkInterfaces/myVMNic&quot;\n                }]\n            },\n            &quot;DiagnosticsProfile&quot;: {\n                &quot;BootDiagnostics&quot;: {\n                    &quot;Enabled&quot;: &quot;true&quot;,\n                    &quot;StorageUri&quot;: &quot;https://xxyy.blob.core.windows.net&quot;\n                }\n            }\n        }\n    }\n}\nResponse:\n\n {\n    &quot;Content&quot;: {\n        &quot;Error&quot;: {\n            &quot;Code&quot;: &quot;InvalidParameter&quot;,\n            &quot;Target&quot;: &quot;vmSize&quot;,\n            &quot;Message&quot;: &quot;The value of parameter vmSize is invalid.&quot;\n        }\n    }\n}\n\n</pre>\n\n<div>上の例では、VmSize に設定されていた値が明らかになっています。 これは非常に基本的なシナリオでした。 ただし、入れ子になった配置、複雑なオブジェクトなどを含む複雑なテンプレートをデバッグするときに、このような情報が非常に役に立つ可能性があります。</div>\n\n<p>この便利な機能とお客様からのフィードバックがある場合は、お知らせください。</p>\n\n<p>デプロイエラーのトラブルシューティングの詳細については、こちら <a href=\"https://azure.microsoft.com/en-us/documentation/articles/resource-manager-troubleshoot-deployments-portal/\">のドキュメントを参照して</a>ください。</p>"
