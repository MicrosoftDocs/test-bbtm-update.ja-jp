### YamlMime:Yaml
ms.openlocfilehash: 34d9c7d653601afdadfc281f331bc8b91c755fcf
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903891"
Slug: understanding-the-procedure-cache-on-sql-azure
Title: プロシージャ キャッシュのSQL Azure
Summary: '[この記事は、チームによってSQL Azureされました。]サーバー SQL ServerとSQL Azure、サーバー上のクエリのパフォーマンスを向上させるために使用されるプロシージャ キャッシュがあります。 このブログの投稿では、次の説明を行います。'
Content: <p>[この記事は、チームによってSQL Azureされました。]</p><p>サーバー SQL ServerとSQL Azure、サーバー上のクエリのパフォーマンスを向上させるために使用されるプロシージャ キャッシュがあります。 このブログ記事では、プロシージャ キャッシュの動作について説明し、SQL Azure。</p>  <p>SQL Azureには、実行プランとデータ バッファーの両方を格納するために使用されるメモリ のプールがあります。 このメモリ プールは、データベースの所有者に関係なく、物理マシン上のすべてのデータベースに使用されます。 プールはマシン上のすべてのデータベースにまたがっていますが、所有していない実行プランを誰も確認できません。 実行プランまたはデータ バッファーに割り当てられるプールの割合は、システムの状態によって動的に変動します。 実行プランの格納に使用されるメモリ プールの部分をプロシージャ キャッシュといいます。</p>  <p>SQL Azure で SQL ステートメントが実行されると、リレーショナル エンジンは最初にプロシージャ キャッシュを参照して、同じ SQL ステートメントの既存の実行プランが存在することを確認します。 SQL Azure見つけた既存のプランを再利用し、新しいステートメントを再コンパイルするオーバーヘッドSQLします。 既存の実行プランが存在しない場合SQL Azureクエリの新しい実行プランが生成されます。</p>  <h2>プロシージャ キャッシュとプロシージャ のレプリカSQL Azure</h2>  <p>SQL Azure で実行されているデータベースのインスタンスはレプリカと呼ばられています。特定の時点で実行されている任意の 1 つのデータベースの 3 つのレプリカがあります。 1 つのレプリカがプライマリ レプリカと見なされ、すべての読み取りクエリと書き込みクエリがこのレプリカに送信されます。 他の 2 つのレプリカはセカンダリと見なされ、プライマリ レプリカに書き込まれたデータもセカンダリ レプリカに書き込まれます。 プライマリ レプリカが失敗した場合、更新プログラムのサイクルを行う必要がある場合、または負荷分散操作がある場合は、セカンダリ レプリカがプライマリに昇格されます。</p>  <p>各レプリカは、個別の完全冗長ラック上にある異なる物理マシン上に存在します。 プロシージャ キャッシュはサーバーごとに行われます。プライマリ レプリカが失敗または循環した場合、セカンダリが昇格された場合、プロシージャ キャッシュにはそのデータベースのクエリ プランはありません。</p>  <h2>プロシージャ キャッシュ統計</h2>  <p>SQL Azureは、キャッシュ内のすべてのクエリ プランのパフォーマンス統計を追跡します。 次のような動的マネージド ビュー (DMV <b>) を</b> 使用して、データベース クエリのsys.dm_exec_query_statsできます。 </p>  <pre class="csharpcode"><span class="kwrd">SELECT</span> *  <span class="kwrd">FROM</span> sys.dm_exec_query_stats</pre>      <p>詳細な例については、このブログ記事を参照してください。I/O パフォーマンスが低いクエリを検索する方法については、次の記事 <b>を参照</b>sys.dm_exec_query_stats。</p>    <p><b>sys.dm_exec_query_stats</b>データベースのプライマリ レプリカの統計情報のみをSQL Azureします。 セカンダリがプライマリに昇格された場合、sys.dm_exec_query_stats結果は数秒 <b>後</b> に大きな違いがある可能性があります。 キャッシュ内のクエリが突然表示されないか、実行数が少ない可能性があります。通常は、時間のと一度に増加します。</p>    <h2>プロシージャ キャッシュからの実行プランの削除</h2>    <p>実行プランは、格納しておくためのメモリがある間はプロシージャ キャッシュに残ります。 メモリ使用量が存在する場合、SQL Azureコストベースのアプローチを使用して、プロシージャ キャッシュから削除する実行プランを決定します。 </p>    <p>SQL Azure所有者に関係なく、キャッシュからプランが削除されます。サーバー上に存在するデータベース全体のすべてのプランが削除対象として評価されます。 データベースごとに確保されているメモリ プールの一部はありません。 つまり、プロシージャ プラン のキャッシュは、個々のデータベースではなく、マシンの利点のために最適化されています。</p>    <p>SQL Azureでは現在<a href="https://msdn.microsoft.com/en-us/library/ms174283.aspx">、DBCC FREEPROCCACHE (Transact-SQL)</a> がサポートされていません。そのため、キャッシュから実行プランを手動で削除することはできません&#160; ただし、クエリによって参照されるテーブルまたはビューに変更を加えた場合 (ALTER TABLE および ALTER VIEW)、プランはキャッシュから削除されます。</p>    <h2>まとめ</h2>    <p>プロシージャ キャッシュは、多くの点で、プロシージャ キャッシュと同様SQL Server。SQL Azureは、 の上に構築SQL Server。 ただし、いくつかの違いがあります。今すぐ理解していただけと思います。 質問、懸念事項、コメントはありますか? 以下に投稿すると、対処を試みることができます。</p>
