### YamlMime:Yaml
ms.openlocfilehash: 1329395878f2a4bf13bed2bf0a81676ac8b94639
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905044"
Slug: azure-app-service-now-supports-java-se-on-linux
Title: Azure App Service Linux での Java Standard Editionサポートされる
Summary: 最近、Java とその鮮やかなコミュニティに多くの変更が加えららています。 Oracle for Java Standard Edition と Eclipse Foundation for Jakarta Enterprise Edition (旧 Java Enterprise Edition) の間で共有され、Java は引き続きです。
Content: "<p>最近、Java とその鮮やかなコミュニティに多くの変更が加えららています。 Oracle for Java Standard Edition と Eclipse Foundation for Jakarta Enterprise Edition (旧 Java Enterprise Edition) の間で共有され、Java は開発者や企業が引き続き主要なプログラミング言語です。 実際のところ、世界中で 1,200 万人を超える Java 開発者による最新のアプリケーション開発の傾向と、多くの IT 組織のデジタル変革が最も重要な点を考慮して、クラウドで成長する立場にあります。</p>\n\n<p>Java アプリのボリュームが非常に多く、すぐに開発される予定です。Java 開発者は、時間とコストを節約しながら、高速で安全なアプリケーション開発を可能にするクラウド サービスから大きなメリットを得ます。 これを、膨大な地理的リージョンのカバレッジと組み合これは、すべての開発者が経験する必要があるクラウド ソリューションです。</p>\n\n<p>現在、Microsoft は、Linux 上の Java Azure App Service 8 ベースのStandard Editionをサポートし、パブリック プレビューで提供される予定です。 このリリース以降のバージョンは、今後の LTS バージョンと同様に、長期サポートされる予定です。 Java Web アプリを構築し、Microsoft によってバグ修正とセキュリティ更新プログラムが維持される、拡張性の高い自己修正型 Web ホスティング サービスにデプロイできます。 追加のパフォーマンス機能には、動的スケーリング インテリジェント構成で複数のインスタンス、アプリケーション、リージョンを持つ数百万人のユーザーをサポートするスケーリングが含まれます。</p>\n\n<h2>Java Web Apps利点</h2>\n\n<p>開発者Azure App Service生産性に集中できるよう、エンタープライズ レベルのインフラストラクチャに一般的に関連付けられているすべての負荷の高い作業を実行できます。 グローバル セキュリティ コンプライアンス&rsquo;からMicrosoft Azure機能まで、テスト済みインフラストラクチャ プラットフォームとDevOps活用します。 開発者の生産性の利点は、そこでは停止しない。 Java Web アプリには、次の利点があります。</p>\n\n<ul>\n <li><strong>フル マネージドエンタープライズ プラットフォーム &ndash;</strong> ログの集計、電子メール通知、およびAzure portalします。 バージョンの更新には、間もなく自動修正プログラムが含まれます。</li>\n <li><strong>パフォーマンスの監視 &ndash;</strong> アプリケーションを監視および管理するために、選択したアプリケーション パフォーマンス管理 (APM) 製品と統合します。</li>\n <li><strong>高可用性を備え、グローバルなスケール &ndash;</strong> 99.95% のアップタイムで、待ち時間が短く、自動スケーリング、または手動スケーリング (アップまたはスケールアウト)、Microsoft&rsquo; のグローバル データセンター内の任意の場所。</li>\n <li><strong>セキュリティとコンプライアンス &ndash;</strong> App Service ISO、SOC、PCI、GDPR に準拠しています。</li>\n <li><strong>認証と承認</strong> <strong>&ndash;</strong>IP アドレス制限を管理するためのAzure Active Directory(RBAC) を使用したRoll-Based Access Control組み込みの認証。</li>\n <li><strong>ビルドの自動化と CI/CD のサポート&ndash;</strong>Maven、Jenkins、Visual Studio Team Servicesサポートは、一般公開リリースで利用できます。</li>\n</ul>\n\n<p>Azure に Java サービスをデプロイするには、3 Web Appsがあります。 テンプレートから作成するかAzure portal使用するか、Maven から作成してデプロイすることができます。 この投稿では、Maven を使用してアプリをデプロイするSpring Bootについて取り上します。</p>\n\n<h2>概要 Maven と Spring の使用</h2>\n\n<p>開始するには、お気に入りの Java Web アプリを複製するか、次のサンプルを使用します。</p>\n\n<pre>\n$ git clone <a href=\"https://github.com/spring-projects/spring-petclinic.git\">https://github.com/spring-projects/spring-petclinic.git</a></pre>\n\n<p>Azure Web Apps 用の Maven プラグインをアプリ プロジェクト POM ファイル追加し、サーバー ポートを 80 に設定します。</p>\n\n<pre>\n&lt;build&gt;\n   &lt;plugins&gt;\n      &lt;plugin&gt;\n         &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;\n         &lt;artifactId&gt;azure-webapp-maven-plugin&lt;/artifactId&gt;\n         &lt;version&gt;1.2.0&lt;/version&gt;\n         &lt;configuration&gt;\n \n            &lt;!-- Web App information --&gt;\n            &lt;resourceGroup&gt;${RESOURCE_GROUP}&lt;/resourceGroup&gt;\n            &lt;appName&gt;${WEBAPP_NAME}&lt;/appName&gt;\n            &lt;region&gt;${REGION}&lt;/region&gt;\n            &lt;pricingTier&gt;S1&lt;/pricingTier&gt;\n \n            &lt;!-- Java Runtime Stack for Web App on Linux --&gt;\n            &lt;linuxRuntime&gt;jre8&lt;/linuxRuntime&gt;\n \n            &lt;deploymentType&gt;ftp&lt;/deploymentType&gt;\n            &lt;!-- Resources to be deployed to your Web App --&gt;\n            &lt;resources&gt;\n               &lt;resource&gt;\n                  &lt;directory&gt;${project.basedir}/target&lt;/directory&gt;\n                  &lt;targetPath&gt;/&lt;/targetPath&gt;\n                  &lt;includes&gt;\n                     &lt;include&gt;app.jar&lt;/include&gt;\n                  &lt;/includes&gt;\n               &lt;/resource&gt;\n            &lt;/resources&gt;\n            &lt;appSettings&gt;\n               &lt;property&gt;\n                  &lt;name&gt;JAVA_OPTS&lt;/name&gt;\n                  &lt;value&gt;-Djava.security.egd=file:/dev/./urandom&lt;/value&gt;\n               &lt;/property&gt;\n            &lt;/appSettings&gt;\n         &lt;/configuration&gt;\n     &lt;/plugin&gt;\n   &lt;/plugins&gt;\n   &lt;finalName&gt;app&lt;/finalName&gt; \n&lt;/build&gt; </pre>\n\n<p>通常と同様に、Maven を使用してビルド &ndash; 、パッケージ化、デプロイを行います。</p>\n\n<pre>\nbash-3.2$ mvn package azure-webapp:deploy\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ----------------------------------------------------------------------\n[INFO] Building petclinic 2.0.0\n[INFO] ----------------------------------------------------------------------\n[INFO] \n...\n...\n[INFO] --- azure-webapp-maven-plugin:1.2.0:deploy (default-cli) @ spring-petclinic ---\n[INFO] Start deploying to Web App myjavase-07262018aa...\n[INFO] Authenticate with Azure CLI 2.0\n[INFO] Target Web App doesn&#39;t exist. Creating a new one...\n[INFO] Creating App Service Plan &#39;ServicePlan1af9c8f0-3f71-43a8&#39;...\n[INFO] Successfully created App Service Plan.\n[INFO] Successfully created Web App.\n...\n...\n \n[INFO] Finished uploading directory: /Users/selvasingh/GitHub/selvasingh/spring-petclinic/target/azure-webapps/myjavase-07262018aa --&gt; /site/wwwroot\n[INFO] Successfully uploaded files to FTP server: waws-prod-bay-081.ftp.azurewebsites.windows.net\n[INFO] Starting Web App after deploying artifacts...\n[INFO] Successfully started Web App.\n[INFO] Successfully deployed Web App at https://myjavase-07262018aa.azurewebsites.net\n[INFO] ----------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ----------------------------------------------------------------------\n[INFO] Total time: 03:06 min\n[INFO] Finished at: 2018-07-13T18:03:22-07:00\n[INFO] Final Memory: 139M/987M\n[INFO] ----------------------------------------------------------------------</pre>\n\n<p>お気に入りのブラウザーでサイトを開きます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/02114ac8-a05d-4359-b63d-d3b70c6d4932.jpg\"><img alt=\"Spring\" border=\"0\" height=\"365\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b65cbc9c-b1d5-4d67-b27f-f1eae559066e.jpg\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"春\" width=\"923\"></a></p>\n\n<p>ここでは、最初の Java Web アプリを使用Azure App Service。 お疲れさまでした。</p>\n\n<h2>より使い方の良い Java ツール</h2>\n\n<p>開発ツールは、すべて 1 つのサイズに適合するとは言わないと理解しています。 生産性と効率を向上させるツールを使用して、ツール スイートを引き続き強化しています。 その間は、次に Gradle と Jenkins のサポートが表示される予定です。</p>\n\n<h2>次の手順</h2>\n\n<p>クラウドで Java Web Appsを実行する方が簡単で高速になる可能性があります。 試してみるには、Azure サービスで初めての Java Web アプリを作成します。 開始に役立ついくつかのリソースを次に示します。</p>\n\n<ul>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-java\" target=\"_blank\">クイック スタート: Web サイトで Java Web アプリを作成App Service on Linux</a>&nbsp;</li>\n <li><a href=\"https://github.com/Microsoft/azure-maven-plugins/tree/develop/azure-webapp-maven-plugin\" target=\"_blank\">Maven plugin for Azure App Service (GitHub)</a>&nbsp;</li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-java\" target=\"_blank\">Azure Services &ndash; Web Apps および Functions 用の Maven プラグイン</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/java/azure/?view=azure-java-stable\" target=\"_blank\">Java 開発者向け Azure</a>&nbsp;</li>\n</ul>\n\n<p>Azure サブスクリプションをお持&rsquo;ちでない場合は、今 <a href=\"https://azure.microsoft.com/free/?ref=microsoft.com&amp;utm_source=microsoft.com&amp;utm_medium=docs&amp;utm_campaign=visualstudio\" target=\"_blank\">すぐ無料アカウントを作成</a> してください。</p>"
