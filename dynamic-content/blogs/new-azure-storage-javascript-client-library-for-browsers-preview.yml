### YamlMime:Yaml
ms.openlocfilehash: d9a9e0d317722ba3cba580ff1b1bc97b25b8ff15
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894314"
Slug: new-azure-storage-javascript-client-library-for-browsers-preview
Title: ブラウザー用の新しい Azure Storage JavaScript クライアントライブラリ-プレビュー
Summary: JavaScript 用 Azure Storage クライアントライブラリの発表
Content: >-
  <p>現在、最新<strong>のライブラリ (JavaScript 用の Azure Storage クライアントライブラリ</strong>) が発表されています。 Node.js 用の Azure Storage クライアントライブラリ、および<a href="https://feedback.azure.com/forums/217298-storage/suggestions/3088117-make-javascript-library-for-blobs-and-tables">フィードバック</a>に対する要求は、ブラウザーと互換性のある JavaScript ライブラリを使用して、Azure Storage で web 開発シナリオを可能にすることをお勧めします。 これで、<a href="https://github.com/Azure/azure-storage-node#azure-storage-javascript-client-library-for-browsers">ブラウザーの Azure Storage JavaScript クライアントライブラリ</a>のプレビューがリリースされるようになりました。</p>


  <h2>Web 開発シナリオを有効にする</h2>


  <p>Azure Storage の JavaScript クライアントライブラリは、Blob、テーブル、キュー、ファイルなどのストレージサービスを使用した多くの web 開発シナリオを可能にし、最新のブラウザーと互換性があります。 Table service に状態情報を保存したり、モバイルアプリから Blob アカウントに写真をアップロードしたり、Azure Storage に格納されている動的データを使用して web サイト全体をアップロードしたりする web ベースのゲームエクスペリエンスです。</p>


  <p>このリリースの一環として、各サービス Api を個別の JavaScript ファイルにパッケージ化することによってフットプリントを削減しました。 たとえば、Blob storage へのアクセスを必要とする開発者は、次のスクリプトを必要とします。</p>


  <pre class="prettyprint">

  &lt;script type=&rdquo;javascript/text&rdquo; src=&rdquo;azure-storage.common.js&rdquo;/&gt;

  &lt;script type=&rdquo;javascript/text&rdquo; src=&rdquo;azure-storage.blob.js&rdquo;/&gt;</pre>


  <h2>完全なサービス範囲</h2>


  <p>ブラウザー用の新しい JavaScript クライアントライブラリは、Node.js 用の Azure Storage クライアントライブラリを使用して作成されたものであるため、最新の REST API バージョン2016-05-31 で使用できるすべてのストレージ機能をサポートしています。 Node.js ライブラリにあるすべてのサービス機能がサポートされています。 また、既存の API サーフェイスと <a href="https://azure.github.io/azure-storage-node/">Node.js 参照 api ドキュメント</a> を使用してアプリをビルドすることもできます。</p>


  <h2>開発</h2>


  <p>現在 &rsquo; のブラウザーは、 <em>要求 </em>メソッドをサポートしていません。これは、すべての Node.js アプリケーションに不可欠です。 そのため、Node.js &rsquo; 用に記述された JavaScript をブラウザーで使用することができます。 この問題の一般的な解決策の1つは、「」です。 このツールを使用すると、必要な依存関係が1つの JS ファイルにバンドルされ、web アプリケーションで使用できるようになります。 これは、 <em>node.js-o browser.js</em> をインストールし、設定した場合と同じように簡単です。 ただし、これは既に実行されています。 <a href="https://aka.ms/downloadazurestoragejs">JavaScript クライアントライブラリ</a>をダウンロードするだけです。</p>


  <h2>推奨される開発方法</h2>


  <p>JavaScript クライアントライブラリがブラウザーで認証トークンをユーザーに公開するため、Azure Storage での認証に<a href="https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1">SAS トークン</a>を使用することを強くお勧めします。 スコープと時間が制限された SAS トークンを使用することを強くお勧めします。 理想的な web アプリケーションでは、バックエンドアプリケーションがユーザーのログオン時にユーザーを認証し、Storage アカウントへのアクセスを承認するための SAS トークンをクライアントに提供する必要があります。 これにより、アカウントキーを使用して認証する必要がなくなります。 HTTP POST 要求時に SAS トークンを生成する <a href="https://github.com/Azure-Samples/functions-node-sas-token">Azure 関数のサンプル</a> を Github リポジトリで確認してください。</p>


  <p>ユーザーがローカルファイルシステムにアクセスできないようにするブラウザーサンドボックスにより、stream Api を使用することを強くお勧めします。 これにより、 <em>getBlobToLocalFile</em>、 <em>createBlockBlobFromLocalFile</em> などのストリーム api がブラウザーで使用できなくなります。 代わりに <em>Createblockblobfromstream</em> API を使用するリンクのサンプルを参照してください。</p>


  <h2>使用例</h2>


  <p>限られたスコープの SAS トークンを生成できる web アプリがある場合、残りは簡単です。 <a href="https://github.com/Azure/azure-storage-node/#azure-storage-javascript-client-library-for-browsers">Github</a>のリポジトリから JavaScript ファイルをダウンロードし、コードに含めます。</p>


  <p>次に示すのは、特定のテキストから blob をアップロードできる単純なサンプルです。</p>


  <p><br>

  1. HTML コードに次のスクリプトタグを挿入します。 JavaScript ファイルが同じフォルダーに配置されていることを確認します。</p>


  <pre class="prettyprint">

  &lt;script src=&quot;azure-storage.common.js&quot;&gt;&lt;/script/&gt;

  &lt;script src=&quot;azure-storage.blob.js&quot;&gt;&lt;/script/&gt;

  </pre>


  <p>2.&rsquo;では、ページにいくつかの項目を追加して、転送を開始します。 BODY タグ内に次のタグを追加します。 ボタンがクリックされると uploadBlobFromText メソッドが呼び出されることに注意してください。 このメソッドは、次の手順で定義します。</p>


  <pre class="prettyprint">

  &lt;input type=&quot;text&quot; id=&quot;text&quot; name=&quot;text&quot; value=&quot;Hello World!&quot; /&gt;

  &lt;button id=&quot;upload-button&quot; onclick=&quot;uploadBlobFromText()&quot;&gt;Upload&lt;/button&gt;

  </pre>


  <p>3. ここまでは、クライアントライブラリを含め、HTML コードを追加して、ユーザーにテキスト入力と転送を開始するボタンを表示しました。 ユーザーが [アップロード] ボタンをクリックすると、uploadBlobFromText が呼び出されます。 &rsquo;次のように定義します。</p>


  <pre class="prettyprint">

  &lt;script&gt;

  function uploadBlobFromText() {

  &nbsp;&nbsp;&nbsp;&nbsp; // your account and SAS information

  &nbsp;&nbsp;&nbsp;&nbsp; var sasKey =&quot;....&quot;;

  &nbsp;&nbsp;&nbsp;&nbsp; var blobUri = &quot;https://&lt;accountname&gt;.blob.core.windows.net&quot;;

  &nbsp;&nbsp;&nbsp;&nbsp; var blobService = AzureStorage.createBlobServiceWithSas(blobUri, sasKey).withFilter(new AzureStorage.ExponentialRetryPolicyFilter());

  &nbsp;&nbsp;&nbsp;&nbsp; var text = document.getElementById(&#39;text&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp; var btn = document.getElementById(&quot;upload-button&quot;);

  &nbsp;&nbsp;&nbsp;&nbsp; blobService.createBlockBlobFromText(&#39;mycontainer&#39;, &#39;myblob&#39;, text.value,&nbsp; function(error, result, response){

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (error) {

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&#39;Upload filed, open browser console for more detailed info.&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(error);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&#39;Upload successfully!&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }

  &nbsp;&nbsp;&nbsp;&nbsp; });

  }

  &lt;/script&gt;

  </pre>


  <p>もちろん、blob をテキストからアップロードすることは一般的ではありません。 ストリームからのアップロードについては、次のサンプルを参照してください。進行状況の追跡のサンプルも参照してください。</p>


  <p><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-blob.html">Blob の JavaScript のサンプル</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-queue.html">キューの JavaScript のサンプル</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-table.html">テーブルの JavaScript のサンプル</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-file.html">ファイルの JavaScript サンプル</a>&nbsp;</p>


  <h2>共有</h2>


  <p>最後に、[ <a href="https://azurestorageslack.azurewebsites.net/">余裕期間] チャネル</a> に参加して、実際のシナリオ、問題、またはあらゆるものを共有します。 お &rsquo; 手伝いいたします。</p>
