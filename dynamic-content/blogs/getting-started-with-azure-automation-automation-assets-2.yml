### YamlMime:Yaml
ms.openlocfilehash: 3d86ce31096e3e1b97cbf6853202a92e10c7f1d0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904166"
Slug: getting-started-with-azure-automation-automation-assets-2
Title: 'Azure Automation でのはじめに: Automation アセット'
Summary: Azure Automation では、拡張性と信頼性に優れたワークフロー実行エンジンを使用して、Azure 環境でのリソースの作成、デプロイ、監視、および管理を自動化することができます。
Content: >-
  Azure Automation では、拡張性と信頼性に優れたワークフロー実行エンジンを使用して、Azure 環境でのリソースの作成、デプロイ、監視、および管理を自動化することができます。 Azure とサードパーティシステムにわたって時間がかかり頻繁に繰り返されるタスクを調整して、クラウド運用の価値を減らすことができます。 Azure Automation サービスの詳細については、「 <a href="https://azure.microsoft.com/en-us/documentation/services/automation/">Automation サービス</a>」を参照してください。


  このブログでは、次のトピックについて説明し、Azure Automation の資産を作成した理由と、PowerShell の利点について詳しく説明します。 Automation 資産を作成して使用する方法の詳細については、「」を参照 <a href="https://technet.microsoft.com/en-us/library/dn457809.aspx">https://technet.microsoft.com/en-us/library/dn457809.aspx</a> してください (注: このページでは、Service Management Automation と Azure Automation 資産について説明しています。 現在 Service Management Automation にのみ適用されるセクション/コマンドレットは、ページで呼び出されます)

  <ul>
   <li>
  <h4>Automation 資産とは</h4>

  </li>
   <li>
  <h4>Automation 資産を作成した理由</h4>

  </li>
   <li>
  <h4>PowerShell 上の利点</h4>

  </li>
   <li>
  <h4>Runbook でそれらを使用する方法</h4>

  </li>

  </ul>

  <h3></h3>

  <h3><a name="_Toc363559176"></a>Automation 資産とは<a name="zab1861bd23a341dfaaf1d88c1d61a175"></a></h3>

  Automation の [資産] ページには、runbook に関連付けられている、または runbook に関連付けられているさまざまなリソース ("設定" とも呼ばれます) と、統合モジュールのインポート、新しい資産の追加、または資産の削除を行うためのコマンドが表示されます。 資産には、変数、スケジュール、資格情報、および接続が含まれます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/clip_image002.jpg"><img class="alignnone size-medium wp-image-161151" alt="clip_image002.jpg" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image002-615x369.jpg" width="615" height="369" /></a>


  オートメーション資産の高度な定義: •変数: 変数は、すべての runbook で使用できる値です。これらは、Azure Portal、Windows PowerShell (近日公開予定)、または runbook 内から作成、変更、取得することができます。Runbook では、共通ファイルへのディレクトリパス、サーバー名、その他の文字列など、頻繁に使用される設定を定義するために runbook で使用できます。 変数の設定には、runbook で使用できる文字列、ブール値、整数、または日時の情報が格納されます。 また、(プロパティバッグとして格納されている) 複雑なオブジェクトを含めることもできます。ただし、Automation UI では実行できないため、PowerShell を使用する必要があります。


  •接続: 接続は、runbook からサービスまたはアプリケーションに接続するために必要な情報を定義します。作成できる接続の種類は、オートメーションにインポートされる統合モジュールによって定義されます。通常、このような情報には、ユーザー名とパスワード、接続先のホストまたはサービス URI などが含まれます。 たとえば、Azure Automation にプレインストールされている Azure モジュールには、サブスクリプション id と証明書のフィールドとの接続が含まれています。これは、プログラムによって Azure リソースを管理するために必要な情報です。 接続のプロパティは、Automation に安全に格納され、Get-AutomationConnection アクティビティを使用して runbook でアクセスできます。この情報は、必要な接続を作成するために、統合モジュールアクティビティに1つ以上のパラメーターとして渡すことができます。


  •資格情報資格情報は、Windows PowerShell コマンドまたは Azure Automation にアップロードされた証明書で使用できるユーザー名とパスワードの組み合わせのいずれかです。 資格情報のプロパティは、Automation に安全に格納され、Get-AutomationPSCredential または Get-AutomationCertificate のいずれかのアクティビティを使用して runbook でアクセスできます。


  • Runbook が自動的に実行されるようにスケジュールを設定 Azure Automation スケジュールを設定します。Runbook を1回実行するのに1つの日付と時刻を指定することも、runbook を複数回開始する定期的なスケジュールを設定することもできます。


  •統合モジュール Azure Automation runbook は、さまざまなシステム、サービス、デバイスにアクセスするために、PowerShell コマンドレット (Automation では "アクティビティ" と呼ばれます) に依存しています。 統合モジュールは、Windows PowerShell モジュールを含むパッケージで、Azure Automation にインポートできます。インポートされたモジュールは、runbook で使用できるように、すべての Azure Automation worker サーバーに配布されます。


  統合モジュールの詳細については、次の記事を参照してください。•作成統合モジュールに関するブログ記事 (このブログは Azure Automation の統合モジュールに関するものですが、基本的には同じ Service Management Automation)、この TechNet ドキュメントの「統合モジュールの構築」セクションを参照してください。


  <span style="color: #9bbb59; font-size: large;">Automation 資産を作成した理由</span> アセットを作成するには、[アセット] タブをクリックし、[設定の追加] オプションを選択します。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/Assets-page1.png"><img class="alignnone size-medium wp-image-162841" alt="Assets-page1" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Assets-page1-523x369.png" width="523" height="369" /></a>


  &nbsp;


  作成する資産の種類を選択します


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/Assets-page2.png"><img class="alignnone size-medium wp-image-162831" alt="Assets-page2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Assets-page2-526x369.png" width="526" height="369" /></a>


  次のセクションでは、Automation 資産を使用しない場合の課題とその対処方法について説明します。<b></b>


  <b><span style="text-decoration: underline;">環境 </span></b>


  <b>課題: </b>複数の runbook で同じデータを使用するのが一般的です。 このデータを各 runbook にハードコーディングするのではなく、データを1つの場所に保存し、各 runbook 内から参照することをお勧めします。 このようにして、データが変更されたときに更新を行う必要があるのは1か所だけです。 変数を使用しない場合、ユーザーは、ファイル、データベースなどの外部の方法を使用して、runbook ジョブ間でデータを交換/共有することを検討する必要があります。 これに伴う課題は、ストレージメカニズムや通信プロトコルを確立する必要があり、これは複雑で煩雑で、競合状態が発生する可能性もあります。


  <b>Azure Automation ソリューション:</b> 変数の作成先


  ·複数の runbook 間で値を共有します。


  ·同じ runbook から複数のジョブ間で値を共有します。


  ·Azure Portal または runbook で使用される Windows PowerShell コマンドラインから値を管理します。


  &nbsp;


  <b><span style="text-decoration: underline;">数</span></b>


  <b>課題:</b> Azure Automation は、外部システムと統合する機能を提供します。 外部システムと接続するために、ユーザーは外部システムに接続するために必要なすべてのデータ (ユーザー名、パスワード、ポート番号、プロトコルなど) を提供する方法を見つける必要があります。 いくつかの課題があります。


  ·システムによって、異なる種類のデータが必要になる場合があります。 例: Url、ポート番号、プロトコル


  ·その接続データを Runbook に渡します。


  o ユーザーは接続データを Runbook のパラメーターとして渡すことができ、問題は、runbook を実行するたびに入力する必要があることです。 もう1つの課題は、グループ化されていないこのデータを提供する必要があることです (別のパラメーターを渡す)。


  o その他のオプションは、接続データの各部分に変数または変数のセットを提供することです。 これにより、毎回データを入力する最初の問題が軽減されますが、データのグループ化に関する問題が発生します。


  ·このデータは個別にグループ化されていないため、接続データ構造の変更はすべての場所 (パラメーター、変数、複数の runbook など) でレプリケートする必要があります。


  <b>Azure Automation ソリューション:</b> Azure Automation 作成された接続の種類の資産


  ·外部システムへの接続に必要な接続データを1つのオブジェクトにグループ化して、runbook から簡単にアクセスできるようにする


  ·このシステムへの接続を定義するときにユーザーがこのテンプレートを使用できるように、特定のシステムの接続をどのように表示するかを説明するテンプレートを指定します。


  ·接続データへの変更は、複数の場所 (変数資産、runbook など) に変更をレプリケートすることなく、1か所で行うことができます。


  &nbsp;


  <b><span style="text-decoration: underline;">認証</span></b>


  <b>課題:</b> Runbook は外部システムに接続する必要があるため、資格情報が必要です。 資格情報を入力しないと、ユーザーは資格情報を runbook に渡す方法を見つける必要があり、セキュリティで保護された状態を維持する必要もあります。 これは、解決するための簡単な問題ではありません。


  <b>Azure Automation ソリューション:</b> Azure Automation は、runbook で資格情報を保存して参照するための統一された安全な方法を提供します。


  <b><span style="text-decoration: underline;">出荷 </span></b>


  <b>課題</b>: runbook を繰り返し実行する必要があります。 "スケジュール" の種類の資産がなければ、ユーザーは手動で runbook を手動で実行するか、独自のメカニズムを作成する必要があります。


  <b>Azure Automation ソリューション</b>: Azure Automation は、後で、または定期的なスケジュールで runbook を一度に実行する機能を提供します。


  &nbsp;

  <h3><span style="color: #9bbb59;">PowerShell ワークフロー上の利点</span></h3>

  Azure オートマトンは、ワークフロー実行の高可用性を実現するために、さまざまな PowerShell セッション、異なるプロセス、および異なるコンピューターで PowerShell コードを実行します。 このコンテキストでは、純粋な PowerShell ワークフローで使用できる標準のメカニズムに Automation 資産を置き換えることは非常に困難です。 アセットの使用方法は次のとおりです。


  •定数値の集中管理


  •ジョブ間でアセット (変数、接続、資格情報) を共有します。 PowerShell では、これを行うことができますが、独自のメカニズムを作成する必要があります。


  •資格情報と接続のセキュリティで保護された管理


  •既定のスケジュール設定機能


  &nbsp;

  <h3><span style="color: #008000;">Runbook でアセットを使用する方法の例</span></h3>

  次の例では、runbook で Automation 資産にアクセスする方法について説明します。


  <span style="text-decoration: underline;">環境</span>


  次の表のアクティビティは、Runbook の変数へのアクセスに使用されます。

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">Activities</td>

  <td valign="top" width="479">説明</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationVariable</td>

  <td valign="top" width="479">既存の変数の値を取得します。</td>

  </tr>

  <tr>

  <td valign="top" width="479">Set-AutomationVariable</td>

  <td valign="top" width="479">新しい変数を作成、または既存の変数の値を設定します。</td>

  </tr>

  </tbody>

  </table>

  <b>例</b>


  $server = Get-AutomationVariable – ' ServerName ' という名前


  Set-AutomationVariable-Name ' ServerName ' – Value $server


  <span style="text-decoration: underline;">認証</span>


  次の表のアクティビティは、Runbook での資格情報へのアクセスに使用されます。

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">Activities</td>

  <td valign="top" width="479">説明</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-automationcertificate:</td>

  <td valign="top" width="479">Runbook で使用する証明書を取得します。</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-automationpscredential:</td>

  <td valign="top" width="479">Runbook で PSCredential として使用するユーザー名/パスワードを取得します</td>

  </tr>

  </tbody>

  </table>

  <b>例:</b>


  $credential = Get-AutomationPSCredential –Name 'MyCredential'


  $certificate = Get-AutomationCertificate –Name 'MyCertificate'


  <span style="text-decoration: underline;">接続：</span>


  次の表のアクティビティは、Runbook での資格情報へのアクセスに使用されます。

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">Activities</td>

  <td valign="top" width="479">説明</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationConnection</td>

  <td valign="top" width="479">Runbook で使用する接続を取得します</td>

  </tr>

  </tbody>

  </table>

  <b>例:</b>


  $connection = Get-AutomationConnection –Name 'MyConnection'


  Do-Something –Connection $connection


  <strong><span style="color: #99cc00;">概要</span></strong><b></b>


  今では、Azure Automation 資産を使用して達成できるすばらしいすべてのことを理解し、それを作成する方法、純粋な PowerShell よりも解決してメリットを得られる課題について理解を深めできればと思います。 Automation チームは、Automation 資産の機能を利用するために作成した Runbook を見て、非常に楽しみに思っています。


  まだAzure Automationユーザーではありませんか? <a href="https://account.windowsazure.com/PreviewFeatures?fid=automation">プレビューにサインアップし</a> 、次のガイド <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-create-runbook-from-samples/">はじめにしてください</a>。


  次回まで、 <b>幸せな自動化を行います。</b>
