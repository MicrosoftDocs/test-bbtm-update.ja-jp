### YamlMime:Yaml
ms.openlocfilehash: 3fef1751fe1aed176403398e992c14dfea8dd85f
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892773"
Slug: project-denali-to-define-flexible-ssds-for-cloud-scale-applications
Title: Project Denali を使用して、クラウド規模のアプリケーション用に柔軟な ssd を定義します。
Summary: 最後の9月は、SNIA の Storage 開発者のカンファレンスで、Project Denali SSD のプロトタイプを発表しました。 Project Denali ドライブは、のワークロードを最適化するために必要な柔軟性を備えています。
Content: >-
  <p>最後の9月の Storage Developer &rsquo; s カンファレンスで &rsquo; 、Project Denali SSD のプロトタイプを発表しました。 Project Denali ドライブは、さまざまなクラウドアプリケーションのワークロードを最適化するために必要な柔軟性を提供します。また、NAND フラッシュメモリとアプリケーションの設計の迅速なイノベーションを維持するためのシンプルさと、クラウドで共通するマルチテナントハードウェアに必要なスケールを提供します。&nbsp;</p>


  <p>今月は、 &rsquo; Open Compute Project (OCP) の米国サミット2018に出席して、Denali ドライブを Project するインターフェイスを定義する仕様の形式化を開始します。 この仕様により、ハードウェアベンダーとクラウドプロバイダーの両方が、最終的な製品のビルドとリリースを行うことができます。 この仕様では、NAND 管理の役割を分離し、データ配置を管理する新しい抽象化を定義します。 前者は、新しいチームが生成されるたびに、それ自体が実行されていたのと同じ製品のハードウェア &ndash; に残ります。 後者は、NAND 管理アルゴリズムから分離されると、イノベーションに対する独自のスケジュールに従うことができるようになります。また &rsquo; 、これは、nand 生成だけを追跡する製品サイクルによって導入されたバグを引き起こす可能性があります。&nbsp;</p>


  <p>この仕様では、必要なリファクタリングされたアルゴリズムを使用して、ドライブのファームウェアとホストソフトウェアの両方でイノベーションが更新されるようになります。 Project Denali アーキテクチャの開発全体を通して、 &rsquo; 次の4つの目標に焦点を絞っています。</p>


  <ol>
   <li>イノベーションの機敏性のための柔軟なアーキテクチャ: ワークロード固有の最適化、クラウドサービスコンポーネントとして管理される FTL</li>
   <li>新しい NAND 世代の迅速な有効化: NAND の法則に従い &rsquo; ます。Ssd: 時間から事前条件、数百のワークロード</li>
   <li>大規模な共有デバイスでのさまざまなアプリケーションのサポート: Azure ( &gt; 600 services)、Bing、Exchange、O365 など、その他のユーザー数はドライブあたり数百人まで</li>
   <li>スケールには、複数ベンダーサポート &amp; サプライチェーンの多様性が必要です。 Azure は、他のクラウドプロバイダーよりもグローバルに38のリージョンで動作します。</li>
  </ol>


  <h2>増加している除算のアドレス指定</h2>


  <p>Project Denali アーキテクチャの背後にある主要なドライバーの1つは、ハードウェアとアプリケーションの間で書き込みと再利用のサイズが一致しないことです。 クラウド規模のアプリケーションでは、コンピューター上のテナントの数をスケールアウトする傾向があります。一方、ハードウェアでは、アーキテクチャパラメーターのサイズをスケールアップします。 サーバー内のコアの数が増えるにつれて、1台のマシンでより多くの Vm をサポートできます。 記憶域サーバーの容量が増加すると、通常、各サーバーをバックエンドとして使用するテナントの数が増加します。 注目すべき例外がいくつかありますが、クラウドハードウェアでは、これらのマルチテナント設計を効率的に提供するために十分な柔軟性を提供する必要があります。&nbsp;&nbsp;&nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b003cffa-ca02-4a79-9d57-0acfdd2b5ad6.png"><img align="right" alt="Address Map" border="0" height="220" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4ef33dca-2fb9-4cdb-ba92-5f9863db8b38.png" style="margin: 20px 0px 0px; border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" title="アドレスマップ " width="274"> </a> の ssd &rsquo; キャッシュによって、この除算がさらに増加します。 SSD &rsquo; の並列処理を最大限に活用するために、コントローラーは、現在のドライブの 4 mb のすべてのプレーンで1つのフラッシュページを埋めるために十分な書き込みを収集します。 データが複数のアプリケーションからのものである場合、ドライブは予測や制御が困難な方法でデータをミックスします。 これは、デバイスがガベージコレクション (GC) を実行したときに問題になります。 この時点で、一部のアプリケーションはデータを解放したり、他のアプリケーションよりも高速に更新したりする場合があります。 効率的な GC の場合、1つのブロックでデータを解放または更新するのが理想的です。 ただし、キャッシュによって有効なブロックサイズが 1 GB になると、ホストが次のテナントの書き込みを処理する前に、1つのテナントのドライブに十分なデータを発行できる可能性が非常に高くなり &rsquo; ます。</p>


  <p>このキャッシュ設計は、1つのワークロードの最適化として表示することもできます。シーケンシャル書き込みです。 SSD メーカーは、 &rsquo; ワークロードを順次にするために、このワークロード &ndash; の最適化を目標とするものではありません。また、ssd のシーケンシャル書き込みは、ランダム書き込みのワークロード (7% OP がある完全なドライブ) よりも常に4倍高速に実行されます。 しかし、実際のクラウド a<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3fd85d0d-fdbe-4e93-9e0a-de1380627293.png"><img align="left" alt="Die Capacity" border="0" height="149" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b2b7099f-632e-439b-8a61-16f301af6805.png" style="margin: 11px 0px 0px; border: 0px currentcolor; border-image: none; float: left; display: inline; background-image: none;" title="ダイ Capacity " width="268"> </a> pplications は、ドライブ全体で純粋にシーケンシャルな書き込みで構成されることはめったにありません。 多くの場合、1 TB のストレージにつき数百の連続書き込みストリームで構成されるワークロードです。&nbsp;&nbsp;</p>


  <p>棺の最後のネイルは、時間の経過と共に flash ブロックサイズがどのように変化するかを示しています。 通常、NAND フラッシュの密度を上げると、ブロックのサイズが大きくなります。 このため、今後の設計では、ホストがネイティブブロックサイズでデータを配置するためにアクセスできることがさらに重要になります。</p>


  <h2>クラウドハードウェア向けの柔軟なアーキテクチャ</h2>


  <p>前述の課題に対処するために、SSD &rsquo; s flash 変換レイヤーのアルゴリズムとクラウドアプリケーションのアルゴリズムについて詳しく説明しました。次の2つのカテゴリがあります。</p>


  <p><strong>ログマネージャー</strong> はランダムな書き込みを受け取り、これらを1つ以上の順次書き込みストリームに変換し、それらをストレージスタック内の次の層に出力します。 これを行うには、通常、ログマネージャーがアドレスマップを維持し、ガベージコレクションを実行する必要があります。&nbsp;</p>


  <p>メディア<strong>マネージャー</strong>は、特定の世代のメディアを対象として作成され、ECC、読み取り再試行、データ更新などのアルゴリズムを、メディアの物理的なプロパティに従って実装します。たとえば、どこでエラーが発生したか、データの保持時間のパターンなどです。&nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c89839e5-6b9c-4217-bce8-5ce2432b9559.png"><img align="right" alt="SSD" border="0" height="233" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/52b46c80-76d0-4039-a377-c3ad39ae1ca6.png" style="margin: 0px 0px 0px 10px; border-image: none; float: right; display: inline; background-image: none;" title="SSD " width="299"> </a> この2つのコンポーネントは、さまざまな場所に表示されます。 Standard Ssd ミックスと初期オープンチャネルアーキテクチャでは、ホストで両方を実装する必要があります。 ほとんどのシステムには少なくとも2つまたは3つのログマネージャーがあり、 &rsquo; それぞれ &ndash; のドキュメントに対して SanDisk という警告が出力されます。ログにログを記録しないようにしてください。 Project Denali では、ログとメディアマネージャーを、ドライブにメディアマネージャーを配置し、1つのログマネージャーを完全にホストにカプセル化するという明確な分割を提案します。&nbsp;</p>


  <h2>成功したプロトタイプ</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ddbf8cd0-7818-4950-b5b0-6d4298111bce.jpg"><img align="left" alt="Prototype" border="0" height="211" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1cc5ac1f-3d37-409a-aa5d-8bb5bf3abd92.jpg" style="margin: 7px 16px 0px 0px; border-image: none; float: left; display: inline; background-image: none;" title="プロトタイプ " width="119"> </a> 開発の最初のフェーズでは、cnex を使用してプロトタイプシステムを構築しています。 インターフェイスの変更によって、ストレージスタックの多くのレイヤー間で最適化する機会が開かれますが、ファームウェアと Azure &rsquo; OS の最下位のデバイスドライバーの2つのコンポーネントのみが変更されました。 &nbsp; これにより、アイデアを簡単に評価できるようになり、レガシアプリケーションのインフラストラクチャが提供され、将来の最適化のためにシステムが設定されます。&nbsp;</p>


  <p>最適化前の結果が予想よりも優れています。 通常、ドライブに移動されるメモリ、書き込みの増幅、CPU のオーバーヘッドは、(予想どおりに) ホストに移動されます。また、システム &rsquo; のスループットと待機時間は、標準の ssd より若干優れています。&nbsp;</p>


  <p>Denali の仕様を数か月前に Denali グループについて確認し、今年の後半でこの仕様を幅広く利用できるようにすることを計画しています。 Flash 変換レイヤーをリファクタリングすると、ストレージスタック全体のイノベーションが促進され、新しいインターフェイスの詳細を学習できるようになります。&nbsp;</p>
