### YamlMime:Yaml
ms.openlocfilehash: 85a37183e7268951d7459dbb7f43c27e61fc8c63
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908912"
Slug: isv-guest-blog-series-persistent-systems-takes-to-windows-azure-delivers-cloudninja-for-java
Title: 'ISV ゲスト ブログ シリーズ: 永続的なシステムが Azure をWindowsする – CloudNinja for Java を提供'
Summary: 編集&rsquo;者向け注:&rsquo; Shreekanth Joshi 氏が執筆した今日の投稿「AVP Cloud Computing at Persistent Systems」では、Windows Azure を使用して Java ベースの開発と提供を行う方法について説明しています。
Content: '<p><b><i>[エディター&rsquo;] 注:</i></b><i>&rsquo;Persistent Systems の AVP Cloud Computing である Shreekanth Joshi 氏が執筆した今日の投稿では、Windows Azure を使用して、ISV 顧客向け Java ベースのアプリケーションを開発して提供する方法について説明しています。<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6076.Joshi.png" alt="" style="float: right;" height="156" border="0" width="120"></i></p>  <p>Persistent Systems は、ソフトウェア製品およびテクノロジ サービスを専門とするグローバル企業です。 クラウド コンピューティング、モビリティ、BI &amp; Analytics、コラボレーションの 4 つの主要な次世代テクノロジ領域で、クラス最高のソリューションの開発に重点を置いて取り組む。 永続的なシステム&nbsp;は、クラウド空間に早期に参加し、さまざまなクラウド アプリケーションの開発とデプロイに役立つ多くの革新的なスタートアップ企業や革新的な企業と提携しています。&nbsp;微調整&rsquo;された製品エンジニアリング プロセスを利用して、北米、ヨーロッパ、アジア全体で 300 を超えるお客様向け革新的なソリューションを開発しました。</p>  <p>SaaS の機能と経験を基盤として、主要&rsquo;なクラウド プラットフォーム用の専用コンピテンシー センターを確立しました。 Azure コミュニティの Windows参加者として、以下を含むオープン ソース プロジェクトをリリースしました。</p>  <ul>  <li><a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/hh694271(v=vs.103).aspx">Windows Azure Plugin for Eclipse with Java</a></li>  <li><a target="_blank" href="https://odataphp.codeplex.com/">OData SDK for PHP</a></li>  <li>PHP、Java、Ruby 用の AppFabric SDK</li>  </ul>  <p>Persistent Systems は最近、以下で説明するように、新しいオープン ソース プロジェクト <a target="_blank" href="https://persistentsys.github.com/cloudninja-for-java/">CloudNinja for Java</a> &nbsp;を立ち上げました。</p>  <h2>CloudNinja for Java</h2>  <p><a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT_id=cmp_pst001_blg_post0097gen.mc">Windows Azure</a> での Java ベースのアプリケーションに対する需要は、お客様が Java アプリケーションにスケーラビリティと高可用性を提供できる Windows Azure の開放性を実現する中で増加しています。 シングルテナントアプリケーションとマルチテナント アプリケーションを管理するためにさまざまなプロジェクト コンポーネントを設計する方法から、プロジェクト コンポーネントを azure サービスに統合する方法Windows質問があります。 Azure の学習中にお客様が直面するWindows多くの場合、.NET 以外のプラットフォームをカバーする情報に関する記事とコード サンプルは限られているという課題です。</p>  <p>Windows Azure は.NET クラウド プラットフォームと認識される場合が多く、これは&rsquo;正しいとは言えそうではありません。 この誤解は、デモと方法に関するブログに基づいており、この記事を参照Microsoft Visual Studio。 結局のところ、Windows Azure には、Windows Server 2008 SP2 または Windows Server 2008 R2 のいずれかの仮想マシンが用意されています。つまり、Windows ベースの実行可能ファイルまたはスクリプトのほとんどを Windows Azure で実行できます。&nbsp;</p>  <p>Windows Azure の開放性に関する認識を高めるには、Windows Azure 用のマルチテナント アプリケーションを構築する方法を示す参照アプリケーションである CloudNinja for Java をリリースしました。 CloudNinja for Java には、次の機能が含まれます。&nbsp;</p>  <ul>  <li>テナントのオンボーディング</li>  <li>テナント レベルのカスタマイズ (ロゴの管理など)</li>  <li>テナントごとのデータ分離</li>  <li>テナントごとの測定</li>  <li>異なる ID プロバイダーを介したログインのサポートを提供します。 たとえば、Yahoo!、Google、Windows Live ID など</li>  <li>汎用タスク スケジューラ</li>  </ul>  <p>このアプリケーションは、Spring、Hibernate、Log4j、jqPlot など、いくつかの一般的な OSS ライブラリ上に構築されています。</p>  <p>このプロジェクトは Azure Windowsで<b></b>実行され、Java を使用した Azure Plugin for Eclipse Windowsを使用して完全に開発されました。 CloudNinja のアーキテクチャを示す図を次に示します。<b> </b></p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5554.CloudNinja1.png" alt="" border="0"></p>  <p>CloudNinja for Java Windows開発とデプロイでは、さまざまな Azure サービスを利用しました。 最も重要なものは次のとおりです。</p>  <ul>  <li><a target="_blank" href="https://azure.microsoft.com/en-us/home/features/access-control/?WT.mc_id=cmp_pst001_blg_post0097acs">Windows Azure Access Control Service</a></li>  <li><a target="_blank" href="https://www.windowsazure.com/en-us/home/features/storage/?WT.mc_id=cmp_pst001_blg_post0097sto">Windows Azure Storage</a></li>  <li><a target="_blank" href="https://www.windowsazure.com/en-us/home/features/sql-azure//?WT.mc_id=cmp_pst001_blg_post0097sql">SQL Azure</a></li>  <li>Windows Azure サービス管理</li>  </ul>  <p>CloudNinja for Java は Java コミュニティにとって有益であると考えています。また、Java 開発者には、Azure 用に独自のアプリケーションを作成Windowsしています。</p>  <p>Azure 用に Java アプリケーションをデプロイWindows、次の点を考慮する必要があります。</p>  <ul>  <li>サードパーティのツールと<sup>ランタイム</sup>をデプロイとバンドルするかどうか</li>  <li>アプリケーションの監視</li>  <li>不足している SDK 機能の処理</li>  </ul>  <h3>サードパーティ製のツール<sup>と</sup>ランタイムをデプロイとバンドルするかどうか</h3>  <p>Windows Azure Plugin for Eclipse では、Java アプリケーションと Windows Azure プロジェクトを組み合わせ、Azure にアップロードしてデプロイできるパッケージWindowsします。 Azure Windowsには、Java 環境の設定とアプリケーションの起動を担当するスタートアップ スクリプトが含まれている。次に例を示します。</p>  <ul>  <li>WAR ファイルのデプロイ</li>  <li>環境変数の&nbsp;構成Windows Eclipse 用の Azure プラグインは、Java アプリケーションと Windows Azure プロジェクトを組み合わせ、Azure にアップロードしてデプロイできるパッケージWindowsします。 Azure Windowsには、Java 環境の設定とアプリケーションの起動を担当するスタートアップ スクリプトが含まれている。次に例を示します。</li>  </ul>  <p>Windows Azure Plugin for Eclipse では、Java アプリケーションと Windows Azure プロジェクトを組み合わせ、Azure にアップロードしてデプロイできるパッケージWindowsします。 Azure Windowsには、Java 環境の設定とアプリケーションの起動を担当するスタートアップ スクリプトが含まれている。次に例を示します。</p>  <ul>  <li>Web サーバーのセットアップ (この例では Apache Tomcat)</li>  <li>JRE のセットアップ</li>  <li>WAR ファイルのデプロイ</li>  <li>環境変数の構成</li>  </ul>  <p>Azure 仮想Windowsインスタンスを起動するときに、環境を設定する必要があります。 これは、スタートアップ スクリプトによって行われます。 Tomcat と JRE は Windows Server VM イメージの一部ではなされないので、これらを自分で提供する必要があります。 Azure&rsquo; デプロイ パッケージにこれらを含めるのはWindows簡単です。 ただし、Tomcat と JRE を追加すると、パッケージ サイズに約 70 MB が追加され、ランタイム アプリケーションがデプロイに結合されます。 これにはいくつかの問題があります。</p>  <ul>  <li>Azure へのデプロイ パッケージのアップロードにはWindows時間がかかります。</li>  <li>Tomcat または JRE のバージョンを更新する場合は、パッケージ全体を再デプロイする必要があります。&nbsp;</li>  </ul>  <p>デプロイ パッケージ&rsquo;に Tomcat と JRE を含める必要はない。 上記の問題を回避するために、Azure Blob Storage にランタイムWindows格納しました。 スタートアップ スクリプトは、Blob Storage から Apache Tomcat と JRE をダウンロードし、Apache Tomcat を起動します。 仮想マシンとストレージ アカウントWindows同じデータ センターにあるので、Azure Blob Storage から仮想マシン ストレージへのダウンロードは非常に高速です。 このような Java アプリケーションのパッケージ サイズは、Apache Tomcat と JRE インストール可能の合計サイズによって縮小されました。</p>  <p>デプロイを最新の Tomcat と JRE にアップグレードする場合は、新しいバージョンを Blob Storage にコピーする必要がありました。 次に、Windows Azure portal を使用して、アプリケーションをホストしているすべての仮想マシン インスタンスを再イメージ化し、コードを再デプロイすることなく、最新の Tomcat/JRE バージョンを実行しました。&nbsp;</p>  <h3>アプリケーションの監視</h3>  <p>Windows Azure には&rsquo;、パフォーマンス カウンター、イベント ログ、ファイル ディレクトリ、および Azure インフラストラクチャ ログとクラッシュ ダンプWindowsをキャプチャできる診断モニターが備えています。 Java を使用Windows Azure プロジェクトの既定の設定では、&rsquo;診断構成は提供されません。 CloudNinja for Java では、監視する特定のパフォーマンス カウンター (主に CPU 使用率) を設定するスタンドアロン ユーティリティを作成しました。</p>  <p>また、テナントごとに使用状況の統計情報を生成するために、Tomcat アクセス ログと Storage Analytics ログを確認する必要がありました。 Tomcat ログをキャプチャするために、Tomcat がアクセス ログ Windows Azure Diagnostics格納するディレクトリ内のファイルを監視するように構成しました。 診断モニターは、アクセス ログを BLOB にプッシュし、後でワーカー プロセスからアクセスします。 Tomcat の実行中の各&rsquo;インスタンスのログにアクセスできるので、これは非常にうまく機能します。 これらのファイルは Windows Azure Storage&rsquo; に格納されているので、外部プログラムから簡単にアクセスできます。そのため、期待に従って何かが機能しない場合は、ログ ファイルを手動で検査できます。</p>  <p>BLOB ストレージの監視に関しては、ストーリーが少し変わります。 CloudNinja for Java では、テナントのロゴを BLOB ストレージに格納します。 &rsquo;Html 出力には、Apache Tomcat サーバーを経由しないこれらのロゴを直接指す画像タグがあります。これらの BLOB アクセスと関連する帯域幅をキャプチャするために、Windows Azure では Storage Analytics が提供されます。 分析には 2 種類があります。1 つの <i> </i>BLOB アクセスごとに詳細な統計情報を提供するログ記録と、1 <i> </i>時間ごとにロールアップを提供する測定です。 分析は既定で無効になっています。 CloudNinja for Java では、ユーザー アカウントのログWindows Azure Storageしました。 これらのログには、タイムスタンプ、ソース IP、アクセスされる BLOB、結果の状態 (アクセスの成功または失敗) などの詳細が表示されます。 &nbsp;Storage Analytics は、CloudNinja for Java に特に役立つ Windows Azure の大きな機能です。これは、テナント レベルのストレージ使用量をキャプチャする必要があるマルチテナント アプリケーションです。</p>  <p>デバッグ中、ログ記録は常に十分ではありません。 リモート アクセスを有効にし、開発者がアプリケーションをホストする仮想マシンに接続できるようにしました。 このWindows Azure portalを使用して、実行中の任意のインスタンスへのリモート アクセス接続を開きます。&nbsp;</p>  <h3>不足している SDK 機能の処理</h3>  <p>Azure Windowsの一部の機能は、Azure SDK for Java Windowsではまだ提供されていません。 実際に依存しているこのような機能の 1 つは、Access Control Services (ACS) です。 CloudNinja for Java で ACS を使用して、Google、Yahoo! などの複数の ID プロバイダーのいずれかを使用してテナントがログインできる必要があります。 およびライブ ID。&nbsp;</p>  <p>結局のところ、ACS には完全な REST ベースの管理インターフェイスがあります。 REST ライブラリ (Restlet) の少しの支援を受け、ACS を CloudNinja for Java に組み込む必要があります。 Azure の他の REST ベースの機能にも同じ手法をWindowsできます。 さいわい、Azure SDK for Java Windowsは、現在かなりカバーされています。</p>  <ul>  <li>サービス ランタイム</li>  <li>Storage (BLOB、キュー、テーブル)</li>  <li>Service Bus</li>  </ul>  <h3>まとめ</h3>  <p>Azure は永続的なシステムの中核となるテクノロジであり、お客様向けの Java ベースのソリューションの構築を継続しています。 Windows。 .net コードを記述しなくても、Java アプリケーションで Windows Azure のほぼすべての機能を使用できるようになりました。 これは、Java の CloudNinja で非常によく示されています。 たとえば、Microsoft &rsquo; Windows Azure SDK for Java にこのサービスの API サポートがない場合でも、ACS 管理サービスと対話します。 REST ベースの API を使用して、ACS 管理サービスと対話する証明書利用者アプリケーションを作成することができました。 &nbsp;この REST ベースのアプローチでは、あらゆるプログラミング言語で Windows Azure アプリケーションを開発する機会を得ることができます。&nbsp;</p>  <p>java の CloundNinja を参照して、Azure Windows のマルチテナントアプリケーションを構築することをお勧めします。</p>  <p>詳細については、「永続システム」ブログのブログ記事「 &ldquo; CloudNinja の &rdquo; 概要」を参照してください。</p>'
