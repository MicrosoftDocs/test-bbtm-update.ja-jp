### YamlMime:Yaml
ms.openlocfilehash: 50d2f6e50af33b997c2d0efc43bb1307d1f5b6ff
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889525"
Slug: conversion-of-sharding-database-setup-to-use-elastic-database-client-library
Title: シャード化されたデータベースのセットアップからクライアント ライブラリをElastic Databaseへの変換
Summary: '既存のセルフシャーディング ソリューションを使用し、Microsoft のエラスティック データベース ツール クライアント ライブラリを使用するためにアプリケーションを移行する SaaS アプリケーション開発者の場合は、こちらを参照してください。  '
Content: >-
  <p style="margin: 0in 0in 10pt;">&nbsp;Elastic Database クライアント ライブラリは、顧客データを多数のデータベースにパーティション分割し、アプリケーション スキーマを各データベースにレプリケートすることで、最大スケールを実現したいすべてのアプリケーション開発者に最適なツールです。これは &#39;シャーディング&#39; と呼ばれるパターンです。</p>


  <p style="margin: 0in 0in 10pt;">&nbsp;Elastic Database ツール クライアント ライブラリは、スケールアウト シナリオのためにデータ分散を定義するだけでなく、(シャード マップ管理を使用した) データ分散の管理の容易化、特定のテナントのデータが効率的なキャッシュ メカニズム (データ依存ルーティングを使用して) 格納されている適切なデータベースへの接続のルーティング、および (マルチシャード クエリを使用して) 複数のデータベース間でクエリを実行する機能にも役立ちます。</p>


  <p style="margin: 0in 0in 10pt;">&nbsp;&nbsp;&nbsp;しかし、多くの場合、質問は得る: 既存のシャード化されたソリューションがある場合、Elastic Database クライアント ライブラリを使用するためにそれを移行する方法を確認し、これらのライブラリによって提供される優良な機能の利点を得て、独自のシャーディング ソリューションを維持する必要はないでしょうか。&nbsp;&nbsp;</p>


  <p style="margin: 0in 0in 10pt;">既存のシャーディング ソリューションを使用する SaaS アプリケーション開発者で、Microsofts&rsquo; Elastic Database Tools クライアント ライブラリを使用するためにアプリケーションを移行する場合は、こちらを参照してください。<a href="https://azure.microsoft.com/en-us/documentation/articles/sql-database-elastic-convert-to-use-elastic-tools/"><u></u></a> &nbsp;</p>


  <p>エラスティック データベース クライアント ライブラリが <a href="https://azure.microsoft.com/en-us/blog/elastic-database-client-library-is-now-open-sourced/">オープン ソースに変更されました</a>。 所有者の変更を行う場合、またはコミュニティのために変更を行う場合 (はい。 投稿を受け入れるので、ソース コードは無料のレポGitHub<a href="https://github.com/Azure/elastic-db-tools"><u>してください</u></a>。</p>
