### YamlMime:Yaml
ms.openlocfilehash: 3414df726955549d37e53b8e45c1705639011977
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890486"
Slug: create-a-numbers-table-in-sql-azure
Title: 次のページで数値テーブルを作成SQL Azure
Summary: '[この記事は、チームによってSQL Azureされました。]多くの場合、CSV ファイルをテーブルに解析したり、文字列を操作したり、不足している ID (...'
Content: <p>[この記事は、チームによってSQL Azureされました。]</p><p>多くの場合、CSV ファイルをテーブルに解析したり、文字列を操作したり、不足している ID を検索したり (以下の例を参照)、さまざまな目的で数値テーブルが必要な場合があります。数値テーブルは、(カーソルを回避して) パフォーマンスを向上し、クエリを簡略化するために使用されます。 SQL Azureではすべてのテーブルにクラスター化インデックスが必要なので、SQL Server または SQL Express を使用する場合とは少し異なる方法で処理する必要があります (SELECT INTO with SQL Azure というブログ投稿を参照してください)。 次に示すのは、SQLに数値テーブルを作成する Transact-SQL Azure。</p>  <p>スクリプト:</p>  <pre class="csharpcode"><span class="kwrd">SET</span> NOCOUNT <span class="kwrd">ON</span>    <span class="kwrd">CREATE</span> <span class="kwrd">TABLE</span> Numbers (n bigint <span class="kwrd">PRIMARY</span> <span class="kwrd">KEY</span>)    <span class="kwrd">GO</span>    <span class="kwrd">DECLARE</span> @numbers <span class="kwrd">table</span>(number <span class="kwrd">int</span>);  <span class="kwrd">WITH</span> numbers(number) <span class="kwrd">as</span>  (   <span class="kwrd">SELECT</span> 1 <span class="kwrd">AS</span> number   <span class="kwrd">UNION</span> <span class="kwrd">all</span>   <span class="kwrd">SELECT</span> number+1 <span class="kwrd">FROM</span> numbers <span class="kwrd">WHERE</span> number&lt;10000  )  INSERT <span class="kwrd">INTO</span> @numbers(number)  <span class="kwrd">SELECT</span> number <span class="kwrd">FROM</span> numbers <span class="kwrd">OPTION</span>(maxrecursion 10000)    INSERT <span class="kwrd">INTO</span> Numbers(n)  <span class="kwrd">SELECT</span> number <span class="kwrd">FROM</span> @numbers</pre>      <p>日付範囲に対して同じ操作を簡単に行うことができます。 スクリプトは次のように表示されます。</p>    <pre class="csharpcode"><span class="kwrd">SET</span> NOCOUNT <span class="kwrd">ON</span>    <span class="kwrd">CREATE</span> <span class="kwrd">TABLE</span> Dates (n datetime <span class="kwrd">PRIMARY</span> <span class="kwrd">KEY</span>)    <span class="kwrd">GO</span>    <span class="kwrd">DECLARE</span> @dates <span class="kwrd">table</span>([<span class="kwrd">date</span>] datetime);  <span class="kwrd">WITH</span> dates([<span class="kwrd">date</span>]) <span class="kwrd">as</span>  (   <span class="kwrd">SELECT</span> <span class="kwrd">CONVERT</span>(datetime,<span class="str">'10/4/1971'</span>) <span class="kwrd">AS</span> [<span class="kwrd">date</span>]   <span class="kwrd">UNION</span> <span class="kwrd">all</span>   <span class="kwrd">SELECT</span> DATEADD(d, 1, [<span class="kwrd">date</span>]) <span class="kwrd">FROM</span> dates <span class="kwrd">WHERE</span> [<span class="kwrd">date</span>] &lt; <span class="str">'10/3/2060'</span>  )  INSERT <span class="kwrd">INTO</span> @dates(<span class="kwrd">date</span>)  <span class="kwrd">SELECT</span> <span class="kwrd">date</span> <span class="kwrd">FROM</span> dates <span class="kwrd">OPTION</span>(maxrecursion 32507)    INSERT <span class="kwrd">INTO</span> Dates(n)  <span class="kwrd">SELECT</span> [<span class="kwrd">date</span>] <span class="kwrd">FROM</span> @dates</pre>    <p>数値テーブルを作成したら、それを使用して主キーの ID のギャップを見つけるのに使用できます。次に例を示します。</p>    <pre class="csharpcode"><span class="rem">-- Example Table</span>  <span class="kwrd">CREATE</span> <span class="kwrd">TABLE</span> Incomplete   (       ID <span class="kwrd">INT</span> <span class="kwrd">IDENTITY</span>(1,1),      <span class="kwrd">CONSTRAINT</span> [PK_Source] <span class="kwrd">PRIMARY</span> <span class="kwrd">KEY</span> <span class="kwrd">CLUSTERED</span> ( [ID] <span class="kwrd">ASC</span>)  )      <span class="rem">-- Fill It With Data</span>  INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>   INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>   INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>   INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>   INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>   INSERT Incomplete <span class="kwrd">DEFAULT</span> <span class="kwrd">VALUES</span>     <span class="rem">-- Remove A Random Row</span>  <span class="kwrd">DELETE</span> Incomplete <span class="kwrd">WHERE</span> ID = (<span class="kwrd">SELECT</span> <span class="kwrd">TOP</span> 1 ID <span class="kwrd">FROM</span> Incomplete <span class="kwrd">ORDER</span> <span class="kwrd">BY</span> NEWID())    <span class="kwrd">GO</span>     <span class="rem">-- Find Out What That Row Is </span>  <span class="kwrd">SELECT</span> n       <span class="kwrd">FROM</span> dbo.Numbers       <span class="kwrd">WHERE</span> n <span class="kwrd">NOT</span> <span class="kwrd">IN</span> (<span class="kwrd">SELECT</span> ID <span class="kwrd">FROM</span> Incomplete)       <span class="kwrd">AND</span> n &lt; (<span class="kwrd">SELECT</span> <span class="kwrd">MAX</span>(ID) <span class="kwrd">FROM</span> Incomplete)       <span class="kwrd">ORDER</span> <span class="kwrd">BY</span> n          <span class="rem">-- if you need only the first available </span>      <span class="rem">-- integer value, change the query to </span>      <span class="rem">-- SELECT MIN(Number) or TOP 1 Number </span>     <span class="rem">-- Clean Up The Example Table</span>  <span class="kwrd">DROP</span> <span class="kwrd">TABLE</span> Incomplete</pre>    <h2>まとめ</h2>    <p>同じことを同じ方法で実行する方が優SQL Azure。 以下のコメントに投稿してください。最初にテストを行SQL Azureしてください。 質問、懸念事項、コメントはありますか? 以下に投稿すると、対処を試みることができます。</p>
