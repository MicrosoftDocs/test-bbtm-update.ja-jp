### YamlMime:Yaml
ms.openlocfilehash: 3391f303156f3f2ffe8da40dea4a068c65960f89
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892974"
Slug: introducing-windows-azure-appfabric-applications
Title: Windows Azure AppFabric アプリケーションの概要
Summary: '[この記事は AppFabric チームによって提供されました。]Karandeep Anand  &nbsp;  過去10月に投稿された PDC 2010 の基調講演では、アプリケーションの構築、実行、管理のビジョンを共有しています...'
Content: '<p>[この記事は AppFabric チームによって提供されました。]</p><p>Karandeep Anand によって投稿された</p>  <p>&nbsp;</p>  <p>10月のうち、PDC 2010 の基調講演では、アプリケーションの構築、実行、および管理の<a href="https://channel9.msdn.com/Events/PDC/PDC10/CS04" target="_blank">ビジョン</a>を、Windows Azure で確実かつ大規模に共有しています。 このチームは、ビジョンを実現するためにヘッドダウンされています。また、TechEd 2011 では、appfabric 開発者ツールを使用して AppFabric アプリケーションを構築し、appfabric コンテナーサービスで実行して、AppFabric アプリケーションマネージャーを使用して管理するための新機能の豊富なセットがリリースされることを <a href="https://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/COS311" target="_blank">発表</a> しました &rsquo; 。 本日、Windows Azure でこれらの機能の最初の Community Technology Preview (CTP) を公開できるようになったときに、その日が来たことをお知らせします。 <a href="https://blogs.msdn.com/b/appfabric/archive/2011/06/20/announcing-the-windows-azure-appfabric-june-ctp.aspx" target="_blank">ここ</a>で発表されているように、Appfabric の6月の CTP が有効になりました。最初に、新しい SDK をダウンロードし、開発者ツールして、AppFabric Labs ポータルで<b>無料</b>アカウントにサインアップします。 &rsquo;ここでは、現在リリースされている内容 &rsquo; と、AppFabric アプリケーションの構築と管理を開始する方法について詳しく説明します。</p>  <p><span style="font-size: x-small;" size="2"><strong>AppFabric アプリケーション</strong></span></p>  <p>まず、AppFabric アプリケーションを使用 &rsquo; する場合の意味を定義します。 簡単に言うと、これは web 層、中間層、およびデータ層にまたがり、外部サービスを使用して作成され、スケールと可用性のためにクラウドアーキテクチャに本質的に記述される、n 層の .NET アプリケーションです。 CTP1 では、SQL Azure、appfabric キャッシュ、appfabric Service Bus、Azure Storage などの他の Windows Azure サービスを使用する ASP.NET、WCF、Windows ワークフロー (WF) アプリケーションのための、すぐに使えるエクスペリエンスに焦点を絞っています。 目標は、アプリケーション開発者と Isv が、これらのテクノロジを利用して、クラウドでスケーラブルで可用性の高いアプリケーションを構築および管理できるようにすることです。 さらに、この目標は、AppFabric 開発者ツールと AppFabric アプリケーションマネージャーを使用して開発者と IT プロフェッショナルの両方を支援し、アプリケーションのライフサイクル全体を管理して、コーディングやテストから展開および管理できるようにすることです。</p>  <p>次に、パズルの3つの主要な部分と、これらすべてがどのように連携して AppFabric アプリケーションのライフサイクルを進めるかについて詳しく見ていきましょう &rsquo; 。</p>  <ol>  <li><b>開発者ツール</b></li>  <li><b>AppFabric コンテナー</b></li>  <li><b>アプリケーションマネージャー</b></li>  </ol>  <p>  <p><span style="font-size: x-small;" size="2"><strong>開発者ツール</strong></span></p>  <p>appfabric 開発者ツールは、appfabric アプリケーションを構築およびデバッグするために、デザイン時に豊富な Visual Studio エクスペリエンスを提供します。 開発者ツールの主な目的は、.net 開発者が .net framework および Visual Studio の既存のスキルと知識を活用して、クラウド対応アプリケーションを構築できるようにすることです<i>。これに</i>より、Azure の Windows が非常に簡単になります。 開発者ツールは、.NET アプリケーションを構築するための既存の方法を拡張したものです。 また、追加のツールを使用すると、開発者は web および中間層で実行されるビジネスおよびプレゼンテーションロジックを作成できるだけでなく、充実したサービスコンポジションエクスペリエンスを通じて他のサービスを構成すること <i>によって</i> 、アプリを簡単に強化および拡張することができます。</p>  <p>開発者ツールの最初の目標は、開発者が既にわかっている概念を基にして、クラウド対応 &mdash; のスケーラブルな &mdash; アプリケーションを構築できるようにすることです。 AppFabric コンテナーサービスは、弾力的スケーリングを大量に処理し、アプリケーションの可用性と信頼性を高めます。 開発者ツールでは、開発者がアプリケーションコードでこれらの機能を活用するために必要な一連の設計原則と構成のノブを distilled し、WCF サービスやワークフローなど、すぐに使用できる構成設定を使用してこれらの機能を提供しました。 さらに、スケーラブルで回復力のあるステートフルサービスの状態管理を行うための強力なプログラミングモデルも提供しますが、その詳細については後で詳しく説明します。 開発者は、必要な制御量に応じて、スケールインスタンスの数、レプリカの数、パーティション分割ポリシーありのインテントを指定します。または、既定の設定を使用して、そのほとんどをランタイムが管理できるようにすることもできます。 どのような場合でも、Azure にデプロイされたときのアドレスの仮想化や自動アドレス解決といった基本的なクラウド設計原則は、基盤となるコンピューティングまたはネットワークインフラストラクチャを意識する必要なく、自動的に処理されます。</p>  <p>2番目の目標は、今日の主要な傾向に基づいています。俊敏性を維持し、競争力を維持するために、開発者はコアオファリングに価値を追加するコードの作成に集中して、既存のサービスを使用したり、既存のサービスを使用して作成したりする必要があります。 既存の web サービスの大規模なエコシステムにより、基本的な id とアクセスを管理したり、地理的に分散した複雑なマルチパーティ支払いを処理したりすることができます。 そのため、サービス構成は後ではなく、アプリケーションの設計と構築の中核となる部分です。 これは、AppFabric 開発者ツールエクスペリエンスの主要な設計原則の1つになりました。 これらのツールは、キャッシュや Storage などのファーストパーティの Azure サービスを使用してアプリケーションを作成するためのシンプルで強力なエクスペリエンスを提供し、Netflix や PayPal などの外部サービスを利用できます。 開発者ツールの機能拡張により、すぐに出荷されるサービスコンポーネントの一覧を使用して、3つの<sup>rd</sup> パーティサービスまたは独自の頻繁に使用されるカスタムサービスを含めることができます。 次のスクリーンショットは、ASP.Net や cache (blue) などの既製の出荷サービスコンポーネントの一覧と、Authorize.Net や Facebook (black) などのカスタムサービスコンポーネントの例を示しています。</p>  <p><a href=""><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7674.clip_5F00_image002_5F00_thumb_5F00_563F6B3F.jpg" width="512" height="387"></a></p>  <p>開発をすばやく開始するために、キャッシュを使用した高パフォーマンス ASP.NET アプリケーションや豊富な Silverlight ビジネスアプリケーションなどの一般的に使用されるパターンを使用してアプリケーションを構築するためのいくつかのテンプレートが用意されています。 これらのテンプレートは開発者ツールの一部としてインストールされ、AppFabric アプリケーションの構築を簡単に開始することができます。</p>  <p>3番目の重要な目標は、開発者がアプリケーション全体をビルドしてデバッグできるようにすることです。 島である web サイトまたは WCF サービスはありません。各は、エンドツーエンドの多層アプリケーションの一部です。 AppFabric 開発者ツールを使用すると、web 層、中間層、およびデータ層 &mdash; に分散して配布されるアプリケーションを構築して実行するためのローカルシミュレーションを行うことができますが、azure 開発者が既に使い慣れている既存の Windows Azure コンピューティング Emulator の上に構築することができます。</p>  <p>最後にピボットを行うのは、開発者が web および中間層のコードの成果物、データベースとストレージのリソース、およびアプリケーションによって参照されるさまざまな外部サービスに関して、エンドツーエンドの多層アプリケーションを簡単に定義できるようにすることです。 このメタデータは、コンポジションモデルとして自動的にキャプチャされ <b>ます。</b> その後、モデルはアプリケーションと共にパッケージ化されるため、管理システム (A<b>p Manager</b>) はアプリケーションのライフサイクルを簡単に管理するために使用できます。</p>  <p>CTP1 では、まず、これらの主要な原則を中心に構築された <i>エンドツーエンド</i> の開発者エクスペリエンスを有効にすることを目標としています。 &rsquo;開発ライフサイクルの各ステップについて、ツールの今後のイテレーションを通じて、より充実したエクスペリエンスを構築します。</p>  <p><span style="font-size: x-small;" size="2"><strong>AppFabric コンテナー</strong></span></p>  <p><b>AppFabric コンテナー</b>サービスは、WCF や WF などの中間層コードをホストし、高可用性を備えた大規模なカスタムコードを実行するための、新しいマルチテナント中間層コンテナーです。 基本的には、AppFabric コンテナーは、回復性、拡張性、マルチテナントとして設定され、カスタムコード、WCF サービス、またはワークフローを実行するために必要なフレームワークとランタイムが事前に準備されているコンピューターの大規模なクラスターで構成されています。 AppFabric コンテナーを使用すると、基礎となるコンピューティング、ネットワーク、およびストレージインフラストラクチャの複雑さに対処する必要がないように、開発者と管理者の抽象化レベルを上げること &rsquo; ができます。 開発者はビジネスロジックに集中し、パーティション分割、レプリケーション、状態管理、アドレスの仮想化、動的なアドレス解決、フェールオーバー、分離、回復性、負荷分散、要求ルーティングありの複雑な詳細をランタイムが管理できるようにします。 アプリケーションマネージャーを使用して、または Visual Studio から直接、WCF サービス、ワークフロー、またはカスタム .net コードを AppFabric コンテナーにパッケージ化してドロップするだけで、コンテナーホストの実行とスケールを行うことができます。 その後、アプリケーションマネージャーを使用して、サービスのサービスレベル目標を再び管理します。</p>  <p>さらに、AppFabric コンテナーは、WCF &amp; Windows ワークフロー (WF) の両方に対して、豊富なホスティングシナリオ &amp; 構成を可能にします。 仲介型サービス (メッセージによってアクティブ化された WCF サービスなど) は、AppFabric コンテナーと Service Bus の統合を使用してビルドおよび実行できます。 また、状態の永続化を容易にし、管理エンドポイントを介してビジネスプロセスの可視性を提供してインスタンスの状態を取得できるようにすることで、AppFabric コンテナーで豊富な WF アプリケーションを実行できます。 &rsquo;今後のブログ投稿では、AppFabric コンテナーを使用して Windows Azure で実行する WCF &amp; WF アプリケーションの構築について、さらに詳しく説明します。</p>  <p><span style="font-size: x-small;" size="2"><strong>アプリケーションマネージャー</strong></span></p>  <p>アプリケーションマネージャーがパズルの最後の部分です。 これは、すべての AppFabric アプリケーションをライフサイクルを通じて管理できるようにするインフラストラクチャとツールであり、<i>すべて1つの論理アプリケーションとして</i>、そのライフサイクル &mdash; の構成、デプロイ、制御、監視、トラブルシューティング、およびスケーリングを行うことができます。 また、アプリケーションのメタデータ (コンポジションモデル) を使用して、多階層アプリケーションのコンポーネント、依存関係、および要件を自動的に把握し、必要なこと &rsquo; がないようにします。 次のスクリーンショットは、web、中間層、およびデータ層にまたがるサンプルアプリケーションを示しています。このアプリケーションは Windows Azure と外部<sup>サードパーティの</sup>サービスを使用していますが、アプリケーションマネージャーで<i>1 つの単位</i>として管理されています。</p>  <p><a href=""><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image004" border="0" alt="clip_image004" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6254.clip_5F00_image004_5F00_thumb_5F00_2296D4B2.jpg" width="789" height="636"></a></p>  <p>N 層アプリケーションを公開またはアップロードするときにアプリケーションマネージャーが行う最初の作業の1つは、アプリケーションのエンドツーエンドの構造とその内容を理解するのに役立ちます。 これにより、アプリケーション全体とそのすべての部分を一元的に <b>構成</b> できます。これには、タイムアウトの設定や同時接続数の設定などの詳細な WCF 構成設定 &mdash; や、運用環境とステージング環境のどちらのデータベースに接続するかなどの単純な環境設定が含まれます。 アプリケーションの構成が完了すると、1回のクリックで、複数の web コンテナーと AppFabric コンテナーにアプリケーション全体を <b>デプロイ</b> できます。 また、アプリケーションを内部および外部で参照されるすべてのサービスに対して配線します。これには、SQL Azure、キャッシュ、Blob Storage、Service Bus キューなどが含まれますが、制限はありません。また、Access Control Service (ACS) を使用して名前空間をセキュリティで保護します。 複数の層にまたがる分散アプリケーションを展開した場合、アプリケーションマネージャーがシングルクリックで実行するすべての問題が認識されます。 また、仮想マシン、ネットワーク設定、またはストレージ構成に対処する必要はありません。</p>  <p>アプリケーションマネージャーは、アプリケーションを一元的に構成して展開するだけでなく、アプリケーションをセキュリティで保護するために証明書を管理し、アプリの監視と診断のストアを自動的に構成し、デプロイされたサービスの適切なエンドポイントと Uri を名前空間に作成するのにも役立ちます。</p>  <p>アプリケーションマネージャーにおけるその他の重要な投資は、アプリケーションの監視とトラブルシューティングのサポートをすぐに利用できます。 デプロイしたアプリケーションの使用を開始すると、さまざまなメトリックが自動的に生成され、アプリケーション &mdash; に対して、要求数などの基本 ASP.NET メトリック、ASP.NET および WCF サービスの待機時間を要求したり、SQL DB 呼び出しの実行時間をキャッシュが呼び出された回数に設定したりすることができ &rsquo; ます。 開発中に1行のコードを記述しなくても、すべてになります。 これらのメトリックは、web および AppFabric コンテナーで実行されているスケールアウトアプリケーションのすべてのインスタンスで集計されます。 また、たとえば、アプリケーションから参照する PayPal サービスなど、カスタムコンポーネントを構築した場合は、CTP1 でカスタムメトリックを生成することもできます。 これにより、送信された注文の数、$1000 で処理された注文の数などのアイテムの追跡を開始できます。また、アプリケーションマネージャの豊富なグラフコントロールを使用して、その他の既定のメトリックと共に表示されるカスタムメトリックを確認できます。</p>  <p>同様の行で、すべてのトラブルシューティングログを収集して一元管理することにより、分散アプリケーションのトラブルシューティングをより簡単に行うことができまし &rsquo; た (ビルド時にアプリの診断レベルを選択します)。これにより、アプリがデプロイされるすべての web および AppFabric コンテナーから、任意の時点での診断レベルを選択できます。 すべてのログは、アプリケーションマネージャーの1つの場所から利用できます。また、Svctraceviewer.exe ツールでダウンロードしたログを開いて、詳細なデバッグと診断を行うことができます。 大量のスクリプトを作成し、ファイルを介してピアリングし、アプリケーションの問題からインフラストラクチャの問題を分離する必要がなくなりました。 すべてのログは、UI を通じて取得され、プログラムによって REST API によって取得されます。 はい、独自のカスタムダッシュボードと管理ツールを使用して、UI によって可能なものを自動化またはプログラムによってアクセスするための完全な REST API (および PowerShell サンプルも提供します) を提供しています。</p>  <p>最後ではありませんが、アプリケーションマネージャーを使用すると、アプリケーションをシングルクリックでスケールアウトできます。 アプリケーションのさまざまな部分のスケールを設定するインスタンスの数を選択します (CTP1 の最大スケールカウントには、請求に対する支払いによる制限があります)。 また、アプリケーションを自動的に voila &mdash; し、ダウンタイムを発生させることなく弾力的をスケールアウトします。</p>  <p>CTP1 ビット &rsquo; で実行できるすばらしい機能や強力な機能について説明しますが、このブログ記事では、このテクノロジのプレビューを共有することをお待ちしています。私たちは、試してみて、構築したすべてのもの &rsquo; を見つけることができることを期待 &rsquo; しています。 また、アプリケーションの構築と管理を次のレベルへと話します。 また、CTP1 のための容量が限られているため、無料アカウントにすばやくサインアップできます。</p>  <p>これまでに優れたロードマップを用意しましたが &rsquo; 、今後のブログ投稿 &ndash; では、CTP1 の経験につい<a href="https://social.msdn.microsoft.com/Forums/en-US/appfabricctp" target="_blank">て話し</a>ます。 &rsquo; 本日の3つの主要部分 &rsquo; にわたるさまざまなシナリオ、機能、機能についてさらに詳しく説明していく、今後数週間 &rsquo; のブログ投稿をご覧ください。 これらのサンプルは、AppFabric June CTP SDK と共にインストールされます。または、 <a href="https://msdn.microsoft.com/en-us/library/hh182177.aspx" target="_blank">MSDN</a>で入手できるチュートリアルを使用して開始することもできます。 また、この <a href="https://channel9.msdn.com/Shows/AppFabric-tv/AppFabrictv-Announcing-the-Windows-Azure-AppFabric-June-CTP" target="_blank">短いビデオ</a> では、Ron Jacobs を使用して、前述の概要とデモ &rsquo; を簡単に行うことができました。</p>  <p>Windows Azure で充実したクラウドアプリケーションを構築して管理する新しい時代にようこそ。</p>  <p><a href="" target="_blank"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image005" border="0" alt="clip_image005" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5315.clip_5F00_image005_5F00_259A773D.png" width="184" height="104"></a></p>  <p>AppFabric チーム用の Karandeep Anand</p>'
