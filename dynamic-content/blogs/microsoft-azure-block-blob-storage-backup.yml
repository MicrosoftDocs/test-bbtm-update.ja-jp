### YamlMime:Yaml
ms.openlocfilehash: 950d9326782e2f1ab43f629158da93c436ab830d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895002"
Slug: microsoft-azure-block-blob-storage-backup
Title: Azure Block Blob Storage バックアップ
Summary: Azure Blob Storage は、Microsoft のクラウド用オブジェクト ストレージ ソリューションです。 Blob Storage は、分散アクセス用に、イメージ、ドキュメント、およびその他の種類のファイルを格納するのに最適です。 さまざまなシナリオで使用する方法の詳細については、「Azure のオブジェクトストレージの概要」を参照してください。
Content: >-
  <p>Azure Blob Storage は、Microsoft&#39;s 非常にスケーラブルなクラウドオブジェクトストアです。 Blob Storage は、イメージ、ドキュメント、その他のファイルの種類などの非構造化データを格納する場合に最適です。 さまざまなシナリオで使用する方法の詳細については、「 <a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction" target="_blank">Azure のオブジェクトストレージの概要</a> 」を参照してください。</p>


  <p>Azure Blob Storage のデータは、持続性と高可用性を確保するために常にレプリケートされます。 Azure Storage のレプリケーションでは、計画されたイベントや計画外のイベント (一時的なハードウェア障害、ネットワークの停止または停電、大規模な自然災害など) からデータが保護されるようにデータがコピーされます。 同じデータ センター内、同じリージョンのゾーンのデータ センターとの間、さらにはリージョンとの間でデータをレプリケートすることを選択できます。 <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-introduction#replication" target="_blank">ストレージレプリケーションの詳細について</a>は、こちらを参照してください。</p>


  <p>Blob storage ではすぐにレプリケーションがサポートされますが、データのレプリケーションではアプリケーションエラーに対する保護が行われないことを理解しておくことが重要&#39;ます。 アプリケーション層で発生した問題は、Azure Storage 管理するレプリカにもコミットされます。 このため、Azure Storage で blob データのバックアップを保持することが重要な場合があります。&nbsp;</p>


  <p>現在 Azure Blob Storage &rsquo; は、ブロック blob をバックアップするためのすぐに使用するソリューションを提供していません。 このブログ投稿では、作成、置換、削除の各操作のブロック blob を含むストレージアカウントの週単位の完全な増分バックアップと毎日の増分バックアップを実行するために使用できるバックアップソリューションを設計します。 このソリューションでは、ストレージアカウントの回復が必要である必要があります。</p>


  <p>このソリューションでは、次のテクノロジを使用して、このバックアップ機能を実現します。</p>


  <p>このシナリオでは、毎日の増分バックアップをサポートするために Azure Storage キューにイベントを発行します。</p>


  <ul>
      <li><a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azcopy" target="_blank">Azcopy</a> &ndash;azcopy は、最適なパフォーマンスを実現するシンプルなコマンドを使用して、Blob、ファイル、およびテーブルストレージ Microsoft Azure との間でデータをコピーするために設計されたコマンドラインユーティリティです。 ファイル システムとストレージ アカウント間、またはストレージ アカウント間でデータをコピーできます。 このシナリオでは、AzCopy を使用して完全バックアップ機能を実現し、それを使用して1つのストレージアカウントから別のストレージアカウントにコンテンツをコピーします。</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview" target="_blank">Eventgrids</a> &ndash;Azure Storage イベントを使用すると、アプリケーションは blob の作成と削除に対応できます。これにより、複雑なコードやコストがかかり、効率の悪いポーリングサービスが不要になります。 代わりに、イベントは、Azure Event grid を介して Azure Functions、Azure Logic Apps、Azure Storage キューなどのサブスクライバーにプッシュされます。</li>
      <li><a href="https://docs.microsoft.com/sl-si/azure/event-grid/custom-event-to-queue-storage" target="_blank">Event Grid 拡張機能</a> &ndash; &nbsp;ストレージイベントを Azure Queue storage に格納します。 <b>このブログの執筆時点では、この機能はプレビュー段階です。これを使用するには、Azure CLI 用の Event Grid 拡張機能をインストールする必要があります。Az extension add-name eventgrid を使用してインストールできます。 </b></li>
      <li>Azure Queue Storage からイベントを読み取るためのリスナーをホストする Docker コンテナー &ndash; 。 ブログに記載されているサンプルコードは .Net core アプリケーションであり、任意のプラットフォームでホストでき、docker コンテナーに依存していないことに注意してください。</li>
      <li><a href="https://azure.microsoft.com/en-in/services/storage/tables/" target="_blank">Azure Table Storage</a> &ndash;これは、増分バックアップのイベントメタデータを保持し、再ストアの実行中に使用するために使用されます。 Azure SQL、Cosmos DB など、任意のデータベースに格納されているイベントメタデータを使用することもできます。データベースを変更するには、サンプルソリューションでコードを変更する必要があります。</li>
  </ul>


  <h2>はじめに</h2>


  <p>現場の経験に基づいて、ほとんどのお客様は特定のスケジュールで作成された完全バックアップと増分バックアップが必要であることに気付きました。 &rsquo;たとえば、週単位の完全バックアップと毎日の増分バックアップを使用する必要があるとします。 災害が発生した場合は、バックアップセットを使用して blob を復元する機能が必要です。</p>


  <h2>高レベルアーキテクチャ/データフロー</h2>


  <p>ここでは、増分バックアップをサポートするために提案されたソリューションのアーキテクチャとデータフローの概要について説明します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a7785016-fb25-4221-940c-6e4ad6c37f59.png"><img alt="clip_image002" border="0" height="511" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e2a14c0c-6a8c-46c0-b26b-d2996821319e.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="clip_image002" width="824"></a></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e8bdd515-5b3b-4be3-9501-e5872fd1918d.png"><img alt="clip_image002[6]" border="0" height="455" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bccabfff-8945-4d15-b6af-1f8672690516.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="clip_image002 [6]" width="809"></a></p>


  <p>次に示すのは、ソースストレージアカウントからコピー先のストレージアカウントに増分バックアップのデータをコピーするときに、.Net Core ベースのリスナーが続く詳細なロジックです。</p>


  <p>バックアップ操作の実行中、リスナーは次の手順を実行します。<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31d77b17-ca9a-4af5-8ac5-0496a9b3db64.png"><img align="right" alt="image" border="0" height="475" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1d773edf-6f3a-42d0-8d63-91d4a9a42423.png" style="border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" title="絵" width="217"></a></p>


  <ol>
      <li>2018 &rdquo; のような &ldquo; 年ごとに、コピー先のストレージアカウントに新しい blob コンテナーを作成します。</li>
      <li>Wk21 &rdquo; のような &ldquo; year コンテナーの下に、週ごとに論理サブフォルダーを作成します。 Wk21 でファイルが作成または削除されていない場合、論理フォルダーは作成されません。 週番号を決定するために CalendarWeekRule が使用されてい<a href="https://msdn.microsoft.com/en-us/library/system.globalization.calendarweekrule(v=vs.110).aspx" target="_blank">ます。</a></li>
      <li>Dy0、dy1、dy2 のような年と週のコンテナーで曜日ごとに論理サブフォルダーを作成します。 1日に作成または削除されたファイルがない場合は、その日の論理フォルダーは作成されません。</li>
      <li>ファイルのコピー中に、リスナーはソースコンテナー名をコピー先のストレージアカウント内の論理フォルダー名に変更します。</li>
  </ol>


  <p>例:</p>


  <p>SSA1 (ソース Storage アカウント)- &gt; <b>イメージ (コンテナー)</b> &ndash; &gt; Image1.jpg</p>


  <p>は次のように移動します。</p>


  <p>DSA1 (送信先 Storage アカウント)- &gt; 2018 <b>(コンテナー)</b> - &gt; WK2 (論理フォルダー &gt; )-dy0 (論理フォルダー)- &gt; <b>イメージ (論理</b> &ndash; &gt; フォルダー) Image1.jpg</p>


  <h3>増分バックアップを構成する手順の概要を次に示します。</h3>


  <ol>
      <li>バックアップを実行する新しいストレージアカウント (宛先) を作成します。</li>
      <li>作成/置換および削除イベントを Azure Storage キューに格納するために、ストレージアカウント (ソース) の event grid サブスクリプションを作成します。 <a href="https://github.com/Azure-Samples/storage-block-blob-dotnet-backup" target="_blank">サブスクリプションを設定するコマンド</a>は、サンプルサイトで提供されています。</li>
      <li>Azure Table storage にテーブルを作成します。このテーブルには、event grid イベントが最終的に .Net リスナーによって格納されます。</li>
      <li>増分バックアップの取得を開始するように .Net リスナー (バックアップユーティリティ) を構成します。 ストレージアカウントの負荷に基づいて、バックアップを実行するために必要な数だけ、このリスナーのインスタンスが存在する可能性があることに注意してください。 <a href="https://github.com/Azure-Samples/storage-block-blob-dotnet-backup" target="_blank">リスナーの構成の詳細に</a> ついては、サンプルサイトをご確認ください。</li>
  </ol>


  <h3>完全バックアップを構成する手順の概要を次に示します。</h3>


  <ol>
      <li>開始日時に AZCopy をスケジュールし <i>ます。つまり</i>、データ全体をソースストレージアカウントからコピー先のストレージアカウントに移動するには、日曜日 12:00 AM に設定します。</li>
      <li>AZcopy を使用して、fbkp &rdquo; など &ldquo; の論理フォルダー内のデータを、宛先ストレージアカウントの対応する year コンテナーと week フォルダーに移動します。</li>
      <li>VM 上の AZCopy、Jenkins ジョブなどを、テクノロジランドスケープに応じてスケジュールできます。</li>
  </ol>


  <p>災害が発生した場合、ストレージアカウントを復元するオプションがあります。これを行うには、1週間分の完全バックアップをベースとして選択し、増分バックアップからその上に変更を適用します。 推奨されるオプションはオプションの1つです。増分バックアップのログのみを適用して復元することを選択できますが、再ストアの期間によっては時間がかかることがあります。</p>


  <h3>復元を構成する手順の概要を次に示します。</h3>


  <ol>
      <li>データを復元する必要がある新しいストレージアカウント (変換先) を作成します。</li>
      <li>AZCopy を使用してコピー先のストレージアカウントに、完全バックアップフォルダー &ldquo; fbkp &rdquo; からデータを移動します。</li>
      <li>復元する開始日と終了日を指定して、増分復元プロセスを開始します。 構成の詳細については、サンプルサイトをご確認ください。</li>
  </ol>


  <p>たとえば、復元プロセスでは、復元を実行するために、期間が01/08/2018 になる01/10/2018 までテーブルストレージのデータを順番に読み取ります。</p>


  <p>復元プロセスでは、各読み取りレコードに対して、コピー先のストレージアカウントのファイルが追加、更新、または削除されます。</p>


  <h2>サポートされている Artifacts</h2>


  <p><a href="https://github.com/Azure-Samples/storage-block-blob-dotnet-backup" target="_blank">バックアップソリューションをセットアップ</a>するためのソースコードと指示を参照してください。</p>


  <h2>考慮事項/制限事項</h2>


  <ul>
      <li>Blob Storage イベントは、Blob Storage アカウントと General Purpose v2 ストレージアカウントでのみ使用できます。 そのため、バックアップ用に構成されたストレージアカウントは、Blob ストレージアカウントまたは General Purpose V2 アカウントのいずれかである必要があります。 詳細については、 <a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview" target="_blank">Blob Storage イベントに関するドキュメントへ</a>の対応に関するページを参照してください。</li>
      <li>Blob ストレージイベントは、作成、置換、および削除のために発生します。 このため、 <b>blob に対する変更は現時点ではサポートされていません </b>が、最終的にサポートされる予定です。</li>
      <li>ユーザーが T1 でファイルを作成し、T10 で同じファイルを削除した場合、バックアップリスナーがその &rsquo; ファイルをコピーしていないと、バックアップからそのファイルを復元できなくなります。 このようなシナリオでは、ストレージアカウントで <a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete" target="_blank">論理的な削除</a> を有効にし、論理削除からの復元をサポートするようにソリューションを変更するか、これらの不足しているファイルを手動で回復することができます。</li>
      <li>Restore はログを順番に読み取ることによって復元操作を実行するため、完了までにかなりの時間がかかることがあります。 実際の時間は、時間単位または日単位で指定でき、正しい期間はテストを実行することによってのみ決定できます。</li>
      <li>1週間分の完全バックアップを実行するために使用される AZCopy。 実行時間はデータサイズによって異なり、数時間または数日にわたって使用できます。</li>
  </ul>


  <h2>まとめ</h2>


  <p>このブログ投稿では、Azure Blob の別のストレージアカウントに増分バックアップサポートを追加する方法について、概念実証を説明しまし &rsquo; た。 必要なものに合わせてカスタマイズした独自のソリューションを作成できるように、必要なコードサンプル、説明、および各手順の背景が説明されています。</p>


  <ul>

  </ul>
