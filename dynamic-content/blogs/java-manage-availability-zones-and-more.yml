### YamlMime:Yaml
ms.openlocfilehash: 07f65fd402e615e3a4a897dc58704ad9ba313011
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891549"
Slug: java-manage-availability-zones-and-more
Title: 'Java: 可用性ゾーンの管理など'
Summary: 'Azure Management Libraries for Java の 1.3 をリリースしました。 このリリースでは、可用性ゾーン (プレビュー) のサポートが追加されます。 '
Content: "<p>Azure Management Libraries for Java の 1.3 をリリースしました。 このリリースでは、可用性ゾーン (プレビュー) のサポートが追加されます。</p>\n\n<h4><a href=\"https://github.com/Azure/azure-sdk-for-java\" title=\"https://github.com/Azure/azure-sdk-for-java\">https://github.com/Azure/azure-sdk-for-java</a></h4>\n\n<h2>作業の開始</h2>\n\n<p>1.3 バージョンのライブラリを使用POM ファイル次の依存関係フラグメントを Maven ファイルに追加します。</p>\n\n<pre class=\"prettyprint\">\n&lt;dependency&gt;\n    &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;\n    &lt;artifactId&gt;azure&lt;/artifactId&gt;\n    &lt;version&gt;1.3.0&lt;/version&gt;\n&lt;/dependency&gt;\n</pre>\n\n<h2>可用性ゾーンに仮想マシンを作成する</h2>\n\n<p>define<em>() create() &hellip;</em> メソッド チェーンを使用して、可用性ゾーンに仮想マシン インスタンスを作成できます。<a href=\"https://github.com/azure-samples/compute-dotnet-manage-vms-in-availability-zones\"></a></p>\n\n<pre class=\"prettyprint\">\nVirtualMachine = azure.virtualMachines()\n    .define(&quot;Linux-VM-in-Availability-Zone&quot;)\n    .withRegion(Region.US_EAST2)\n    .withNewResourceGroup(rgName)\n    .withNewPrimaryNetwork(&quot;10.0.0.0/28&quot;)\n    .withPrimaryPrivateIPAddressDynamic()\n    .withNewPrimaryPublicIPAddress(&quot;linux-vm-with-high-availability&quot;)\n    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n    .withRootUsername(&quot;tirekicker&quot;)\n    .withSsh(sshKey)\n    // Optional\n    .withAvailabilityZone(AvailabilityZoneId.ZONE_1)\n    .withSize(VirtualMachineSizeTypes.STANDARD_D3_V2)\n    // Create VM\n    .create();\n</pre>\n\n<h2>可用性ゾーンに仮想マシン スケール セットを作成する</h2>\n\n<p>別 <a href=\"https://github.com/azure-samples/compute-java-manage-vmss-in-availability-zones\">の</a> <em>define() &hellip; create()</em> メソッド チェーンを使用して、複数の可用性ゾーンに仮想マシン スケール セット インスタンスを作成できます。</p>\n\n<pre class=\"prettyprint\">\nVirtualMachineScaleSet virtualMachineScaleSet1 = azure.virtualMachineScaleSets()\n    .define(&quot;VM-Scale-Set-in-Availability-Zone&quot;)\n    .withRegion(Region.US_EAST2)\n    .withExistingResourceGroup(rgName)\n    .withSku(VirtualMachineScaleSetSkuTypes.STANDARD_D3_V2)\n    .withExistingPrimaryNetworkSubnet(network, &quot;front-end&quot;)\n    .withExistingPrimaryInternetFacingLoadBalancer(loadBalancer)\n    .withPrimaryInternetFacingLoadBalancerBackends(backends.get(0))\n    .withPrimaryInternetFacingLoadBalancerInboundNatPools(natpools.get(0))\n    .withoutPrimaryInternalLoadBalancer()\n    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n    .withRootUsername(&quot;tirekicker&quot;)\n    .withSsh(sshKey)\n    // Optional \n    .withAvailabilityZone(AvailabilityZoneId.ZONE_1)\n    // Create VM\n        .create();\n</pre>\n\n<h2>その他の Azure サービスのサポート</h2>\n\n<p>1.3 では、ネットワーク ピアリング、ゲートウェイ、Virtual Networkのサポートも追加Azure Container Instances。</p>\n\n<h3>2 つの仮想ネットワークのピアリング</h3>\n\n<p>別 <a href=\"https://github.com/azure-samples/network-java-manage-network-peering\">の</a> <em>define() create() メソッド チェーンを使用して、2 &hellip; つの仮想ネットワークを</em> ピアリングできます。</p>\n\n<pre class=\"prettyprint\">\nNetworkPeering peeringAB = networkA.peerings()\n   .define(peeringABName)\n   .withRemoteNetwork(networkB)\n   .create();\n</pre>\n\n<p>network <a href=\"https://github.com/azure-samples/network-java-use-network-watcher-to-check-connectivity\">watcher を使用して、ピアリングされた仮想ネットワーク内の仮想マシン間</a> の接続を確認できます。</p>\n\n<h3>サイト間接続を使用して仮想プライベート ネットワーク (VPN) を作成する</h3>\n\n<p>別<a href=\"https://github.com/azure-samples/network-java-manage-virtual-network-with-site-to-site-vpn-connection\">の</a> <em>define() create() &hellip;</em> メソッド チェーンを使用して、仮想プライベート ネットワークサイト間接続を作成できます。</p>\n\n<pre class=\"prettyprint\">\nvirtualNetworkGateway.connections()\n    .define(&quot;My-Connection&quot;)\n    .withSiteToSite()\n    .withLocalNetworkGateway(localNetworkGateway)\n    .withSharedKey(&quot;MySecretKey&quot;)\n    .create();\n</pre>\n\n<p>仮想ネットワーク <a href=\"https://github.com/azure-samples/network-java-manage-virtual-network-to-virtual-network-vpn-connection\">間 VPN 接続を作成できます</a>。</p>\n\n<h3>コンテナー グループを Azure Container Instances</h3>\n\n<p>別の define() create() <a href=\"https://github.com/azure-samples/aci-java-create-container-groups\">メソッド チェーンを使用して、複数</a> のコンテナー インスタンス <em>を含む &hellip; コンテナー グループを</em> 作成できます。</p>\n\n<pre class=\"prettyprint\">\nContainerGroup containerGroup = azure.containerGroups().define(&quot;azureContainerInstance&quot;)\n    .withRegion(Region.US_WEST)\n    .withNewResourceGroup(rgName)\n    .withLinux()\n    .withPublicImageRegistryOnly()\n    .withoutVolume()\n    .defineContainerInstance(aciName + &quot;-1&quot;)\n        .withImage(containerImageName1)\n        .withExternalTcpPort(80)\n        .withCpuCoreCount(.5)\n        .withMemorySizeInGB(.75)\n        .attach()\n    .defineContainerInstance(aciName + &quot;-2&quot;)\n        .withImage(containerImageName2)\n        .withoutPorts()\n        .withCpuCoreCount(.5)\n        .withMemorySizeInGB(.75)\n        .attach()\n    .create();\n</pre>\n\n<p>同様に、次の処理を行います。</p>\n\n<ul>\n <li><a href=\"https://github.com/azure-samples/aci-java-manage-container-instances-1\">新しい Azure ファイル共有を使用してコンテナー グループを作成する</a></li>\n <li><a href=\"https://github.com/azure-samples/aci-java-manage-container-instances-2\">既存の Azure ファイル共有を使用してコンテナー グループを作成する</a></li>\n <li>Kubernetes を使用してコンテナー グループを作成し、コンテナーをスケールアップAzure Container Service</li>\n</ul>\n\n<h2>[試用版]</h2>\n\n<p>他のサンプルは、お使いの <a href=\"https://github.com/azure/azure-sdk-for-java#sample-code\">GitHubできます</a>。 試して、ご意見をお寄せください (以下 <a href=\"mailto:mailto:java@microsoft.com\">の電子メール</a> またはコメントを介して)。<br>\n&nbsp;<br>\nAzure 上の Java に関する多くの追加情報については、 を参照してください <a href=\"https://azure.com/java\">https://azure.com/java</a>。</p>"
