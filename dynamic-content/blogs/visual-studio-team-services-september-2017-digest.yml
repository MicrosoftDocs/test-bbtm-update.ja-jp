### YamlMime:Yaml
ms.openlocfilehash: 27707be0fd9ef1dd612dc5754b76ce6ff4a47a61
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891903"
Slug: visual-studio-team-services-september-2017-digest
Title: 'Visual Studio Team Services での brewing の概要: 2017 年9月ダイジェスト'
Summary: Visual Studio Team Services には、効率的な継続的インテグレーションとリリースパイプラインを Azure に作成するための最適な DevOps ツールが用意されています。 この投稿シリーズでは、Visual Studio Team Services に関する最新の更新プログラムとニュースが提供されており、Azure ユーザーは3週間ごとにリリースされる新機能を最新の状態に保つことができます。
Content: >-
  <p>Visual Studio Team Services には、効率的な継続的インテグレーションとリリースパイプラインを Azure に作成するための最適な DevOps ツールが用意されています。 今月は、Git フォークのサポート、複数フェーズのビルド、作業ハブの機能強化、新しいレポートウィジェット、更新された NDepend 拡張機能について説明 &rsquo; します。 まずは、VSTS でのフォークの概要を見てみましょう &rsquo; 。</p>


  <h2>フォークのプレビュー</h2>


  <blockquote>

  <p><strong>プレビュー機能</strong></p>


  <p>この機能は、お使いのアカウントの<strong>Git フォーク</strong><a href="https://www.visualstudio.com/docs/collaborate/preview-features">プレビュー機能</a>によって有効になります。</p>

  </blockquote>


  <p><strong>VSTS アカウント内で</strong>変更を分岐してプッシュすることができるようになりました。 これは、フォークを使用した最初の手順です。 次の手順では、リポジトリを別の VSTS アカウントにフォークできるようにします。</p>


  <p>フォークは、すべてのファイル、コミット、および (必要に応じて) 分岐を含む、リポジトリの完全なサーバー側コピーです。 フォークは、元のコードベースから実験、リスク、または機密性の高い変更を分離するための優れた方法です。 これらの変更を共有する準備ができ &rsquo; たら、プル要求を使用して元のリポジトリに変更をプッシュするのが簡単になり &rsquo; ます。</p>


  <p>フォークを使用すると、さまざまなユーザーが直接コミットアクセス権を付与せずにリポジトリに投稿できるようにすることもできます。 代わりに、ユーザーはリポジトリの自分のフォークに作業をコミットします。 これにより、中央リポジトリに変更を受け入れる前に、pull request で変更を確認できます。</p>


  <p><img alt="create fork" border="0" height="480" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_27.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="578"></p>


  <p>フォークは、アップストリームの (元の) リポジトリのすべてのコンテンツから開始します。 分岐を作成するときに、すべての分岐を含めるか、既定のブランチに限定するかを選択できます。 どのアクセス許可、ポリシー、またはビルド定義も適用されません。 新しいフォークは、他のユーザーが元のリポジトリを複製した場合と同じように動作し、新しい空のリポジトリにプッシュされます。 フォークが作成された後、新しいファイル、フォルダー、ブランチは、PR によって追加されない限り、リポジトリ間で共有されません。</p>


  <p>Pr は、分岐から上流へ、または上流からフォークまで、どちらの方向でも作成できます。 最も一般的な方向は、フォークから上流までです。 宛先リポジトリ &rsquo; のアクセス許可、ポリシー、ビルド、および作業項目が PR に適用されます。</p>


  <p>詳細については、 <a href="https://www.visualstudio.com/docs/git/concepts/forks">フォークのドキュメント</a> を参照してください。</p>


  <h2>Web を使用してリポジトリにフォルダーを作成する</h2>


  <p>Web を介して Git および TFVC リポジトリにフォルダーを作成できるようになりました。 <a href="https://marketplace.visualstudio.com/items?itemName=ms-devlabs.FolderManagement">フォルダー管理拡張機能</a>に取って代わる機能です。フォルダー管理拡張機能は廃止処理が行われることになります。</p>


  <p>フォルダーを作成するには、コマンドバーまたはコンテキストメニューのいずれかで [ <strong>新しい &gt; フォルダー</strong> ] をクリックします。</p>


  <p><img alt="New folder option" border="0" height="291" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_07.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="640"></p>


  <h2>Wiki ページでのディープ リンクの設定</h2>


  <p><strong>Wiki</strong> では、ページ内またはページ間にディープ リンクの設定セクションをサポートするようになりました。これは目次を作成する場合に非常に便利です。 次の構文を使用して、同じページまたは別のページにある見出しを参照できます。</p>


  <ul>
   <li>同じページ: <code>[text to display](#section-name)</code></li>
   <li>別のページ: <code>[text to display](/page-name#section-name)</code></li>
  </ul>


  <p>詳細については、 <a href="https://docs.microsoft.com/en-us/vsts/reference/markdown-guidance#links">Markdown 構文ガイダンスのドキュメント</a> を参照してください。</p>


  <h2>Wiki ページの編集中にコンテンツをプレビューする</h2>


  <p>データは、ほとんどの場合、コンテンツの編集中に wiki ページを複数回 <strong>プレビュー</strong> することを示しています。 ページを編集するたびに、平均 1 ～ 2 回は <strong>[プレビュー]</strong> をクリックします。 これは、markdown の新しいものに特に時間がかかることがあります。 それが今回、編集中、ページのプレビューを表示できるようになりました。</p>


  <p><img alt="Wiki preview" border="0" height="394" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_31.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="1024"></p>


  <h2>リッチコンテンツを Wiki に HTML として貼り付ける</h2>


  <p>Confluence、OneNote、SharePoint、MediaWiki など、あらゆるブラウザーベースのアプリケーションから <strong>Wiki</strong> のマークダウン エディターにリッチ テキストを貼り付けることができるようになりました。 これは特に、複合テーブルなどのリッチ コンテンツを作成し、それを <strong>Wiki</strong> で表示する人にとって便利な機能です。 コンテンツをコピーし、HTML として貼り付けるだけで完了です。</p>


  <p><img alt="Wiki rich content as HTML" border="0" height="446" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_32.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="1024"></p>


  <h2>複数フェーズのビルド</h2>


  <p>多くの場合、最新の多層アプリケーションはさまざまなタスクのセットを使用して構築する必要があります。さまざまな機能があり、プラットフォームが異なる場合もあります。 これまで、VSTS では、これらの種類のアプリの各側面に対して個別のビルドを作成する必要がありました。 &rsquo;ここでは、複数フェーズのビルドを有効にするために、最初の一連の機能をリリースします。</p>


  <p><img alt="Multi-phase builds" border="0" height="768" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_17.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="902"></p>


  <p>各フェーズは、必要なタスクを使用して構成し、各フェーズに対して異なる要求を指定することができます。 各フェーズでは、乗数を使用して複数のジョブを並列に実行できます。 1つのフェーズで成果物を発行し、その成果物をダウンロードして、後続のフェーズで使用することができます。</p>


  <p>&rsquo;また、現在のビルド定義がすべて1つのフェーズにアップグレードされていることもわかります。 要求やマルチ構成などの一部の構成オプションは、各フェーズに移動されます。</p>


  <p>&rsquo;次のようないくつかの機能を引き続き使用しています。</p>


  <ul>
   <li>各フェーズで別のキューを選択する機能。</li>
   <li>後のフェーズで1つのフェーズから出力変数を使用する機能。</li>
   <li>フェーズを並行して実行する機能。 (ここでは、定義するすべてのフェーズが順番に実行されます)。</li>
  </ul>


  <h2>Bitbucket リポジトリ用の CI ビルド</h2>


  <p>これで&#39;、接続された Bitbucket リポジトリから CI ビルドを実行できるようになりました。 まず、 <a href="https://docs.microsoft.com/en-us/vsts/build-release/concepts/library/service-endpoints">Bitbucket に接続するためのサービスエンドポイント</a>を設定します。 次に、ビルド定義の [タスク] タブで、Bitbucket ソースを選択します。</p>


  <p><img alt="get sources bitbucket repo" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_25.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>その後、[ <strong>トリガー</strong> ] タブ &rsquo; で CI を有効にします。</p>


  <p>この機能は、VSTS アカウントのビルドと、クラウドでホストされる Bitbucket リポジトリの場合にのみ機能します。</p>


  <h2>リリース テンプレートの拡張性</h2>


  <p>リリース テンプレートを使用すると、リリース プロセスの定義を始めるときのベースラインを作成できます。 以前は、自分のアカウントに新しいベースラインをアップロードできましたが、現在は、作成者がその拡張にリリース テンプレートを含めることができます。 <a href="https://github.com/Microsoft/vsts-rm-extensions/tree/master/Extensions/EnvironmentTemplateSample">GitHub リポジトリに例</a>があります。</p>


  <h2>条件付きのリリース タスクおよびフェーズ</h2>


  <p><a href="https://www.visualstudio.com/docs/build/concepts/process/conditions">条件付きビルド タスク</a>と同様に、特定の条件に一致した場合にのみタスクまたはフェーズを実行できるようになりました。 これはロールバック シナリオのモデル化に役立ちます。</p>


  <p>組み込みの条件 &rsquo; によってニーズが満たされない場合、またはタスクまたはフェーズを実行するタイミングをきめ細かく制御する必要がある場合は、カスタム条件を指定できます。 条件は関数の入れ子セットとして表現します。 エージェントは最も内側の関数を評価し、その方法を外側にします。 最終的な結果は、タスクを実行するかどうかを決定するブール値です。</p>


  <p><img alt="conditional release phases" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_16.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <h2>個人用のリリース通知</h2>


  <p>リリース通知が VSTS 通知設定のエクスペリエンスに統合されました。 リリースを管理するユーザーには、保留中のアクション (承認または手動介入) と重要な配置エラーが自動的に通知されるようになりました。 このような通知はオフにすることができます。そのためには、プロファイル メニューの <strong>[通知]</strong> 設定を開き、[<strong>Release Subscriptions]\(リリースのサブスクリプション\)</strong> をオフに切り替えます。 カスタム サブスクリプションを作成して追加の通知をサブスクライブすることもできます。 管理者は、 <strong>[チーム]</strong> 設定と <strong>[アカウント]</strong> 設定の下にある <strong>[通知]</strong> 設定からチームとアカウントのサブスクリプションを制御できます。</p>


  <p>リリース定義の作成者は、承認と配置の完了に関する電子メールを手動で送信しなくてもよくなりました。</p>


  <p>これは、複数のリリースの関係者と、通知を受け取りたいユーザー (承認者、リリース作成者、および環境の所有者を除く) を有する大規模アカウントに特に便利です。</p>


  <p><img alt="Release notifications" border="0" height="673" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_13.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="1024"></p>


  <p>詳細については、「 <a href="https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/">リリース通知の管理</a> 」を参照してください。</p>


  <h2>リリース環境トリガーでのブランチフィルター</h2>


  <p>新しいリリース定義エディターでは、特定の環境のアーティファクト条件を指定できるようになりました。 このような成果物の条件を使用すると、特定の環境に配置する必要がある成果物をより詳細に制御できるようになります。 たとえば、運用環境では、マスターブランチからのみ生成されたビルドが配置されるようにすることができます。 このフィルターは、この条件を満たす必要があると考えられるすべての成果物に対して設定する必要があります。</p>


  <p>リリース定義にリンクされている成果物ごとに複数のフィルターを追加することもできます。 成果物の条件がすべて正常に満たされた場合にのみ、この環境への配置がトリガーされます。</p>


  <p><img alt="Branch filters" border="0" height="480" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_12.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="542"></p>


  <h2>Gulp、Yarn、その他の認証済みフィードのサポート</h2>


  <p>現在、npm タスクは、認証された npm フィード ( <strong>Package Management</strong>または<strong>npm Enterprise</strong>や<strong>artifactory</strong>などの外部レジストリ) とシームレスに連携していますが、これ &rsquo; までは、 <strong>Gulp</strong>のようなタスクランナーや、 <strong>Yarn</strong>などの代替 npm クライアントを使用することは困難でした。 この更新 &rsquo; により、新しい <strong>npm 認証</strong> ビルドタスクが追加されました。これにより、その後のタスクで認証済みのフィードを正常に使用できるように、npmrc に資格情報が追加されます。</p>


  <p><img alt="Auth feeds" border="0" height="424" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_06.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="1024"></p>


  <h2>VSTest タスクを使用した Web テストの実行</h2>


  <p>Visual Studio テストタスクを使用して、web テストを CI/CD パイプラインで実行できるようになりました。 Web テストは、タスク アセンブリの入力に、実行するテストを指定することで実行できます。 関連付けられたオートメーション &rdquo; を web テストにリンクしている &ldquo; テストケース作業項目は、タスクでテスト計画/テストスイートを選択することによって実行することもできます。</p>


  <p><img alt="Test selection" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_09.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>Web テストの結果は、テスト結果の添付情報として使用できるようになります。 これは、Visual Studio でのオフライン分析用にダウンロードできます。</p>


  <p><img alt="Test summary" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_10.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>この機能は、Visual Studio テスト プラットフォームの変更に依存し、ビルド/リリース エージェントに <strong>Visual Studio 2017 Update 4</strong> をインストールする必要があります。 Visual Studio の以前のバージョンを使用して Web テストを実行することはできません。</p>


  <p>同様に、<strong>機能テストの実行</strong>タスクを使用して Web テストを実行することもできます。 この機能は、テスト エージェントの変更に左右され、Visual Studio 2017 Update 5 で使用することができます。</p>


  <p>これをロード テストと組み合わせて使用する方法の例については、<a href="https://docs.microsoft.com/en-us/vsts/load-test/getting-started-with-performance-testing">Load test your app in the cloud using Visual Studio and VSTS quickstart</a> (Visual Studio および VSTS のクイック スタートを使用してクラウドでアプリのロード テストを行う) を参照してください。</p>


  <h2>作業項目ハブ</h2>


  <blockquote>

  <p><strong>プレビュー機能</strong></p>


  <p>この機能を使用するには、プロファイルやアカウントで <strong>[新しい作業項目ハブ</strong><a href="https://www.visualstudio.com/docs/collaborate/preview-features"></a>] プレビュー機能を有効にする必要があります。</p>

  </blockquote>


  <p>作業 <strong>項目ハブを</strong> 使用すると、次の 5 つのピボットを使用して、チーム プロジェクト内の関連項目に集中できます。</p>


  <ul>
   <li>[割り当て済み] -&rsquo; プロジェクト内で、最後に更新された順序で割り当てられているすべての作業項目。 作業項目を開くまたは更新するには、そのタイトルをクリックします。</li>
   <li>[次の項目] - 従う&rsquo;必要があるすべての作業項目。</li>
   <li>[説明] - 過去&rsquo; 30 日間に言及した作業項目すべて。</li>
   <li>[マイ アクティビティ] - 最近表示または更新したすべての作業項目。</li>
   <li>最近作成された - プロジェクトで最近作成された作業項目すべて。</li>
  </ul>


  <p><img alt="work item hub" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_04.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>ハブ内から作業項目を作成すると、次の 1 回のクリックで完了します。</p>


  <p><img alt="new item menu" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_05.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>新しい<strong>作業</strong>項目ハブの開発中に、新しい作業項目ハブを使用して各ピボットを確実に<strong>クエリ エディター。</strong> 以前は、次&rsquo;の項目に対するクエリをサポートし、割り当て済みでしたが、このスプリントでは、 と という 2 つの新しいマクロを作成 @RecentMentions しました @MyRecentActivity。 これで、クエリ&rsquo;を作成し、過去 30 日間に言及した作業項目を取得したり、最新のアクティビティを返すクエリを作成したりできます。 これらの&rsquo;マクロを使用する方法について少し説明します。</p>


  <p><img alt="filters" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_29.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>詳細については <a href="https://www.visualstudio.com/docs/work/work-items/view-add-work-items">、作業項目ハブのドキュメント</a> を参照してください。</p>


  <h2>カスタマイズ可能な作業項目ルール</h2>


  <p>プロジェクト管理者は、特定の作業項目フィールドの値を自動的に設定するか、特定の状態のフィールドの動作を定義する場合でも、ルールを使用して作業項目フィールドの動作を自動化し、チームの負担を軽減できます。 ここでは、ルールを使用して構成できる主要なシナリオの例を示します。</p>


  <ul>
   <li>作業項目の状態が [アクティブ] に <strong>変更された場合</strong>は、[ <strong>残りの作業] を</strong> 必須フィールドにします</li>
   <li>作業項目が提案<strong>され、元の</strong>見積<strong></strong>もりが変更された場合は、元<strong></strong>の見積もりの値を [残りの作業<strong>] フィールドにコピー</strong>します</li>
   <li>独自の by/date&rsquo; フィールド型を持つカスタム状態を追加すると、ルールを使用して、状態遷移でこれらのフィールド値を自動的に設定できます</li>
   <li>作業項目の状態が変更された場合は、カスタムの by/date フィールドの値を設定します</li>
  </ul>


  <p>ルールの使用を開始するには、次の手順に従います。</p>


  <p><img alt="customize menu action" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_02.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <ol>
   <li>作業項目 <strong>のコンテキスト</strong> メニューから [カスタマイズ&rsquo;] を選択します</li>
   <li>既存の継承されたプロセスを作成または選択する</li>
   <li>ルールを追加する作業項目の種類を選択し、[ルール] を <strong>クリック</strong>して、[新しい規則] <strong>をクリックします。</strong></li>
  </ol>


  <p><img alt="custom rules" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_01.png" style="border: 0px currentcolor; border-image: none; background-image: none;"><br>

  詳細については、 <a href="https://www.visualstudio.com/docs/work/process/custom-rules">カスタム 規則に関するドキュメント</a> を参照してください。</p>


  <h2>通知のカスタム フィールドとタグ</h2>


  <p>通知は、変更された場合だけでなく &ndash; 、特定の値が満たされた場合に、カスタム フィールドとタグの条件を使用して定義できます。 これは UserVoice の上位のお客様の提案であり ( <a href="https://visualstudio.uservoice.com/forums/330519-visual-studio-team-services/suggestions/6059328-use-tags-in-alerts">6059328</a> と <a href="https://visualstudio.uservoice.com/forums/330519-visual-studio-team-services/suggestions/2436843-custom-fields-in-work-item-alerts">2436843</a> を参照してください)、作業項目に設定できるより堅牢な一連の通知が可能です。</p>


  <p><img alt="custom work item notification settings" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_03.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <h2>配信計画へのインラインでの追加</h2>


  <p>新機能のアイデアは、いつでも&rsquo;届く可能性があります。そのため、配信計画に新しい機能を直接追加する方が <strong>簡単になりました</strong>。 ホバー時の <strong>[新規アイテム]</strong> ボタンをクリックし、名前を入力し、Enter キーを押すだけです。 予想されるエリア パスとイテレーション パスを使用して、新しい機能が&rsquo;作成されます。</p>


  <p><img alt="inline add on delivery plans" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_26.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>&nbsp;</p>


  <h2>新しいクエリ エクスペリエンス</h2>


  <blockquote>

  <p><strong>プレビュー機能</strong></p>


  <p>この機能を使用するには、プロファイルで [<strong>新しいクエリ エクスペリエンス] プレビュー</strong><a href="https://www.visualstudio.com/docs/collaborate/preview-features">機能を有効</a>にする必要があります。</p>

  </blockquote>


  <p>クエリ <strong>ハブには</strong> 、新しい外観、ナビゲーションの変更、およびクエリを検索する機能など、いくつかの便利な新機能があります。</p>


  <p>左側&rsquo;のウィンドウが削除されているのに気付きます。 お気に入りのクエリ間をすばやく移動するには、クエリ タイトルのドロップダウンを使用します。</p>


  <p><img alt="New queries experience" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_02.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <p>また&rsquo;、次の機能強化も行いました。</p>


  <ul>
   <li>マクロを使用して、後に続く作業項目クエリを作成および編集 @Follows する</li>
   <li>マクロを使用して、 で説明した作業項目のクエリを実行 @Mentions する</li>
   <li><strong>[名前を付</strong> けて保存] を選択すると、グラフが新しいクエリにコピーされます</li>
   <li>結果とエディターの簡略化 <strong>されたコマンド</strong> <strong>バー</strong></li>
   <li>結果グリッドの拡張されたフィルター機能</li>
  </ul>


  <h2>バーンダウンウィジェットとバーンアップ ウィジェット</h2>


  <p>アカウント <strong>に Analytics</strong> <strong>拡張機能を</strong> インストールしたユーザーは、バーンダウン ウィジェットと <a href="https://marketplace.visualstudio.com/items?itemName=ms.vss-analytics">バーン</a> アップ ウィジェットを使用できます。</p>


  <p>バーン <strong>ダウン ウィジェットを</strong> 使用すると、複数のチームと複数のスプリントにわたるバーンダウンを表示できます。 それを使用して、任意の期間の作業範囲に関するリリース バーンダウン、バグ バーンダウン、またはバーンダウンを作成できます。 チーム プロジェクトにまたがるバーンダウンを作成できます。</p>


  <p>バーン <strong>ダウン ウィジェットは</strong> 、次の質問に答えるのに役立ちます。</p>


  <p>その質問に回答するために、次の機能が提供されます。</p>


  <ul>
   <li>完了率を表示します</li>
   <li>平均バーンダウンを計算します</li>
   <li>ストーリー ポイントで見積もりされていない項目がある場合に表示されます</li>
   <li>プロジェクトの過程でのスコープの増加を追跡する</li>
   <li>過去のバーンダウンと&rsquo;スコープの増加傾向に基づいてプロジェクトの完了日をプロジェクト化する</li>
  </ul>


  <p>作業項目の数または特定のフィールドの合計 (ストーリー ポイントなど) に基づいて、作業項目の種類をバーンダウンできます。 毎日、毎週、毎月の間隔を使用するか、反復スケジュールに基づいてバーンダウンできます。 さらにフィルター条件を追加して、絞り込む作業の正確な範囲を微調整することもできます。</p>


  <p>ウィジェットは高度に構成可能であり、さまざまなシナリオで使用できます。 お客様には、これら 2 つのウィジェットを使用するすばらしい方法が見つからねらいます。</p>


  <p><img alt="release burndown" border="0" height="477" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_19.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="640"></p>


  <p><img alt="bug burndown" border="0" height="480" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_20.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="635"></p>


  <p>バーン<strong>アップ ウィジェット</strong>は、残っている作業<strong></strong>ではなく、完了した作業をプロットする以外は、バーンダウン ウィジェットと同様です。</p>


  <p><img alt="stories burnup" border="0" height="479" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09_15_21.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="640"></p>


  <h2>合理化されたユーザー管理</h2>


  <blockquote>

  <p><strong>プレビュー機能</strong></p>


  <p>この機能は、プロファイルやアカウント <strong>の合理化されたユーザー</strong>管理 <a href="https://www.visualstudio.com/docs/collaborate/preview-features">プレビュー</a> 機能を使用して有効になります。</p>

  </blockquote>


  <p>効果的なユーザー管理は、管理者が適切なリソースに対して支払いを行い、プロジェクトで適切なアクセスを有効にするのに役立ちます。 サポート&rsquo;の呼び出しや、VSTS でこのプロセスを簡略化する機能が必要なことをお客様から繰り返しお聞きしました。 このスプリントでは、これらの問題に対処し始めるエクスペリエンスを一般提供にリリースします。 詳細については <a href="https://www.visualstudio.com/docs/setup-admin/team-services/manage-users-and-access-user-hub-team-services">、ユーザー ハブのドキュメント</a> を参照してください。 表示される変更の一部を次&rsquo;に示します。</p>


  <h2>1 つの簡単な手順でアカウントにユーザーを招待する</h2>


  <p>管理者は、適切な拡張機能、アクセス レベル、およびグループ メンバーシップを使用してアカウントにユーザーを同時に追加し、ユーザーが稼働状態になじむのを可能にしました。 新しい招待エクスペリエンスを通じて、一度に最大 50 人のユーザーを招待できます。</p>


  <p><img alt="new account invitation" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_17.png" style="border: 0px currentcolor; border-image: none; background-image: none;"></p>


  <h2>ユーザーを管理する場合の詳細</h2>


  <p>[ <strong>ユーザーの管理</strong> ] ページに、アカウント内のユーザーを一目で把握するのに役立つ情報が表示されます。 ユーザーのテーブルには、各ユーザーがアクセスできる拡張機能を一覧表示する <strong>Extensions</strong> という名前の新しい列が含まれています。</p>


  <p><img alt="new user page" border="0" height="346" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_18.png" style="border: 0px currentcolor; border-image: none; background-image: none;" width="640"></p>


  <h2>プロジェクトとプロジェクトへのユーザー Teams</h2>


  <p>各管理者に、チームを簡単に立ち上げ、実行するために必要なツールが用意されている必要があります。 この取り組みの一環として、改善されたプロジェクト招待ダイアログをリリースします。 この新しいダイアログを使用すると、プロジェクト管理者は、メンバーにする必要があるチームにユーザーを簡単に追加できます。 プロジェクトまたはチーム管理者の場合は、プロジェクトのホーム ページまたはチーム メンバー ウィジェットの [<strong></strong>追加] ボタンをクリックして、この<strong>ダイアログにアクセス</strong>できます。</p>


  <p><img alt="project invite" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_28_20.png"></p>


  <h2>認証のドキュメントとサンプルの改善</h2>


  <p>過去に、REST ドキュメントでは、REST API へのアクセスに PAT のみを使用する方法に重点を置いがありました。 拡張機能&rsquo;と統合に関するドキュメントを更新し、アプリケーションのシナリオに合った認証の最適な方法に関するガイダンスを提供しました。 ネイティブ クライアント アプリケーションの&rsquo;開発、対話型 Web アプリの開発、または PowerShell を使用した API の呼び出しの場合でも、VSTS で認証する最適な方法に関する明確なサンプルがあります。 詳細については、ドキュメントを参照 <a href="https://www.visualstudio.com/docs/integrate/get-started/authentication/authentication_guidance">してください</a>。</p>


  <h2>月の拡張: TFS 2017 および VSTS のコード品質 NDepend</h2>


  <p><img alt="" height="210" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Microsoft.VisualStudio.Services.Icons6IZ4YDH8.png" width="210"></p>


  <p>200 を超えるインストールと確かな 5 つ星評価により、NDepend は Marketplace で最高のコード品質ソリューションの 1 つであり、拡張機能によって VSTS エクスペリエンスに多くの新機能が追加されます</p>


  <ul>
   <li><strong>NDepend Dashboard Hub</strong> には、技術的負債の見積もり、コード サイズ、品質ゲートの状態、ルール、問題番号など、最も関連性の高いデータの要約が表示されます。</li>
   <li><strong>品質ゲート。</strong> コード品質のファクトであり、ソース管理にコミットする前に、そして最終的にリリースする前に適用する必要があります。</li>
   <li><strong> </strong>150 の受信トレイとカスタムの追加を作成する機能を備え、ベスト プラクティスに対してコードをチェックするルール。</li>
   <li><strong>技術的負債と問題</strong> 。これは、コードを業界のベスト プラクティス (詳細な問題のドリルダウンなど) に対してチェックして生成されます。</li>
   <li><strong>傾向</strong> はビルド間で&rsquo;サポートおよび視覚化され、改善を必要とするか、技術的負債を追加したのか確認できます。</li>
   <li><strong>各アセンブリ、</strong> 名前空間、クラス、またはメソッドのコード メトリックの要約。</li>
   <li><strong>ビルドの概要の</strong> 要約は、各ビルドの概要に表示されます。</li>
  </ul>


  <p>NDepend の新しい価格プランを使用すると、チームのコード品質エンジニアが、これらのすべてのツールを低い月額コストから使用できます。</p>


  <p>完全な価格情報については、 <a href="https://marketplace.visualstudio.com/items?itemName=ndepend.ndependextension&amp;utm_source=roundupblog#pricing">NDepend 拡張機能に関するページを参照してください</a>。</p>


  <p>これらのリリースには、ここで取り上がり得る以上のものが常に含まれます。 詳細については、 <a href="https://docs.microsoft.com/en-us/vsts/release-notes/2017/aug-28-team-services">8 月 28</a> 日と <a href="https://docs.microsoft.com/en-us/vsts/release-notes/2017/sep-15-team-services">9 月 15 日のリリース</a> ノートを参照してください。 VSTS の最新のプラン<a href="https://blogs.msdn.microsoft.com/devops/">DevOps</a>に関するブログを必ずサブスクライブしてください。</p>


  <p>コーディングをお楽しみください!</p>


  <p><a href="https://twitter.com/tfsbuck" target="_blank">@tfsbuck</a></p>
