### YamlMime:Yaml
ms.openlocfilehash: 26bcc056958d6f56339655e51fce3841fdb81780
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890611"
Slug: windows-azure-powershell-cmdlets-v2-2-2
Title: Windows Azure PowerShell のコマンドレット (v 2.2.2)
Summary: Windows Azure PowerShell コマンドレットの新しいリリースにより、作業を開始し、コマンドレットを使用してスクリプト作成を簡単に行うことができるようになりました。   新しいリリースをダウンロードするには、
Content: '<p><a target="_blank" href="https://www.windowsazure.com/en-us/?WT.mc_id=cmp_pst001_blg_post0073">Windows の Azure</a> PowerShell コマンドレットが新たにリリースされました。このコマンドレットを使用すると、簡単に作業を開始できます。 <br> <br> 新しいリリースは、CodePlex <a target="_blank" href="https://wappowershell.codeplex.com/">プロジェクトサイトからダウンロードできます</a>。<br> <br><span style="font-size: medium;"><strong> はじめにの機能強化</strong></span> <br> <br> 2.2.2 で、Azure コマンドレットが既に読み込まれ Windows ている PowerShell セッションを開始する [スタート] メニューのリンクを追加しました。 また、セットアップを完了する方法と、Windows Azure PowerShell のコマンドレットとリリースの変更の機能についての簡単なツアーを紹介する「ここから」リンクも追加しました。<br> <img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1031.azure.png" alt="" border="0" height="254" width="321"><br> <br> <br> <span style="font-size: medium;"><strong>サブスクリプション管理の機能強化</strong></span> <br> <br> 2.2 リリースからのサブスクリプション管理の機能強化が行われ、はるかに優れたものになりました。<br> 具体的には、サブスクリプションの設定をユーザープロファイルに保存する機能を追加しました。 この機能を使用すると、サブスクリプションデータを一度設定してから、新しいスクリプトまたは PowerShell セッションで、使用するサブスクリプションを選択するだけで、サブスクリプション ID、証明書、およびストレージアカウントを毎回指定する必要はありません。<br> <br> <b>コードスニペット 1: サブスクリプションデータの設定</b></p>  <p><span style="font-family: courier new,courier;">$subid = "{サブスクリプション id}"</span></p>  <p><span style="font-family: courier new,courier;">$cert = Get-Item cert:\ CurrentUser\My\CERTTHUMBPRINTUPPERCASE</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;">#サブスクリプション設定の永続化</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName の設定-Certificate $cert-SubscriptionId $subid</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;"># 現在のサブスクリプションを設定して使用する</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName を選択します。</span></p>  <p>証明書とサブスクリプション ID を使用して Set-Subscription コマンドレットを呼び出します。 Set-Subscription は、サブスクリプション名に関連付けられている証明書のサムプリントとサブスクリプション id を (C:\Users \{ username} \AppData\Roaming\ Windows Azure PowerShell Cmdlets\DefaultSubscriptionData.xml) に保持します。 <br> <br> この機能は、複数のサブスクリプションを構成に追加することをサポートしているので、サブスクリプション名を指定して Select-Subscription を呼び出すだけで、同じスクリプト内で個別に管理できます。<br> <br> <b>コードスニペット 2: 既定のサブスクリプションの設定 </b></p>  <p><span style="font-family: courier new,courier;">Set-Subscription-DefaultSubscription org-sub1</span></p>  <p>スニペット2では、サブスクリプションを選択しない場合に使用する既定のサブスクリプションを設定する方法を示します。 <br> <br> <b></b></p>  <p><b>コードスニペット 3: Storage アカウントのサブスクリプションへの関連付け</b></p>  <p><span style="font-family: courier new,courier;"># 2つのサブスクリプションの証明書とサブスクリプション id を保存する</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName-StorageAccountName stname1-StorageAccountKey mystoragekey1 を設定します。</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;">SubscriptionName-StorageAccountName stname2-StorageAccountKey mystoragekey2 を設定します。</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;"># サブスクリプションに使用する既定のストレージアカウントを指定します</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName-DefaultStorageAccount stname1 を設定します。</span></p>  <p>&nbsp;&nbsp;&nbsp;</p>  <p>スニペット3は、複数のストレージアカウントを1つのサブスクリプションに関連付けることができることを示しています。 適切なストレージアカウントを使用するために必要なのは、ストレージアカウントを必要とするコマンドレットを呼び出す前に、既定値を設定することだけです。<br> <br> <b>コードスニペット 4: サブスクリプションデータファイルの場所の指定</b></p>  <p><span style="font-family: courier new,courier;"># 既定の場所を上書きしてサブスクリプションの設定を保存する</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName-Certificate $cert-SubscriptionId $subid-SubscriptionDataFile ファイルの c:\mysubs.xml</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;"># 別の場所からサブスクリプションの一覧を取得する</span></p>  <p><span style="font-family: courier new,courier;">サブスクリプション-SubscriptionDataFile ファイル c:\mysubs.xml</span></p>  <p>&nbsp;&nbsp;&nbsp;</p>  <p>各サブスクリプションコマンドレットは、-SubscriptionDataFile ファイルパラメーターを受け取ります。このパラメーターを使用すると、操作に使用する XML ファイルを指定できます。<br> <br> <b>コードスニペット 5: その他のサブスクリプション管理 =</b></p>  <p><span style="font-family: courier new,courier;"># すべての永続化された設定を返します</span></p>  <p><span style="font-family: courier new,courier;">取得-サブスクリプション</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;"># 永続化された設定から mysub2 を削除します</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName 組織-sub2 を削除します。</span></p>  <p>&nbsp;</p>  <p><span style="font-family: courier new,courier;"># 永続化されたサブスクリプションの設定からストレージアカウントを削除する</span></p>  <p><span style="font-family: courier new,courier;">SubscriptionName-RemoveStorageAccount stname1 を設定します。</span></p>  <p><span style="font-size: medium;"><strong>その他のユーザビリティの向上</strong></span> <br> <br> 多くのパラメーターを既定値で省略可能にすることで、コマンドレットの多くをより簡単に使用できるようになりました。</p>  <ul>  <li>新しい-AffinityGroup、Set AffinityGroup、New-HostedService、New-StorageAccount、New-Deployment、および更新-デプロイでは、ラベルパラメーターは省略可能になりました。</li>  <li>New-Deployment と Update-Deployment では、スロットパラメーターは省略可能になりました (既定では運用スロットが使用されます)。</li>  <li>New-Deployment では、Name パラメーターは省略可能になりました (既定では、グローバル一意識別子の値が使用されます)。</li>  </ul>  <p><br> 既定に加えて、特定のシナリオのブロックを解除するために必要な修正プログラムがいくつか提供されています。</p>  <ul>  <li>Get-Deployment は、指定されたスロットでデプロイが見つからなかった場合に $null を返すようになりました (以前のバージョンではエラーがスローされました)。</li>  <li>パッケージと-構成パラメーターが、New-Deployment と更新プログラムの展開で UNC パスを受け入れるようになりました。</li>  </ul>  <p><span style="font-size: medium;"><strong> 重大な変更</strong></span> <br> <br> このようなユーザビリティの向上には、何らかの犠牲が必要です。 最新のビルドをダウンロードする前に、次の一覧を確認してください。重大な変更がいくつかあります。</p>  <ul>  <li>DefaultStorageAccountName パラメーターと-DefaultStorageAccountKey パラメーターは、セットサブスクリプションから削除されました。 サブスクリプションに複数のアカウントを追加する場合は、それぞれを-StorageAccountName と-StorageAccountKey または-ConnectionString と共に追加する必要があります。 既定のストレージアカウントを設定するには Set-Subscription &ndash; defaultstorageaccount {account name} を使用します。</li>  <li>SubscriptionName は、Set-Subscription では必須になりました。</li>  <li>以前のリリースでは、サブスクリプションデータは PowerShell セッション間で保持されていませんでした。 管理ポータルからダウンロードした .publishsettings ファイルからサブスクリプションの設定をインポートする場合、Import-Subscription のコマンドレットは、後で Set-Subscription を使用して復元できるファイルにサブスクリプション情報を保存する必要がありました。 この動作は変更されました。 これで、インポートされたサブスクリプションデータは常にサブスクリプションデータファイルに保存され、後続のセッションですぐに使用できるようになります。 Set-Subscription を使用すると、これらのサブスクリプションの設定を更新したり、追加のサブスクリプションデータセットを作成したりできます。</li>  <li>名前が変更されました-CertificateToDeploy パラメーターを-CertToDeploy に追加します。</li>  <li>すべての Storage サービスコマンドレットで-servicename パラメーターを-storageaccountname に変更しました (旧バージョンとの互換性のために、servicename &rdquo; をパラメーターの別名として追加しました &ldquo; )。</li>  </ul>  <p><span style="font-size: medium;"><strong>概要</strong></span> <br> <br> 2.2.2 リリースでは、UNC パスの受け入れや、空のスロットでエラーをスローしない Get-Deployment の修正など、いくつかの修正が加えられました。 また、作業の開始エクスペリエンスを大幅に改善し、PowerShell から Windows Azure サブスクリプションを管理する方法についても説明しました。 <br> <br> 新しいリリースは <a target="_blank" href="https://wappowershell.codeplex.com/">ここ</a>からダウンロードできます。</p>'
