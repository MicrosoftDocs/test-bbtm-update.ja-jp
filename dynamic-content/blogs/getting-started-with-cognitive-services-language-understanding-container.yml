### YamlMime:Yaml
ms.openlocfilehash: eecd33a3128716a89a76f179d946d0a15740485e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891639"
Slug: getting-started-with-cognitive-services-language-understanding-container
Title: Getting started with Cognitive Services Language Understanding container (Cognitive Services の Language Understanding のコンテナーの使用開始)
Summary: 最近、Computer Vision、Face API、および Text Analytics をカバーするコンテナーの初期セットを使用した、Text Analytics の Microsoft Azure Cognitive Services Docker サポートのプレビューを発表しました。 現在、このサービスのサポートを追加Language Understandingしています。
Content: >-
  <p><em>この投稿は、Phani Mutyala(シニア プログラム マネージャー、適用された AI) によって共同執筆されています。</em></p>


  <p>最近、Computer Vision、<a href="https://docs.microsoft.com/azure/cognitive-services/face/overview" target="_blank">Face API</a>、Text Analytics をカバーするコンテナーの初期セットを使用した、Microsoft Azure Cognitive Services <a href="https://docs.microsoft.com/azure/cognitive-services/computer-vision/home" target="_blank"></a>の <a href="https://azure.microsoft.com/blog/bringing-ai-to-the-edge/" target="_blank">Docker</a> サポートのプレビューを<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview" target="_blank">発表</a>しました。 現在、お客様のサービスに対するサポートを <a href="https://azure.microsoft.com/services/cognitive-services/language-understanding-intelligent-service">追加Language Understandingしています</a>。 Language Understanding、ユーザーの&rsquo;会話型および自然言語テキストにカスタム機械学習インテリジェンスを適用して、全体的な意味を予測し、関連する詳細情報を引き出します。 Language Understandingを使用して、自然言語でユーザーと通信してタスクを完了する会話型アプリケーションを構築できます。</p>


  <p>コンテナー Language Understandingを実行すると、AI 開発者が現在発生しているいくつかの重要な問題が解決されます。 これらの問題の 1 つは、データをローカル、クラウド、またはオンプレミスで使用する方法と場所を制御する必要があります。 この種の柔軟性は、日常的に話す多くの企業にとって非常に便利です。</p>


  <p>もう 1 つの&rsquo;利点は、スケールアップとスケールダウンのどちらでスケーリングを制御するかです。これは、AI モデルが定期的に更新されている場合に特に重要です。 スケーリングの時間を制御することで、ニーズに基づいて適切な帯域幅を計画します。 そのため、アプリケーション ロジックの横で AI を実行し、非常に高速でスケーラブルであり、すべてコンテナーが提供する信頼性と品質を備えたものにできます。</p>


  <p>このブログでは、ローカル開発ボックス上の Docker コンテナー Language Understandingを開始する方法について説明します。 Docker &ldquo; を使い始め、ローカル コンピューターでのセットアップに関するヘルプが必要な場合は、以前に公開されたブログ記事「Cognitive Service コンテナーの実行」を<a href="https://azure.microsoft.com/blog/running-cognitive-service-containers/" target="_blank">参照してください</a>。&rdquo;ドキュメントに関<a href="https://go.microsoft.com/fwlink/?linkid=2043210" target="_blank">するその他</a>の方法に関する情報や、Cognitive Service コンテナーの使い方の<a href="https://go.microsoft.com/fwlink/?linkid=2043312" target="_blank">サンプルも参照できます</a>。</p>


  <h2>Docker イメージLanguage Understanding取得する</h2>


  <p>Docker イメージLanguage Understandingから直接使用できますDocker Hubダウンロードするには、次のコマンドを実行 <strong>docker pull</strong>。</p>


  <pre>

  docker pull mcr.microsoft.com/azure-cognitive-services/luis</pre>


  <p>また、更新された <strong>イメージdocker pull</strong> を確認するために、このオプションを使用することもできます。</p>


  <h2>サービスLanguage Understandingプロビジョニング</h2>


  <p>他の Cognitive Services コンテナーについては、Language Understanding コンテナーをローカルで実行するには、有効な API キーと課金エンドポイントを取得するために、Azure portal で Language Understanding サービスをプロビジョニングする必要があります。 これらの値は、コンテナーの起動時にコマンド ライン引数として渡す必要があります。 サービスをまだお&rsquo;持ちLanguage Understanding場合は、[Cognitive Services] ブレード<a href="https://portal.azure.com/#blade/HubsExtension/Resources/resourceType/Microsoft.CognitiveServices%2Faccounts" target="_blank"></a>を開き、[追加] を選択して作成<strong></strong>します。 API キーとエンドポイントは、api ページまたは [<strong> 概要] はじめに</strong> から <strong>取得</strong> できます。 この場合は、次のページから <strong>はじめに</strong> します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aeb18735-5323-48c1-9c66-081389f4da03.png"><img alt="Getting started on the Azure portal" border="0" height="551" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3a23b4a-68e4-4a5d-aff9-e273c33078dd.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="このページのAzure portal" width="851"></a></p>


  <h2>モデルのLanguage Understanding取得</h2>


  <p>Language Understandingアプリとも呼ばれる言語モデルを作成Language Understandingできます。 このアプリは、カバーする特定の領域またはドメインに合わせて調整されます。 たとえば、牛乳シェイクの順序付けについて知っているアプリケーションを構築できます。その場合、フレーバー、トッピング、サイズは、処理する概念である可能性があります。 ここでは Language Understanding&rsquo;&ldquo; アプリの構築については詳しい説明しませんが、ドキュメント内の多くのチュートリアル (例: ユーザーの意図を決定するためのカスタム アプリの構築) を自由に確認<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-quickstart-intents-only" target="_blank">してください。</a>&rdquo;</p>


  <p>ここでは、意図やエンティティを含めずに空のアプリを使用します。 空のアプリをLanguage Understandingするには、ポータルに移動Language Understanding <a href="https://luis.ai" target="_blank">アプリ</a> を作成します。 次のようになります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/417035fb-fad6-421a-90f3-43a290d90bbb.png"><img alt="Empty Language Understanding App" border="0" height="553" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad3ed4ac-cd54-49d0-996a-be40c49ae18f.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="空Language Understandingアプリ" width="854"></a></p>


  <p>アプリに空のLanguage Understandingしたら、[<strong>トレーニング</strong>] を選択し、[発行] <strong></strong> を選択してモデルをダウンロード可能にします。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6f86492a-b214-428a-888e-87c99021a803.png"><img alt="Published Language Understanding App" border="0" height="554" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69514df7-e4af-48a8-92f9-3824c7ac78e6.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="発行済Language Understandingアプリ" width="855"></a></p>


  <p>アプリをLanguage Understandingしたら、ローカル のコンテナーで使用できるよう、アプリをダウンロードLanguage Understandingがあります。 これを行うには、<strong></strong>&nbsp;Language Understanding ポータルで マイ アプリ に移動し、空の Language Understanding アプリを選択して、コンテナーのエクスポート/エクスポート <strong>(GZIP) を選択します。</strong></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/33982fa2-8f41-4e6c-9322-345e81505e71.png"><strong><img alt="Export published Language Understanding App for container" border="0" height="174" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/24999389-68b0-40e2-9259-3b1a0cccd93a.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="発行済み Language Understanding App for container をエクスポートする" width="640"></strong></a></p>


  <p>input という名前の空のフォルダーをルート ディレクトリ<strong></strong>に作成し、Language Understandingファイルをそのフォルダーにコピーします。 コンピューターを使用しているWindows、次のように表示されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69b6036f-f4d3-4c83-8c00-164ec0bf81af.png"><img alt="Local Language Understanding app" border="0" height="368" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/457d60e9-145f-4139-8208-72c4c38ee3fb.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="ローカル Language Understanding アプリ" width="640"></a></p>


  <h2>コンテナーのLanguage Understanding実行</h2>


  <p>これで、docker run を使用してローカル コンテナーを起動Language Understanding <strong>準備ができました</strong>。 ここで特に重要なのは、コンテナーが読み取り可能な入力フォルダーをマウントする方法です。 これを行うには、docker run で&nbsp; <strong>--mount</strong> オプション <strong>を使用します</strong>。 <strong>C:\input という名前のフォルダーでは</strong>、コマンドは次のように表示されます。</p>


  <pre>

  docker run --rm -it -p 5000:5000 <code>--mount type=bind,src=C:\input,target=/input mcr.microsoft.com/azure-cognitive-services/luis eula=accept apikey=&lt;apikey&gt; billing=&lt;endpoint&gt;</code></pre>


  <p>フォルダーをマウントする方法は他にも多数あるので、Docker で実行できるすべての操作に関する <a href="https://docs.docker.com/engine/reference/commandline/run/#options" target="_blank">Docker</a> オプションのドキュメントと、Language Understanding コンテナーで使用できる構成オプション <a href="https://go.microsoft.com/fwlink/?linkid=2043313" target="_blank">を確認してください</a>。</p>


  <h2>試してみる</h2>


  <p>すべての Cognitive Service コンテナーについては、ブラウザー <strong>https://localhost:5000/swagger</strong> を にポイントして API を検査し、試しに行く方法を確認できます。プログラムでコンテナーを呼び出す方法もあります。 詳細については、次のページで提供されているいくつかのサンプルを<a href="https://go.microsoft.com/fwlink/?linkid=2043312" target="_blank">GitHub</a>。 [試してみる <strong>] を選択</strong> すると、コンテナーにローカル要求を送信するために必要なパラメーターの一覧が表示されます。</p>


  <p>アプリ ID には、アプリ名の GUID 部分Language Understanding使用します。 上の例では、 <strong>2ccdc110</strong> から始まる GUID です。 クエリ フィールドに Hello &ldquo;!&rdquo; などのテキストを入力し、[実行] を <strong>選択します。</strong></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3900e468-eb37-4881-a39a-96c5deccf4e3.png"><img alt="Empty Language Understanding response" border="0" height="610" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/47678bbd-88e7-4188-995d-a66ec3cac2f9.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="空Language Understanding応答" width="942"></a></p>


  <p>アプリのLanguage Understanding空の場合、None 意図が <strong>返</strong> されます。 これは、アプリで理解していなくて&rsquo;、より良いモデルを構築し、もう一度試しに行けるという意味です。</p>
