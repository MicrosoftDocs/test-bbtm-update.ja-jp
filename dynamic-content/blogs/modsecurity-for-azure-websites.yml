### YamlMime:Yaml
ms.openlocfilehash: e85ebc0a36ba30c9979b38791a80fc888be15d36
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893891"
Slug: modsecurity-for-azure-websites
Title: Azure Websites の ModSecurity Web アプリケーションファイアウォール
Summary: このブログでは、Azure Websites アプリケーション用に ModSecurity ファイアウォール規則を設定する方法について説明します。
Content: >-
  Microsoft Azure web サイトでは、web サイトの modsecurity web アプリケーションファイアウォールがサポートされるようになりました。 カスタムアプリケーションファイアウォールルールを作成するか、商用ルールを使用して web アプリケーションを web の脆弱性や悪用から保護します。

  <h2>ModSecurity とは</h2>

  "ModSecurity は、オープンソースのクロスプラットフォーム web アプリケーションファイアウォール (WAF) モジュールです。 WAFs の "スイス陸軍ナイフ" と呼ばれています。これにより、web アプリケーション防御者は HTTP (S) トラフィックを可視化し、高度な保護を実装するための強力なルール言語と API を提供できます。 " IIS または ASP.NET の要求フィルターまたは UrlScan に慣れている方にとって、modsecurity は、受信 http 要求または送信 http 応答をフィルター処理するルールを記述するための、より豊富な構文をサポートする同様のツールです。 ModSecurity では、イベントベースのプログラミング言語の構文を使用します。これにより、ユーザーはさまざまな演算子 (正規表現など) を使用して受信および送信 HTTP (S) データを検査する "SecRules" を定義できます。 詳細については、「」の web サイト <a href="https://www.modsecurity.org/">https://www.modsecurity.org/</a> を参照してください。

  <h2>ModSecurity が必要な理由</h2>

  ModSecurity には多くの利点がありますが、その主な用途の1つは、"仮想パッチ" を実行することです。これは、既知の脆弱性の悪用を防ぐセキュリティポリシーの適用レイヤーです。 基本的に、これにより、web アプリケーションのロジックとは別に脆弱性の悪用の試行を除外することができます。 たとえば、自動化された SQL インジェクション攻撃が発生している場合、web アプリケーションコードに SQL インジェクションのバグがないことを確認したとしても、アプリケーションロジックに到達しても、これらの要求をフィルターで除外するように modsecurity ルールを構成するのは簡単です。

  <h2>Azure Websites で ModSecurity を使用操作方法には、</h2>

  Azure Websites で ModSecurity を使用することは、アプリケーションの <b>web.config</b> ファイルに次の構成行を追加するだけで簡単に行うことができます。

  <blockquote>

  <div class="code"><span style="color: #0000ff">&lt;</span><span style="color: #800000">構成</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">system.webserver</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">Modsecurity</span> <span style="color: #ff0000"> enabled</span><span style="color: #0000ff">= "true"</span> <span style="color: #ff0000"> configFile</span><span style="color: #0000ff">= "D:\home\site\wwwroot\secrules.conf"</span> <span style="color: #ff0000"> </span> <span style="color: #0000ff"> / &lt; / &gt; </span> <span style="color: #800000">system.webserver</span> <span style="color: #0000ff">&gt;</span> <span style="color: #800000">構成</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;/</span><span style="color: #0000ff">&gt;</span><span style="color: #000000"> </span></div></blockquote>

  Azure websites では、 <b>d:\home\site\wwwroot</b> ディレクトリは webiste のルートディレクトリを指します。 <b>ConfigFile</b>属性は、この特定のサイトに使用する modsecurity 構成ファイルを参照し、modsecurity 設定と適用されるルールを含みます。


  また、通常、ModSecurity は、提供したくない可能性のあるディレクトリ内のさまざまなファイルの読み取りと書き込みを行うように構成されています。これらのファイルが提供されないようにするには、 <b>web.config</b> ファイルに次の構成を追加する必要があります。

  <blockquote>

  <div class="code"><span style="color: #0000ff">&lt;</span><span style="color: #800000">構成</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">system.webserver</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">セキュリティ</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">requestFiltering</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">hiddenSegments</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">add</span> <span style="color: #ff0000"> segment</span><span style="color: #0000ff">= "modsecurity"</span> <span style="color: #ff0000"> </span> <span style="color: #0000ff"> / &lt; / &gt; </span> <span style="color: #800000">hiddenSegments</span> <span style="color: #0000ff">&gt;</span> <span style="color: #800000"></span> <span style="color: #0000ff">&lt;</span> <span style="color: #000000">

  </span> fileExtensions<span style="color: #800000"></span> <span style="color: #0000ff">&gt;</span> <span style="color: #0000ff">&lt;</span> <span style="color: #000000">

  </span> add<span style="color: #ff0000"> fileextension</span><span style="color: #0000ff">= "conf"</span> <span style="color: #ff0000"> allowed</span><span style="color: #0000ff">= "false"</span> <span style="color: #ff0000"> </span> <span style="color: #800000"></span><span style="color: #0000ff"> / &gt; &lt; / </span>fileExtensions<span style="color: #800000"></span> <span style="color: #0000ff">&lt;/</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> requestFiltering<span style="color: #800000">security</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;/</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #0000ff">&lt;/</span> <span style="color: #800000">system.webserver</span> <span style="color: #0000ff">&gt;</span> <span style="color: #000000">

  </span> <span style="color: #800000"></span> <span style="color: #0000ff">&lt;/</span> 構成<span style="color: #0000ff">&gt;</span></div></blockquote>

  これにより、コンテンツディレクトリ内の ModSecurity ディレクトリに対する要求がブロックされ、クライアントに提供されなくなります。

  <h3>ModSecurity conf ファイルはどうなりますか。</h3>

  ModSecurity には、で <a href="https://www.modsecurity.org/rules.html">https://www.modsecurity.org/rules.html</a> 使用できる規則セットがあります。 コアルールセットは無料で、商用ルールはに対して支払われます。 コア規則セットをダウンロードして、conf ファイルの内容を把握することができます。 非常に基本的な構成ファイル<b> secrules</b>の例を次に示します。

  <blockquote><span style="color: #0000ff">SecRuleEngine</span> DetectionOnly <span style="color: #0000ff">Secrequestbodyaccess</span> Off <span style="color: #0000ff">SecTmpDir</span> <span style="color: #ff0000">d:\home\site\wwwroot\modsecurity\temp\</span>

  <span style="color: #0000ff">SecDataDir</span> <span style="color: #c0504d"><span style="color: #ff0000">d:\home\site\wwwroot\modsecurity\temp\</span>

  </span><span style="color: #0000ff">secrule</span> REQUEST_URI |ARGS <span style="color: #ff0000">"bad_arg" "log, deny, id: 12345, msg: ' Access Denied '"</span></blockquote>

  <strong>SecRuleEngine</strong>設定は、ルールがトリガーされたときの modsecurity の動作を示します。 これを <strong>DetectionOnly</strong> に設定すると、要求または応答はブロックされませんが、ルールをトリガーするすべてのものがイベントログに記録されます。これにより、どのルールがトリガーされ、要求の一部ではないかを知ることができます。 この値を [オン] に設定すると、ブロック動作を有効にしたり、[オフ] に設定して規則を完全に無視することができます。


  <strong>Secrequestbodyaccess</strong>オプションは、modsecurity ルールが規則の一部として要求本文にアクセスすることを許可されているかどうかを示します。 ご想像のとおり、これをオフにすると、HTTP 要求の要求本文に基づいてルールを評価できないという代償で、メモリと CPU の両方のパフォーマンスが向上する可能性があります。 要求エンティティ本体のスキャンを許可することは、IIS の要求フィルターと ModSecurity の機能を区別することです。そのため、エンティティ本体を分析するルールがある場合は、この設定を有効にする必要があります。


  <strong>SecTmpDir</strong>と<strong>SecDataDir</strong>を使用すると、modsecurity が一時データと永続的なデータを格納するディレクトリを設定できます。


  <strong>Secrule</strong>行は実際のフィルター処理規則であり、REQUEST_URI と ARGS (クエリ文字列パラメーター) に対する受信 HTTP 要求に対して動作します。 これらの場所の任意の場所で文字列 "bad_arg" が検出された場合、"log, deny, msg: ' Access Denied '" というアクションを実行します。基本的には、要求を拒否し、ログ内のアクセス拒否メッセージを使用してログに記録します。


  <a href="https://www.modsecurity.org/documentation.html">Modsecurity のドキュメント</a>を参照して、すべてのオプションの一覧と詳細な説明を取得できます。

  <h3>OWASP CRS ルールとはどのようなものですか? また、どのように使用するのですか。</h3>

  OWASP ModSecurity Core Rules Set (CRS) は、web アプリケーションで見つかった不明な脆弱性からの汎用的な保護を提供します。 これらの保護のいくつかは、http.sys または IIS の要求フィルターや web アプリケーションロジックなどの他の層で既に提供されている場合があります。 本質的には基本的なものであるため、出発点として使用されるので、サイト管理者/開発者は、保護対象のアプリケーションに応じてこれらのルールを追加/削除/変更する必要があります。


  コアルールセットの構成 <a href="https://spiderlabs.github.io/owasp-modsecurity-crs/">ファイルは、ModSecurity web サイト</a>からダウンロードできます。 Zip ファイルをダウンロードすると、conf ファイルと. データファイルを含むフォルダーが表示されます。 各 conf ファイルには、1つまたは複数の規則が含まれており、規則カテゴリ別に編成されています。 コンテンツフォルダーに<b> modsecurity\rules</b> ディレクトリを作成し、ここで zip ファイルからすべてのファイルとフォルダーをコピーすることができます。 FTP または Microsoft Web 配置のようなその他のメカニズムを使用してこれを実現できます。 ここでファイルをコピーしたら、上記の <b>web.config</b> で構成した conf ファイルの include ディレクティブを使用して規則をアクティブ化できます。たとえば、base_rules ディレクトリにすべてのルールを含め、slr_rules ディレクトリの wordpress ルールだけを含める場合は、次の行を <b>secrules. conf</b> ファイルの先頭に追加します。

  <blockquote><span style="color: #ff0000">D:\home\site\wwwroot\modsecurity\rules\ base_rules \* </span>

  <span style="color: #0000ff">インクルード</span> <span style="color: #ff0000">d:\home\site\wwwroot\modsecurity\rules\ slr_rules \ modsecurity_crs_46_slr_et_wordpress_attacks を</span><span style="color: #0000ff">含め</span>ます。</blockquote>

  一部の conf ファイルには、更新できるコメント付きセクションまたは参照データファイルがあります。 たとえば、base_rules ディレクトリ内の <b>modsecurity_crs_35_bad_robots</b> は、ブロックする User-Agents の一覧を含む <b>modsecurity_35_bad_robots のデータ</b> ファイルを参照します。 また、コアルールセットには、サイトのすべての CRS ルールを設定するために使用できる <strong>modsecurity_iis</strong> のファイルもあります。

  <h2>ModSecurity の使用に制限はありますか。</h2>

  現在、ModSecurity モジュールは、free レベルを含む Azure Websites のすべてのカテゴリで使用できます。 ただし、モジュールは Azure websites 上の IIS ワーカープロセス内で実行されることに注意する必要があります。そのため、ワーカープロセスに適用されるスロットルと制限は、ModSecurity にも適用されます。 そのため、free レベルでは、サイトの1日あたりの CPU 時間の上限に上限があります。これは、ワーカープロセスで実行されている ModSecurity にも適用されます。


  ModSecurity 自体は、ルールを使用して構成しない限り、あまり使用されません。 この側面では、IIS では RequestFiltering とまったく同じですが、既定のルールを使用して構成されない点が異なります。 これらの規則を自分で追加する必要があります。また、以下のセクションで、interpolated.csproj 構成を設定する方法または owasp コア規則セットを使用する方法について確認できます。 ルールの複雑さ、および HTTP 要求または応答の処理に使用される HTTP 要求または応答の部分によっては、web サイトのパフォーマンスがパフォーマンスに影響を与える可能性があります。 そのため、ルールに対する HTTP 要求と応答の追加オーバーヘッドを軽減するために、非常にターゲットルールを設定することをお勧めします。


  &nbsp;


  <em><strong>ModSecurity rules に問題がありますか。 <a href="https://azure.microsoft.com/blog/2014/10/01/diagnosing-modsecurity-for-azure-websites">診断 ModSecurity ブログ</a>をご覧ください。</strong></em>
