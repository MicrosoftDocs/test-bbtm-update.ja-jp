### YamlMime:Yaml
ms.openlocfilehash: 0b9f6995d4a831891bd060996652a9fa04857fcb
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890010"
Slug: announcing-azure-documentdb-sdk-for-xamarin
Title: Xamarin と DocumentDB を使用して Planet Scale Mobile App を数分でビルドする方法
Summary: 本日は、Xamarin モバイル プラットフォーム向け Azure DocumentDB SDK を発表し、モバイル アプリが DocumentDB と直接やり取りできます。
Content: >-
  <p><strong>2017 年 5 月 10 日現在、</strong></p>


  <p><strong>Azure Cosmos DB は、Microsoft&rsquo; のグローバル分散マルチモデル データベースです。Azure Cosmos DB は、その中核となるグローバル分散と水平スケールで、最初から構築されました。ユーザーがどこにいてもデータを透過的にスケーリングしてレプリケートすることで、任意の数の Azure リージョンにターンキーグローバル分散が提供されます。スループットとストレージを世界規模で弾力的にスケーリングし、必要なスループットとストレージに対してだけ料金を支払います。Azure Cosmos DB では、世界中の任意の場所で 99&mdash; 番目の割合で 1 桁ミリ秒の待機時間が保証され、パフォーマンスを微調整する複数の定義済みの整合性モデルが提供され、業界をリードするサービス レベル アグリーメント (SLA) によってサポートされるマルチホーム機能を使用して高可用性が保証されます。&nbsp;</strong></p>


  <p><strong>Azure Cosmos DB は、スキーマに依存せず、スキーマとインデックスの管理に対処する必要なく、すべてのデータのインデックスを自動的に作成します。また&rsquo;、ドキュメント、キー値、グラフ、および列ファミリのデータ モデルをネイティブにサポートするマルチモデルです。Azure Cosmos DB では、DocumentDB SQL (ドキュメント)、MongoDB (ドキュメント)、Azure Table Storage (キー値)、Gremlin (グラフ) がネイティブにサポートされているので、選択した API を使用してデータにアクセスできます。</strong></p>


  <hr>

  <p>ほとんどのモバイル アプリはクラウドにデータを格納する必要があります&nbsp;<a href="https://azure.microsoft.com/services/documentdb/">。また、Azure DocumentDB</a> はモバイル アプリ用の優らしいクラウド データベースです。 モバイル開発者に必要なすべてのもの、オンデマンドでスケーリングするフル マネージドのサービスとしての NoSQL&nbsp;&nbsp;&nbsp; データベース、ユーザーが世界中を移動する場所でデータを作成できます。アプリケーションに対して完全に透過的に行えます。本日は、Xamarin&nbsp;&nbsp; モバイル プラットフォーム向け Azure DocumentDB SDK を発表し、モバイル アプリが、中間層なしで DocumentDB と直接通信できます。</p>


  <p>DocumentDB を使用してモバイル開発者が使用する機能を次に示します。</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/DocDB%20Xamrin_300[10].png"><img alt="DocDB Xamrin_300" border="0" height="307" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/40d64dd3-e8a7-428b-a7a5-451346b2a055.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="DocDB Xamrin_300" width="542"></a></p>


  <ul>
   <li><strong>スキーマレス データに対する豊富なクエリ</strong>。 DocumentDB はデータをスキーマレス JSON ドキュメントとして異種コレクションに格納し、スキーマや<a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-sql-query"></a>インデックスについて心配することなく、豊富で高速なクエリを提供します。</li>
   <li><strong>高 速。保証。</strong>&nbsp;DocumentDB を使用&nbsp;してドキュメントの読み取り&nbsp;および書&nbsp;き込みを行うのに要する時間はミリ秒のみです。 開発者は&nbsp;必要な&nbsp;スループットを指定できます。DocumentDB では 99.99% の SLA が適用されます。</li>
   <li><strong>無限スケール。</strong> DocumentDB コレクションは <a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-partition-data">、アプリの拡大に合って拡大します</a>。 小さいデータ サイズと 1 秒あたり数百件の要求から開始し、大きいデータ サイズ、1 秒あたり数千万や数億件の要求のスループット、ペタバイトのデータに任意に拡張できます。</li>
   <li><strong>グローバル分散。</strong> モバイル アプリ ユーザーは外に出かけ、世界中を飛び回ることもよくあります。 DocumentDB は、<a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-distribute-data-globally">グローバル分散データベース</a>です。地図上で 1 回クリックするだけで、ユーザーがどこにいてもデータが提供されます。</li>
   <li><strong>組み込みの豊富な承認機能。</strong> DocumentDB を使用すると&nbsp;、カスタムの複雑な承認コードを使用<a href="https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems"></a>せずに、ユーザーごとのデータやマルチユーザー共有データのような一般的なパターンを簡単に変更できます。</li>
   <li><strong>地理空間クエリ。</strong> 現在、多くのモバイル アプリが地理的な場所に応じたエクスペリエンスを提供しています。 geo 空間型 DocumentDB のファースト クラス <a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-geospatial">サポート</a> により、これらのエクスペリエンスは非常に簡単に実現できます。</li>
   <li><strong>バイナリの添付ファイル。</strong> アプリ データには、バイナリ BLOB が含まれていることがよくあります。 添付ファイルがネイティブでサポートされているため、DocumentDB をアプリ データのワンストップ ショップとして簡単に使用できます。</li>
  </ul>


  <p>アプリ&#39;一緒に構築しましょう。</p>


  <h3>手順 1. 作業を開始する</h3>


  <p>DocumentDB&#39;簡単に開始できます。Azure portal に移動し、新しい DocumentDB&nbsp; アカウントを作成し、[クイックスタート] タブに移動して、既に DocumentDB アカウントに接続されている Xamarin Formstodo&nbsp; リスト サンプルをダウンロードします。&nbsp;</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[23].png"><img alt="image" border="0" height="407" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e02f5429-4209-495e-98fe-718fc11970d6.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="イメージ" width="543"></a></p>


  <p>または、既存の Xamarin アプリがある場合は、この <a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-sdk-dotnet-core" target="_blank"><u>DocumentDB パッケージをNuGetできます</u></a>。 現在、Xamarin.IOS、Xamarin.Android、および Xamarin Forms 共有ライブラリがサポートされています。</p>


  <h3>手順 2. データの処理</h3>


  <p>Yourdata&nbsp; レコードは、スキーマレス JSON ドキュメントとして異種コレクションの DocumentDB に格納されます。 同じコレクションに異なる構造のドキュメントを格納できます。</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/Screenshot%202017-01-23%2014.44.12[5].png"><img alt="Screenshot 2017-01-23 14.44.12" border="0" height="29" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9e3eb8d4-c7e2-4f1c-a51f-f6f44aaa685e.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="スクリーンショット 2017-01-23 14.44.12" width="764"></a></p>


  <p>Xamarin プロジェクトでは、スキーマレス データに対して言語で入力されたクエリを使用できます。</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/Screenshot%202017-01-23%2014.47.29[4].png"><img alt="Screenshot 2017-01-23 14.47.29" border="0" height="157" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/94ff379a-5e0f-4981-bb02-5efd0c970a2c.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="スクリーンショット 2017-01-23 14.47.29" width="725"></a></p>


  <h3>手順 3. AddUsers&nbsp;</h3>


  <p>多くの開始サンプルと同様に、上記でダウンロードした DocumentDB サンプルでは、アプリのコードでハードコーディングされたマスター キーを使用&#39;認証されます。 これはもちろん、ローカル エミュレーターを&nbsp;除く任意の場所で実行するアプリには良い考えではありません。 攻撃者がマスター キーを入手すると、DocumentDB アカウントの全データのセキュリティが侵害されます。</p>


  <p>代わりに&nbsp;、アプリ&nbsp;でログインしたユーザーのレコード&nbsp;にのみアクセス権を持つ必要&nbsp;があります。 DocumentDB を使用すると、開発者は、ニーズに応じて、acollection&nbsp;&nbsp;、一連のドキュメント、または特定のドキュメント内のすべてのドキュメントへの読み取りまたは読み取り/&nbsp;書き込みアクセス権をアプリケーションに付与できます。</p>


  <p>たとえば、Todo リスト アプリをマルチユーザー の todolist アプリに変更する方法を次に示します。サンプルの完全なバージョンについては、こちらを <a href="https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems">参照してください</a>。&nbsp;</p>


  <ul>
   <li>Facebook、Active Directory、または他のプロバイダーを使用して、アプリにログインを追加します。</li>
   <li>パーティション キーとして DocumentDB UserItems&nbsp; コレクションを作成&nbsp;します。このコレクションは、パーティション キーとして使用します。 &nbsp;collectionalalsDocumentDB&nbsp;&nbsp; にパーティション キーを指定すると、アプリ ユーザー数の増加に合わせ、高速クエリを提供しながら無限にスケーリングできます。</li>
   <li>DocumentDB リソース&nbsp;&nbsp; トークン ブローカーを追加します。これは、ユーザーを認証し、ログインしているユーザーに対して、ユーザーのパーティション内のドキュメントへのアクセス権を持つ、有効期限の短いトークン&#39;します。 この例では、リソース トークン ブローカーを App Service。</li>
   <li>Facebook で Resource Token Broker に対して認証を行い、ログインしている Facebook ユーザーのリソース トークンを要求してから、UserItems コレクション内のユーザー データにアクセスするアプリを変更します。&nbsp;&nbsp;</li>
  </ul>


  <p>この図は、ソリューションを&nbsp;示しています。 OAuthinDocumentDB&nbsp;&nbsp; ファースト クラスをサポートすることで、Resource Token Broker の必要性を排除する方法について説明します。この uservoice 項目が役に立つ場合は、この <a href="https://feedback.azure.com/forums/263030-documentdb/suggestions/17824504-built-in-oauth-support">uservoice</a>&#39;してください。&nbsp;&nbsp;</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/tokenbroker[4].png"><img alt="tokenbroker" border="0" height="462" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cd40d5fa-bf7b-49e7-a7d5-d7f90a6b8cef.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="tokenbroker" width="476"></a></p>


  <p>&nbsp;2 人の&nbsp;ユーザーが同じ todolist にアクセスする場合は、リソース トークン ブローカーのアクセス トークンにアクセス 許可を追加します。&nbsp;完全なサンプルは、こちらを参照<a href="https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems">してください</a>。</p>


  <h3>手順 4. オンデマンドでスケールできます。</h3>


  <p>DocumentDB は、サービスとしてのマネージド データベースです。&nbsp;ユーザー ベースが大きくなるにつれて、VM のプロビジョニング&#39;&nbsp;コアの作成について心配する必要はありません。 DocumentDB に対して、1&nbsp;&nbsp; 秒あたりの操作数 (スループット) を示す&nbsp;必要があります。 ポータルの [スケール] タブでスループットを指定するには、1 秒あたりの要求 <a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-manage#request-units-and-database-operations" rel="nofollow"><u>ユニット (</u></a> RUs) と呼ばれるスループットのメジャーを使用します。 たとえば、1 KB のドキュメントに対する読み取り操作には 1 RU が必要です。&nbsp;また、スループット メトリックの&nbsp;追加を行&quot;&quot;ってトラフィックの増加を監視し、アラートが発生したスループットをプログラムで&nbsp;変更することもできます。</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[13].png"><img alt="image" border="0" height="263" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/03d46429-0b0f-4cb8-8252-9c27856a5632.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="イメージ" width="557"></a>&nbsp;&nbsp;</p>


  <h3>手順 5. Go Planet Scale!</h3>


  <p>アプリが人気を得るに合って、世界中のユーザーを獲得できます。 または、&nbsp;&nbsp;DocumentDB コレクション&#39;した Azure データ センターに流星が引っ込まれた場合に、ガードをキャッチしたくない場合があります。 DocumentDB Azure portalに移動し、マップをクリックして、データを世界中の任意の数のリージョンに継続的にレプリケートします。 これにより、ユーザーがいた場所でデータを確実に使用できます。また、雨の日に備えてフェールオーバー ポリシーを追加できます。</p>


  <p><a href="file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[18].png"><img alt="image" border="0" height="347" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/497caddf-0d3f-4ebf-bfc2-e3a4927e2133.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="イメージ" width="559"></a></p>


  <p>このブログとサンプルは、Xamarin アプリケーションで DocumentDB を活用するために役立ちます。 DocumentDB JavaScript SDK を使用する Cordova アプリや、DocumentDB REST API を使用するネイティブ iOS/Android アプリでも同様のパターンを使用できます。</p>


  <p>いつものように、 <a href="https://feedback.azure.com/forums/263030-documentdb"><u>UserVoice</u></a>、StackOverflow <a href="https://stackoverflow.com/questions/tagged/azure-documentdb"><u>#azure-documentdb</u></a>、または Twitter <a href="https://twitter.com/documentdb"><u>@DocumentDB</u></a>を使用して、DocumentDB に対して今後&#39;する方法と改善点をお知らせします。</p>
