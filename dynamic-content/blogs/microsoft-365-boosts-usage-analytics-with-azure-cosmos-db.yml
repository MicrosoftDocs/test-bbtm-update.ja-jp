### YamlMime:Yaml
ms.openlocfilehash: 42cc77bc922307edb83951ca631b970b5846cdf4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889759"
Slug: microsoft-365-boosts-usage-analytics-with-azure-cosmos-db
Title: Microsoft 365 Azure Cosmos DB を使用して使用状況分析を向上させる
Summary: この投稿は、組織が現実世界のニーズを満たすために Azure Cosmos DB を使用する方法と、それが彼らに与える違いについて、2 部構成のシリーズの一部です。
Content: >-
  <p><i>この投稿は、組織が実際のニーズを満たすために Azure Cosmos DB&rsquo; を使用する方法と、その違いについて、2 部構成のシリーズの一部です。この最初の投稿では、Microsoft 365 使用状況分析チームがアクションを実行するための課題、新しいソリューションのアーキテクチャ、および実稼働ワークロードの移行について説明します。パート <a href="https://azure.microsoft.com/en-us/blog/microsoft-365-boosts-usage-analytics-with-azure-cosmos-db-part-2/">2 では、</a>追加の&rsquo;実装の詳細と、チームの取り組みによって得られる結果を&rsquo;確認します。</i></p>


  <h2>課題: 1 億 5,000 万人を超えるアクティブ ユーザーの動作を理解する</h2>


  <p>Office 365は、Microsoft 365 Enterprise ソリューション内の主要なサービスであり、毎月数百万人の商用顧客と 1 億 5,000 万人を超えるアクティブな商用ユーザーがいます。 Office 365、ライセンスの割り当て、製品レベルの使用状況、ユーザー レベルのアクティビティ、サイトアクティビティ、グループ アクティビティ、ストレージの使用量など、サービスの使用方法に関する各会社の管理者向け広範なレポートが提供されます。 使用状況Microsoft 365チームは、新しいレポートを段階的に追加して、より多くのサービスにOffice 365します。</p>


  <h3>以前のアーキテクチャ</h3>


  <p>このようなレポートを生成するために必要なテレメトリ データは、最近 MongoDB のコミュニティ バージョンで実行されるまで、使用状況分析と呼ばれるシステムで収集されました。 次の図は、Azure Blob Storage で収集されたログ ストリームを MongoDB に書き込むのに使用されるイン Importer Web サービスを含むデータ フローを示しています。 OData Web サービスは、Microsoft 365 管理センター 内のレポートと Microsoft Graph を介したアクセスの両方の保存されたデータを抽出する API を公開します。 毎日、毎日の完全な更新の一環として、数十億行のデータがシステムに追加されました。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e3810240-a3a5-42c7-85b0-a5648bc74d25.png"><img alt="Data flow of architecture (using MongoDB as a primary data store)." border="0" height="391" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d77002ba-096f-4fe8-af07-a488d022e66b.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="640"></a></p>


  <p>Office 365 によって提供される各主要な地域には、独立した使用状況分析リポジトリがあります。すべて同様のアーキテクチャを採用しています。 各地域では、データは 2 つの MongoDB クラスターに格納され、各クラスターは Azure Virtual Machines でホストされ、MongoDB を実行する最大 50 台の仮想マシン (VM) で構成されています。 各地域の 2 つのクラスターは、プライマリ/バックアップ構成で機能しました。 データは両方のクラスターに個別に書き込まれており、通常の操作では、すべての読み取りがプライマリ クラスターで実行されました。</p>


  <p>各クラスターは、書き込み負荷の高いワークロード用に設計されています。 書き込みを高速化するために、個々のクラスター ノード間でのデータのシャーディングは、MongoDB シャード キーなどのランダムなグローバル一意識別子 (GUID) を使用して行いました。 毎日数時間、マルチスレッド のインポートツールを使用して Azure Blob Storage からの新しいデータが書き込まれます。 各スレッドは、すべてのクラスター ノードに対して一度に 2,000 件のレコードのバッチを書き込み、すべてのレコードが完了するまで待機してから、次の 2,000 のバッチで開始します。</p>


  <h3>問題と問題</h3>


  <p>このアーキテクチャでは、Microsoft 365 使用状況分析チームに対して、過剰な管理作業やコストから、限られたパフォーマンス、信頼性、可用性、スケーラビリティに至るまで、いくつかの問題が発生しました。 いくつかの具体的な問題が含まれています。</p>


  <ul>
   <li><b>パフォーマンスが低下しています。</b> 読み取りは非効率的であり、すべてのノードに対してクエリを実行する必要があるシャード キーとしてランダムな GUID が使用されたため、レポートがタイムアウトする場合があります。 さらに、新しいデータがインポートされた毎日の数時間に、書き込みと読み取りが同時にプライマリ クラスター ノードにヒットすると、パフォーマンスが低下しました。 さらに悪いことに、バッチ書き込み中に何かが失敗し、多くの場合、内部データベース エラーが原因で発生した場合は、2,000 件のすべてのレコードを再度書き込む必要がありました。</li>
   <li><b>フルタイム管理。</b> MongoDB クラスターのメンテナンスは手動で時間がかかり、リソースがクラスターの管理に時間を費やす必要がありました。 これにより、チームに不要なリソースの制約が生じ、その帯域幅を使用して新しいレポートを市場に出す必要があります。 さらに、MongoDB 3.2 のバグでは、すべてのサーバーを毎週再起動する必要がありました。 また、仮想ネットワーク内の各クラスター ノードでセキュリティ証明書を更新するには、毎年完了する必要があります。また、クラスターごとにさらに 2 週間の作業が必要でした。 このような日常的な管理タスク中に、1 つのクラスター ノードで操作が失敗した場合、問題が解決されるまでクラスター全体がダウンしました。</li>
   <li><b>高コスト。</b> MongoDB バックアップ クラスターを実行するために多大なコストが発生しました。ほとんどの場合、アイドル状態のままでした。 これらのコストは、使用量が増加するにつれてOffice 365増加し続けました。</li>
   <li><b>スケーラビリティが制限されます。 </b>MongoDB が最初にデプロイされた後 3 年も経たのに、最大のリポジトリはほぼ最大容量でした。 より多くの製品とレポートが追加され、簡単にスケーリングする方法が追加されたので、予備の容量は 6 か月以内に使い切れと予測されました。</li>
  </ul>


  <p>チームは、既存のソリューションのアーキテクチャの制限に対処していた間、使用状況分析空間で顧客に対して有効にしたい新しい高スケールの機能の豊富な機能を先に見ていました。 チームは、MongoDB を実行する自己管理型 VM からフル マネージド データベース サービスに移行できる、新しい、コスト効率の高い低メンテナンス ソリューションを探し始めました。</p>


  <h2>Azure Cosmos DB での geo ディストリビューション: 改善されたアーキテクチャの鍵</h2>


  <p>そのオプションを確認した後、チームは MongoDB を <a href="https://azure.microsoft.com/en-us/services/cosmos-db/">Azure Cosmos DB</a> に置き換える決定をしました。このサービスは、グローバル分散と、事実上無制限のエラスティック スケーラビリティを実現するために設計された、フル マネージドのグローバル分散マルチモデル データベース サービスです。 最初の手順は、必要なインフラストラクチャをデプロイする方法でした。</p>


  <p>MongoDB で使用していたプライマリ/バックアップ (2 クラスター構成) とは対照的に、チームは Azure Cosmos DB でアクティブなデータのターンキー グローバル分散を利用しました。 データ レプリケーションに複数の <a href="https://azure.microsoft.com/en-us/global-infrastructure/regions/">Azure</a><a href="https://azure.microsoft.com/en-us/global-infrastructure/regions/"></a>&mdash; リージョンを使用すると、任意のリージョンに簡単に書き込み、任意のリージョンから読み取りを行い、Azure Cosmos DB を使用してアクティブなデータ レプリケーションとデータの整合性を透過的に処理しながら、データベース インスタンス全体のワークロードのバランスを改善できます。</p>


  <p>&ldquo;実際の geo レプリケーションは MongoDB&rdquo; では行いにくいと見なされました。これは、前のアーキテクチャがプライマリ クラスターとバックアップ クラスターの両方にデータを個別に書き込んだ理由です。「Microsoft 365 使用状況分析チームのソフトウェア エンジニアである、 &ldquo;Azure Cosmos DB&mdash; では、透過的 geo 分布の実装には、文字どおり数分かかっています。マウスを数回クリックする必要があります。&rdquo;</p>


  <p>次の図は、現在の使用状況分析システムの内部アーキテクチャを示しています。 Office 365 によって提供される各プライマリ 地域は、その地域Cosmos 2 つの Azure リージョンに geo レプリケートされたデータベースによって提供されます。 通常の運用条件下では、書き込みは各地域内の 1 つのリージョンに送信され、読み取りは両方にルーティングされます。 何らかの理由でリージョンが読み取りを提供しきれない場合、それらの読み取りは、同じ地域にサービスを提供する他のリージョンに自動的にルーティングされます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8f19d688-c2e7-4d8d-9c55-2f357a1e4820.png"><img alt="New usage analytics architecture, with geographically distributed reads and writes. (Two of n geographies shown; others follow a similar pattern.)" border="0" height="306" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dafd8ce5-1890-4c78-86c7-228a53bfea59.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="640"></a></p>


  <h3>Azure Cosmos DB への実稼働ワークロードの移行</h3>


  <p>開発者は、<a href="https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-introduction">Azure Cosmos DB SQL (Core) API</a> を使用して、読み取りと書き込みに対応するために、新しいインフラストラクチャに新しいデータ アクセス層を作成し始めました。 新しいシステムをオンラインにした後、チームは古いシステムと新しいシステムの両方に新しい実稼働データを書き込み、古いシステムからの実稼働レポートの提供を続け始めました。</p>


  <p>開発者は、新しいソリューションに対して複製する必要があるレポートに対処し始め、一度に 1 回操作します。 ほとんどのCosmosデータベース内に個別のコンテナーが作成されたので、システムがオンラインにされた後で各コレクションを個別にスケーラブルにできます。 最大のレポートは、Azure Cosmos DB がそれらを確実に処理するために最初に対処され、新しいレポートが検証された後、チームは新しい環境からレポートの提供を開始しました。</p>


  <p>すべての機能とレポートが Azure Cosmos DB によって提供され、すべてが必要な状態で実行された後、チームは古いシステムへの新しいデータの書き込みを停止し、MongoDB 環境を使用停止しました。 開発チームは、Azure Cosmos DB に移行し、データ アクセス層を書き換え、エンド ユーザーにサービスを中断することなく、すべての地域のすべてのレポートを移行することができます。</p>


  <p>この<a href="https://azure.microsoft.com/en-us/blog/microsoft-365-boosts-usage-analytics-with-azure-cosmos-db-part-2/">シリーズのパート 2</a> では、追加&#39;実装の詳細と、Azure Cosmos DB の Microsoft 365&rsquo; 使用状況分析チームの実装によって得られる結果について説明します。</p>
