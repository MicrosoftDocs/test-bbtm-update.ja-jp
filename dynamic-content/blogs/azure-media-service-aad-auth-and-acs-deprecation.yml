### YamlMime:Yaml
ms.openlocfilehash: f350e628577f8c4cbc0528c0ab66b3127e9150bc
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894108"
Slug: azure-media-service-aad-auth-and-acs-deprecation
Title: Azure Media Services は、ACS 認証の AAD と非推奨のサポートを発表します。
Summary: Azure Media Services は、ACS キーサポートの AAD 認証と12か月の非推奨の通知のサポートを発表します。 AAD に迅速に移行することをお勧めします。
Content: "<p>今月は、Azure Media Services で Azure Active Directory (AAD) 認証のサポートがリリースされたことを発表します。 REST API と .net クライアントライブラリのお客様は、AAD 認証を使用して要求を承認できるようになりました。 さらに、Azure Portal で新しい管理ブレードをリリースして、AAD でのユーザーとサービスプリンシパルの認証の使用を簡略化します。</p>\n\n<p>今回の更新 REST API プログラムのリリースでは、Azure リソース管理 (ARM) サービスによって提供されるものと同じロールベースのアクセス管理 (RBAC) を提供できるようになりました。 AAD 認証に移行することで、特定のユーザーまたは Media Services アカウントに接続されているアプリケーションによって行われたすべての変更を追跡および監査できるようになります。 新しい Azure メディア REST API を使用するには、REST API 要求を行うユーザーまたはアプリケーションが、管理しようとしているリソースへの共同作成者または所有者レベルのアクセス権を持っている必要があります。 Azure リソースに対するロールベースのアクセス制御のしくみの詳細については <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure\">、「azure のロールベースの Access Control</a>」を参照してください。</p>\n\n<h3>重要:  <a href=\"https://azure.com/media\" target=\"_blank\">Azure Media Services</a>での ACS 認証のサポートに関する12か月の非推奨の通知</h3>\n\n<p>Azure Active Directory は強力なロールベースのアクセス制御機能を提供し、acs トークン認証モデル ( &quot; アカウントキー &quot; ) と比較してアカウント内のリソースへのきめ細かなアクセスをサポートするため、2018年6月22日までにコードを更新し、acs から AAD ベースの認証に移行することを強くお勧めします。 また、迅速な移行の主な理由は、ACS キーベースの認証システムが廃止されたことを今後発表することです。</p>\n\n<h3>これは何を意味するのでしょうか。</h3>\n\n<ul>\n <li>Microsoft Azure Media Services は、2018年6月22日に Microsoft Azure Access Control Service (ACS) ベースの認証のサポートを終了します。</li>\n <li>お客様がアプリケーションコードを更新するのに十分な時間を提供するために、必要な移行を管理するための12か月&#39; 通知を提供しています。</li>\n</ul>\n\n<h3>どのようなアクションを実行する必要がありますか。</h3>\n\n<p>アプリケーションが期待どおりに動作することを確認するには、2018年6月22日より前に、次の操作を実行することをお勧めします。</p>\n\n<ul>\n <li>Media Services 用に作成されたアプリケーションのコードを更新します。</li>\n <li>ACS ベースの認証から移行します。</li>\n <li>AAD ベースの認証の使用を開始します。</li>\n</ul>\n\n<p>問題を回避するには<strong>、2018年6月22日以前に、</strong> ACS 認証トークンを使用して Media Services 用に作成されたアプリケーションが、運用環境で障害が発生することなく引き続き期待どおりに機能するようにする必要があります。 以下の新しい認証シナリオを詳しく確認し、ソースコードで AAD 認証を使用してに更新するための適切な措置を講じてください。</p>\n\n<p>Azure Media Services REST API は、対話ユーザーと web API、中間層、またはデーモンアプリケーションの認証をサポートしています。 次のセクションでは、REST API または .net クライアントライブラリを使用して直接操作するときに AAD 認証を使用する方法について詳しく説明します。</p>\n\n<h2>Media Services での AAD を使用したユーザー認証</h2>\n\n<p>Azure Media Services Explorer ツールなどの Azure Media Services アカウントの管理アプリケーションを構築する場合は、ポータルの Access Control (IAM) ブレードを使用して、Media Services リソースへのアクセスが許可されているユーザー&#39;の資格情報でログインするだけで済みます。 この種のソリューションは、次のいずれかのシナリオに適合するサービスに対して人間との対話を行う場合に非常に便利です。</p>\n\n<ul>\n <li>エンコードジョブの監視ダッシュボード</li>\n <li>ライブストリームの監視ダッシュボード</li>\n <li>Media services アカウントのリソースを管理するための、デスクトップまたはモバイルユーザー用の管理アプリケーション。</li>\n</ul>\n\n<p>ネイティブアプリケーションでは、最初に Azure Active Directory からアクセストークンを取得し、そのアクセストークンを使用してすべての REST API 呼び出しを行います。 次の図は、一般的な対話型アプリケーションの認証フローを示しています。 REST API 要求を成功さ &ldquo; せるには、呼び出し元のユーザーが、アクセスしようとしている Azure Media Services アカウントの<b>共同作成者</b> &rdquo; または &ldquo; <b>所有者</b> &rdquo; である必要があります。 認証されていない要求は、状態コード401で失敗します。 このエラーが発生した場合は、Media Services アカウントの<b>共同作成者</b> &rdquo; または &ldquo; <b>所有者</b> &rdquo; とし &ldquo; てユーザーが構成されていることをもう一度確認してください。 これを確認するには、Azure portal でメディアアカウントを検索し、[ &ldquo; アクセス制御 &rdquo; ] タブをクリックします。</p>\n\n<p><img alt=\"media-services-native-aad-app1\" border=\"0\" height=\"429\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4575527d-da6f-4346-9e16-a18224d4c24b.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"media services-ネイティブ-aad\" width=\"610\"></p>\n\n<p>Media Services 用の .net クライアント SDK のユーザーは、REST 要求との通信に AAD 認証を使用するために、Nuget (windowsazure.mediaservices バージョン4.1.0.1 以上) の最新バージョンにアップグレードする必要があります。 次の例は、以前に ACS を使用して .net クライアント SDK で認証する方法と、AAD の資格情報を使用する新しい方法の違いを示しています。</p>\n\n<p><b>注</b>: アプリケーションでは、参照を更新して、新しいアセンブリ &quot; <b>Microsoft.WindowsAzure.MediaServices.Client.Common.Authentication.dll&quot; </b>を含めたり、その名前空間への参照を追加したりできます。<b>また、このアセンブリへ</b>の &quot; &quot; 参照を追加して、 <b>itokenprovider</b>インターフェイスにアクセスできるようにする必要もあります。</p>\n\n<p>.net SDK とを使用した詳細なサンプルについては AAD この概要と使用可能な<a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureEnvironments.cs\">環境設定</a>および<a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureEnvironmentConstants.cs\">定数</a>を参照してください。</p>\n\n<p>&nbsp;</p>\n\n<h3>ACS 資格情報を使用した認証の非推奨の方法</h3>\n\n<pre class=\"prettyprint\">\n// Create and cache Media Services credentials in a static class variable.\n_cachedCredentials = new MediaServicesCredentials(\n             _mediaServicesAccountName,\n             _mediaServicesAccountKey, \n             &quot;urn:windowsazuremediaservices&quot;,\n             &quot;https://wamsprodglobal001acs.accesscontrol.windows.net&quot;);\n            \n// Used the cached credentials to create CloudMediaContext.\n var mediaContext = new CloudMediaContext(_cachedCredentials);\n mediaContext.Assets.FirstOrDefault();</pre>\n\n<h3>AAD 資格情報とユーザー認証を使用して認証を行う新しい方法</h3>\n\n<pre class=\"prettyprint\">\nvar tokenCredentials = new AzureAdTokenCredentials(&quot;{YOUR AAD TENANT DOMAIN HERE}&quot;, AzureEnvironments.AzureCloudEnvironment);\nvar tokenProvider = new AzureAdTokenProvider(tokenCredentials);\nvar mediaContext = new CloudMediaContext(new Uri(&quot;YOUR REST API ENDPOINT HERE&quot;), tokenProvider);\nmediaContext.Assets.FirstOrDefault()  // This would return a 401 unauthorized if you are not set up as an authorized user\n</pre>\n\n<p>&quot;AzureEnvironments.AzureCloudEnvironment&quot; 定数は、.NET SDK でパブリック Azure データ センターに対する正しい環境変数設定を取得するためのヘルパーです。 パブリック データ センターでのみ Media Services にアクセスするための定義済みの環境設定が含まれています。 ソブリンまたは government のクラウドリージョンでは、AzureChinaCloudEnvironment、AzureUsGovernmentEnvrionment、または &quot; AzureGermanCloudEnvironment &quot; をそれぞれ使用 &quot; できます。 &quot; &quot; &quot;</p>\n\n<p>AAD アクセストークンの取得に関する詳細は、 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">AzureAdTokenProvider</a></b>クラスと<b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenCredentials.cs\">取る azureadtokencredentials</a></b>クラスでラップされ、簡略化されています。 たとえば、AAD authority、Media services リソース URI、またはネイティブ AAD アプリケーションの詳細を指定する必要はありません。 これらは、AAD アクセストークンプロバイダークラスによって既に構成されている既知の値です。 .NET クライアント SDK を使用していない場合は、 <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-authentication-libraries\">ADAL ライブラリ</a> を使用して、これらのパラメーターを使用したアクセストークン要求の作成を簡略化することをお勧めします。 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">AzureAdTokenProvider</a></b>クラスと<b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenCredentials.cs\">取る azureadtokencredentials</a></b>クラスでは、既定で次の値が使用されます。</p>\n\n<p>また、 <b> <a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">AzureAdTokenProvider</a> </b>の既定の実装を独自の実装に置き換えることもできます。</p>\n\n<h2>Media Services でのサービスプリンシパル認証の AAD</h2>\n\n<p>デーモンサービス、web api、コンシューマー (モバイルまたはデスクトップ)、および web アプリケーションを使用した人間による操作では、Media Services アカウント内のリソースの対話型ログインまたはダイレクトユーザー管理/監視は必要ありません。最初に、独自のテナントで Azure Active Directory アプリケーションを作成する必要があります。</p>\n\n<p>作成したら、このアプリケーション &ldquo; の共同作成者 &rdquo; または &ldquo; 所有者 &rdquo; レベルのアクセス権を、Access Control (IAM) ブレードの Media Services アカウントに付与する必要があります。 どちらの手順も、Azure Portal または Azure CLI または PowerShell スクリプトを使用して簡単に実行できます。 AAD リソースの場合、 &ldquo; 共同作成 &rdquo; 者はリソースに所有者 &rdquo; と同じアクセス権を持って &ldquo; いますが、他のユーザーにアクセス権を付与できるのは所有 &rdquo; 者ロールだけ &ldquo; です。 現時点では、このバージョンの Media Services REST API では、エンティティレベルで RBAC は提供されませんが、これは将来の API 更新のためのロードマップに含まれています。 また、Media Services アカウントに新しい &quot; API アクセス &quot; ブレードが用意されており、必要なアプリケーションを簡単に生成したり、既存のアプリケーションから選択したりすることができます。 &nbsp;X509 証明書を代わりに使用する場合、または ClientID と ClientKey を使用する場合は、SDK の構成方法の詳細についてのドキュメントを参照してください。</p>\n\n<p>次の例では、デーモンアプリケーションで AAD web アプリケーションの資格情報を使用して、REST サービスで要求を認証する方法を示します。</p>\n\n<p><img alt=\"media-services-principal-service-aad-app1\" border=\"0\" height=\"403\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06e7cc0b-4f2c-4ac2-91d2-c1ec62e58a56.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"メディアサービス-プリンシパルサービス-aad\" width=\"610\"></p>\n\n<h3>ACS 資格情報を使用した認証の非推奨の方法</h3>\n\n<pre class=\"prettyprint\">\n// Create and cache Media Services credentials in a static class variable.\n_cachedCredentials = new MediaServicesCredentials(\n             _mediaServicesAccountName,\n             _mediaServicesAccountKey, \n             &quot;urn:windowsazuremediaservices&quot;,\n             &quot;https://wamsprodglobal001acs.accesscontrol.windows.net&quot;);\n            \n// Used the cached credentials to create CloudMediaContext.\nvar mediaContext = new CloudMediaContext(_cachedCredentials);\n</pre>\n\n<h3>AAD サービスプリンシパルとクライアントの対称キーを使用した認証の新しい方法</h3>\n\n<pre class=\"prettyprint\">\nvar tokenCredentials = new AzureAdTokenCredentials(&ldquo;{YOUR AAD TENANT DOMAIN HERE}&rdquo;, new AzureAdClientSymmetricKey(&ldquo;{YOUR CLIENT ID HERE}&rdquo;, &ldquo;{YOUR CLIENT SECRET}&rdquo;), AzureEnvironments.AzureCloudEnvironment);\nvar tokenProvider = new AzureAdTokenProvider(tokenCredentials);\n\nvar mediaContext = new CloudMediaContext(_mediaServicesApiServerUri, tokenProvider);</pre>\n\n<pre class=\"prettyprint\">\nmediaContext.Assets.FirstOrDefault();\n\n</pre>\n\n<h2>Media Services の新しい API アクセスブレードの使用を簡単に開始できるようにする</h2>\n\n<p>Azure Active Directory 認証は、AAD の詳細がわからないユーザーにとっては複雑になる可能性があるので、AAD に関する知識をごくわずかに使い始めることを非常に簡単にする必要がありました。 そのため、以前の [ACS &quot; アカウントキー &quot; ] ブレードを置き換えるポータルで Media Services アカウントの新しい &quot; API アクセス &quot; ブレードが導入されています。 また、ACS キーをローテーションしてユーザーを昇格させ、コードを更新して AAD サポートに移行する機能を無効にしています。<img alt=\"image\" border=\"0\" height=\"182\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7968d69d-5fc0-4897-a48b-95deb3926264.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"275\"></p>\n\n<p>新しい API アクセスブレードを使用すると、AAD の Azure Media Services に接続するプロセスをより簡単にすることができます。 最初に [API アクセス] ブレードを選択すると、ユーザーが対話型の管理アプリケーションにユーザー認証を使用するか、Media Services API との対話を行うためのサービスプリンシパルと AAD アプリケーションを作成するかを選択できるようになります。</p>\n\n<p>&nbsp;<img alt=\"image\" border=\"0\" height=\"266\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/54f286b2-22a2-4490-8af3-ea699d3aa07d.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"610\"></p>\n\n<p>[ユーザーベースの認証] オプションを選択すると、API での認証に必要なすべての Active Directory 情報を含む新しいパネルが表示されます。 これには、ClientID、ドメイン、およびリソースと共に、呼び出す必要がある API エンドポイントが含まれます。</p>\n\n<p>&nbsp;<img alt=\"image\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f878beb0-ebbb-4e20-be9e-b3c61398beaf.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"455\"></p>\n\n<p>サービスプリンシパル認証の場合は、追加の値と、既存の AAD アプリケーションから選択できる機能が表示されます。また、パネルに新しい値を直接作成することもできます。</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec931632-609f-4c7a-ad5d-29d90af5d0dc.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"467\"></p>\n\n<p>[サービスプリンシパル] ブレードが開いたら、次の条件を満たす最初の AAD アプリケーションを選択します。</p>\n\n<ul>\n <li>登録済みの AAD アプリケーションである</li>\n <li>このアカウントには、共同作成者または &quot; 所有者 &quot; の RBAC アクセス許可があり &quot; ます &quot;</li>\n</ul>\n\n<p>AAD アプリを作成または選択した後、キー (クライアントシークレット) を作成してコピーし、このシナリオでアクセストークンを取得するために必要なクライアント id (アプリケーション id) をコピーすることができます。<br>\nブレードでは、新しい &rdquo; AAD アプリケーションを作成するか、サブスクリプション内の既存のアプリケーションから選択する &ldquo; ことができます。 &nbsp;既存のアプリケーションを選択すると、既存のアプリケーションを一覧表示する新しいブレードが表示されます。</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"395\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aa4053fa-5778-4019-a44e-b9f5edfc58bb.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"800\"></p>\n\n<p>既存のアプリケーションから選択したり、新しいアプリケーションを作成したりすると、アクセス許可 &rdquo; を管理したり &ldquo; 、アプリケーション &rdquo; を管理したりするため &ldquo; の追加のボタンが表示されます。 &nbsp;これらの設定を使用すると、[AAD アプリケーション管理] ブレードを直接開いて、キーや応答 URL の変更やアプリケーションマニフェストのカスタマイズなどの管理タスクを実行できます。</p>\n\n<p>[アプリケーションの管理] ボタンをクリックすると、[AAD アプリケーション管理] ブレードが表示され、このアプリケーションを使用して API で使用するキーを作成できます。</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"363\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ac337cf4-b8fe-478d-aaab-0a28bf8432f3.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"image\" width=\"800\"></p>\n\n<p>ドメイン内に AAD アプリを作成するためのアクセス許可がない場合は、ブレードの AAD アプリ制御が表示されず、代わりに警告メッセージが表示されます。</p>\n\n<p>&nbsp;</p>\n\n<h2>Media Services のお客様のための次のステップとアクション</h2>\n\n<p>以前の ACS キーベースの認証から、より安全で柔軟性の高い、ロールベースの Azure Active Directory サービスに移行することが非常に興奮しています。 最新の .net SDK をダウンロードするか、既存の REST ベースの API 呼び出しを更新することによって、新しい AAD ベースの認証モデルを使用するには、すべての Azure Media Services のお客様がすぐに移行を開始する必要があります。</p>\n\n<p>さらに、AAD 認証を使用したより多くのクライアント SDK 言語をサポートする、REST api の新しいバージョンに取り組んでいます。 更新された API の詳細については、後のブログ記事で説明します。</p>\n\n<p>現在実行する必要がある主な操作は次のとおりです。</p>\n\n<ol>\n <li>using.NET している場合は、最新の SDK に更新し、AAD 認証に移行します。</li>\n <li>Media Services API での ACS 認証のサポートが廃止されたことを早期に計画します。 以前の ACS 認証のサポートは、2018年6月22日に正式にシャットダウンされます。</li>\n</ol>\n\n<h3>Java SDK とオープンソースおよび Community ドリブンクライアント sdk</h3>\n\n<p>現在、Java SDK を使用している場合、または Media Services 用に多くのコミュニティまたはオープンソースで生成されたクライアント sdk のいずれかを使用している場合は、現時点でいくつかのオプションがあります。&nbsp;</p>\n\n<p>JAVA と PHP の両方の Azure Media Services クライアント sdk で Azure Active Directory (AAD) 認証がサポートされるようになりました。 &nbsp;最新の Java SDK リリースを入手するには、<a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-java-how-to-use\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\" target=\"_blank\">java のドキュメント</a>で &nbsp; 詳細を参照してください。 Media Services 用の最新の PHP SDK をダウンロードするには、Packagist リポジトリで <strong>Microsoft/WindowAzurepackage</strong>&nbsp;<a href=\"https://packagist.org/packages/microsoft/windowsazure#v0.5.7\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\">&nbsp;</a> のバージョン 0.5.7 を探します。&nbsp;</p>\n\n<p>他のオープン ソース ライブラリの場合、これらは Media Services チームによって直接サポートされていないので、コミュニティ SDK 開発者と一緒に作業し、シナリオで AAD をサポートするために SDK の更新に優先順位を付ける必要があります。</p>\n\n<p>さらに、2018 年に公開される更新された REST API (v3) に取り組み、PHP、Java、Python など、AAD 認証をサポートする AutoRest によって生成されたクライアント SDK がサポートされています。 プレビューの準備ができたら、新しい v3 API とクライアント SDK への移行に関するブログ投稿が追加されます。</p>\n\n<h3>リソースと追加のドキュメント</h3>\n\n<p>詳細、サンプル コード、および特定のシナリオのドキュメントについては、次の記事を参照してください。</p>\n\n<ul>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-use-aad-auth-to-access-ams-api\" target=\"_blank\">認証AAD使用して API にアクセスする</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-portal-get-started-with-aad\" target=\"_blank\">Azure Portal を使用して認証を管理AADする</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-dotnet-get-started-with-aad\" target=\"_blank\">.NET と Media Services API にアクセスAAD</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-cli-create-and-configure-aad-app\" target=\"_blank\">Azure CLI 2.0 を使用して、アプリを作成AADします</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-powershell-create-and-configure-aad-app\" target=\"_blank\">PowerShell を使用してアプリを作成AADする</a>&nbsp;</li>\n <li>AAD をサポートする Java SDK は、Media Services Java ドキュメントで&nbsp;<a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-java-how-to-use\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\" target=\"_blank\">確認できます</a></li>\n <li>AAD をサポートする PHP SDK は&nbsp;、<strong>Microsoft/WindowAzurepackage</strong>&nbsp;<a href=\"https://packagist.org/packages/microsoft/windowsazure#v0.5.7\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\">&nbsp;</a> のバージョン 0.5.7 をPackagist リポジトリで使用できます。</li>\n</ul>\n\n<h3>質問がある場合は、お問い合わせください</h3>\n\n<p>ご質問、ご意見、フィードバックがある場合は、 <a href=\"https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=MediaServices\" target=\"_blank\">MSDN</a> フォーラムにメッセージまたは質問を投稿するか、お問い <a href=\"https://stackoverflow.com/questions/tagged/azure-media-services\" target=\"_blank\">合</a>わせStack Overflow。 直接サポートを受け取る場合は、Azure Portal からサポート <a href=\"https://portal.azure.com/?#blade/Microsoft_Azure_Support/HelpAndSupportBlade\" target=\"_blank\">リクエスト</a> を送信してください。<br>\nTwitter では、 を介して利用できます <a href=\"https://twitter.com/MSFTAzureMedia\" target=\"_blank\">@MSFTAzureMedia。</a></p>"
