### YamlMime:Yaml
ms.openlocfilehash: a3a2326f7e6bba9f86437a6dceeaf0de110cf8ce
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905143"
Slug: powerpivot-for-the-dba-part-3
Title: 'DBA の PowerPivot: パート3'
Summary: '[この記事は SQL Azure チームによって提供されました。]この記事では、ビジネスインテリジェンスのいくつかの簡単な用語と手法について、引き続き SQL します。'
Content: "<p>[この記事は SQL Azure チームによって提供されました。]</p><p>この記事では、ビジネスインテリジェンスのいくつかの簡単な用語と手法については、「SQL」をご覧ください。 これは、一連のブログ記事 (パート1、パート 2) での継続であり、PowerPivot に対しては、SQL に相当します。</p>  <h2>Scope</h2>  <p>このブログ記事で説明したように、メジャーには、評価しているセルの行が PowerPivot テーブル内のセルのスコープとして渡されます。 これは、そのスコープ内の1つのセルを合計する場合に適しています。 ただし、セルが含まれている行やピボットテーブル全体など、このスコープとより大きなスコープの比率を取得する場合はどうすればよいでしょうか。</p>  <p>メジャーには、スコープ外にアクセスして、大きな画像から情報を描画する機能があります。 セルが自転車カテゴリ内の行のセットであり、の注文日が7/1/2001 である場合、そのメジャーは、自転車カテゴリ内のすべての行と、注文日が7/1/2001 のすべての行にアクセスできます。また、ピボットテーブル全体のすべての行にアクセスすることもできます。 </p>  <p><a href=\"\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image001\" border=\"0\" alt=\"clip_image001\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4024.clip_5F00_image001_5F00_thumb_5F00_56FFE9B2.png\" width=\"853\" height=\"634\"></a></p>  <p>ローカルスコープ以外にもアクセスできることは、PowerPivot のメジャーの機能です。 この機能により、ユーザーは、セルデータとピボットテーブル内の他のテーブルとの比較方法を把握できます。</p>  <h2>ALL</h2>  <p><a href=\"https://technet.microsoft.com/en-us/library/ee835613.aspx\">データ分析式 (DAX)</a>では、measure 式で使用される言語は<a href=\"https://technet.microsoft.com/en-us/library/ff452076.aspx\">すべて</a>、テーブル内のすべての行、または列のすべての値を返し、適用されている可能性のあるフィルターはすべて無視されます。 次の例では、ALL を使用して、そのカテゴリの合計行品目売上に対するセルの総行品目売上の比率を計算しています。</p>  <pre class=\"csharpcode\">=SUM(SalesOrderDetail[LineTotal])/CALCULATE(SUM(SalesOrderDetail[LineTotal]),ALL(ProductCategory))</pre>    <p>数式で除算を見つけると、左側は、この前のブログ記事で既に説明した数式です。セルのスコープ内のすべての <b>Linetotal</b> 列を合計します。 除算の右側には、数式の興味深い部分があります。 <a href=\"https://technet.microsoft.com/en-us/library/ff452134.aspx\">CALCULATE</a> キーワードを呼び出して、合計の範囲を変更します。 CALCULATE は、指定されたフィルターによって変更されたコンテキストで式を評価します。 この場合、これらのフィルターは、ピボットテーブルのこの特定の行の結果から返されるすべての行です。 上記の例では、注文日を示しています。 結果は次のようになります。</p>    <p><a href=\"\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image002\" border=\"0\" alt=\"clip_image002\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2816.clip_5F00_image002_5F00_thumb_5F00_2A36E43F.png\" width=\"827\" height=\"658\"></a></p>    <h2>Transact-SQL</h2>    <p>次に、transact SQL と同じ結果を得てみましょう。これは、入れ子になった SELECT がテーブル (T1) として使用され、日付ごとの<b>linetotal</b>列の合計を取得するため、200レベルの transact-sql SQL ステートメントになります。 </p>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span>    ProductCategory.Name, SalesOrderHeader.OrderDate,       <span class=\"kwrd\">SUM</span>(LineTotal)/ <span class=\"kwrd\">MAX</span>(T1.ProductCategoryTotal)  <span class=\"kwrd\">FROM</span>    Sales.SalesOrderHeader      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Sales.SalesOrderDetail <span class=\"kwrd\">ON</span>           SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.Product <span class=\"kwrd\">ON</span>           Product.ProductID = SalesOrderDetail.ProductID      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.ProductSubcategory <span class=\"kwrd\">ON</span>           Product.ProductSubcategoryID = ProductSubcategory.ProductSubcategoryID      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.ProductCategory <span class=\"kwrd\">ON</span>           ProductSubcategory.ProductCategoryID = ProductCategory.ProductCategoryID      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> (          <span class=\"kwrd\">SELECT</span> <span class=\"kwrd\">SUM</span>(LineTotal) <span class=\"str\">'ProductCategoryTotal'</span>, SalesOrderHeader.OrderDate          <span class=\"kwrd\">FROM</span>    Sales.SalesOrderHeader              <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Sales.SalesOrderDetail <span class=\"kwrd\">ON</span>                   SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID          <span class=\"kwrd\">GROUP</span> <span class=\"kwrd\">BY</span> SalesOrderHeader.OrderDate                  ) <span class=\"kwrd\">AS</span> T1 <span class=\"kwrd\">ON</span>     SalesOrderHeader.OrderDate = T1.OrderDate  <span class=\"kwrd\">GROUP</span> <span class=\"kwrd\">BY</span> ProductCategory.Name, SalesOrderHeader.OrderDate  <span class=\"kwrd\">ORDER</span> <span class=\"kwrd\">BY</span> SalesOrderHeader.OrderDate</pre>      <p>これにより、すべての正しい結果が返されますが、Excel のピボットテーブルとはあまり似ていません。 比率は書式設定されていません。結果はピボットされません。総計はなく、データを読みやすくすることはできません。</p>    <p>テーブルをピボットするための SQL を次に示します。</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> OrderDate, [1] <span class=\"kwrd\">AS</span> Bikes, [2] <span class=\"kwrd\">AS</span> Components, [3] <span class=\"kwrd\">AS</span> Clothing,      [4] <span class=\"kwrd\">AS</span> Accessories  <span class=\"kwrd\">FROM</span>   (<span class=\"kwrd\">SELECT</span>    Sales.SalesOrderDetail.LineTotal/T1.ProductCategoryTotal <span class=\"str\">'LineTotal'</span>,       ProductCategory.ProductCategoryID,       SalesOrderHeader.OrderDate      <span class=\"kwrd\">FROM</span>    Sales.SalesOrderHeader          <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Sales.SalesOrderDetail <span class=\"kwrd\">ON</span>               SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID          <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.Product <span class=\"kwrd\">ON</span>               Product.ProductID = SalesOrderDetail.ProductID          <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.ProductSubcategory <span class=\"kwrd\">ON</span>               Product.ProductSubcategoryID =           ProductSubcategory.ProductSubcategoryID          <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Production.ProductCategory <span class=\"kwrd\">ON</span>               ProductSubcategory.ProductCategoryID =           ProductCategory.ProductCategoryID          <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> (              <span class=\"kwrd\">SELECT</span> <span class=\"kwrd\">SUM</span>(LineTotal) <span class=\"str\">'ProductCategoryTotal'</span>, SalesOrderHeader.OrderDate              <span class=\"kwrd\">FROM</span>    Sales.SalesOrderHeader                  <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> Sales.SalesOrderDetail <span class=\"kwrd\">ON</span>                       SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID              <span class=\"kwrd\">GROUP</span> <span class=\"kwrd\">BY</span> SalesOrderHeader.OrderDate                      ) <span class=\"kwrd\">AS</span> T1 <span class=\"kwrd\">ON</span>     SalesOrderHeader.OrderDate = T1.OrderDate            ) p  PIVOT  (      <span class=\"kwrd\">SUM</span>(LineTotal)      <span class=\"kwrd\">FOR</span> ProductCategoryID <span class=\"kwrd\">IN</span> ( [1], [2], [3], [4] )  ) <span class=\"kwrd\">AS</span> pvt  <span class=\"kwrd\">ORDER</span> <span class=\"kwrd\">BY</span> pvt.OrderDate;</pre>      <h2>まとめ</h2>    <p>質問、懸念事項、コメントがありますか。 これらを下に投稿してください。</p>"
