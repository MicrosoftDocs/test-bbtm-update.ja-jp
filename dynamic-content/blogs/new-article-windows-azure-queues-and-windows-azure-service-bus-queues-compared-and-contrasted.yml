### YamlMime:Yaml
ms.openlocfilehash: c9cb66b2f5cd3f0e2fd249ec4cf1f51d5d158e28
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893848"
Slug: new-article-windows-azure-queues-and-windows-azure-service-bus-queues-compared-and-contrasted
Title: '新しい記事: Azure Windowsと Azure Windows キューのService Bus比較と比較'
Summary: Windows Azure で現在提供されている 2 つのクラウドベースのキュー サービス (Windows Azure キューと Windows Azure Service Bus. で提供される 2 つのクラウドベースのキュー サービスのそれぞれを使用する場合のガイダンスについて、お客様から要求を受け取っています。
Content: <p>Windows Azure で現在提供されている 2 つのクラウドベースのキュー サービス (<a href="https://azure.microsoft.com/en-us/?WT.mc_id=cmp_pst001_blg_post0034" target="_blank">Windows Azure</a> キューと Windows Azure Service Bus キュー) のそれぞれを使用する場合のガイダンスについて、お客様から要求を受け取っています。</p>  <p>この問題に対処するために、2 つのサービスの違いと類似点を分析する記事をまとめました。 この情報を使用すると、それぞれのキュー サービスを比較して比較し、ニーズに最適なソリューションについてより情報に基づいた意思決定を行えます。</p>  <p>MSDN の完全な記事の「テクノロジの選択に関する大レベル <a href="https://msdn.microsoft.com/en-us/library/hh767287(VS.103).aspx" target="_blank">の考慮事項」セクションを</a> 次に示します。</p>  <h4>テクノロジの選択に関する考慮事項</h4>  <p>Azure Windowsキューと Service Bus キューの両方は、現在 Azure 上で提供されているメッセージ キュー サービスWindows実装です。 機能に若干の違いがあるため、個々のソリューションの要件や、解決する必要があるビジネス上または技術上の問題に応じて、いずれかまたは両方を使用できます。</p>  <p>特定のソリューションの目的に合うキュー テクノロジを判断する場合、ソリューション設計者および開発者は次の推奨事項を検討する必要があります。 さらに詳細な情報が次のセクションにあります。</p>  <p>ソリューション アーキテクト/開発者は、次の場合に Azure キュー <b>Windows使用を検討する必要</b>があります。</p>  <ul>  <li>アプリケーションでキューに格納する必要があるメッセージの量が 5 GB を超えており、メッセージの有効期間が 7 日未満の場合。</li>  <li>アプリケーションでメッセージを処理するのに柔軟なリースが必要な場合。 これにより、ワーカーがクラッシュした場合にメッセージをすぐに再度処理できるようにメッセージのリース時間を短くしたり、 メッセージの処理に時間がかかっている場合にメッセージのリースを延長したりできるようになります (メッセージの処理時間が不明確な場合に便利です)。</li>  <li>アプリケーションでメッセージ内のメッセージの処理の進行状況を追跡する必要がある場合。 これは、メッセージを処理している worker がクラッシュした場合に役に立ちます。 後続のワーカーでその情報を使用して、前のワーカーが中断した時点から処理を再開できます。</li>  <li>キューに対して実行されたすべてのトランザクションのサーバー側のログが必要な場合。</li>  </ul>  <p>ソリューション アーキテクト/開発者は、次の場合に Azure Windowsキュー Service Bus検討<b>する必要</b>があります。</p>  <ul>  <li>Windows Communication Foundation (WCF) の .NET Framework 通信スタックとの完全な統合が必要な場合。</li>  <li>自動重複検出をサポートする必要がある場合。</li>  <li>関連するメッセージを 1 つの論理グループとして処理できる必要がある場合。</li>  <li>複数のメッセージをキューに送信したりキューから受信したりする際にトランザクション動作と原子性が必要な場合。</li>  <li>アプリケーション固有のワークロードの TTL (time-to-live) が 7 日間を超える場合。</li>  <li>アプリケーションで処理するメッセージのサイズが 64 KB を超えることはあっても 256 KB の制限に到達することはないと考えられる場合。</li>  <li>キューによるメッセージの配信が先入れ先出し (FIFO) の順序で行われることが保証される必要がある場合。</li>  <li>キューをポーリングせずにメッセージを受信できる必要がある場合。 このService Bus、長いポーリング受信操作を使用して実現できます。</li>  <li>ロールベースのアクセス モデルを提供して、キューの送信側と受信側に異なる権限/アクセス許可を与える必要がある場合。</li>  <li>キューのサイズは 5 GB を超えるサイズではありません。</li>  <li>いずれは、キュー ベースのポイント ツー ポイントの通信から、キューに送信されたメッセージの一部またはすべての独立したコピーを受信する追加の受信側 (サブスクライバー) をシームレスに統合できるメッセージ交換パターンに移行することを考えている場合。 後者は、アプリケーションによってネイティブに提供される発行/サブスクライブ機能Service Bus。</li>  <li>メッセージング ソリューションでは、 &ldquo;追加のインフラストラクチャ コンポーネントを構築する必要なく、At-Most-Once&rdquo; 配信保証をサポートできる必要があります。</li>  <li>メッセージ バッチをパブリッシュしたり使用したりできるようにしたい場合。</li>  </ul>  <p>&nbsp;MSDN の <a href="https://msdn.microsoft.com/en-us/library/hh767287(VS.103).aspx" target="_blank">完全な記事</a> を参照してください。</p>
