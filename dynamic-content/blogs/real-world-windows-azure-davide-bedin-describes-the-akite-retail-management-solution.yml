### YamlMime:Yaml
ms.openlocfilehash: d98586dda378129d326e7b12cbf637845d28f173
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904550"
Slug: real-world-windows-azure-davide-bedin-describes-the-akite-retail-management-solution
Title: '実際の Windows Azure: Davide Bedin は、akite 製品管理ソリューションについて説明します。'
Summary: 実際 Windows azure シリーズの一部として、Bedin ショップシステムの最高技術責任者である Davide Bedin について説明しました。これは、企業が azure Windows に対して長期的な戦略的な役割を取った方法に関するものです。
Content: '<p>実際に Windows azure シリーズの一部として、Bedin ショップシステムの最高技術責任者である Davide Bedin は、azure Windows における長期的な戦略的な方法について説明しています。 ここで &rsquo; は、次のことを言う必要がありました。</p>  <p><b>David Ingham: </b><b>お客様の会社と akite サービスについてご意見をお寄せください</b>。<b></b></p>  <p><b>Davide Bedin</b>: Bedin Shop systems は、Cornuda、Treviso、イタリアに基づいており、販売時点管理 (POS) および小売店向けのストアシステムの開発に20年以上の経験があります。 私たちは、小規模から大規模な小売店、独立店舗、チェーン向けのソリューションで Microsoft テクノロジを使用することを斬新なための国際評判を確立しました。<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2275.Bedin1.png" alt="" style="float: right;" height="374" border="0" width="259"></p>  <p>akite は、販売時点管理のサービスとしてのソフトウェア (SaaS) ソリューションであり、 <a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0117gen">Azure Windows</a>完全に設計されています。 Azure Windows でホストされている akite<i>リテール web サービス</i>は、データの保存と分析を行い、本社およびその他の外部 Web サービスと店舗を接続します。</p>  <p>フロントストア操作用の <i>POS.net</i> とバックオフィスタスク用の <i>SHOP.net</i> という2つのスマートクライアントアプリケーションは、ピアツーピア方式で動作しなくなります。そのため、ストアにサーバーは必要ありません。 これは、あまり使用されていないサーバーが単一障害点であり、不要なエネルギーを消費することが多いため、重要な利点です。</p>  <p>aKite によってストアの複雑さが解消されるため、小売業者の作業が簡単になります。 aKite では、設備投資が不要であるため、すべての接続クライアント数と店舗単位の料金のみが必要であるため、経済的な利点も提供されます。 展開は単純 &ndash; に ClickOnce インストールを使用すると、故障した PC を交換したり、新しいストアを開いた場合でも、数分でもかまいません。</p>  <p><b>DI: メッセージベースのアーキテクチャを使用して対処しようとした主な課題は何ですか。</b><b></b></p>  <p><b>DB</b>: 最初の課題は、Windows Azure でホストされているスマートクライアントとリテール Web サービスとの間でデータを同期することでした。 価格表の更新は、Web サービスからスマートクライアントへのイベント通知を必要とする具体的な例の1つです。 &rsquo;これは小さなスケールでは困難ですが、aKite では多数の中規模のチェーンと多数のストアを含む非常に大きなサイズのチェーンがサポートされているため、このような通知を配信する集計タスクは実際の課題を表します。 aKite は、小売業者がこのような更新プログラムを事前に準備する機能を提供しますが、更新プログラムをできるだけ早く伝達する必要があります。 また、数百の店舗が関係している場合でも、小売業者がこのような更新を行うことが必要になる場合があります。 この問題に対処するための従来のアプローチとして、クライアントが Web サービスをポーリングして更新プログラムを確認するように極度することが考えられます。 この手法には、Web サービスでリソースを消費することの明らかな欠点があります。 <a target="_blank" href="https://www.windowsazure.com/en-us/home/features/service-bus/?WT.mc_id=cmp_pst001_blg_post0117bus">Windows Azure Service Bus</a>は、クライアントにイベントをプッシュする効率的な方法を提供し、アプリケーションがそのコアジョブに専念できるようにするため、非常に適しています。</p>  <p>この同期シナリオで Service Bus の使用経験を得た後は、その簡潔さと可能性について詳しく説明しました。 AKite リテール Web サービスを構成するコンポーネント間の非同期メッセージングを大幅に支援できることがわかりました。ここでの目標は、データベースの負荷を軽減するソリューションを見つけて、メッセージが格納されたことと、回復性と信頼性を向上させることでした。</p>  <p><b>DI: これらの技術的な課題を解決するために Service Bus はどのように役立つでしょうか。</b><b></b></p>  <p><b>DB</b>: 一般に、Service Bus によって、akite ビジネスロジックのみに専念できるため、イベント通知とメッセージングを処理することからサービスを削減できます。 同期シナリオでは、Service Bus を導入すると、クライアントからの akite リテール Web サービスへの呼び出しが60% 減少します。 また、通知の送信と使用のパフォーマンスが向上しました。</p>  <p>Service Bus により、クライアントとサービス間の接続の両方に疎結合アーキテクチャを作成できるようになりました。また、製品間の Web サービス &ndash; を構成するコンポーネント間で、配信ではなくメッセージのビジネスコンテンツに焦点を当てることができます。 コンポーネントは、最終的に処理されるコンポーネントを意識することなく、Service Bus のキューやトピックにメッセージを送信するだけです。 この疎結合により、さまざまなシナリオを独創に組み合わせることができ、今後の新しい予期しないシナリオを簡単にサポートできるようになります。 たとえば、新しい方法でサーバーイベントを処理する新しいサービスコンポーネントを作成する必要がある場合は、新しいサブスクリプションを作成し、新しいシナリオに関連するメッセージのみを一致させることができます。</p>  <p>私たちの観点では、サービスアーキテクチャに Service Bus を導入すると、早急なニーズに対処するだけでなく、より多くの価値をもたらすことができるようになります。これは、将来 &rdquo; の &ldquo; 変化に対応し、時間の経過と共に進化することを可能にする必要があることを意味します。</p>  <p><b>DI: Service Bus を使用して実際に作成したメッセージングシナリオを教えてください。</b><b></b></p>  <p><b>DB</b>: 現在、さまざまなシナリオをサポートするために Service Bus を利用しています。 既に説明したように、最初のシナリオでは、ストアで実行されている aKite スマートクライアントへのデータ更新やその他の情報の通知について説明します。 通知メッセージは Service Bus トピックに送信されます。 メッセージのプロパティは、通知を受信する必要があるストアを識別します。 各クライアントには、関連するメッセージのみを受信するようにフィルターを適用したトピックに対する独自のサブスクリプションがあります。 更新の準備と通知は、aKite のサービスコンポーネントによって通知されるイベントに応答して行われます。 これらのイベントは、トピックに送信され、worker ロールによってサブスクリプションから使用されるメッセージとしても表されます。</p>  <p>別のシナリオでは、各ストア POS.net クライアントは、Service Bus キューを使用して、akite リテール Web サービスに販売ドキュメントを送信します。 キューを使用すると、店舗チェーンの販売活動における突然の予期しない変更に対応できます。 多くのワーカーロールインスタンスは、受信メッセージのキューを常にリッスンしています。 キューの負荷平準化の性質により、負荷のピークと谷は、単純に拡張とコントラクトの両方のキューの長さが簡単 &ndash; に対応できるようになります。 全体的な負荷が常に増加している状況が発生した場合は、作業を共有するために、より多くのワーカーロールインスタンスを追加することができます。</p>  <p>リテール Web サービス内では、別の Service Bus メッセージングパターンが使用されます。 POS.net クライアントからの販売ドキュメントは、バックエンド処理の一部として複数の異なる手順を通過します。その多くは、大量の計算を集中的に行うか、データベースとの広範なやり取りを必要とします。 これらの各手順は worker ロールによって実行され、ロール間の通信は Service Bus のトピックで実現されます。 各ワーカーロールは、さまざまなサブスクリプションをリッスンします。各サブスクリプションは、ストアのチェーン全体またはストアのサブセットのいずれかのデータを保持します。 &nbsp;作業が完了すると、各処理ステップはトピックにメッセージを送信して、ドキュメントを次のステップに渡します。 さまざまな worker ロールは、さまざまな worker インスタンス間で全体的なワークロードを動的かつ自動的に分割できるので、システム負荷に対応するために適切に拡張できる柔軟性とアーキテクチャが非常に優れています。</p>  <p align="center"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2816.Bedin2.jpg" alt="" border="0"></p>  <p><b>DI: Service Bus を操作するときに開発者エクスペリエンスを記述するにはどうすればよいでしょうか。</b><b></b></p>  <p>Service Bus オブジェクトモデルは明確であり、サンプルとドキュメントで説明されている使用シナリオでは、さまざまなユースケースについて説明します。 Windows Azure クライアントライブラリに直接 Service Bus することは、さらに簡略化されています。</p>  <p>私たちは Service Bus を早期に採用していましたが、nascent テクノロジの場合と同様に、最初 &rsquo; は多くのツールを利用できませんでした。 <a target="_blank" href="https://code.msdn.microsoft.com/windowsazure/Service-Bus-Explorer-f2abca5a">Service Bus エクスプローラー</a>ツールの到着は、Service Bus を調査、デバッグ、およびテストするための非常に重要なツールです。</p>  <p><b>DI: ソリューション (サービス) をエンドカスタマーにロールアウトしていますか?</b><b></b></p>  <p>はい、Service Bus は、akite のすべてのユーザーをサポートするようになりました。 &nbsp;新機能と改善点を継続的にロールアウトしています。また、製品を継続的に成長させることによって、既存および新規、大きな、または小規模のメリットをすべてお客様に提供しています。</p>'
