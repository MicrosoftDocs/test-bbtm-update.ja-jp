### YamlMime:Yaml
ms.openlocfilehash: b221f1dad652a7f9b2f8a942a6c2cdf3cf9586e7
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909919"
Slug: creating-a-bing-map-tile-server-from-windows-azure
Title: Azure から Bing Map Tile Server をWindowsする
Summary: '[この記事は、チームによってSQL Azureされました。]このアプリケーションの例では、 に基づいてタイルにプッシュ ピンを描画する Windows Azure を使用して、Bing地図 タイル サーバーを構築します。'
Content: "<p>[この記事は、チームによってSQL Azureされました。]</p><p>このアプリケーションの例では、Windows Azure を使用して Bing地図 タイル サーバーを構築し、SQL Azure に空間データとして格納された座標に基づいてタイルにプッシュ ピンを描画します。 Bing地図を使用すると、カスタム タイルを使用してマップを描画できます。これらのタイルは、Azure サーバーのWindows生成できます。 この例で生成されるオーバーレイは、データベースに格納されている緯度と経度SQL Azureします。 </p> <p>プッシュピンを描画するもう 1 つのオプションがあります。JavaScript を使用すると、マップ ajax コントロールBingを使用してプッシュピンを描画できます。 ただし、マップ上の約 200 個のプッシュ ピンの後、JavaScript を使用するとパフォーマンスが低下します。&nbsp; そのため、多くのプッシュピンがある場合は、タイル サーバーを使用してサーバー側に描画します。</p> <p>Windows Azure は、マップを提供する Web サイトのトラフィックニーズに合わせてスケーリングすることができるので、タイル サーバーを作成するときに使用する最適なソリューションです。 SQL Azureは、空間データ型のサポートのためにプッシュ ピンとして描画する緯度と経度のポイントを保持する場合に最適です。 </p> <p>このアプリケーションに関する記述の難しい部分は、ブログ記事の領域で、これらの不当なテクノロジに関するすべての知識を集めています。 この理由から、Bing地図、azure、Azure のWindowsに関する記事へのリンクをオフにし、主に SQL Azure に関する記事を書くつもりです。 </p> <p><a href=\"\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"イメージ\" border=\"0\" alt=\"image\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7343.image_5F00_thumb_5F00_02394066.png\" width=\"534\" height=\"531\"></a> </p> <h4>Bing Maps</h4> <p>web ページに Bing Map を埋め込むには、Bing Map 開発者アカウントと Bing マッピング キーを取得する必要があります。これは、Bing <a href=\"https://www.bingmapsportal.com/\">Map Portal</a> で行います。 キーを取得したら、AJAX コントロール<a href=\"https://msdn.microsoft.com/en-us/library/ee692181.aspx\">の</a>使用を開始する方法に関するBing地図を参照してください。 これは、Web ページにマップを埋め込Bing例で使用した方法です。 独自の Bing マップ タイル サーバーを構築します。Bing でタイルを整理する方法と、タイル サーバーを参照するために追加する必要がある JavaScript については、「独自のタイル サーバーを構築する」という記事を参照してください。 <a href=\"https://msdn.microsoft.com/en-us/library/bb545006.aspx\"></a> または、単純な埋め込みマップの HTML を切り取って貼り付けるだけで、次のようにすることができます。</p><pre class=\"csharpcode\"><span class=\"kwrd\">&lt;!</span><span class=\"html\">DOCTYPE</span> <span class=\"attr\">html</span> <span class=\"attr\">PUBLIC</span> <span class=\"kwrd\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"kwrd\">\"\"</span><span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;</span><span class=\"html\">html</span> <span class=\"attr\">xmlns</span><span class=\"kwrd\">=\"https://www.w3.org/1999/xhtml\"</span><span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;</span><span class=\"html\">head</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;</span><span class=\"html\">title</span><span class=\"kwrd\">&gt;</span>My Virtual Earth<span class=\"kwrd\">&lt;/</span><span class=\"html\">title</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;</span><span class=\"html\">meta</span> <span class=\"attr\">http-equiv</span><span class=\"kwrd\">=\"Content-Type\"</span> <span class=\"attr\">content</span><span class=\"kwrd\">=\"text/html; charset=utf-8\"</span> <span class=\"kwrd\">/&gt;</span>        <span class=\"kwrd\">&lt;</span><span class=\"html\">script</span> <span class=\"attr\">type</span><span class=\"kwrd\">=\"text/javascript\"</span> <span class=\"attr\">src</span><span class=\"kwrd\">=\"\"</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;/</span><span class=\"html\">script</span><span class=\"kwrd\">&gt;</span>        &lt;script type=<span class=\"str\">\"text/javascript\"</span>&gt;          <span class=\"kwrd\">var</span> map = <span class=\"kwrd\">null</span>;          <span class=\"kwrd\">function</span> OnPageLoad() {              map = <span class=\"kwrd\">new</span> VEMap(<span class=\"str\">'myMap'</span>);              map.SetCredentials                  (<span class=\"str\">\"...\"</span>);                map.LoadMap(<span class=\"kwrd\">new</span> VELatLong(0, 0), 1, <span class=\"str\">'r'</span>, <span class=\"kwrd\">false</span>);                <span class=\"kwrd\">var</span> opacity = 0.9;              <span class=\"kwrd\">var</span> tileSourceSpec = <span class=\"kwrd\">new</span> VETileSourceSpecification(                  <span class=\"str\">\"sqltiles\"</span>,                       <span class=\"str\">\"\"</span>);              tileSourceSpec.NumServers = 1;              tileSourceSpec.MinZoom = 1;              tileSourceSpec.MaxZoom = 18;              tileSourceSpec.Opacity = opacity;              tileSourceSpec.ZIndex = 100;                map.AddTileLayer(tileSourceSpec, <span class=\"kwrd\">true</span>);                map.ShowTileLayer(<span class=\"str\">\"sqltiles\"</span>);            }      <span class=\"kwrd\">&lt;/</span><span class=\"html\">script</span><span class=\"kwrd\">&gt;</span>    <span class=\"kwrd\">&lt;/</span><span class=\"html\">head</span><span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;</span><span class=\"html\">body</span> <span class=\"attr\">onload</span><span class=\"kwrd\">=\"OnPageLoad();\"</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;</span><span class=\"html\">div</span> <span class=\"attr\">id</span><span class=\"kwrd\">='myMap'</span> <span class=\"attr\">style</span><span class=\"kwrd\">=\"position: relative; width: 512px; height: 512px;\"</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;/</span><span class=\"html\">div</span><span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;/</span><span class=\"html\">body</span><span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;/</span><span class=\"html\">html</span><span class=\"kwrd\">&gt;</span>  </pre>  <p>    </p>  <p>タイル サーバーにローカル サーバーを使用しているのに注意してください。 これにより、Windows Azure 開発ファブリックでタイル サーバーをすばやくテストできます。Windows ASP.NET コードにプログラミング変更を行うたび、Windows Azure にデプロイする必要はありません。 </p>  <h4>Microsoft Azure</h4>  <p>Azure Web ロールのWindowsを使用して、マップ Ajax コントロールのタイトルBing提供します。 Web ロールをまだ作成していない場合は、「チュートリアル: Azure ローカル アプリケーションを使用して最初のロールをWindowsする」を読む必要があります。 デプロイする準備ができたら、インターネットにタイルを提供するために、<a href=\"https://windows.azure.com/\"></a>Windows Azure portal にアクセスし、新しいホステッド サービスを作成する必要があります。 ただし、現在のところ、Windows Azure Development Fabric からタイルを提供できます。このタイルは、Azure Tools にWindowsされます。 ダウンロードはこちらで確認 <a href=\"https://msdn.microsoft.com/en-us/windowsazure/cc974146.aspx\">できます</a>。 </p>  <p>クラウド プロジェクトで Web ロールを作成したら、tile.aspx という名前 ASP.NET ページを追加します。 通常、ASP.NET ページは HTML を提供しますが、この場合は、ページのページから PNG として画像 ASP.NET します。 Bing Map AJAX Control は、クエリ文字列内の quadkey を含む tile.aspx ページを呼び出してタイル (画像) を取得します。これは、表示されるズーム レベルごとに 4 つの異なるタイル識別子で約 4 回実行されます。 quadkey の詳細については、こちらを参照 <a href=\"https://msdn.microsoft.com/en-us/library/bb259689.aspx\">してください</a>。 このコード例 ASP.NET は、quadkey を使用して、タイルの境界緯度/経度を把握します。 この情報を使用すると、境界緯度と経度SQL Azureすべての点に対してクエリを実行できます。 ポイントは SQL Azure の <a href=\"https://msdn.microsoft.com/en-us/library/bb933802.aspx\">geography</a> データ型 (POINT) として格納され、空間交差クエリを使用して<a href=\"https://msdn.microsoft.com/en-us/library/bb933899.aspx\"></a>タイル内のポイントを把握します。 </p>  <h4>SQL Azure</h4>  <p>次に示すのは、この例で作成したテーブルSQL Azureスクリプトです。</p><pre class=\"csharpcode\"><span class=\"kwrd\">CREATE</span> <span class=\"kwrd\">TABLE</span> [dbo].[Points](      [ID] [<span class=\"kwrd\">int</span>] <span class=\"kwrd\">IDENTITY</span>(1,1) <span class=\"kwrd\">NOT</span> <span class=\"kwrd\">NULL</span>,      [LatLong] [geography] <span class=\"kwrd\">NULL</span>,      [Name] [<span class=\"kwrd\">varchar</span>](50) <span class=\"kwrd\">NULL</span>,   <span class=\"kwrd\">CONSTRAINT</span> [PrimaryKey_2451402d-8789-4325-b36b-2cfe05df04bb] <span class=\"kwrd\">PRIMARY</span> <span class=\"kwrd\">KEY</span> <span class=\"kwrd\">CLUSTERED</span>   (      [ID] <span class=\"kwrd\">ASC</span>  )  )  </pre>  <p>    </p>  <p>緯度と経度を保持する地理データ型と共に、単なる主キーと名前を使用して、空想的ではありません。 その後、次のようにいくつかのデータをテーブルに挿入しました。</p><pre class=\"csharpcode\">INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>       (<span class=\"str\">'Statue of Liberty'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(-74.044563 40.689168)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>       (<span class=\"str\">'Eiffel Tower'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(2.294694 48.858454)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>       (<span class=\"str\">'Leaning Tower of Pisa'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(10.396604 43.72294)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>      (<span class=\"str\">'Great Pyramids of Giza'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(31.134632 29.978989)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>       (<span class=\"str\">'Sydney Opera House'</span>,       geography::STPointFromText(<span class=\"str\">'POINT( 151.214967 -33.856651)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>      (<span class=\"str\">'Taj Mahal'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(78.042042 27.175047)'</span>, 4326))  INSERT <span class=\"kwrd\">INTO</span> Points (Name, LatLong) <span class=\"kwrd\">VALUES</span>      (<span class=\"str\">'Colosseum'</span>,       geography::STPointFromText(<span class=\"str\">'POINT(41.890178 12.492378)'</span>, 4326))  </pre>  <p>    </p>  <p>このコードは、ポイントでピンポイント グラフィックスを描画するようにのみ設計されています。geography データ型がサポートする他の図形は処理されます。 つまり、必ず LatLong 列に POINT のみを挿入してください。 </p>  <p>注意点の 1 つは、geography データ型SQL Azure <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">WKT</a> 形式の緯度と経度を受け取る点です。つまり、経度は最初に、次に緯度です。 C# コードでは、geography データ型を文字列としてすぐに取得し、緯度と経度を取り除き、コードを反転します。 </p>  <p>これでテーブルとデータが作成されたので、アプリケーションでデータのクエリを実行できる必要があります。次に、作成したストアド プロシージャを次に示します。</p><pre class=\"csharpcode\"><span class=\"kwrd\">CREATE</span> <span class=\"kwrd\">PROC</span> [dbo].[spInside](      @southWestLatitude <span class=\"kwrd\">float</span>,      @southWestLongitude <span class=\"kwrd\">float</span>,      @northEastLatitude <span class=\"kwrd\">float</span>,      @northEastLongitude <span class=\"kwrd\">float</span>)  <span class=\"kwrd\">AS</span>  <span class=\"kwrd\">DECLARE</span> @SearchRectangleString <span class=\"kwrd\">VARCHAR</span>(<span class=\"kwrd\">MAX</span>);  <span class=\"kwrd\">SET</span> @SearchRectangleString = <span class=\"str\">'POLYGON(('</span> +       <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@northEastLongitude) + <span class=\"str\">' '</span> +           <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@southWestLatitude) + <span class=\"str\">','</span> +       <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@northEastLongitude) + <span class=\"str\">' '</span> +          <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@northEastLatitude) + <span class=\"str\">','</span> +       <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@southWestLongitude) + <span class=\"str\">' '</span> +           <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@northEastLatitude) + <span class=\"str\">','</span> +       <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@southWestLongitude) + <span class=\"str\">' '</span> +           <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@southWestLatitude) + <span class=\"str\">','</span> +       <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@northEastLongitude) + <span class=\"str\">' '</span> +           <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),@southWestLatitude) + <span class=\"str\">'))'</span>      <span class=\"kwrd\">DECLARE</span> @SearchRectangle geography;  <span class=\"kwrd\">SET</span> @SearchRectangle = geography::STPolyFromText(@SearchRectangleString, 4326)    <span class=\"kwrd\">SELECT</span> <span class=\"kwrd\">CONVERT</span>(<span class=\"kwrd\">varchar</span>(<span class=\"kwrd\">max</span>),LatLong) <span class=\"str\">'LatLong'</span>  <span class=\"kwrd\">FROM</span> Points  <span class=\"kwrd\">WHERE</span> LatLong.STIntersects(@SearchRectangle) = 1  </pre>  <p>    </p><pre class=\"csharpcode\"></pre>  <p>    </p>  <p>クエリはボックスの 2 つの角を取り、四角形の多角形を作成します。次に、多角形内にある Points テーブル内のすべての緯度と経度を検索するクエリです。 クエリにはいくつかの微妙なことが起こっています。そのうちの 1 つは、四角形を時計回りに描画する必要がある点と、最初の点が最後の点である点です。 2 つ目の点は、四角形が 1 つの hemisphere (つまり、日付線の東または西) にのみ含まれ、赤道の北と南の両方ではなく、両方に含まれなければならない点です。 このコードは、四角形 (コードの境界ボックスと呼ばれる) がクロス オーバーかどうかを判断し、ボックスを全体に等しい複数のクエリに分割します。 </p>  <h4>コード</h4>  <p>私の知る上で、インターネット上のタイル サーバーの完全な無料Bing例は 2 つのみです。 私は、Rob Blackwell の \"Roll Your Own Tile Server\" と Joe Schwartz の \"Bing地図 Tile System\" の両方<a href=\"https://msdn.microsoft.com/en-us/library/bb259689.aspx\">から多額の借用をしました</a>。 </p>  <p>いくつかの変更を加える必要があります。そのうちの 1 つは、1 つのプッシュ ピンに対して複数のタイルに描画する方法です。 プッシュ ピン のグラフィックは幅と高さの両方であり、タイルの端に描画すると、マップ内の次のタイルでトリミングされます。 つまり、端の近くに着地するプッシュ ピンの場合は、両方のタイルに部分的に描画する必要があります。 これを実現するには、タイルにわずかに含まれるプッシュ ピンとタイル内のプッシュ ピンをデータベースに照会する必要があります。 ダウンロード可能なコードはこれを行います。 </p>  <h3>キャッシュ</h3>  <p>アプリケーションの例全体がキャッシュのメリットを得る可能性があります。 プッシュ ピンをリアルタイムで更新する必要はない可能性があります。つまり、アプリケーションの要件に基づいて、サーバーとブラウザーの両方にタイルをキャッシュできます。 クエリSQL Azure、1 ページあたり 4 つのタイルに対してリアルタイムでビットマップを描画すると、プッシュ ピンが多いトラフィックの多いサイトでは多くの作業が行えます。 タイルをキャッシュ Windowsして Azure と SQL Azure の負荷を軽減する方が適しています。わずか数分キャッシュしても、ワークロードが大幅に削減されます。 </p>  <p>パフォーマンスを向上させるもう 1 つの手法は、多数のピンがある場合にタイル上のすべてのピンを描画する方法ではありません。 代わりに、タイルに X 個を超える数のピンがある場合に 1 回描画されるクラスター グラフィックが表示されます。 これは、個々のピンを表示するために拡大する必要があるユーザーを示します。 この手法では、クラスター グラフィックを使用する必要があるかどうかを判断するために、タイル内の行数をデータベースに照会する必要があります。 </p>  <p>パフォーマンスとロード テストの詳細については、こちらを参照Bing地図<a href=\"https://msdn.microsoft.com/en-us/library/cc451897.aspx\">してください</a>。 </p>  <h4>まとめ</h4>  <p>バグを見つける 質問、懸念事項、コメントはありますか? 以下に投稿すると、対処を試みることができます。</p>"
