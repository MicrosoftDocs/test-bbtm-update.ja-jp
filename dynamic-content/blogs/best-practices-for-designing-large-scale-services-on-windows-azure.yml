### YamlMime:Yaml
ms.openlocfilehash: 2c99bb6e1eabefd6f721138e4620a0cb6e441604
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894019"
Slug: best-practices-for-designing-large-scale-services-on-windows-azure
Title: Windows Azure で Large-Scale サービスを設計するためのベストプラクティス
Summary: 'エディター &rsquo; のメモ: 今日 &rsquo; の投稿は、Jason Roth、プリンシパルプログラミングライターから送られてきました。 顧客のアドバイザリチームからの新しいホワイトペーパーの概要を説明し、ベストプラクティスについて説明します。'
Content: <p><b>エディター &rsquo; のメモ:</b> 今日 &rsquo; の投稿は、 <a href="https://social.msdn.microsoft.com/profile/jasonroth/" target="_blank">Jason Roth</a>、プリンシパルプログラミングライターから送られてきました。 また、Azure Windows の大規模なサービスを設計するためのベストプラクティスについて説明した、お客様のアドバイザリチームからの新しいホワイトペーパーの概要を提供します。</p>  <p>最近、Windows Azure Cloud Services での Large-Scale サービスの設計に関するベストプラクティスという新しいホワイトペーパーをリリースしました。 このホワイトペーパーは、実際の顧客契約に基づく設計パターンとガイドラインをまとめたものです。 これは、実際の Windows Azure アプリケーションの成功を確実に立証した最適な戦略と設計パターンをまとめたものです。</p>  <h4><b>プラットフォームを最初に理解する</b></h4>  <p>この記事を読むと、 &rsquo; 次の3つの主要なセクションがあることがわかります。</p>  <ul>  <li>設計概念</li>  <li>Windows Azure の探索</li>  <li>ベスト プラクティス</li>  </ul>  <p>ベストプラクティスに直接進んでいるかもしれませんが、これらのベストプラクティスは最初の2つのセクションの情報から派生することに注意する必要があります。 すべてのアプリケーションは一意です。 まず、Windows Azure platform とその一般的な設計原則について理解しておくことが重要です。 これは、適切な最適化を選択するだけでなく、正しい実装を実現するためにも役立ちます。</p>  <h4><b>優れたデザイン-作業の価値</b></h4>  <p>大規模なアプリケーションの設計では、慎重に検討し、計画を立て、複雑な実装を行うことができます。 Windows Azure の場合、最も基本的な設計原則の1つはスケールアウトです。スケールアウト戦略は、ますます強力な (そして高価な) ハードウェアに投資するのではなく、より多くのマシンまたはサービスインスタンスを追加することで需要の増加に対応します。</p>  <p>ベストプラクティスの多くは、Windows Azure サービスごとにスケールアウトを行う必要があります。 たとえば Windows Azure では、SQL Database を実行しているサーバーをスケールアップすることはできません。 代わりに、追加の SQL Database インスタンスを使用できるようにアプリケーションを設計する必要があります。 これには、データのパーティション分割方法の種類が含まれます。</p>  <p>もちろん、適切なパーティション分割戦略を選択し、パーティション間の作業を正常に調整することが課題となります。 このホワイトペーパーでは、お客様の選択内容 &rsquo; に関する技術的な理解と、過去の顧客シナリオでの実用的な提案の両方を提供しようとしています。</p>  <p>SQL Database は、パーティション分割によってスケーラビリティが向上する非常に明白な例にすぎません。 しかし、プラットフォームの長所を最大限に高めるために、他の役割やサービスも同様の方法でスケールアウトする必要があります。 たとえば、ストレージアカウントのトランザクションレートが上限を超えている場合、仮想マシンは CPU とメモリの上限を超えています。最大スケールを実現するには、複数のストレージアカウントと、セットサイズの仮想マシン間でスケールアウトされるコンポーネントを持つサービスに対してを設計します。</p>  <p>スケーラビリティは設計の原動力になりますが、他にも非常に重要な設計上の考慮事項があります。 このホワイトペーパーでは、テレメトリと診断データの収集を計画する必要があります。これは、ソリューションがコンポーネント化され、パーティション分割されるため、ますます重要になります。 可用性とビジネスの継続性は、このペーパー全体に焦点を当てた2つの主な分野です。 スケーラビリティは、サービスが停止した場合や、データが不可能ほどに失われた場合には関係ありません。</p>  <h4><b>ベストプラクティス &amp; プラットフォームの進化</b></h4>  <p>Windows Azure は常に進化し、改善し、新しいサービスを追加しています。 最近のリリースでは、Windows Azure Virtual Network やサービスとしてのインフラストラクチャ (IaaS) などの新機能が追加されました。 これらの新機能により、大規模なアプリケーション用にさらに多くのオプションが提供します。 ただし、このホワイトペーパーではバージョン1.6 の焦点について説明していません。また、プラットフォームへの最新の追加機能についても説明していません。</p>  <p>この決定の理由を理解するには、この作業の目的を再確認する必要があります。 このホワイトペーパーでは、実際の顧客実装に成功した設計ガイダンスを提供する予定です。 これらの契約には、計画、テスト、反復処理に数か月かかる場合があるため、新しいサービスと機能の一部で用紙を更新する前にしばらく時間がかかります。 ただし、この記事に記載されているすべての設計原則は引き続き適用可能であり、同じ種類の考えを Windows Azure の新機能のいずれかに適用することができます。</p>  <p>今後、これらのベストプラクティスの一部を実際に実装する方法を示す追加のペーパー、コード例、サンプルに取り組んでいます。</p>  <h4><b>チェックリストではありません</b></h4>  <p>大好きのチェックリスト。 考えてみてください。すべてのチェックボックスをオンにすると、成功したことがわかります。 Windows Azure Cloud Services で Large-Scale Services を設計するためのベストプラクティスについては、チェックリストとして情報を確認しないようにしてください。 アプリケーションが一意である。 この時点で、アプリケーションは高 &rdquo; スケールで &ldquo; あると考えられます。 プラットフォームとベストプラクティスについて理解したら、一部の推奨事項のみを短期的に使用することが重要になります。 しかし、将来的には、他の設計戦略の一部またはすべてが必要になる可能性があるかどうかを計画してください。</p>  <p>ホワイトペーパーを確認し、以下のコメントセクションを使用してフィードバックをお寄せください。</p>
