### YamlMime:Yaml
ms.openlocfilehash: 40a2a617d79667efcd72d0480f81d617ac88f4a2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909701"
Slug: making-azure-functions-more-serverless
Title: Azure Functions サーバーレス化
Summary: 'Azure Functions の原則の1つは、インフラストラクチャの問題ではなく、ビジネスおよびアプリケーションの問題を解決することです。 '
Content: >-
  <p>Azure Functions の原則の1つは、インフラストラクチャの問題ではなく、ビジネスおよびアプリケーションの問題を解決することです。 そのため、functions ランタイムに多くの投資を行い、言語の抽象化、サービスへのバインド、軽量のプログラミングモデルなどの機能を提供し、動的なスケーリング、サーバーレスコンピューティングモデルに投資しまし &rsquo; た &rsquo; 。 この目標を達成すると、それぞれの関数アプリに設定したメモリ設定という経験で、常に1つの問題が発生します。 メモリの設定は常に適切ではありません。 最適な設定を見つけるには、ユーザーの一部で多くの試用版とエラーが必要になりまし &rsquo; た &rsquo; 。ユーザーからのフィードバックの多くは、ユーザーが望むものではなく、サーバーレスで &rsquo; はないと感じています。 今回は、 &rsquo; メモリ設定を設定する必要がなくなったこと &rsquo; を共有しています。 Azure Functions は、従量課金プランでは、使用可能なリソースを自動的に決定し、使用したものに対してのみ課金されます。これには、時間だけでなく、メモリ/cpu も含まれます。</p>


  <h2>Azure Functions はどのようにしてリソースを管理しますか。</h2>


  <p>Azure Functions プラットフォームでは、関数の実行時に使用される使用量とリソースに関する大量のデータが収集されます。 これによって、必要なもの &rsquo; を正確に見積もることができ、背後に作業を分散させることができます。 関数 &rsquo; を初めて実行するときは、可能な限り最適な場所に配置します。さらに多くのリソース &rsquo; が必要であるように見える場合は、自動的に割り当てられます。 私たち &rsquo; は、お客様に最適なエクスペリエンスを確保するために、アルゴリズムを継続的に改善しています。また、お客様側で可能な限りコスト効率に優れています。</p>


  <p>今のところ、実際のデータを使用してモデル化しているので、これを効果的 &rsquo; に行うことができます。 次に示すのは、実際の数値最終を含むグラフですが、y 軸は線形 GB 秒で、底は0です。x 軸は time です。 一番上の青い線は、課金対象の GB 秒の現在の量です。下の赤い線は、システムでの課金対象の GB 秒の新しい量です。 つまり、お客様は、これまでの5倍の5倍の時間に対して料金を支払うようになりました。 現在、ユーザーは適切なメモリ設定を気にせずに関数を確実 &rsquo; に記述することができます。これにより、関数の料金が最も少なくなります。</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/03e24b84-99cb-41c9-acda-63fabcfccbb2.png"></p>


  <h2>関数の作成方法を再検討する必要がありますか。</h2>


  <p>全体として、これまでとほとんど同じように動作しますが、心配する設定は少ししかありません。 以前に適用したものと同じ制限が適用されます。最大メモリ容量は 1.5 GB、最大実行時間は5分です。 この変更によって最も大きな影響があるのは、現在、適切な量のリソースを取得し、関数の実行に対して可能な限り少ない金額を支払っているためです。</p>


  <h2>サーバーレスコンピューティングについて考える方法</h2>


  <p>この変更の影響を理解するには、次のようにして、例えとの関係を見てみましょう &rsquo; 。 この計算が出荷と同様に機能する Imagine ます。 コンピューティングをオンプレミスでホストすることは、トラックを購入して自分で購入するのと同じです。そのため、ハードウェアと、その車両や職員を運用する運用コストについて責任を負うこと &rsquo; になります。 サービスとしてのインフラストラクチャ (IaaS) はレンタル a トラックに似ていますが、独自のドライバーを採用していますが、ハードウェアの責任を負うこと &rsquo; はありませんが、運用コスト (ガス、メンテナンスなど) と人員のコストは依然としてお客様に残ります。 コンピューティングの階層をさらに上に移動することで、Azure App Service など、完全に管理されたプラットフォームをサービスとして使用できるようになります。これは、トラックとクルーを持参する完全なサービス会社を採用するようなものであり、 &rsquo; ハードウェアや運用コストの責任を負いません。</p>


  <p>では、小さなパッケージをたくさん発送する場合はどうでしょうか。 &rsquo;多くの場合、トラックによる支払いは意味がありませんが、パッケージによる支払いは意味がありません。 ここでは、サーバーレスコンピューティングは、アプリケーションの構築方法に革新的なています。 &rsquo;Microsoft のビジネスにとってコアではないため &rsquo; 、出荷方法に焦点を当てる必要はありません。製品を顧客に提供するだけでなく、集中することができます。 各実行はパッケージに似ており、箱のサイズに対して課金されます。</p>


  <p>Set memory のサイズを削除することによって現在行っている変更 &rsquo; は、コンピューティングに共通点 &rsquo; があるのに対し、物理オブジェクトの配布とまったく同じではないためです。 どのくらいの作業が行われるか、または適切な量のコンピューティング (CPU/メモリ/IO) がオブジェクトの高さと幅がどれほど単純でないかを把握しておくと、必要なリソースが実行されるたびに、または実行全体でも変化する可能性があります。 ここでは、 &rsquo; イベントをトリガーして適切なサイズ &ldquo; のパッケージ &rdquo; を見つけ、時間とリソースの両方の使用に対して課金します。</p>


  <h2>今後もさらに明るくなります。</h2>


  <p>&rsquo;最も簡単なエクスペリエンスと最も強力な機能を備えた、最適なサーバーレスコンピューティングの構築に取り組んでいます。 ここでは、よりスムーズに行えることを知りたいと思います。 関数を構築するときに、どのような質問をする必要がありますか。 アプリケーションを再構築する &rsquo; ときに、どのようにして簡単に、より速く、より良いものにすることができるでしょうか。</p>


  <p>問題、アイデア、または質問を使用して、好きな方法でお問い合わせください。</p>


  <ul>
   <li>
   <p><a href="https://feedback.azure.com/forums/355860-azure-functions" target="_blank">フィードバックポータル</a></p>
   </li>
   <li>
   <p><a href="https://github.com/azure/azure-functions" target="_blank">GitHub</a></p>
   </li>
   <li>
   <p><a href="https://twitter.com/search?q=azure%20functions&amp;src=typd" target="_blank">Twitter #AzureFunctions</a></p>
   </li>
   <li>
   <p><a href="https://stackoverflow.com/questions/tagged/azure-functions" target="_blank">Stack Overflow</a></p>
   </li>
  </ul>
