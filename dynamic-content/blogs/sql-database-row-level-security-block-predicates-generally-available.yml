### YamlMime:Yaml
ms.openlocfilehash: cf4fd8e17b8ed1d7b1e83fa15fb8289e7f2506c4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892223"
Slug: sql-database-row-level-security-block-predicates-generally-available
Title: Row-Levelブロック述語の一般提供
Summary: 'Azure SQL Databaseセキュリティ (RLS) Row-Level機能では、ブロック述語が正式にサポートされています。 ブロック述語を使用すると、ユーザーがアクセス条件に違反する行を挿入、更新、または削除することはできません。 '
Content: >-
  <p>&rsquo;Azure SQL Databaseレベル <a href="https://msdn.microsoft.com/library/dn765131.aspx">セキュリティ</a> (RLS) 機能では、ブロック述語が正式にサポートされます。 ユーザーに表示される行を制限するフィルター述語とは対照的に、ブロック述語では、ユーザーがアクセス条件に違反する行を挿入、更新、または削除することはできません。 テーブル内の特定の行への読み取りアクセスと書き込みアクセスの両方を制御するには、フィルター述語とブロック述語を一緒に使用する必要があります。</p>


  <p>たとえば、RLS は、&rsquo;テナントがマルチテナント データベース内の互いのデータにアクセスし合うのを防ぐために一般的に使用されます。 フィルター述語を使用して、各テナントに表示される行を制限できます。また、ブロック述語と同じ関数を再使用して、テナント間の挿入や更新を防ぐのに使用できます。</p>


  <pre class="prettyprint">

  CREATE SECURITY POLICY Security.tenantAccessPolicy
   ADD FILTER PREDICATE Security.fn_tenantAccessPredicate(TenantId) ON dbo.MyTable,
   ADD BLOCK PREDICATE Security.fn_tenantAccessPredicate(TenantId) ON dbo.MyTable
  </pre>


  <h2>概要とデモ</h2>


  <p><iframe frameborder="0" height="360" longdesc="https://channel9.msdn.com/Shows/Data-Exposed/Row-Level-Security-Updates" name="Row Level Security Updates" scrolling="no" src="https://channel9.msdn.com/Shows/Data-Exposed/Row-Level-Security-Updates/player" width="640"></iframe></p>


  <h2>RLS を使用する必要がある場合</h2>


  <ul>
      <li>マルチテナント データベースを使用した SaaS アプリケーションでのテナント分離の適用</li>
      <li>アナリストが、部門、地域、セキュリティ機関、その他の基準に基づいて、レポート アプリケーション (Excel や PowerBI など) を通じてさまざまなデータのサブセットにアクセスできる</li>
      <li>アプリケーション コードを簡素化し、偶発的なデータ漏えいから保護するために、データベース内の行レベルのアクセス ロジックを一元化する</li>
  </ul>


  <h2>開始するコード サンプル</h2>


  <p>&rsquo;ブロック述語に加えて、すべてのデータベース接続が共有サービス アカウントを介して行われた中層アプリケーション (Web アプリなど) で RLS を実装する場合に非常に役立つ新しいセッション スコープのキー値ストア<a href="https://msdn.microsoft.com/library/mt590806.aspx">である SESSION_CONTEXT</a> の可用性を強調する必要があります。 <a href="https://rlssamples.codeplex.com/SourceControl/latest#RLS-Projects-MidTier-Demo.sql">RLS-Projects-MidTier-Demo.sql</a> サンプルを確認して、自分で試してください。</p>


  <p>もちろん、RLS では、ログイン、ユーザー SQL Database&rsquo;ロールの組み込みセキュリティ システム、またはグループに組み込Azure Active Directoryすることもできます。 <a href="https://rlssamples.codeplex.com/SourceControl/latest#RLS-Hospital-BuiltIn-Demo.sql">RLS-Hospital-BuiltIn-Demo.sql</a> サンプルを確認して、自分で試してみてください。</p>


  <p>Entity Framework を使用したエンドツーエンドのマルチテナント サンプルについては、「チュートリアル: Entity Framework と Row-Level Security を使用したマルチテナント データベースを使用した Web アプリ」 <a href="https://azure.microsoft.com/documentation/articles/web-sites-dotnet-entity-framework-row-level-security/">を参照</a>してください。</p>


  <p>技術的な詳細については、MSDN の <a href="https://msdn.microsoft.com/library/dn765131.aspx">行レベルセキュリティ</a> に関するドキュメントにアクセスしてください。</p>


  <h2>ご意見</h2>


  <p>いつものように、フィードバックをお待ちしております。 ご質問、コメント、アイデアがある場合は、以下のコメントをお寄せください。</p>
