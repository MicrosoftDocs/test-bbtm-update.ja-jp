### YamlMime:Yaml
ms.openlocfilehash: 4baaa65e58acc439869060ecf2f6b56b91da5d6e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892627"
Slug: securing-your-connection-string-in-windows-azure-part-3
Title: 'Windows Azure での接続文字列のセキュリティ保護: パート 3'
Summary: '[この記事は、チームによってSQL Azureされました。]これは、Azure での接続文字列のセキュリティ保護に関するマルチパートブログ シリーズの 3 番目Windowsです。 最初のブログ記事 (こちら) で.'
Content: '<p>[この記事は、チームによってSQL Azureされました。]</p><p>これは、Azure での接続文字列のセキュリティ保護に関するマルチパートブログ シリーズの 3 番目Windowsです。 最初のブログ記事 (こちら) では、<a href="https://msdn.microsoft.com/en-us/library/ee758713.aspx">Windows Azure 証明書</a>ストアを使用してセキュリティで保護された接続文字列を格納および暗号化解除し、公開キーと秘密キーのペアを作成するための手法について説明しました。 2 番目のブログ投稿 (こちら<a href="TODO%20for%20Wayne,%20Link%20Blog%20Post%20When%20published.">)</a> では、Azure 管理者が Azure にWindowsをインポートした方法Windowsしました。 このブログ記事では、管理者が公開キー SQL Server接続文字列を暗号化する方法について説明します。</p>  <p>この手法には、SQL Azure 管理者の役割があります。公開キー、<a href="https://sql.azure.com">SQL Azure</a> ポータル、SQL Azure 管理者のログインとパスワードにアクセスできます。 彼の仕事は次の仕事です。</p>  <ul>   <li>公開キーを使用して接続文字列をエンコードします。 </li>    <li>ポータル管理者SQL Azureパスワードをセキュリティで保護する </li>    <li>接続文字列内SQL Azureログイン (管理者ログインではない) を制限します。 </li> </ul>  <p>管理者はSQL Azureアクセス権を持つため、接続文字列をエンコードし、パスワードを実稼働データベースに対して知る必要があります。 この例のシナリオでは、SQL Azure他のユーザーよりも多くのアクセス権を持つユーザーです。</p>  <h2>ユーザーの制限</h2>  <p>接続文字列をエンコードする前に、SQL Azure 管理者は、接続文字列内の SQL Azure アカウントを制限して、攻撃対象を減らし、実稼働データベースのセキュリティを高くする必要があります。 接続文字列にデータベース管理SQL Azureアカウントを使用しない。 代わりに、セキュリティのベスト プラクティスの一環として、Web ロールに必要なアクセス許可を持っているだけの別のユーザーを作成します。 Web サイトでテーブルを作成する必要がない場合は、Web ユーザーがテーブルを作成することはできません。 Web サイトがデータの読み取りのみを行う場合は、ユーザーを読み取り専用にする必要があります。 Web ユーザーを制限すると、接続文字列が侵害された場合のデータベースの破損が軽減されます。 このブログ記事を読んで、SQL Azureでユーザーを作成する方法を確認します。 また、ユーザー SQL Azure制限すると、Azure 管理者Windows制限されます (このロールについては、このブログ記事で説明します)。</p>  <h2>公開キーのインポート</h2>  <p>SQL Azure 管理者が最初に行う必要があるのは、Windows Azure 管理者から受け取った公開キーを取得し、ローカル ボックスのローカル証明書ストアにインポートする方法です。 ローカル <strong><a href="https://msdn.microsoft.com/en-us/library/k6h9cz8h(VS.80).aspx">aspnet_regiis.exe</a> ストアを使用して、web.configエンコードを実行する新しいツール。</strong><strong></strong></p>  <ol>   <li>[スタート] をクリックし、[プログラムとファイルの検索] ボックスに「 <b>mmc</b> 」と入力して、Enter キーを押します。 </li>    <li>［ファイル］メニューの［スナップインの追加と削除］をクリックします。 </li>    <li>[使用可能なスナップイン] で、[証明書] をダブルクリックします。 </li>    <li>[コンピューター アカウント] を選択し、[次へ] を <b>クリックします</b>。 </li>    <li>[ローカル コンピューター] をクリックし、[完了] をクリックします。 </li>    <li>個人用ストアで、右クリックし、[すべてのタスク] の下にある [インポート] をクリックします。 <b>.cer ファイル (</b>Azure 管理者から公開キーが取得Windows) を参照し、証明書をインポートします。 </li>    <li>証明書のインポートが完了したら、それを右クリックして [開く] を選択します。これにより、[証明書] ダイアログが表示され、[詳細] タブを選択し、一番下までスクロールして拇印プロパティをコピーします。 これは後で必要になります </li> </ol>  <h2>プロバイダーのダウンロードとコンパイル</h2>  <p>これは、開発者が前もって行う可能性があります。また、2 つのインストーラー ファイル (setup.exe と installer.msi) を SQL Server 管理者に電子メールで送信することもできますが、それを行っていない場合は、SQL 管理者がプロバイダーをダウンロードしてコンパイルする必要があります。 ボックスに 2008 Visual Studio 2010 Visual Studioが必要です。 次の手順のようにします。</p>  <ol>   <li>MSDN コード ギャラリーから、ソース コード.zipをダウンロードします。 </li>    <li>ローカル コンピューターに.zipファイルにすべてを保存します。 </li>    <li>PKCS12ProtectedConfigurationProvider.sln ファイルを見つけて、次のコマンドを使用してソリューションとして開Visual Studio。 </li>    <li>[ツール] メニューの [ビルド] [ <b>ソリューションのビルド</b> | <b>] の選択</b>。 </li>    <li><b>Installer/bin/release ディレクトリ</b>には、次のsetup.exe。 </li>    <li>このコマンドをsetup.exeプロバイダーをインストールします。 </li> </ol>  <p>インストーラーによって、Pkcs12CertProtectedConfiguratoinProvider.dllアセンブリ ファイルがグローバル アセンブリ キャッシュに格納され、aspnet_regiis.exeの暗号化に移動するときにそのアセンブリ ファイルをweb.config <b> 。</b></p>  <h2>暗号化Web.Config</h2>  <p>グローバル アセンブリ キャッシュにプロバイダー アセンブリが作成され、ボックスにパブリック証明書がインストールされたので、 <b>web.config </b>ファイルの接続文字列セクションを暗号化する準備ができました。次に、次の方法を示します。</p>  <ol>   <li>開発者から <b>web.config</b> ファイルを取得する </li>    <li>ソース管理を使用している場合は、 <b>web.configファイルを </b> 確認します (変更します)。 </li>    <li>次のような <b>connectionString</b> を、次のファイル <b> にWeb.config</b> します。 この接続文字列は、ポータルから取得した接続文字列とSQL Azureがあります。 ただし、制限されたユーザー名とパスワードが含まれている必要があります。       <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;SQLAzureConn&quot;</span>          <span class="attr">connectionString</span><span class="kwrd">=&quot;Initial Catalog=aspnetdb;data source=.;uid=user;pwd=secretpassword&quot;</span> <span class="attr">providerName</span><span class="kwrd">=&quot;System.Data.SqlClient&quot;</span><span class="kwrd">/&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span></pre>      </li>      <li>カスタムの保護された構成プロバイダーを追加して構成します。 これを行うには、次の &lt;<strong>configProtectedData</strong>&gt; セクションを web ロールWeb.configファイルに追加します。 拇印 <b>は、</b> すべてのスペースを削除して、Microsoft 管理コンソール の [証明書] ダイアログの拇印の値に設定する必要があります。         <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">configProtectedData</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;CustomProvider&quot;</span> <span class="attr">thumbprint</span><span class="kwrd">=&quot;4badf1eea9666d95c1c046fde32008c5e3bf20d9&quot;</span>             <span class="attr">type</span><span class="kwrd">=&quot;Pkcs12ProtectedConfigurationProvider.Pkcs12ProtectedConfigurationProvider, PKCS12ProtectedConfigurationProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=34da007ac91f901d&quot;</span><span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">configProtectedData</span><span class="kwrd">&gt;</span></pre>      </li>      <li>コマンド プロンプトから次のコマンドをVisual Studioカスタム プロバイダーを使用して <b>connectionStrings</b> セクションを暗号化します。 コマンド プロンプトで現在のディレクトリをVisual Studioファイルを含むフォルダーにWeb.configします。         <p><b>aspnet_regiis -pef &quot;connectionStrings&quot; &quot;.&quot; -prov &quot;CustomProvider&quot;</b></p>        <p>暗号化が成功すると、次の出力が表示されます。</p>        <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="イメージ" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7128.image_5F00_thumb.png" width="723" height="84"></a> </p>        <p>何が起こっているかを次に示します。</p>        <ul>        <li><b>aspnet_regiis.exe </b>現在の <b> ディレクトリweb.configを </b>検索し、読み込む必要があります。 </li>          <li>–prov スイッチを使用すると、configProtectedData の provider セクションが検索され、プロバイダーを含むアセンブリの完全な名前が特定されます。 </li>          <li><b>aspnet_regiis.exe</b> グローバル アセンブリ キャッシュからアセンブリを読み込み、アセンブリの <b>Initialize </b>メソッドを呼び出して、web.configファイルに拇印プロパティが存在 <b>web.config</b> します。 </li>          <li><b>aspnet_regiis.exe </b>、拇印を主キーとしてストアに使用して証明書ストアから公開証明書を読み込む Pkcs12CertProtectedConfiguratoinProvider.dll アセンブリの <b>Encrypt</b> メソッドを呼び出します。 コマンド ラインから –pef スイッチを使用すると、コマンド ラインに接続文字列セクションが読み込 <b>web.config暗号化されます </b> 。<b></b> </li>          <li>接続文字列セクションが暗号化された後は、次のようにweb.configに書き戻されます。           <pre class="csharpcode">  <span class="kwrd">&lt;</span><span class="html">connectionStrings</span> <span class="attr">configProtectionProvider</span><span class="kwrd">=&quot;CustomProvider&quot;</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">EncryptedData</span> <span class="attr">Type</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#Element&quot;</span>        <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#&quot;</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">EncryptionMethod</span> <span class="attr">Algorithm</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#aes192-cbc&quot;</span> <span class="kwrd">/&gt;</span>        <span class="kwrd">&lt;</span><span class="html">KeyInfo</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2000/09/xmldsig#&quot;</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;</span><span class="html">EncryptedKey</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#&quot;</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;</span><span class="html">EncryptionMethod</span> <span class="attr">Algorithm</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#rsa-1_5&quot;</span> <span class="kwrd">/&gt;</span>            <span class="kwrd">&lt;</span><span class="html">KeyInfo</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2000/09/xmldsig#&quot;</span><span class="kwrd">&gt;</span>              <span class="kwrd">&lt;</span><span class="html">KeyName</span><span class="kwrd">&gt;</span>rsaKey<span class="kwrd">&lt;/</span><span class="html">KeyName</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;/</span><span class="html">KeyInfo</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>              <span class="kwrd">&lt;</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>aA4kyC0pNY8VFnPtLcC...=<span class="kwrd">&lt;/</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;/</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;/</span><span class="html">EncryptedKey</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;/</span><span class="html">KeyInfo</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>6Fg9VWR5/...<span class="kwrd">&lt;/</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;/</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;/</span><span class="html">EncryptedData</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span></pre>          </li>      </ul>    </li>      <li>ファイルを <b>web.config</b> ソース管理に戻すか、開発者に返します。 </li>  </ol>    <h2>まとめ</h2>    <p>次のブログ記事では、開発者の役割と、暗号化された接続文字列を取得するために Web ロール プロジェクトに追加する必要があるコードについて説明します。 質問、懸念事項、コメントはありますか? 以下に投稿すると、対処を試みることができます。</p>'
