### YamlMime:Yaml
ms.openlocfilehash: 1f6f67a5cf1ccf87e667d5d400729437817c5693
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896877"
Slug: azure-application-insights-javascript-sdk-reliability-and-performance-improvements
Title: 'Azure アプリケーション インサイト JavaScript SDK: 信頼性とパフォーマンスの向上'
Summary: >
  最近、Application インサイト での Web ページ監視の堅牢性が向上し、Cookie を使用しない機能が導入されました。 調整とネットワークの問題が発生し、ページがアンロードされがちなときに、転送の信頼性が高くなっています。 このAzure アプリケーション インサイトアプリのパフォーマンスと使用状況を監視できます。 JavaScript の小さなスニペットを使用すると、ページの読み込みと AJAX 呼び出しのタイミング、ブラウザーの例外と AJAX エラーの数と詳細、ユーザーとセッション数を取得できます。
Content: >-
  <p>最近、<a href="https://azure.microsoft.com/services/application-insights/">Application インサイト</a> での Web ページ監視の堅牢性が向上し、Cookie を使用しない機能が導入されました。 調整とネットワークの問題が発生し、ページがアンロードされがちなときに、転送の信頼性が高くなっています。</p>


  <p>このAzure アプリケーション インサイトアプリのパフォーマンスと使用状況を監視できます。 JavaScript の小さなスニペットを使用すると、ページの読み込みと AJAX 呼び出しのタイミング、ブラウザーの例外と AJAX エラーの数と詳細、ユーザーとセッション数を取得できます。 開始方法の詳細については、ドキュメントを参照 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-javascript">してください</a>。</p>


  <h2>JavaScript SDK の新機能</h2>


  <p>内部的な機能強化に加えて、いくつかのバグを修正し、SDK をクリーンアップし、いくつかの機能を追加しました。</p>


  <h3>NPM snippet.jsを追加します。</h3>


  <p><a href="https://github.com/Microsoft/ApplicationInsights-JS/commit/3c110ae3815b7133a45366c5a6c1a93adaeca585">Snippet.js</a> は、Gulp パイプラインを使用してインライン JavaScript を使用する代わりに、別のファイルから Application Insights を使用するユーザーに使用されるファイルです。 提供 <a href="https://github.com/RehanSaeed">: RehanSaeed</a>。 Muhammed Rehan に感謝します。</p>


  <h3>Cookie を無効にするオプション</h3>


  <p>これは、一部のユーザーからの質問でした。 Cookie を無効にできますが、一部の機能は失われます。 Cookie を使用しない場合、すべてのページ ビューは新しいユーザーとセッションとしてカウントされます。 その他の構成オプションについては、<a href="https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#config">Application インサイト SDK JavaScript API を参照してください。</a></p>


  <h3>依存関係の関連付けヘッダーを有効にする</h3>


  <p>これらは既定でオフになっていますが、手動で有効にできます。 依存関係をサーバー要求と関連付ける場合は、構成ファイル内の disableCorrelationHeaders を false に設定 <i>します</i>。 この機能をオプトインすると、クライアント側の AJAX 呼び出しに関連するサーバー要求を確認できます。</p>


  <h2>JavaScript SDK の機能強化</h2>


  <p>オンボード時に追加の作業を行わずに JavaScript SDK を昇格する次の機能強化が行われた</p>


  <h3>セキュリティ</h3>


  <p>JS SDK は完全に https に切り替えました。 https を使用して、すべてのテレメトリを送信し、ライブラリをダウンロードします。 また、セキュリティで保護されたサイトの場合、SDK はセキュリティで保護されたフラグを使用して Cookie を作成します。詳細については、 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie">set-cookie のドキュメントを参照してください</a>。&nbsp;</p>


  <h3>伝送</h3>


  <p>Application インサイト JavaScript SDK の最大の目標の 1 つは、インストルメント化されたページを低下させることではなく、可能な限り多くの機能を提供することです。 これには、パフォーマンスとユーザー エクスペリエンスが含まれます。 伝送の信頼性は SDK&rsquo; の重要な部分なので、最近、この領域でいくつかの機能強化が行われました。</p>


  <p>テレメトリは、次の場合により確実に送信されます。</p>


  <p>1.Application インサイトポータルが調整を課している、または一時的にデータを受け入れできない。</p>


  <p>再試行機能とエラー処理機能は、伝送の信頼性を向上させるのに役立つ機能です。 ネットワークの問題が発生した場合、SDK は指数バックオフを使用してテレメトリ データの送信 <a href="https://en.wikipedia.org/wiki/Exponential_backoff">を再試行します</a>。</p>


  <p>2. ユーザーは、コードがテレメトリ イベントを送信した直後に、同じサイト内の新しいページに移動します。 以前は、ページのアンロード時に、まだ送信されていないイベントが失われました。 イベントはセッション バッファーに保持され、同じサイト内のページ間で保持されます。</p>


  <h3>ビーコン API</h3>


  <p>JavaScript SDK では、ビーコン API の試験的なサポート <a href="https://www.w3.org/TR/beacon/">も提供されています</a>。 ビーコン API は、ブラウザーがタイム クリティカルな操作でビジー状態ではない場合にテレメトリを送信するように設計されています。 ユーザーが移動したり、ブラウザー タブを閉じても、すべてのデータが配信されます。</p>


  <p>ビーコン API では、送信のためにデータをキューに入れ、実際の転送はブラウザーによって制御の外部で処理されます。 そのため、JavaScript SDK は、すべてのテレメトリが受信され、正しく処理インサイト、Application インサイト バックエンドから確認を受け取る必要があります。</p>


  <p>既定の JavaScript SDK&rsquo; 構成が完全に機能しない場合、すべてのイベントが追跡されていないか、転送がページのパフォーマンスに影響を与える可能性がある場合は、ビーコン API&nbsp; を使用してみてください。この機能は現在無効になっています&lsquo;が、isBeaconApiDisabled&rsquo; を false に設定することで有効にすることができます。config を参照<a href="https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#config">してください</a>。ビーコン API を使用してデータを送信する場合、SDK によって [Session Storage Buffer]/(バッファーと再試行)機能が自動的にオフになります。</p>


  <h3>セッション クラスの Performance.now</h3>


  <p>PowerBI および Edge チームと作業した後は、セッション呼び出しで performance.now を使用する方法に移動しました。 これにより、ライブラリの日付/時刻処理&rsquo;のパフォーマンスが向上します。</p>


  <h2>フィードバック</h2>


  <p>JavaScript SDK に関して質問がある場合、または問題が発生した場合は、次のページで問題を<a href="https://github.com/Microsoft/ApplicationInsights-JS">GitHub。</a></p>


  <h2>特別な感謝</h2>


  <p>この投稿の <a href="https://github.com/kamilszostak">準備に関して、大</a> 感謝の思いを込め、大感謝します。</p>
