### YamlMime:Yaml
ms.openlocfilehash: 8dec081e7595203fdaf7d2279642e766d6d26fb2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894172"
Slug: adoption-program-insights-sending-emails-from-windows-azure-part-2-of-2
Title: '導入プログラム インサイト: Azure から電子メールWindows送信する (パート 2/2)'
Summary: 導入プログラム インサイト シリーズでは、Windows Azure Technical Adoption Program に関係する Microsoft サービス コンサルタントの経験について説明し、お客様がソリューションをデプロイするサポートを提供します。
Content: "<p><i>導入プログラム インサイト シリーズでは、Windows Azure Technical Adoption Program</i> <i></i> に関係する Microsoft サービス コンサルタントの経験について説明します。Windows Azure プラットフォームにソリューションをデプロイする支援を行<i>っています。この投稿は、Norman Sequequequ、Patrick Butler Monterde、Tom Patricker による投稿です。</i></p>  <p>これは、Azure アプリケーションから電子メールを送信するためのオプションを説明する 2 部構成のシリーズの 2 番目<a target=\"_blank\" href=\"https://azure.microsoft.com/\">Windows</a>部分です。 パート 1 では、カスタムのオンプレミスの電子メール 転送サービスを使用して、Azure アプリケーションに代わってメールを送信するパターンWindows説明しました。 この記事では、電子メール サーバーの Web サービス API を使用して、Azure アプリケーションから直接メッセージを受け取Windows説明します。</p>  <h2>パターン 2: 電子メール サーバーの Web サービス API の使用</h2>  <p>このパターンでは、Exchange Server 2007 または Exchange Server 2010 の Web サービス機能を利用して、Windows Azure プラットフォームから直接電子メールを送信します。 この方法は、Web サービス インターフェイスを提供する他の電子メール サーバーを使用することもできますが、この投稿では、Web サービス インターフェイスの実装Microsoft Exchange Server。</p>  <p>Web ロールと worker ロールの両方が HTTP または HTTPS 経由でインターネット リソースに送信接続を行えるので、web/worker ロールは Exchange Server でホストされている Web サービスと通信できます。 2007 Exchange Server 2010 Exchange Server EWS (Exchange Web サービス) は、自動化のインターフェイスとしてサポートされています。 Exchange Web サービスには、電子メールの送信、添付ファイルの追加、ユーザーのメールボックスの確認、委任アクセスの構成など、最も一般的なメールオートメーション関連のシナリオをサポートする豊富な機能セットが用意されています。EWS でサポートされている機能の完全な一覧については、この <a target=\"_blank\" href=\"https://msdn.microsoft.com/en-us/library/dd877045.aspx\">MSDN の記事を参照してください</a>。</p>  <p>組織がオンプレミスの電子メール サーバーではなく Exchange Online を使用することを選択している場合は、Exchange Online Standard と Exchange Online Dedicated の両方のオファー EWS サポート以降、コードを変更することなく、Windows Azure から同じ EWS ベースのアプローチを使用できます。 Exchange Onlineは、Microsoft によって提供されるメッセージングおよびコラボレーション ソリューションのセットである Microsoft Business Productivity Online Suite (BPOS) の一部です。</p>  <p>次の図は、Azure アプリケーションWindows EWS を利用して電子メールを送信する方法を示しています。</p>  <p><a target=\"_blank\" href=\"https://msdn.microsoft.com/en-us/library/dd877045.aspx\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7802.EmailPt2Graphic1.png\" border=\"0\"></a></p>  <h3>サンプル コード</h3>  <p><a target=\"_blank\" href=\"https://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=c3342fb3-fbcc-4127-becf-872c746840e1\">EWS マネージド API</a> は、Web サービスとやり取りするための、型指定された .NET インターフェイスExchange提供します。 Web Services Exchange API をインストールしたら、最初の手順として、Microsoft.Exchange.WebServices.dll の既存の Windows Azure プロジェクトに Visual Studio。</p>  <p><a target=\"_blank\" href=\"https://www.microsoft.com/downloads/en/details.aspx?displaylang=en&amp;FamilyID=c3342fb3-fbcc-4127-becf-872c746840e1\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4152.EmailPt2Graphic2.png\" border=\"0\"></a></p>  <h3>テスト サーバーに対する EWS マネージド API の使用</h3>  <p>テスト サーバーは自己署名入り証明書を使用してデプロイされます。これは、Microsoft .NET Framework によって信頼されません。 テスト サーバーに対して EWS Managed API を使用すると、次のエラーが発生する可能性があります。</p>  <p><a target=\"_blank\" href=\"https://www.microsoft.com/downloads/en/details.aspx?displaylang=en&amp;FamilyID=c3342fb3-fbcc-4127-becf-872c746840e1\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0361.EmailPt2Graphic3.png\" border=\"0\"></a></p>  <p>この問題を解決するには、テスト シナリオで証明書の検証を無効にするコードを記述します。 このコードを実#if使用しない場合は、DEBUG または同様の手法を使用する必要があります。  </p>  <p>System.Net.Security を使用する。<br>  System.Security.Cryptography.X509Certificates を使用する。</p>  <p>証明書コールバックをフックします。<br>  System.Net.ServicePointManager.ServerCertificateValidationCallback =<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delegate(<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;オブジェクト obj、<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509Certificate 証明書、<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509チェーン、<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SslPolicyErrors エラー)<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;証明書を検証し、必要に応じて true または false を返します。<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;常に true を返すのは良い方法ではないので注意してください。<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;すべての証明書を信頼する必要があります。<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</p>  <h3>ExchangeService オブジェクトのインスタンスの作成</h3>  <p>次に、<b>ExchangeService</b> インスタンスを作成して構成することで、サーバーに接続<b></b>します。 自動検出を使用 <b>して、電子</b>  メール アドレスに基づいてサービスの URL を確認します。</p>  <p>ExchangeService サービス = 新しい ExchangeService(ExchangeVersion.Exchange2007_SP1);</p>  <p>Azure 構成から資格情報の設定を取得する</p>  <p>string userName = RoleEnvironment.GetConfigurationSettingValue(\"EWSUserName\");</p>  <p>string password = RoleEnvironment.GetConfigurationSettingValue(\"EWSPassword\");</p>  <p>string domain = RoleEnvironment.GetConfigurationSettingValue(\"EWSDomain\");</p>  <p>サービス。Credentials = new WebCredentials(userName, password, domain);<b></b></p>  <p>EWS URL が知られていない場合は、EWS マネージド API によって EWS URL を自動的に派生することもできます </p>  <p>サーバー上でホストされているメールボックスの電子メール アドレスをExchangeする</p>  <p>string emailAddress = RoleEnvironment.GetConfigurationSettingValue(\"emailAddress\");</p>  <p>サービス。AutodiscoverUrl(emailAddress); </p>  <h3>電子メールの送信</h3>  <p><b>ExchangeService オブジェクトのインスタンスが作成</b>および初期化されると、メールの送受信に使用できます。</p>  <p>EmailMessage message = new EmailMessage(service);</p>  <p>メッセージ。ToRecipients.Add(\"\"someone@server.com);</p>  <p>メッセージ。From = new EmailAddress(\"\"someone@azureapp.com);</p>  <p>メッセージ。Subject = \"Sending mail from Windows Azure\";</p>  <p>メッセージ。本文 = 新しい MessageBody(BodyType.HTML、\"これは Azure 環境から送信されたメールのWindowsです\")。</p>  <p>添付ファイルを送信するコード。</p>  <p>AddFileAttachment メソッドは、パラメーターとして 'display name' と 'byte array' を受け取ります</p>  <p>メッセージ。Attachments.AddFileAttachment(\"Attachment1\", attachment1);</p>  <p>添付ファイルをメールの本文から参照する必要がある場合は、次のプロパティ 'ContentId' が使用されます</p>  <p>メッセージ。添付ファイル [0]。ContentId = \"Attachment1\";</p>  <p>次のメソッドは、メールを送信し、'Sent Items' フォルダーにコピーを保存します</p>  <p>メッセージ。SendAndSaveCopy();</p>  <h3>アーキテクチャに関する考慮事項<br></h3>  <p>ソリューションに対するアーキテクチャへの影響を理解することが重要です。 電子メール サーバー Web サービス API のアプローチに関する考慮事項には、次のようなものがあります。</p>  <ul class=\"unIndentedList\">  <li>  <b>コスト：</b>Azure から EWS Windows送信データ フローでは、ソリューション全体に追加コストが発生します。 全体的なコストへの影響は、個々のソリューションでの電子メールの量と帯域幅の使用量によって異なります。これは、このパターンを実装する前に慎重に検討する必要があります。</li>  <li>  <b>パフォーマンス： </b>電子メールの添付ファイルが大きいと、EWS (オンプレミスまたはオンライン) を使用して Exchange サーバーにシリアル化してダウンロードする必要があるという理由で、パフォーマンスに影響する可能性があります。 これは、慎重に検討する必要があります。</li>  </ul>  <h3>まとめ</h3>  <p>Azure Windows独自のネイティブ SMTP サーバーを含めなくても、電子メールを送信するアプリケーションを構築するためのオプションは複数あります。 オンプレミスの電子メール サーバーがある場合は、Windows Azure Storage を使用してカスタム電子メール 転送サービスにメッセージを送信し、電子メール サーバーに転送できます。 電子メール サーバーが Web サービス API を公開している場合は、カスタム サービスを使用する代わりに、これを使用して直接通信できます。 また、SMTP サーバー (商用サービスを含む) に直接アクセスできる場合は、そのサーバーを使用Windows Azure アプリを構成できます。</p>  <p>最後の 1 つのコメント - どちらの方法を使用しても、アプリケーションで大量の電子メールを送信する必要がある場合 (たとえば、ユーザー登録の場合)、電子メール サーバーが電子メールの量を制限するように構成されている場合、または受信者のサーバーがスパムとしてメッセージを拒否する可能性がある場合に問題が発生する可能性があります。 この場合は、メッセージが最終的な宛先に送信されるのを確認するために、電子メール サーバーを慎重に選択または構成する必要があります。 </p>  <p><iframe src=\"https://www.facebook.com/plugins/like.php?href=;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50\" style=\"overflow: hidden; width: 300px; height: 50px;\" frameborder=\"0\" scrolling=\"no\"></iframe><br><a data-url=\"\" data-count=\"horizontal\" data-via=\"Windowsazure\" href=\"https://twitter.com/share\" class=\"twitter-share-button\">つぶやき</a>  <script src=\"https://platform.twitter.com/widgets.js\" type=\"text/javascript\"></script>  </p>"
