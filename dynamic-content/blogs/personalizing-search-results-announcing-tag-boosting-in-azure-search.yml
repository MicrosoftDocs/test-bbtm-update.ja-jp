### YamlMime:Yaml
ms.openlocfilehash: ec8baab186db3a96ae8b83ada04fac2e0e8fa42a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903983"
Slug: personalizing-search-results-announcing-tag-boosting-in-azure-search
Title: "検索結果のカスタマイズ: Azure Search での ' タグブースト ' の発表"
Summary: 'Azure Search は、"スコアリングプロファイル" と呼ばれる新しい機能を使用して、アプリケーションで検索の関連性を定義するための構成要素を提供します。 '
Content: >-
  ユーザーがアプリケーションにアクセスし、検索を使用してデータを検索する場合は、適切な応答を迅速に提供する必要があります。 "関連する" の定義は、アプリケーションとユーザーの性質に大きく依存します。 Azure Search には、アプリケーションで検索の関連性を定義するための構成要素が用意されています。 この機能は "スコアリングプロファイル" と呼ばれます。 前にスコア付けプロファイルを見ていない場合は、 <a href="https://msdn.microsoft.com/en-us/library/azure/dn798928.aspx">こちらで</a>詳細を確認できます。


  検索クエリから返される結果では、すべてのヒットがスコア付けされ、上位から下位に並べ替えられます (既定では、結果の並べ替え順序を上書きすることもできます)。 スコアリングプロファイルを使用すると、ドキュメント内の数値に基づいてドキュメント内の検索スコアを上げることができます (たとえば、より新しいドキュメントを優先順位の高い項目にする、または利益率が高い場合など)。日付に基づいて、参照ポイントへの距離 (たとえば、クエリの一部として渡される参照場所に地理的に近い項目を優先


  スコアリングプロファイルの現在の実装ではモデル化できないシナリオが1つあります。これは、パーソナライズされたデータに基づくブーストです。 たとえば、顧客が定期的に商品を購入しているとします。 顧客ごとに、最も頻繁に購入する上位3または4のブランドを追跡します。 ここで、ドキュメントが優先ブランドの製品を表している場合に、検索結果のドキュメントをブーストします。 これはコンテキストであることに注意してください。各ユーザーには、希望するトップ K ブランドのセットが異なります。


  この実験 <a href="https://azure.microsoft.com/en-in/documentation/articles/search-api-2014-10-20-preview/">用 API (2014-10-20-Preview)</a>では、このシナリオを処理するために "tag" という新しいスコアリング関数が導入されています。


  <strong>タグブースト</strong> 新しい "tag" スコアリング関数は、次のように使用されます。

  1. インデックス定義の一部として、タグスコアリング関数を使用してスコアリングプロファイルを作成します。この場合、ドキュメント内のどのフィールドにタグまたはラベルリストが含まれているかを示します (通常、これは文字列コレクションフィールドと共に使用されます)。 上記の例では、各製品に製品のブランドを示す1つ以上のタグが含まれています。

  2. クエリ時には、各要求は、確立しようとしているコンテキストに対応するタグまたはラベルのリストも受け取ります。 この例を続行すると、この特定の顧客のトップブランドの一覧が読み込まれます (たとえば、顧客プロファイルレコードの一部として保持されている可能性があります)。

  3. スコア付け中に、Azure Search は、入力クエリと共通のタグを持つドキュメントに昇格させます。

  具体的には、具体的なインデックス定義を使用して、これらの手順について説明します。 たとえば、次のようなインデックスがあるとします。

  <pre class="prettyprint prettyprinted">{

    "name": "products",

    "fields": [

      { "name": "id", "type": "Edm.String", "key": true },

      { "name": "name", "type": "Edm.String" },

      { "name": "brandTags", "type": "Collection(Edm.String)", "searchable": false }

    ],

    "scoringProfiles": [

    {

      "name": "personalized",

      "functions": [

      {

        "type": "tag",

        "boost": 2,

        "fieldName": "brandTags",

        "tag": { "tagsParameter": "brands" }

      }

      ]

    }

    ]

  }

  </pre>

  上には、3つのフィールド (id、name、brandTags) と1つのスコアリング関数を使用したスコアリングプロファイルを持つインデックス定義が表示されます。 これを使用すると、通常の方法でドキュメントのインデックスを作成し、クエリの発行を開始できます。


  クエリを発行するには、アプリケーションで使用するすべての通常の検索オプションに加えて、スコアリングプロファイル ("ブランド") で定義したパラメーターに加えて、https://.../indexes/products/docs? search = &amp; scoringParameter = ブランド: brandA, brandB を含めます。


  この要求では、これらのドキュメントは通常と同じようにテキスト一致の品質に基づいて評価されますが、brandA または brandB のようなドキュメントはさらにブーストされるため、顧客が探している内容を確認できるようになります。


  <strong>シナリオ</strong> 前述のように、タグスコアリングプロファイル機能は、検索順位付けをカスタマイズする場合に適用されます。

  E コマースアプリケーションの場合は、顧客の購入履歴を使用してそれぞれのタグを作成することができます。機械学習/クラスタリング手法を使用して、ショッピングカートに入っている内容に基づいてグループ化したりタグ付けしたりすることができます。また、手動でタグ付けすることもできます。 顧客を識別してタグ付けすることは簡単で、時間の経過と共に洗練されています。作業を開始する必要はありません。


  また、タグブーストを使用して、ロールに基づいて異なる結果を与えることもできます。 たとえば、複数のトピックに関するドキュメントのインデックスを作成していて、各ユーザーが特定のトピックに対するアフィニティを持っていることがわかっている場合、タグブーストを使用すると、各ユーザーの優先順位に関するトピックのドキュメントをよりわかりやすくすることができます。 同様に、さまざまな部門で使用される基幹業務アプリケーションでは、ユーザーの部署をクエリタグとして使用したり、ドキュメント (顧客レコード、マーケティングキャンペーン、連絡先情報など) の作業領域に最も関連していることを確認できます。各ドキュメントには、各ドキュメントのアフィニティを1つまたは複数の領域にキャプチャする "領域" または "区分" フィールドが含まれていると仮定します。


  <strong>使用できるのはいつですか。</strong>

  これは、すべてのサービスで既に使用可能です。 このアプローチに関するフィードバックは引き続き収集されているため、実験的な 2014-10-20-Preview API バージョンを使用してのみアクセスできます。 <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=azuresearch">Azure Search フォーラム</a>を使用して質問したり、フィードバックを送信したりすることができます。


  タグスコアリング関数の詳細については、2014-10-20-Preview <a href="https://azure.microsoft.com/en-us/documentation/articles/search-api-scoring-profiles-2014-10-20-preview/">のドキュメントを参照して</a>ください。


  Liam Cavanagh は、彼のブログまたは <a href="https://twitter.com/liamca">twitter</a>からアクセスできます。
