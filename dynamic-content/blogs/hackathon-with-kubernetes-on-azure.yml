### YamlMime:Yaml
ms.openlocfilehash: 15ca0398ed70b604e558ef08202528fcc2f149b3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908992"
Slug: hackathon-with-kubernetes-on-azure
Title: Azure でのハッカソンと Kubernetes
Summary: 最近の Microsoft wide employee ハッカソンイベントの一部として、Azure で Kubernetes デプロイ用のビジュアライザーを作成しました。
Content: >-
  Microsoft は、Azure で Kubernetes をデプロイするための新しいビジュアライザーツールを作成した最初の <a href="https://blogs.microsoft.com/blog/2014/07/28/microsoft-kicks-oneweek-wont-believe-hacks/">会社全体のハッカソン</a>を最近保持しました。 現在の発表では、Kubernetes を使用して Microsoft Azure で Docker コンテナーを管理することができます。また、現在、ビジュアライザーツールのコードもリリースされています。これについては、 <a href="https://github.com/Azure/azure-kubernetes-visualizer">Azure Kubernetes ビジュアライザー GitHub リポジトリ</a>に関するページを参照してください。

  <h3>ハッカソン Project</h3>

  このプロジェクトでは、Azure で Docker を管理するときに Kubernetes が何を実行しているかを視覚化するためのシステムを構築しました。 <a href="https://googlecloudplatform.blogspot.com/2014/06/an-update-on-container-support-on-google-cloud-platform.html">Kubernetes</a> は、 <a href="https://www.docker.com/">Docker</a>と呼ばれるコンテナー化テクノロジ用の宣言型クラスター管理システムです。 <a href="https://www.docker.com/whatisdocker/">ここで</a>説明するように、Docker は "ポータブルで軽量なランタイムと..." を提供します。 アプリをすばやくアセンブルできるようにします... " 目標は、コンテナー、ポッド、ラベル、minions、レプリケーションコントローラーなど、いくつかの Docker と Kubernetes の概念を視覚的に示すことでした。 結果は次のスクリーンショットで確認できます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer" alt="AzureKubeVisualizer" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer_thumb.png" width="610" height="250" border="0" /></a>


  Kubernetes クラスターは、マスターと任意の数の minions で構成されています。 マスターは、クラスターを全体として管理し、minions によって実行される要求を発行し、Kubernetes の API 層を提供します。 Minions は実際に Docker を実行し、その結果、エンドユーザーのワークロードです。 ポッドは、コンテナー内の minions 上で実行され、マスターによって minions 全体でバランスが取れています。 Kubernetes ビジュアライザーを使用すると、ポッドを作成できます。ポッドを作成するには、それに名前を割り当て、そのポッドのコピーの数を指定します。


  [作成!] をクリックしたとき ボタンユーザーは JSON の "ポッドテンプレート" を更新できます。 このテンプレートでは、ポッドに関連付けるコンテナー、各コンテナーで実行する必要があるイメージ、およびこれらのサービスを外部から使用できるようにするためのポートマッピングを定義します。


  このビジュアライザーツールの目的は Kubernetes を理解するのに役立ちます。そのため、バックエンドで自動的に作成されたポッドテンプレートを編集することができました。 これを行うには、[ポッドソース] をクリックし、[RC ソース] ボタンをクリックします。 ご覧のように、ポッドソースは、ポート番号が自動的に割り当てられた Nginx インスタンスを示しています。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-1.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-1" alt="AzureKubeVisualizer-1" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-1_thumb.png" width="610" height="312" border="0" /></a>


  このポッドテンプレートを編集する場合は、ビジュアライザーの最初のスクリーンショットのように他の構成を作成できます。ここでは、Nginx と Redis の両方を実行している青とピンクのポッドを確認できます。 次に示すように、同じポッドテンプレートを含む同等のレプリケーションコントローラーのソースを確認することもできますが、ポッドで使用するコピーの数を指定します。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-2.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-2" alt="AzureKubeVisualizer-2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-2_thumb.png" width="610" height="211" border="0" /></a>


  ビジュアライザーの最後の作業は、ラベルの Kubernetes 概念を示すのに役立ちます。 Kubernetes 内で実行されているすべてのものを整理するために、任意のキーと値のペアをポッドに割り当てることができます。 これは、ビジュアライザーに関連付けられているラベルに格納されている (ユーザーが指定した) 名前を参照することによって、ビジュアライザーの色をポッドする方法です。 それぞれの名前は、異なる色を持ちます。

  <h4>Kubernetes と Docker からの学習</h4>

  Kubernetes と Docker を使用して再生した後、すぐに明らかになったことの1つは、Docker がポッドの作成をキャッシュして、繰り返しコンテナーを高速化することでした。 Minion で初めてポッドを作成するときには、起動するまでに数分かかります。 これは主に、Docker が Ubuntu と Nginx イメージをダウンロードするのを待機していることが原因です。 ただし、次にその minion でポッドを作成するときは、イメージが既にキャッシュされているため、大幅に高速になります。 これは、多くの場合、Kubernetes で実行されるアプリケーションのアーキテクチャが変化しないことが予想されるため、多くの場合、コアコンポーネントは変わりません。 たとえば、このサンプルでは、ソースコードを変更するだけで Ubuntu と Nginx が常に使用されます。 つまり、Kubernetes は、通常、Docker のキャッシュを使用してアプリケーションを起動し、回転数すると非常に高速になります。


  最後に、クラスターのストレステストを行い、多数のポッドをスピンアップする Kubernetes がどのように反応するかを確認しました。 少しの間、1回の30-50 ポッドの初回試行を処理し、200ポッドまでスケールアップできることがわかりました。 下のスクリーンショットでは、Nginx のコピーを3つ作成200することによって、実際に実行されているデモを確認できます。 青い spinners が付いた黒いボックスは、起動処理中のポッドです。 最初の行は、ポッドの作成要求が終了したが、まだ minion に割り当てられていないポッドを示しています。 列には、minion に既に割り当てられているポッドが表示されます。 最後に、色分けされたポッドは、電源を入れ、準備が完了したポッドです。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-3.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-3" alt="AzureKubeVisualizer-3" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-3_thumb.png" width="610" height="401" border="0" /></a>

  <h4>もっと読む</h4>

  詳細については、 <a href="https://channel9.msdn.com/Shows/Cloud+Cover/Cloud-Cover-Tip-of-the-Week-Kubernetes-Visualizer">Channel 9 の最新のクラウド</a>に関する記事で説明されているこのツールのビデオデモをご覧ください。または、 <a href="https://github.com/Azure/azure-kubernetes-visualizer">GitHub でコードを入手</a>し、Azure で独自のクラスターを使用してビジュアライザーを実行してください。 このツールは、Kubernetes、Docker、または Azure の初回のタイマーにとって価値があることを願っています。


  お読みいただきありがとうございます。


  Michael Blouin と Madhan Arum氏 Am Ramakrishnan (ハッカソンチームの代理)
