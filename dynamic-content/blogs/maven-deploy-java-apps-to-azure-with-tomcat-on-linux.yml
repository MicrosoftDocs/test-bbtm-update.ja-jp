### YamlMime:Yaml
ms.openlocfilehash: 06427fadd4a8c1a6083c6e530f254c1302a48e55
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895460"
Slug: maven-deploy-java-apps-to-azure-with-tomcat-on-linux
Title: 'Maven: Linux 上の Tomcat を使用して Java アプリを Azure にデプロイする'
Summary: Azure App Service 用の Maven プラグインの新機能を発表します。 このプラグインにより、Azure サービスを Maven プロジェクトにシームレスに統合できます。 ステップが1つだけの場合は、...
Content: "<p><a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-webapp-maven-plugin/README.md\" target=\"_blank\">Azure App Service 用の Maven プラグイン</a>の新機能を発表します。 このプラグインにより、Azure サービスを Maven プロジェクトにシームレスに統合できます。 1つの手順のみを使用して、WAR ファイルを Linux 上の Azure Web Apps にデプロイし、Java 8 と Tomcat 8.5 または9.0 の組み込みの実行スタックを使用できます。 Maven を利用することで、Azure App Service プラグインは移植性が高く、Ide や CI/CD パイプラインと簡単に統合できるようになります。</p>\n\n<h2>Linux 上の Tomcat を使用した Web アプリ</h2>\n\n<p>数か月前に、Linux 上の Web Apps での Java 8 と Tomcat 8.5/9.0 の組み込みサポートの <a href=\"https://azure.microsoft.com/en-us/blog/public-preview-of-java-on-app-service-built-in-support-for-tomcat-and-openjdk/\" target=\"_blank\">プレビューリリース</a> を発表しました。 これにより、開発者は、自動スケールと高可用性からドラマて、管理された環境で Java アプリを稼働させることができます。</p>\n\n<h2>Maven の概要</h2>\n\n<p>新しい Azure Web アプリを作成したら、[Linux for OS] と [Tomcat as stack] を選択します。 この新しい Web アプリの情報を保存して、Maven プラグインを作成します。 pom.xml ファイルを開き、[<em>構成</em> &gt; ] セクションに &lt; 次の設定を追加します。</p>\n\n<pre>\n   &lt;!-- Web App information --&gt;\n   &lt;resourceGroup&gt;your-resource-group&lt;/resourceGroup&gt;\n   &lt;appName&gt;your-app-name&lt;/appName&gt;\n             \n   &lt;!-- Java Running Stack for Web App on Linux--&gt;\n   &lt;linuxRuntime&gt;tomcat 8.5-jre8&lt;/linuxRuntime&gt;\n \n   &lt;!-- Deployment Type --&gt;\n   &lt;deploymentType&gt;war&lt;/deploymentType&gt;</pre>\n\n<p>詳細な構成については<a href=\"https://github.com/Microsoft/azure-maven-plugins/tree/develop/azure-webapp-maven-plugin\" target=\"_blank\">GitHub</a>を参照してください。&nbsp;&nbsp;</p>\n\n<h2>実行します</h2>\n\n<p>コマンドラインツールを開き、 <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest\" target=\"_blank\">Azure CLI 2.0</a>を使用してサインインします。 次のコマンドを入力すると、プロジェクトが war ファイルにビルドされ、Azure Web アプリに自動的にデプロイされます。</p>\n\n<pre>\n$ mvn clean package azure-webapp:deploy</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7f31b3cc-6080-4ff9-8ae9-2a0ce080d79c.png\"><img alt=\"Terminal\" border=\"0\" height=\"413\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d45609d5-aa94-4610-84a3-a73d7fde83a0.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"ターミナル\" width=\"1018\"></a></p>\n\n<p>&rsquo;完了しました。 これで、アプリの URL にブラウザーを開いて、Azure で実行されている Java web サイトにアクセスできるようになりました。</p>\n\n<p><a href=\"https://github.com/Microsoft/azure-maven-plugins\" target=\"_blank\">GitHub でプロジェクト</a>を確認し、Azure App Service 用の Maven プラグインの高度な機能について説明します。</p>\n\n<h2>次の手順</h2>\n\n<p>Azure での Java アプリの構築の詳細については、次を参照してください。</p>\n\n<ul>\n <li>GitHub: <a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-webapp-maven-plugin/README.md\" target=\"_blank\">Azure App Service 用の Maven プラグイン</a>&nbsp;</li>\n <li>GitHub: <a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-functions-maven-plugin/README.md\" target=\"_blank\">Azure Functions 用の Maven プラグイン</a></li>\n <li>チュートリアル: <a href=\"https://docs.microsoft.com/en-us/java/azure/spring-framework/\" target=\"_blank\">Azure デベロッパーセンターでの Spring</a></li>\n <li>チュートリアル: <a href=\"https://docs.microsoft.com/en-us/java/azure/\" target=\"_blank\">Azure デベロッパーセンターでの Java</a></li>\n</ul>\n\n<h2>フィードバック</h2>\n\n<p>お客様からのフィードバックをお寄せください。また、以下の改善にご協力ください。 <a href=\"https://github.com/Microsoft/azure-maven-plugins/issues\" target=\"_blank\">GitHub</a>にご協力ください。</p>"
