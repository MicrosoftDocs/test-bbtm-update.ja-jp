### YamlMime:Yaml
ms.openlocfilehash: 84bbea62e46c4862d1227008bd8a0632b4b9ffce
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910144"
Slug: announcing-azure-api-management-for-serverless-architectures
Title: サーバーレス アーキテクチャ用の Azure API Managementの発表
Summary: 'Azure API Managementは、お客様が API の発行、セキュリティ保護、変換、保守、監視を行えるフル マネージドのサービスです。 '
Content: >-
  <p><a href="https://azure.microsoft.com/en-us/services/api-management/" target="_blank">Azure API Management</a> は、お客様が API の発行、セキュリティ保護、変換、保守、監視を行えるフル マネージドサービスです。 Azure portal を数回クリックすると、外部および内部のアプリケーションが、カスタム構築されたバックエンド サービスによって実装されたデータやビジネス ロジック (App Service や Azure Kubernetes Service など) や Azure の外部でホストされているデータやビジネス ロジックにアクセスできるフロント ドアとして機能する API&ccedil; faade &ldquo;&rdquo; を作成できます。 プライベート データセンターまたはオンプレミスの 。 API Management では、要求の認証と承認、レート制限とクォータの適用、要求と応答の変換、ログとトレース、API バージョン管理など、API 呼び出しの仲介に関連するすべてのタスクを処理します。</p>


  <p>現在から、Azure のお客様は、新しいサブスクリプション インスタンスを作成するときに、新しい Consumption レベルAPI Managementできます。 この従量消費レベルは、基本的にサーバーレス原則を中心に設計および実装された API Management の一種であり、より多くのお客様が API 管理の利点を利用し、サーバーレス テクノロジを使用して構築された新しい種類のアプリケーション<a href="https://azure.microsoft.com/en-us/solutions/serverless/" target="_blank"></a>に対してより有機的に適合します。</p>


  <p>APIM Consumption レベルでは、お客様から聞いた次の主要な使用事例が可能です。</p>


  <ul>
   <li>Functions や Logic Apps などのサーバーレス テクノロジを使用して実装されたマイクロサービス用の API ゲートウェイ。</li>
   <li>API ゲートウェイは、&ccedil;サーバーレス Azure リソース (Service Bus キューやトピック、Azure Storage など) に対して簡素化され、セキュリティで保護された機能を提供します。</li>
   <li>API トラフィックは急増するが、ほとんどの場合は低いままである従来のバックエンド用の API ゲートウェイ。</li>
  </ul>


  <p>上記の使用事例が適切に見える場合は、新しいレベルを試して、ご自分の考えをお知らせください。</p>


  <h2>レベルの比較</h2>


  <p>新しいレベルの本質的な内容を理解するために&rsquo;、既存のレベルと比較します。</p>


  <p>API Management Developer と Standard の 2 つのレベルだけで &ndash; 起動されます。 その間、エンタープライズのお客様向プレミアム機能を備えた プレミアム レベルと、エントリ レベルの実稼働レベルとして Basic レベルが追加されました。 これらのレベルには共通のアーキテクチャがあります。このアーキテクチャでは、各サービス API Management専用に予約されたリソースのセットが割り当てられます。 セキュリティの分離、すぐに使用可能な容量、ノイズの多い近隣からの保護は、このアプローチの主な利点の 1 つになります。 &rsquo;ただし、いくつかの副作用が発生しました。比較的高いプロビジョニングとスケーリングの待機時間と非消費ベースの価格は、サーバーレス アプリケーション モデルに基づく新しい種類のソリューションに適しています。</p>


  <p>消費レベルでは、前のレベルと同じ基になるサービス コンポーネントが使用されますが、共有された動的に割り当てられたリソースに基づいて、完全に異なるアーキテクチャが使用されます。 その結果、サーバーレス コンピューティング モデル (つまり、管理するインフラストラクチャがない、アイドル状態の容量がない、高可用性、自動スケーリング、使用状況ベースの価格) と完全に一致します。これにより、サーバーレス リソースを API として公開するソリューションに特に優れた選択肢となります。 Consumption レベルを選択すると、いくつかのトレードオフが関係します。 最も重要な 2 つは <a href="https://aka.ms/apimfeatures">、キュリーされた機能セットと </a>適用される使用制限です。 次の表は、層間の比較の重要なポイントをまとめたものです。</p>


  <table border="1" cellpadding="2">
   <tbody>
    <tr>
     <td valign="top"><strong>Consumption</strong><sup> NEW</sup></td>
     <td valign="top"><strong>開発者 </strong>|<strong> 基本的な</strong> |<strong> 標準 </strong>|<strong> プレミアム</strong></td>
    </tr>
    <tr>
     <td valign="top">プロビジョニングまたは管理するインフラストラクチャがない</td>
     <td valign="top">プロビジョニングまたは管理するインフラストラクチャがない</td>
    </tr>
    <tr>
     <td valign="top">組み込みの高可用性</td>
     <td valign="top">組み込みの高可用性<sup>1</sup></td>
    </tr>
    <tr>
     <td valign="top">組み込みの自動スケーリング (ゼロまで)</td>
     <td valign="top">手動または外部の自動スケーリング <sup>2</sup></td>
    </tr>
    <tr>
     <td valign="top">使用量ベースのマイクロ課金</td>
     <td valign="top">予約容量に基づく課金</td>
    </tr>
    <tr>
     <td valign="top">予約容量なし</td>
     <td valign="top">予約容量</td>
    </tr>
    <tr>
     <td valign="top">共有リソース</td>
     <td valign="top">専用リソース</td>
    </tr>
    <tr>
     <td valign="top">オンデマンド でのアクティブ化</td>
     <td valign="top">Always On</td>
    </tr>
    <tr>
     <td valign="top">キュリーされた機能のセット</td>
     <td valign="top">機能の完全な<sup>セット3</sup></td>
    </tr>
    <tr>
     <td valign="top"><a href="https://aka.ms/apimlimits" target="_blank">Usage limits (使用状況の制限)</a></td>
     <td valign="top">管理されていない</td>
    </tr>
   </tbody>
  </table>


  <p><sup>1</sup>Developer レベルを除く</p>


  <p><sup>2</sup>Azure Monitor Standard レベルと プレミアム レベルで使用できる自動スケーリング</p>


  <p><sup>3</sup>いくつかの機能の可用性は、レベルによって異なります</p>


  <h2>新機能</h2>


  <p>従量消費レベルでのみ使用できる次の 2 つの新機能は、今後、他のレベルの API Managementされます。</p>


  <p><strong>Bring Your Own Cache (BYOC): </strong>応答キャッシュは、API の待機時間を改善し、API バックエンドの負荷を軽減するための効果的で広く使用されている手法です。 この機能を使用すると、外部API Management Redis と互換性のあるキャッシュを使用するサービス <a href="https://aka.ms/apimbyoc">を構成できます</a>。 キャッシュ構成の完全な制御、キャッシュ コンテンツの事前読み込みと消去の機能、およびキャッシュ を使用する API Management サービス インスタンスとは別にキャッシュ サイズをスケーリングする機能は、BYOC の主な利点です。 また、他のレベルとは異なり、組み込みのキャッシュが用意されているのではないので、Consumption&rsquo; レベルで応答キャッシュを有効にする唯一のオプションです。 既存のキャッシュ ポリシー <a href="https://docs.microsoft.com/en-us/azure/api-management/api-management-caching-policies#CachingPolicies" target="_blank">を変更して、</a> 統合キャッシュ構成と外部キャッシュ構成の両方でシームレスに動作しました。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4359badb-d747-4ef9-aea3-05b57c7e9af1.png"><img alt="Bring your own cache in the Consumption tier" border="0" height="568" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/76610001-5efe-4896-9caf-d1d91672af53.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Consumption レベルで独自のキャッシュを使用する" width="1233"></a></p>


  <p><strong>より柔軟なサブスクリプション:</strong> <a href="https://aka.ms/apimsubscriptions">サブスクリプション </a>は、基本的に一連の API キー (正確には 2 つ (プライマリとセカンダリ) の名前付きコンテナーです。 以前は、サブスクリプションをユーザーが所有し、1 つの API 製品スコープをサポートする必要がありました。 キー管理を効率化するために、いくつかの&#39;変更を加える必要があります。 ユーザーに関連 &quot;付け&quot; ではなく、スタンドアロン サブスクリプションを許可する。 また、2 つのサブスクリプション スコープ (すべての API と 1 つの API) も追加されました。 そのため、&#39;API (または API Management インスタンス内のすべての API) へのアクセスを許可するキーを作成し、製品を作成して API (またはすべての API) を最初に追加する必要が生じることなく、可能です。 さらに、各 API Management インスタンスには変更できないすべての API サブスクリプションが付属しています。これにより、テスト コンソール内で API をテストおよびデバッグする作業がさらに簡単になります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a4e7db6f-410f-441b-bad3-ed9d4702937a.png"><img alt="Subscription options" border="0" height="601" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c5ca1752-3d5b-44f0-a369-167045cf1ef2.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="サブスクリプション オプション" width="1430"></a></p>


  <h2>残りの作業</h2>


  <p>私たちは昨年の夏から Consumption レベルに取り組み、最終的に皆さんと共有できると非常に楽しく思っています。 ただし、 を呼び出す前に、実行する作業がまだ残っています。 次に示すのは、今後数か月間に見る必要がある重要な機能と改善点です。</p>


  <ul>
   <li>カスタム ホスト名と証明書</li>
   <li>&quot;1 クリックで&quot; 上位レベルにアップグレードAPI Managementする</li>
   <li>プロビジョニング時間の短縮 (古&rsquo;いレベルと比較して既に非常に高速ですが、さらに改善を望む)</li>
   <li>コールド &ldquo;スタートの&rdquo; 待ち時間の短縮 (&rsquo;この領域ではまだ多くのことを行っていないので、待ち時間は必要な場所から遠く離れた場所にあります)</li>
   <li>パブリック Azure リージョンでの広範な可用性 (利用可能なリージョンごとに、完全な Consumption レベルAPI Management予定です)</li>
   <li>&ldquo;追加のサーバーレスリソースと PaaS リソース用の API エクスペリエンスを追加します ([API&rdquo; の追加] ページに新しいタイルが表示される可能性があります)</li>
  </ul>


  <h2>可用性</h2>


  <p>米国中北部、米国西部、西ヨーロッパ、北ヨーロッパ、東南アジア、オーストラリア東部のリージョンで、プレビュー段階の <a href="https://aka.ms/apimpricing" target="_blank">Consumption</a> レベルの即時提供をお知らせします。</p>


  <p>新しいサービス<a href="https://portal.azure.com/#create/Microsoft.ApiManagement" target="_blank">を作成</a>&ndash;してみてください。関数またはロジック アプリをインポートして、API を発行する簡単<a href="https://docs.microsoft.com/en-us/azure/api-management/import-function-app-as-api" target="_blank">な</a>方法を<a href="https://docs.microsoft.com/en-us/azure/api-management/import-logic-app-as-api" target="_blank">確認してください</a>。<a href="https://docs.microsoft.com/en-us/azure/api-management/get-started-create-service-instance" target="_blank"></a></p>


  <p>サーバーレス API を構築する方法の詳細については、次を参照してください。 ウェビナー「 &ldquo;<a href="https://info.microsoft.com/ww-ondemand-build-serverless-api-with-nodejs.html" target="_blank">Build Serverless API with Node.js on Azure Functions」を参照</a>してください。&rdquo;</p>


  <p><a href="https://aka.ms/apimso" target="_blank">ご自分の考えをお知らせします</a>。</p>


  <p style="text-align: center;"><iframe allowfullscreen="" frameborder="0" height="270" scrolling="no" src="https://channel9.msdn.com/Shows/Azure-Friday/Azure-API-Management-for-serverless-applications/player?format=ny" width="480"></iframe></p>
