### YamlMime:Yaml
ms.openlocfilehash: c92f6c983381f8eb253f6883f39961035873d635
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903949"
Slug: the-walking-dead-no-mans-land-game-soars-to-1-with-azure-documentdb
Title: 'ウォーキングマンは、Azure Cosmos DB によって #1 サポートされています。'
Summary: '次のゲームからのウォーキング Dead: No Man の土地ゲームは、Azure Cosmos DB を使用して Apple app store に #1 します。'
Content: >-
  <p><a href="https://www.nextgames.com/about/" target="_blank"><u>次のゲーム</u></a>は、ヘルシンキ (フィンランド) に基づく、急速に成長するゲーム会社です。 2015年10月7日、 <a href="https://www.amcnetworks.com/" target="_blank"><u>amc</u></a>と Next Games は、amc &rsquo; s の録画を記録したテレビシリーズ (iOS の場合) に基づく公式のモバイルゲームである、<a href="https://www.nextgames.com/press-release/next-games-and-amcs-the-walking-dead-no-mans-land-tops-app-store-charts-around-the-world-on-its-opening-weekend/" target="_blank"><u>歩行停止: No Man &rsquo; s</u></a>をリリースしました。 1週間以内に、ゲームは Apple &rsquo; s の最上位のアプリグラフの #1 スポットにすばやく躍り出します。</p>


  <p>非常に予想されるゲームの大規模とパフォーマンスの要件 (たとえば、オープン週末だけでのダウンロードが100万以上の場合) を処理するために、次のゲーム開発チームは、Azure にバックエンドサービスを実装することを選択しました。 永続化層では、待機時間の短いクエリ (10 ミリ秒未満) を提供している間に大量のゲームプロファイルと状態メタデータを取り込む必要があり、完全に管理された NoSQL JSON データベースで<a href="https://azure.microsoft.com/services/documentdb/" target="_blank"><u>Azure Cosmos DB</u></a>選択されています。</p>


  <p><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/walkingdead3.PNG"></p>


  <p>ウォーキングマン &rsquo; の土地は、1人のプレーヤーとマルチプレイヤーのキャンペーンをサポートするターンベースのモバイル戦略ゲームです。 ゲームでは、人気のあるテレビ番組と同じように、ベースを構築し、より多くの残存オブジェクトを見つけ、スキルと武器をアップグレードして、成功したミッションを実行します。 オンライン接続で再生します。プレーヤーとギルドのメタデータは、ゲームプレイ中に永続化して、頻繁に取得する必要があります。</p>


  <h2>Azure Cosmos DB を使用する理由</h2>


  <p>次のゲーム開発チームにとっての重要な要件は、このゲームの大規模およびパフォーマンスの要求にシームレスに対応できるデータベースでした。</p>


  <ul>
   <li>
   <p>数百万人のユーザーが1日にオンラインになることが予想されている場合、データベースは、ログインしてログアウトしたプレーヤーと同じ数のリアルタイムプレーヤーメタデータの更新を処理し、必要に応じて弾力的にスケールアップまたはスケールダウンする必要がありました。</p>
   </li>
   <li>
   <p>ユーザーエクスペリエンスにとって、応答性は非常に重要でした。 ゲームプレイ中に遅延が発生しないように、プレーヤーのプロファイルとスコア情報の保存は、ミリ秒以内に完了する必要がありました。</p>
   </li>
   <li>
   <p>単純なキー値の参照に加えて、データ層では、さまざまなプロパティに対してリアルタイムでフィルター処理を行う必要があります。たとえば、プレーヤーを内部のプレーヤー Id で検索したり、GameCenter、Facebook、Google IDs、ギルドのプレーヤーのメンバーシップに基づいてクエリを検索したりします。</p>
   </li>
   <li>
   <p>ゲームには、ゲーム内チャットメッセージ、プレーヤーギルドメンバーシップ、完了したチャレンジ、ソーシャルグラフなどのソーシャル機能が含まれており、柔軟なスキーマが必要でした。 次のゲームでは、プレーヤーのさまざまなグループに対して順序付けを行う必要もあります (例として、 国 (ソーシャルネットワーク)) を使ってリアルタイム &ldquo; のハイスコア &rdquo; スコアボードを作成します。</p>
   </li>
   <li>
   <p>市場投入までの時間は、次のゲームにとって重要であり、チームはサービスとしてのプラットフォーム (PaaS) オファリングのみを使用して開発することを意識して決定しました。 データベースでは、迅速な反復処理を可能にするために最小限のセットアップおよび管理作業が必要であることが重要でした。</p>
   </li>
  </ul>


  <p>さまざまなソリューションを評価した後、次のゲームは、これらの要件をすべて満たしているため、ゲームのコアコンポーネントとして<a href="https://azure.microsoft.com/services/documentdb/" target="_blank">Azure Cosmos DB</a>を選択しました。</p>


  <h2>使用方法 Cosmos DB</h2>


  <p>次のゲームでは、開発、ロードテスト、および運用環境の<a href="https://azure.microsoft.com/en-us/documentation/articles/documentdb-create-account/" target="_blank"><u>アカウントを Cosmos DB 作成</u></a>し、プレーヤーのメタデータとソーシャルグループデータを格納します。 これらのアカウント内のデータをパーティション分割するために、次のゲームチームは、Cosmos DB .net SDK と<a href="https://azure.microsoft.com/documentation/articles/documentdb-sharding/#hash-partition-resolver" target="_blank"><u>ハッシュパーティションリゾルバー</u></a>を使用して、一貫性のあるハッシュを使用して Cosmos DB コレクション間でデータを分散していました。 Cosmos DB コレクションは、最高のスループットと最高のパフォーマンスを実現するために<a href="https://azure.microsoft.com/pricing/details/documentdb/" target="_blank"><u>S3</u></a>パフォーマンスレベルで構成されています。効率的で柔軟な並べ替えを行うために<a href="https://azure.microsoft.com/en-us/documentation/articles/documentdb-orderby/#configure-an-indexing-policy-for-order-by" target="_blank"><u>文字列範囲のインデックス作成ポリシー</u></a>を設定しています。</p>


  <p>次のゲームチームは、 <a href="https://azure.microsoft.com/blog/documentdb-adds-upsert/" target="_blank"><u>atomic upsert</u></a>を使用して書き込みを実行し、次の3つのクエリパターンのいずれかを使用して読み取りを行うリポジトリクラスを実装しました。</p>


  <ul>
   <li>
   <p>単一のプレーヤー ID に基づく<a href="https://azure.microsoft.com/documentation/articles/documentdb-sharding/#create-queries-against-partitions" target="_blank"><u>単一パーティションのクエリ</u></a></p>
   </li>
   <li>
   <p>シリーズのパーティション Cosmos DB スキャンした、固定ページサイズ/最大項目数を持つ<a href="https://azure.microsoft.com/documentation/articles/documentdb-sharding/#create-queries-against-all-collections-in-the-database" target="_blank"><u>マルチパーティションクエリ</u></a>(プレーヤーの上位 N グループまたはフレンドを一覧表示するため)</p>
   </li>
   <li>
   <p>ResolveForRead を使用して、最も短い待機時間に対して並列でパーティションをスキャンしたマルチパーティションクエリ (例 &ldquo; &rdquo; : Facebook Id、Google ID、GameCenter ID など)</p>
   </li>
  </ul>


  <p>ゲームのもう1つの重要な機能が、最高のスコアをリアルタイムで表示していました。 これには、グローバルハイスコア、ゲーマー &rsquo; s 国別のハイスコア、および友人のグループが含まれます。 これは、Cosmos DB クエリを使用してコレクション内での並べ替えを実行するサービスとして実装され、その後、個別のコレクション内に JSON ドキュメントとして格納されている別 &ldquo; のハイスコア &rdquo; ドキュメントとして集計された結果を実行します。</p>


  <p><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/walkingdead2.PNG"></p>


  <h2>次のステップ</h2>


  <p>&rsquo;次の革新的なゲームまたはモバイルアプリのニーズに対応できるバックエンドデータベースを探している場合は、<a href="https://azure.microsoft.com/pricing/free-trial/" target="_blank"><u>無料試用版を使用して Cosmos DB</u></a>試すか、 <a href="https://azure.microsoft.com/documentation/articles/documentdb-community/#contact-the-team" target="_blank"><u>Cosmos DB エンジニアリングチームとの1:1 チャット</u></a>をスケジュールしてください。 &rsquo; <a href="https://itunes.apple.com/us/app/the-walking-dead-no-mans-land/id970417047?mt=8" target="_blank"><u>ITunes App Store</u></a>からダウンロードして、Man &rsquo; を試してみてください。</p>
