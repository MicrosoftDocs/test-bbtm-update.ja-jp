### YamlMime:Yaml
ms.openlocfilehash: de469da32c9299b9c0d23e603538191382dd80b8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889463"
Slug: how-to-use-azure-search-with-d3-js-to-build-interactive-data-visualizations
Title: Azure Search と D3.js を使用して対話型データの視覚化をビルドする方法
Summary: この記事では、Azure Search を D3 と共に活用して、ユーザーが Azure Search クエリを実行し、検索クエリの結果を視覚的に調査できるようにする方法について説明します。
Content: >-
  ユーザーがデータを視覚化できるようにすると、web アプリケーションまたはモバイルアプリケーションの全体的なユーザーエクスペリエンスの向上に大きな影響を与える可能性があります。 Azure Search " href="https://azure.microsoft.com/en-us/services/search/" target="_blank"> Azure Search </a> を使用 <a title=" する主な目的は、開発者が優れた検索エクスペリエンスを構築できるようにすることですが、返された結果をユーザーが視覚化できない場合、このエクスペリエンスの多くは失われる可能性があります。ここでは、 <a href="https://d3js.org/">D3.js</a>と呼ばれる、お気に入りの視覚化ツールの1つについて説明します。 これはオープンソースの JavaScript ライブラリであり、見栄えのよいビューをデータに簡単に適用できます。視覚化は、横棒グラフのセットとして簡単に行うことができます。たとえば、 <a href="https://mbostock.github.io/d3/talk/20111116/airports.html">Mike bostock</a>によって作成された米国の空港の地図など、複雑な対話型の図を、右側の画像<span style="text-decoration: underline;">に示します</span>。 ここでは、このライブラリの広範な機能を実際に紹介した <a href="https://github.com/mbostock/d3/wiki/Gallery">例</a> をいくつか紹介します。


  <div id="attachment_316481" align="alignright" width="407"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/13/d3_azure_search_interactive_visualization.png"><img class=" wp-image-316481" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3_azure_search_interactive_visualization-516x369.png" alt="D3 Azure Search Interactive Visualization Map" width="407" height="291" /></a> D3 Azure Search 対話型の視覚化マップ</div>


  この記事では、Azure Search を D3 と共に活用して、ユーザーが Azure Search クエリを実行し、検索クエリの結果を視覚的に調査できるようにする方法について説明します。 目標は、 <a href="https://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data">data.gov によって提供されたデータ</a>に基づいて<a href="https://msdn.microsoft.com/en-us/library/azure/dn798941.aspx">Azure Search のインデックス</a>を検索する JavaScript web ページを構築することです。これは、1880-2013 年の間に、1.8 年の男性と女性の名前の数から構成されます。 これにより、年でフィルター処理された名前を検索できるようになります。また、このタイムフレーム内の最も一般的な名前に基づいて、 <a href="https://www.jasondavies.com/wordcloud/#%2F%2Fwww.jasondavies.com%2Fwordcloud%2Fabout%2F">D3.js word クラウド</a> 内でその名前のバージョンを確認することができます (下図を参照)。 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">ここで</a>は、このページのライブバージョンを確認できます。 "liam" は、2013の最も一般的な名前の1つでした。 :-)


  <div id="attachment_316451" align="alignleft" width="507"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/13/d3_azure_search_word_cloud.png"><img class="size-medium wp-image-316451" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3_azure_search_word_cloud-507x369.png" alt="Azure Search D3.js Word Cloud" width="507" height="369" /></a> Azure Search D3.js Word Cloud</div>

  <h2></h2>

  <h2>はじめにメモ</h2>

  作業を開始する前に、いくつかの点についてご紹介します。

  <ol>
   <li>このサンプルのソースコードは <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">github に</a>あります。オンラインで実行されているサンプルについては、 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">こちらを参照</a>してください。 これらの各機能については、このサンプルの動作を確認してください。</li>
   <li>JavaScript アプリケーションが Azure Search を直接呼び出すことができるようにするには、ドメイン間呼び出しを許可するために使用しているインデックスに対して CORS を有効にする必要があります。 詳細については、 <a href="https://msdn.microsoft.com/en-us/library/azure/dn798941.aspx">こちらを参照</a>してください。</li>
  </ol>

  <h2>Azure Search を使用した JavaScript D3.JS アプリケーションの構築</h2>

  次に、 <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">コード</a>を見てみましょう。

  <h3>JavaScript ライブラリ</h3>

  JQuery およびブートストラップライブラリへの参照以外に、次の2つのファイルを強調表示します。

  <ul>
   <li><strong>d3.min.js</strong>: これは、すべての D3 視覚エフェクトに使用されるコアライブラリです。</li>
   <li><strong>d3.layout.cloud.js</strong>: これは、d3.min.js ライブラリを活用して word cloud を作成する <a href="https://github.com/jasondavies/d3-cloud/">Jason Davies</a> によって作成されたライブラリです。</li>
  </ul>

  <h3>JavaScript コード</h3>

  JavaScript コードでは、次の点に注意してください。

  <ul>
   <li><strong>var</strong> <strong> apikey</strong>: この変数は、Azure Search するクエリを認証するために使用されるキーを定義します。 これは純粋なクライアント側で実行される JavaScript ベースのアプリケーションであり、ASP.NET MVC または PHP と同じようにサーバー側のコンポーネントがないため、このファイルにこのキーを格納する必要があります。 ユーザーの特権を制限するには、管理者キーではなく <a href="https://msdn.microsoft.com/en-us/library/azure/dn832690.aspx">クエリキー</a> を使用することを強くお勧めします。 ただし、クエリキーを使用している場合でも、サービス拒否攻撃の可能性があるため、信頼されたユーザーのみがアプリを処理するようにしてください。</li>
   <li><strong>関数</strong><strong>検索</strong><strong>()</strong>: これは、ユーザーによって指定された "text" パラメーターと "year" パラメーターを使用して、Ajax ドメイン間呼び出しによって Azure Search を呼び出すための関数です。 生成される URL は、次のような多数のパラメーターを使用します。
  <ul>
   <li><strong>$orderby = count + desc</strong>: これにより、最も一般的な名前の順に並べ替えられた Azure Search の結果が最小値になります。</li>
   <li><strong>$top = 100</strong>: 検索結果を最大100名に制限します。</li>
   <li><strong>$select = firstname, count</strong>: n の場合、結果は [firstname] フィールドと [count] フィールドのみに制限されます。</li>
   <li><strong> &amp; 検索 =... *</strong>: ユーザーが検索の一部として入力するフルテキスト文字列を渡し、プレフィックススタイル検索を実行するための * を追加します。 たとえば、ユーザーが John を検索した場合、結果 Johnny も返されることがあります。</li>
   <li><strong>$filter = year + eq...</strong>: ユーザーによって指定された年を取得し、年フィールドがこの値と等しい (eq) ことを確認します。</li>
  </ul>

  </li>
   <li><strong>. done (</strong><strong>関数</strong><strong> (</strong><strong>response</strong><strong>)</strong>: Azure Search の Ajax 呼び出しが完了すると、結果の JSON セットが返されます。 残念ながら、この JSON ドキュメントは、D3 が期待する形式とは限りません。そのため、結果を反復処理し、変数の "text" 配列と "size" 配列が必要な d3JSON という新しい JSON 変数にデータをプッシュする必要があります。 サイズは、最大名と最小数を比較することによって計算されます。これにより、word cloud に表示されるフォントのサイズの値が取得されます。</li>
   <li>d3. d3JSON ( <strong>). サイズ ([600, 600])</strong>: 最後に、この新しい変数が作成された後、word cloud が生成された d3 に渡されます。</li>
  </ul>

  ここでは、Azure Search から結果を取得して D3 グラフに表示する方法の一例を示していますが、作成するグラフに関係なく、実際の方法はほぼ同じです。


  必要に応じて D3 視覚エフェクトを作成し、共有するために開いている場合は、他のユーザーが表示して活用できるように、これらのギャラリーを作成することをお勧めします (Twitter: @liamca )。


  このサンプルのソースコードは <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">github に</a>あります。オンラインで実行されているサンプルについては、 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">こちらを参照</a>してください。


  Liam
