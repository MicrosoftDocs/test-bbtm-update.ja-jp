### YamlMime:Yaml
ms.openlocfilehash: de9bca56975c2a6e05cd96f14ed2a74a297f0bde
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896837"
Slug: deploy-to-azure-container-instances-with-docker-desktop
Title: Docker Desktop をAzure Container Instancesにデプロイする
Summary: 今日は、新しい Docker Desktop と Microsoft Azure の新しい統合の最初のリリースを楽Microsoft Azure。
Content: >-
  <p><em>このブログは、プログラム マネージャーの MacKenzie Olson 氏によって共同作成Azure Container Instances。&nbsp;</em></p>


  <p>今日は&rsquo;、新しい Docker Desktop と Microsoft Azure の新しい統合の最初のリリースについておMicrosoft Azure。 先月、Microsoft と Docker からこのコラボレーションが発表されました。今日は、自分で体験できます。</p>


  <p>Docker Desktop <a href="https://aka.ms/dockerdesktopedge" target="_blank">の</a>新しいエッジ リリースでは、Docker と Microsoft Azure の統合が提供されます。これにより、ネイティブの Docker コマンドを使用して、アプリケーションを Azure Container Instances でサーバーレス コンテナー<a href="https://azure.microsoft.com/en-us/services/container-instances/" target="_blank">として実行できます</a>。</p>


  <p>Docker CLI を使用すると、Azure にすばやく簡単にサインインし、Azure サブスクリプションとリソース グループを使用して Container Instances コンテキストを作成し、 を使用して単一コンテナー アプリケーションを Container Instances で実行できます <code>docker run</code>。 を使用して、複数のコンテナー アプリケーションを Container Instancesファイルで定義されているDocker Compose配置できます <code>docker compose up</code>。</p>


  <h2>サーバーレス コンテナーを使用したコードからクラウドへ</h2>


  <p>Azure Container Instancesは、単一の Docker コンテナーまたは 1 つのファイルで定義された複数のコンテナーで構成されるアプリケーションを実行Docker Composeです。 Container Instancesを使用すると、インフラストラクチャを設定したり、Azure Storage リポジトリや GitHub リポジトリをボリュームとしてマウントするなどの機能を利用したりすることなく、クラウドでコンテナーを実行できます。 インフラストラクチャやプラットフォーム管理のオーバーヘッドはないので、クラウドContainer Instancesコンテナーをすばやく実行する必要があるユーザーに対応できます。</p>


  <p>Container Instancesは、同じワークロードを実稼働環境で実行する場合にも適したターゲットです。 実稼働環境では、自動化された CI/CD フロー内で Docker コマンドを活用することをお勧めします。 これにより、同じ Dockerfile ファイルと Docker Compose ファイルを GitHub Actions などのツールを使用して実稼働環境にデプロイできるので、構成ファイルの書き換えに時間を節約できます。 Container Instancesは、1 秒あたりの CPU とメモリの消費量に対して<a href="https://azure.microsoft.com/en-us/pricing/details/container-instances/" target="_blank"></a>だけ課金され、コンテナーが実行されている場合にのみ課金されます。</p>


  <p>例&rsquo;を使用して、新しい Docker Azure 統合を確認します。 キューから注文を継続的にプルし、必要な注文処理を実行するワーカー コンテナーがあります。 ネイティブ Docker コマンドを使用して、このContainer Instances実行する手順を次に示します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1a541148-82e7-41fe-9230-70ce91990b65.gif"><img alt="Create and run a container in Azure Container Instances using the Docker CLI" border="0" height="545" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/306896b5-2082-43ae-bab7-2c01fb38638d.gif" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1024"></a></p>


  <h2>1 つのコンテナーを実行する</h2>


  <p>上記のアニメーションからご覧のように、新しい Docker CLI と Azure の統合により、コンテナーを Azure Container Instances で簡単に実行できます。 Docker CLI のみを使用すると、多要素認証を使用して Azure にログインし、バックエンドとして Container Instancesを使用して Docker コンテキストを作成できます。 コンテキストの詳細Container Instancesドキュメント <a href="https://aka.ms/docs-docker-aci" target="_blank">を参照してください</a>。</p>


  <p>新しい Container Instancesコンテキストを作成したら、既に使用している可能性のある標準の Docker コマンドの多Container Instancesをターゲットとするために使用できます。docker run、docker ps、docker rm などです。 単純なコマンドを <code>docker run &lt;image&gt;</code> 実行すると、Container Instances や Azure Container Registry のようなレジストリに格納されているイメージを使用して、コンテナー Docker Hubが開始Azure Container Registry。 他の一般的な Docker コマンドを実行して、実行中のコンテナーからログを検査、アタッチ、および表示できます。</p>


  <h2>複数Docker Composeを使用して複数コンテナー アプリをデプロイする</h2>


  <p>いくつかの関連コンテナーで構成されるコンテナー化されたアプリケーションが多数表示されます。 サイドカー コンテナーは、多くの場合、メイン コンテナーのログ記録または署名サービスを実行します。 新しい Docker Azure 統合を使用すると、Docker Composeを使用して、これらのマルチコンテナー アプリケーションについて説明できます。</p>


  <p>編集ビルド/デバッグ内部ループContainer Instances、CI/CD フローの一部として、Docker Compose コンテキストと Docker Compose ファイルを使用できます。 これにより、docker compose up コマンドと down コマンドを使用して、複数のコンテナーを同時に起動またはシャットダウンContainer Instances。</p>


  <h2>Visual Studio Codeエクスペリエンスを向上する</h2>


  <p>Docker <a href="https://aka.ms/VSCodeDocker" target="_blank">Visual Studio Codeを</a>使用すると、コンテナー、イメージ、コンテキストなど、開始、停止、管理を行う統合されたエクスペリエンスが提供されます。 拡張機能を使用して、Dockerfile をスキャフォールディングしDocker Composeのファイルを作成します。 たとえばNode.js Python、.NET の場合は、コンテナー内でアプリを 1 回クリックでデバッグできます。 そしてもちろん、エクスプローラーには<strong></strong><strong>&nbsp;</strong>複数のパネルがあります。複数のパネルを使用すると、Docker オブジェクトの管理を内部から簡単にVisual Studio Code。</p>


  <p>[コンテナー <strong>] パネル </strong>を使用して、ログの一覧表示、開始、停止、検査、表示を行います。</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8ae976c7-5e21-4cfc-9636-27c4b8c2397c.png"><img alt="o  Containers panel in the Docker Explorer displays all containers and allows you to manage them" border="0" height="430" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f4eab45-ac48-4834-b798-af8a007675da.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="732"></a></p>


  <p>[イメージ <strong>] パネル </strong>から、イメージの一覧表示、プル、タグ付け、プッシュを行えます。</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/88fb873e-1306-4b2a-bd39-719a2956d0f6.png"><img alt="o  Images panel in the Docker Explorer displays all images and allows you to manage them" border="0" height="520" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e3453bc8-f379-4c5b-8892-77940f339769.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="543"></a><br>

  Connectレジストリ Azure Container RegistryをDocker Hub<strong>して</strong>、クラウド内のイメージを表示および管理します。 Azure に直接デプロイする場合も可能です。</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/206b344e-0ae4-40d1-9ac6-5be23c6583f4.png"><img alt="o  Registries panel in the Docker Explorer displays registries you have connect to allow pushing and pulling of images" border="0" height="566" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a9d8cd03-50b5-49f6-9dd8-f1e5fc33a88a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="819"></a></p>


  <p>[ <strong>コンテキスト] パネル </strong>を使用すると、すべてのコンテキストを一覧表示し、すばやく切り替えます。 コンテキストを切り替えたときに、他のパネルが更新され、選択したコンテキストの Docker オブジェクトが表示されます。 Container Instancesは、Docker 拡張機能の次のリリースで完全にサポートされます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1e5d5582-2aad-42b6-b8d1-3c2a72a9d486.png"><img alt="o    Contexts panel in the Docker Explorer displays all contexts and allows you to switch between them" border="0" height="284" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/51251a38-e4a6-41ae-9546-449d431898b8.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="824"></a></p>


  <h2>試してみる</h2>


  <p>Docker Azure 統合の使用を開始するには、 <a href="https://aka.ms/dockerdesktopedge" target="_blank">Docker Desktop エッジ リリースをインストールします</a>。 現在の Docker 拡張機能Visual Studio Code<a href="https://aka.ms/VSCodeDocker" target="_blank">利用</a>できます。コンテキストContainer Instancesすぐに追加される予定です。</p>


  <p>Docker Desktop リリースの詳細については、Docker のブログ <a href="https://aka.ms/dockerblogpostjune2020" target="_blank">記事を参照してください</a>。 詳細については、 <a href="https://aka.ms/docs-docker-aci" target="_blank">Docker とコンテキスト</a> の使用に関するドキュメントContainer Instances参照してください。</p>
