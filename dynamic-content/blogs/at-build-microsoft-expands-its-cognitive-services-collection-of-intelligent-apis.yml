### YamlMime:Yaml
ms.openlocfilehash: 1fa6ded242a554f488ca9b4103c6da44d25d00d2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890285"
Slug: at-build-microsoft-expands-its-cognitive-services-collection-of-intelligent-apis
Title: ビルド時に、Microsoft はインテリジェントな Api の Cognitive Services コレクションを拡張します
Summary: Microsoft Cognitive Services を使用すると、開発者は、次世代のアプリケーションを拡張して、の自然な方法を使用して、ニーズの確認、聞く、読み上げ、理解、解釈を行うことができます。
Content: "<p><em>このブログ投稿は、Microsoft Cognitive Services チームによって作成されました。 </em></p>\n\n<p>Microsoft Cognitive Services を使用すると、開発者は、自然なコミュニケーション方法を使用して、ニーズを確認、聞いて、話し、理解し、解釈する機能を備えた次世代のアプリケーションを拡張できます。</p>\n\n<p><strong>現在、Build 2017 カンファレンスで、Microsoft Cognitive Services のイノベーションの次の大きな波を発表し、AI を採用して次世代のアプリケーションを構築する開発者の価値を大幅に高めています。</strong></p>\n\n<ul>\n <li><strong>カスタマイズ可能:</strong><a href=\"https://aka.ms/bcsearch\">Bing Custom Search</a>、 <a href=\"https://aka.ms/cvisionservice\">Custom Vision Service</a>と<a href=\"https://aka.ms/cdservice\">Custom Decision Service</a>が Custom Speech および Language Understanding Intelligent Service の上に追加されたことにより、より広範なカスタム AI api を使用できるようになりました。これにより、お客様は独自のニーズに合わせてカスタマイズしたアルゴリズムで独自のデータを使用できるようになります。</li>\n <li><strong>最先端のテクノロジ:</strong> 現在 Microsoft では、 <a href=\"https://aka.ms/cslabs\">Microsoft &rsquo; Cognitive Services Labs</a>を開始しています。これにより、開発の初期段階でも新しいサービスを試すことによって、より広範なリサーチコミュニティ &rsquo; に参加して、認知コンピューティングの将来をより深く理解できるようになります。 Cognitive Services Labs によって利用可能になる最初の AI サービスの1つは、Project プラハです。これにより、 &nbsp; ジェスチャを使用して、より直感的で自然なエクスペリエンスを提供するためのテクノロジを制御および操作できます。 &nbsp;この最先端と使いやすい SDK は、プライベートプレビュー段階です。</li>\n <li><strong>イノベーションのペース:</strong>&rsquo; <a href=\"https://aka.ms/vindexer\">Video Indexer</a>、 <a href=\"https://aka.ms/cdservice\">Custom Decision Service</a>、 <a href=\"https://aka.ms/bcsearch\">Bing Custom Search</a>、 <a href=\"https://aka.ms/cvisionservice\">Custom Vision Service</a>を追加して、Cognitive Services ポートフォリオを29インテリジェント api に拡張しています。新しい Cognitive Services ラボ Project プラハに加えて、ジェスチャ用に、Cognitive Services などの既存の Bing Search を更新しています。Microsoft 翻訳ツールと Language Understanding Intelligent Service。</li>\n</ul>\n\n<p>現在、60を超える国の568000と開発者は、システムによるニーズの確認、聞き取り、読み上げ、理解、解釈を可能にする Microsoft Cognitive Services を使用しています。</p>\n\n<h2>これらの新しいサービスの機能は何ですか。</h2>\n\n<ul>\n <li>現在無料のパブリックプレビューで提供されている<a href=\"https://aka.ms/cvisionservice\">Custom Vision Service</a>は、使いやすく、カスタマイズが可能な web サービスです。これにより、トレーニングがよりスマートになる最先端の機械学習ニューラルネットワークを活用して、画像で特定のコンテンツを認識することができます。 これをトレーニングして、動物、オブジェクト、または抽象的なシンボルのどれを選んだかを認識できます。 このテクノロジは、コンピューター支援型の製品 id やデジタルスペースにおいて、写真のカテゴリの並べ替えを自動的に支援する小売環境に簡単に適用できます。</li>\n <li>現在無料のパブリックプレビューで提供されている<a href=\"https://aka.ms/vindexer\">Video Indexer</a>は、業界 &rsquo; で最も包括的なビデオ AI サービスの1つです。 インデックスを作成することにより、任意のビデオから洞察を引き出すことができます。また、書き起こしで翻訳された音声を検索することができます。 これらの洞察により、この機能をサイトに埋め込むことで、アプリケーションでのビデオの発見可能性を向上させたり、ユーザーのエンゲージメントを向上させることができます。 これらの機能はすべて、単純な Api セットを通じて提供され、ウィジェットと管理ポータルを使用できます。</li>\n <li>現在無料のパブリックプレビューで提供されている<a href=\"https://aka.ms/cdservice\">Custom Decision Service</a>は、エクスペリエンスに適応するクラウドベースの意思決定 API でインテリジェントなシステムを作成するのに役立つサービスです。 Custom Decision サービスでは、コンテンツをカスタマイズするための新しい方法で補強学習を使用します。&rsquo;アプリケーションにプラグインして、時間の経過と共にメトリックを最適化するように自動的に調整されるため、リアルタイムで意思決定を行うことができます。</li>\n <li>現在無料のパブリックプレビューで提供されている<a href=\"https://aka.ms/bcsearch\">Bing Custom Search</a>は、高度にカスタマイズされた web 検索エクスペリエンスを作成することができます。これにより、対象となる web 空間からより適切かつより関連性の高い結果を得ることができます。 単純なユーザーインターフェイスを利用することで、Bing Custom Search によって、コード行を使用せずに独自の web 検索サービスを作成できます。 描画する web のスライスを指定し、サイトの提案を探索して、検索ドメインのスコープをインテリジェントに拡張します。 Bing Custom Search によって、あらゆる規模の企業が、趣味や家を使用して、あらゆるシナリオに対応する web 検索アプリケーションを設計および展開できます。</li>\n <li><a href=\"https://aka.ms/cslabs\">Microsoft &rsquo; Cognitive Services Labs</a> は、開発の初期段階でも、開発者が新しいサービスを試すことができます。 <strong>Project プラハ</strong>は、現在プライベートプレビューのサービスの1つです。 この SDK は、ユーザーが一般的な手での移動によってテクノロジの制御と対話を行うことができるようにすることで、より直感的なエクスペリエンスを作成する、はるかに多くの直感的なライブラリから構築されています。 特殊なカメラを使用してジェスチャを記録すると、API はハンドのフォーメーションを認識し、開発者がアプリ内アクションを各ジェスチャに関連付けることができるようになります。</li>\n <li>パブリックプレビューで提供されている<strong>次期バージョンの Bing api</strong>を使用すると、開発者は web の豊富な知識をユーザーに提供し、パフォーマンスの向上、新しい並べ替えとフィルターのオプション、堅牢なドキュメント、簡単なクイックスタートガイドを活用できます。 このリリースには、Bing Search APIs の完全なスイート (Bing Web Search API preview、Bing News Search API プレビュー、Bing Video Search API プレビュー、Bing Image Search API プレビュー)、Bing Autosuggest API プレビュー、および Bing Spell Check API プレビューが含まれています。 詳細については、 <a href=\"https://aka.ms/bingbuildblog\">お知らせのブログ</a>を参照してください。</li>\n <li><strong>プレゼンテーション翻訳ツール Microsoft のガレージプロジェクトは</strong>、ユーザー補助のシナリオや多言語の状況に対応する別の言語で、プレゼンテーションに字幕を追加する機能を発表者に提供します。 対象ユーザーのメンバーは、<a href=\"https://na01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftranslate.it%2F&amp;data=02%7C01%7Cv-canmo%40microsoft.com%7C79faae908fd84fac957b08d497368268%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636299707768069177&amp;sdata=l0HwSpcNMD2dss9XtKPbgMZT1bcikXJThiiTZhinp7s%3D&amp;reserved=0\">ブラウザーで</a>Microsoft 翻訳ツールアプリを使用して自分のデバイスで目的の言語で字幕を取得します。また、必要に応じて、書式設定を保持しながらスライドを変換します。 利用可能になったときに通知を受け取るには、<a href=\"https://www.aka.ms/TranslatorPowerPoint\">ここをクリックし</a>て &rsquo; ください。</li>\n <li><strong>Language Understanding Intelligent Service (LUIS)</strong> の機能強化-開発者は、事前に定義されたモデルまたはカスタマイズされたモデルを使用して、ユーザーを理解する言語モデルをすばやく簡単に統合できます。 LUIS の更新には、インテントとエンティティの増加、生産性向上のための新しい強力な開発者ツールの導入、コミュニティが使用および投稿するための追加の方法、Microsoft Bot Framework による音声認識の向上、およびグローバルな可用性が含まれます。</li>\n</ul>\n\n<p>ここでは、これらの新しい Api とサービスがどのようなことができるかについて詳しく見ていきましょう &rsquo; 。</p>\n\n<h2>カスタムビジョンをアプリに持ち込む</h2>\n\n<p>Custom Vision Service ありがとうございます。独自のイメージ認識サービスを作成するのは非常に簡単です。 <a href=\"https://www.customvision.ai/\">Custom Vision Service ポータル</a>を使用して一連のイメージをアップロードし、分類器といくつかのイメージをトレーニングして、分類器がトレーニングされた後にテストすることができます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/10b65e2b-1abe-4acc-a9cc-008222b15143.png\"><img alt=\"Custom Vision\" border=\"0\" height=\"301\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/afda52eb-3a3f-4efa-8967-aae79fa6ce03.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"Custom Vision\" width=\"612\"></a></p>\n\n<p>&rsquo;また、各ステップをコーディングすることもできます。 &rsquo; たとえば、特定のニーズに合わせてイメージ分類器をすばやく作成する必要があるとします。これは、ユーザーが自分の web サイト、小売 merchandize、またはフォレスト内の動物のイメージでアップロードしている製品にすることができます。</p>\n\n<ul>\n <li>使用を開始するには、この SDK で入手できる Custom Vision API が必要です。 コンソールアプリケーションを作成し、この例に必要なイメージをトレーニングキー &amp; として準備する必要があります。</li>\n</ul>\n\n<p>Visual Studio から開始して、新しいコンソールアプリケーションを作成し、次のコードを使用してプログラム .cs の内容を置き換えることができます。 このコードは、次の2つのヘルパーメソッドを定義して呼び出します。</p>\n\n<ul>\n <li>GetTrainingKey というメソッドはトレーニングキーを準備します。</li>\n <li>LoadImagesFromDisk という名前のイメージは、プロジェクトのトレーニングに使用される2つのイメージセットと、既定の予測エンドポイントの使用方法を示すために読み込まれる1つのテストイメージを読み込みます。</li>\n</ul>\n\n<pre class=\"prettyprint\">\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Threading;\nusing Microsoft.Cognitive.CustomVision;\n\nnamespace SmokeTester\n{\n    class Program\n    {\n        private static List&lt;MemoryStream&gt; hemlockImages;\n\n        private static List&lt;MemoryStream&gt; japaneseCherryImages;\n\n        private static MemoryStream testImage;\n\n        static void Main(string[] args)\n        {\n            // You can either add your training key here, pass it on the command line, or type it in when the program runs\n            string trainingKey = GetTrainingKey(&quot;&lt;your key here&gt;&quot;, args);\n\n            // Create the Api, passing in a credentials object that contains the training key\n            TrainingApiCredentials trainingCredentials = new TrainingApiCredentials(trainingKey);\n            TrainingApi trainingApi = new TrainingApi(trainingCredentials);\n\n            // Upload the images we need for training and the test image\n            Console.WriteLine(&quot;\\tUploading images&quot;);\n            LoadImagesFromDisk();\n        }\n\n        private static string GetTrainingKey(string trainingKey, string[] args)\n        {\n            if (string.IsNullOrWhiteSpace(trainingKey) || trainingKey.Equals(&quot;&lt;your key here&gt;&quot;))\n            {\n                if (args.Length &gt;= 1)\n                {\n                    trainingKey = args[0];\n                }\n\n                while (string.IsNullOrWhiteSpace(trainingKey) || trainingKey.Length != 32)\n                {\n                    Console.Write(&quot;Enter your training key: &quot;);\n                    trainingKey = Console.ReadLine();\n                }\n                Console.WriteLine();\n            }\n\n            return trainingKey;\n        }\n\n        private static void LoadImagesFromDisk()\n        {\n            // this loads the images to be uploaded from disk into memory\n            hemlockImages = Directory.GetFiles(@&quot;..\\..\\..\\..\\..\\SampleImages\\Hemlock&quot;).Select(f =&gt; new MemoryStream(File.ReadAllBytes(f))).ToList();\n            japaneseCherryImages = Directory.GetFiles(@&quot;..\\..\\..\\..\\..\\SampleImages\\Japanese Cherry&quot;).Select(f =&gt; new MemoryStream(File.ReadAllBytes(f))).ToList();\n            testImage = new MemoryStream(File.ReadAllBytes(@&quot;..\\..\\..\\..\\..\\SampleImages\\Test\\test_image.jpg&quot;));\n\n        }\n    }\n}\n</pre>\n\n<ul>\n <li>次の手順として、Custom Vision Service プロジェクトを作成し、 <strong>LoadImagesFromDisk ()</strong>の呼び出しの後に Main () メソッドに次のコードを追加する必要があります。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n            // Create a new project\n            Console.WriteLine(&quot;Creating new project:&quot;);\n            var project = trainingApi.CreateProject(&quot;My New Project&quot;);\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<ul>\n <li>次に、 <strong>createproject ()</strong>の呼び出しの後に次のコードを挿入して、プロジェクトにタグを追加する必要があります。</li>\n</ul>\n\n<pre class=\"prettyprint\">\n            // Make two tags in the new project\n            var hemlockTag = trainingApi.CreateTag(project.Id, &quot;Hemlock&quot;);\n            var japaneseCherryTag = trainingApi.CreateTag(project.Id, &quot;Japanese Cherry&quot;);\n</pre>\n\n<ul>\n <li>次に、 <strong>Main ()</strong>メソッドの最後に次のコードを挿入して、メモリ内のイメージをプロジェクトにアップロードする必要があります。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n            // Images can be uploaded one at a time\n            foreach (var image in hemlockImages)\n            {\n                trainingApi.CreateImagesFromData(project.Id, image, new List&lt;string&gt;() { hemlockTag.Id.ToString() });\n            }\n\n            // Or uploaded in a single batch \n            trainingApi.CreateImagesFromData(project.Id, japaneseCherryImages, new List&lt;Guid&gt;() { japaneseCherryTag.Id });\n</pre>\n\n<p>&nbsp;</p>\n\n<ul>\n <li>これで、プロジェクトにタグやイメージを追加&#39;、トレーニングできます。 <strong>Main ()</strong>の最後に次のコードを挿入する必要があります。 プロジェクトの最初のイテレーションが作成されます。 その後、このイテレーションを既定のイテレーションとしてマークできます。</li>\n</ul>\n\n<pre class=\"prettyprint\">\n            // Now there are images with tags start training the project\n            Console.WriteLine(&quot;\\tTraining&quot;);\n            var iteration = trainingApi.TrainProject(project.Id);\n\n            // The returned iteration will be in progress, and can be queried periodically to see when it has completed\n            while (iteration.Status == &quot;Training&quot;)\n            {\n                Thread.Sleep(1000);\n\n                // Re-query the iteration to get it&#39;s updated status\n                iteration = trainingApi.GetIteration(project.Id, iteration.Id);\n            }\n\n            // The iteration is now trained. Make it the default project endpoint\n            iteration.IsDefault = true;\n            trainingApi.UpdateIteration(project.Id, iteration.Id, iteration);\n            Console.WriteLine(&quot;Done!\\n&quot;);\n</pre>\n\n<ul>\n <li>&rsquo;予測にモデルを使用する準備ができたら、最初に既定のイテレーションに関連付けられているエンドポイントを取得します。次に、そのエンドポイントを使用してテストイメージをプロジェクトに送信します。 Main () の末尾に次のコードを挿入 <strong>します。</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n            // Now there is a trained endpoint, it can be used to make a prediction\n\n            // Get the prediction key, which is used in place of the training key when making predictions\n            var account = trainingApi.GetAccountInfo();\n            var predictionKey = account.Keys.PredictionKeys.PrimaryKey;\n\n            // Create a prediction endpoint, passing in a prediction credentials object that contains the obtained prediction key\n            PredictionEndpointCredentials predictionEndpointCredentials = new PredictionEndpointCredentials(predictionKey);\n            PredictionEndpoint endpoint = new PredictionEndpoint(predictionEndpointCredentials);\n\n            // Make a prediction against the new project\n            Console.WriteLine(&quot;Making a prediction:&quot;);\n            var result = endpoint.PredictImage(project.Id, testImage);\n\n            // Loop over each prediction and write out the results\n            foreach (var c in result.Predictions)\n            {\n                Console.WriteLine($&quot;\\t{c.Tag}: {c.Probability:P1}&quot;);\n            }\n\n            Console.ReadKey();\n</pre>\n\n<p>&nbsp;</p>\n\n<ul>\n <li>最後の手順として、 &rsquo; ソリューションをビルドして実行します。予測結果はコンソールに表示されます。</li>\n</ul>\n\n<p><strong>Custom Vision Service</strong>の詳細については、次のリソースを参照してください。</p>\n\n<ul>\n <li>Custom Vision Service <a href=\"https://www.customvision.ai/\">ポータル</a> と <a href=\"https://aka.ms/cvisionservice\">web ページ</a></li>\n <li>完全な <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/custom-vision-service/home#custom-vision-service-brings-the-power-of-machine-learning-to-your-apps\">入門ガイド</a></li>\n</ul>\n\n<h2>Custom Decision Service を使用したサイトの個人用設定</h2>\n\n<p>Custom Decision Service を使用すると、web サイトのコンテンツをカスタマイズして、ユーザーが最も魅力的なコンテンツを表示できるようにすることができます。</p>\n\n<p>&rsquo;<strong>ニュース web サイト</strong>を所有しているとします。このページには、いくつかの記事へのリンクが記載されています。 ページが読み込まれるときに、 <strong>Custom Decision Serv</strong>ice を要求して、ページに含める記事の順位を指定します。</p>\n\n<p>いずれかのユーザーが記事をクリックすると、2番目の要求が Custom Decision Service に送信され、決定の結果が記録されます。 最も簡単な統合モードでは、コンテンツの RSS フィードだけで、いくつかの javascript をアプリケーションに追加する必要があります。 作業の開始</p>\n\n<ul>\n <li>まず、上部のリボンで [マイポータル] メニュー項目をクリックして、 <strong>デシジョンサービスポータル</strong> に登録する必要があります。次に、アプリケーションを登録して、一意の識別子を選択します。 &rsquo;また、現在、RSS または Atom エンドポイントと共に、アクションセットフィードの名前を作成することもできます。</li>\n</ul>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a393dc46-76c5-4b09-b994-98ff3df589df.png\"><img alt=\"Custom Decision Service\" border=\"0\" height=\"388\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e992aaef-089c-483b-b050-532f02e451b9.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"Custom Decision Service\" width=\"593\"></a></p>\n\n<ul>\n <li>Custom Decision Service の基本的な使用方法は非常に簡単です。 front ページでは、Custom Decision Service を使用して、アーティクルページの順序を指定します。 前のページの HTML の先頭に次のコードを挿入するだけです。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n// Define the &quot;callback function&quot; to render UI\n&lt;script&gt; function callback(data) { &hellip; } &lt;/script&gt;\n\n// call to Ranking API\n&lt;script src=&quot;https://ds.microsoft.com/&lt;domain&gt;/rank/&lt;actionSetId&gt;&quot; async&gt;&lt;/script&gt;\n</pre>\n\n<p>&nbsp;</p>\n\n<p>順序付けは、コールバック関数が順位付け API の呼び出しの前に定義されている必要があるため、重要です。 データ引数には、表示される Url の順位が含まれます。 詳細については、チュートリアルと API リファレンスを参照してください。</p>\n\n<ul>\n <li>各記事ページで、正規の URL が設定されていることを確認し、RSS フィードに指定されている Url と一致させる必要があります。また、次のコードを HTML head に挿入して、報酬 API を呼び出します。</li>\n</ul>\n\n<pre class=\"prettyprint\">\n&lt;script src=&quot;https://ds.microsoft.com/DecisionService.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt; window.DecisionService.trackPageView(); &lt;/script&gt;\n</pre>\n\n<ul>\n <li>最後に、アクションセット API を提供する必要があります。これにより、Custom Decision Service によって考慮されるアーティクル (アクション) の一覧が返されます。 次に示すように、この API は RSS フィードとして実装できます。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n&lt;rss version=&quot;2.0&quot;&gt;\n&lt;channel&gt;\n   &lt;item&gt;\n      &lt;title&gt;&lt;![CDATA[title (possibly with url) ]]&gt;&lt;/title&gt;\n      &lt;link&gt;url&lt;/link&gt;\n      &lt;pubDate&gt;Thu, 27 Apr 2017 16:30:52 GMT&lt;/pubDate&gt;\n    &lt;/item&gt;\n   &lt;item&gt;\n       ....\n   &lt;/item&gt;\n&lt;/channel&gt;\n&lt;/rss&gt;\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Custom Decision Service の詳細については、次のリソースを参照してください。</p>\n\n<ul>\n <li>Custom Decision Service ポータルと <a href=\"https://aka.ms/cdservice\">web ページ</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/custom-decision-service/custom-decision-service-overview\">技術ガイド</a></li>\n</ul>\n\n<h2>ビデオの分析情報を解明する</h2>\n\n<p><a href=\"https://aka.ms/vindexer\">Video Indexer</a>では、 &rsquo; 次のようなビデオファイルから多くの洞察を処理して抽出することができるようになりました。</p>\n\n<ul>\n <li>顔の検出と識別 (ビデオ内の人間の顔の検出、識別、追跡)</li>\n <li>OCR (光学式文字認識、ビデオからのテキストコンテンツの抽出、および検索可能なデジタルテキストの生成)</li>\n <li>トランスクリプト (指定された言語に基づいてオーディオをテキストに変換する)</li>\n <li>私のお気に入りの1つ、スピーカーの区別 (各スピーカーをマップして認識し、各スピーカーがビデオに存在することを識別します)</li>\n <li>音声/サウンド検出 (バックグラウンドノイズ/音声アクティビティを無音から分離する)</li>\n <li>センチメント分析 (複数の感情属性に基づいた分析の実行-現在、正、ニュートラル、負のオプションがサポートされています)</li>\n</ul>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c18fa426-d417-467d-83af-1d312de5d627.jpg\"><img alt=\"Video\" border=\"0\" height=\"359\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d8b180e5-1da0-421e-b796-ff8af1f9480f.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"Video\" width=\"624\"></a></p>\n\n<p align=\"center\"><em>1つのビデオから複数の洞察へ</em></p>\n\n<p>&rsquo;たとえば &rsquo; 、ユーザーが検索する必要のあるビデオライブラリを含むニュース機関があるとします。ここでは、ビデオのメタデータを簡単に抽出して、インデックス付きで読み上げられた単語や顔による検索エクスペリエンスを向上させる必要があります。</p>\n\n<ul>\n <li>最も簡単な最初の手順は <a href=\"https://vi.microsoft.com/\">Video Indexer Web ポータル</a>にアクセスするだけです。サインインしてビデオをアップロードし、ビデオのインデックス作成と分析を開始 Video Indexer ことができます。 &rsquo;完了すると、ビデオへのリンクが記載された通知と、ビデオの内容 (people、トピック、OCRs,..) についての簡単な説明が表示されます。</li>\n <li>Video Indexer Api を使用する場合は、Video Indexer Web ポータルにサインインし、[運用とサブスクライブ] を選択する必要もあります。 これにより、Video Indexer チームにサブスクリプション要求が送信され、すぐに承認されます。 承認されると、自分のサブスクリプションと自分のキーを確認できるようになります。</li>\n</ul>\n\n<p>次の C# コード スニペットは、すべての Video Indexer API の使用方法を示しています。</p>\n\n<div>\n<pre class=\"prettyprint\">\n    var apiUrl = &quot;https://videobreakdown.azure-api.net/Breakdowns/Api/Partner/Breakdowns&quot;;\n    var client = new HttpClient();\n    client.DefaultRequestHeaders.Add(&quot;Ocp-Apim-Subscription-Key&quot;, &quot;InsertYourKey&quot;);\n\n    var content = new MultipartFormDataContent();\n\n    Console.WriteLine(&quot;Uploading...&quot;);\n    var videoUrl = &quot;https:/...&quot;;\n    var result = client.PostAsync(apiUrl + &quot;?name=some_name&amp;description=some_description&amp;privacy=private&amp;partition=some_partition&amp;videoUrl=&quot; + videoUrl, content).Result;\n    var json = result.Content.ReadAsStringAsync().Result;\n\n    Console.WriteLine();\n    Console.WriteLine(&quot;Uploaded:&quot;);\n    Console.WriteLine(json);\n\n    var id = JsonConvert.DeserializeObject&lt;string&gt;(json);\n\n    while (true)\n    {\n        Thread.Sleep(10000);\n\n        result = client.GetAsync(string.Format(apiUrl + &quot;/{0}/State&quot;, id)).Result;\n        json = result.Content.ReadAsStringAsync().Result;\n\n        Console.WriteLine();\n        Console.WriteLine(&quot;State:&quot;);\n        Console.WriteLine(json);\n\n        dynamic state = JsonConvert.DeserializeObject(json);\n        if (state.state != &quot;Uploaded&quot; &amp;&amp; state.state != &quot;Processing&quot;)\n        {\n            break;\n        }\n    }\n\n    result = client.GetAsync(string.Format(apiUrl + &quot;/{0}&quot;, id)).Result;\n    json = result.Content.ReadAsStringAsync().Result;\n    Console.WriteLine();\n    Console.WriteLine(&quot;Full JSON:&quot;);\n    Console.WriteLine(json);\n\n    result = client.GetAsync(string.Format(apiUrl + &quot;/Search?id={0}&quot;, id)).Result;\n    json = result.Content.ReadAsStringAsync().Result;\n    Console.WriteLine();\n    Console.WriteLine(&quot;Search:&quot;);\n    Console.WriteLine(json);\n\n    result = client.GetAsync(string.Format(apiUrl + &quot;/{0}/InsightsWidgetUrl&quot;, id)).Result;\n    json = result.Content.ReadAsStringAsync().Result;\n    Console.WriteLine();\n    Console.WriteLine(&quot;Insights Widget url:&quot;);\n    Console.WriteLine(json);\n\n    result = client.GetAsync(string.Format(apiUrl + &quot;/{0}/PlayerWidgetUrl&quot;, id)).Result;\n    json = result.Content.ReadAsStringAsync().Result;\n    Console.WriteLine();\n    Console.WriteLine(&quot;Player token:&quot;);\n    Console.WriteLine(json);\n</pre>\n\n<ul>\n <li>API 呼び出しを行い、応答の状態が [OK] になると、指定されたビデオ洞察 (キーワード (トピック)、顔、ブロックなど) の詳細を含む詳細な JSON 出力が表示されます。 各ブロックには、時間の範囲、トランスクリプトの行、OCR の行、センチメント、顔、ブロックのサムネイルが含まれています。</li>\n</ul>\n\n<p>詳細については、以下を参照してください。</p>\n\n<ul>\n <li>ポータルVideo Indexer <a href=\"https://vi.microsoft.com/\">Web</a> <a href=\"https://aka.ms/vindexer\">ページ</a>&nbsp;</li>\n <li>この <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/video-indexer/video-indexer-overview\">ガイドの技術リソースの</a> 完全な一概要覧</li>\n</ul>\n\n<h2>ユーザーの対象を絞り込む検索を作成する</h2>\n\n<p>カスタムBingを使用すると、対象となる Web 空間用に高度にカスタマイズされた Web 検索エクスペリエンスを作成できます。カスタム検索ソリューションには、多くの統合シナリオとエンド ユーザーのエントリ ポイントがあります。</p>\n\n<p>たとえば、Amicus は、完全な透明性を提供することで、グローバルな支援の資金提供方法を変えるアプリを構築しています。 Amicus は、特別に関心を持ち、関連するグローバルな支援に関連するプロジェクトの学習、検索、および資金提供を支援するために必要でした。 Bing Custom Search を使用すると、Amicus&nbsp; は、関連する Web ページの独自のセットを事前に特定できます。ユーザーが関心のある単一の概念 (&rsquo;&rsquo;&lsquo;&lsquo;&rsquo;&lsquo;水、教育、インドなど) を持っている場合、Bing Custom Search は、グローバル支援のコンテキストで関連性の高い結果を提供できます。</p>\n\n<p>カスタム検索の詳細Bing&rsquo;カスタム検索ブログのお知らせBing<a href=\"https://blogs.bing.com/search-quality-insights/2017-05/build-your-own-web-search-engine-with-bing-custom-search\">参照してください</a>。</p>\n</div>\n\n<p>シアトル&rsquo;地域で非常に重要な&lsquo;&rsquo;&ndash;アクティビティをツアーする自転車ツアーで、パブリック Web サイトのカスタマイズされた検索を構築する必要がある場合を想像してください。</p>\n\n<ul>\n <li>カスタム検索ポータルにサインアップしBing<a href=\"https://customsearch.ai/\">無料</a>試用版キーを取得します。</li>\n <li>ログインしたら、カスタム検索インスタンスの作成を開始できます。このインスタンスには、選択したシナリオに合わせて調整されたカスタム検索を定義するために必要なすべての設定が含まれている必要があります。 ここでは、自転車ツアー関連&rsquo;&lsquo;のコンテンツを検索する検索を作成します。その場合は、BikeTouring という名前のカスタム検索インスタンスを作成しました&rsquo;。</li>\n <li>次に、自分のシナリオを検索する Web のスライスを定義し、検索インスタンスに追加する必要があります。 カスタム スライスには、ドメイン、サブドメイン、または Web ページを含めできます。</li>\n <li>これで、ニーズに基づいて結果の既定の順序を調整できます。 たとえば、特定のクエリの場合、特定の Web ページを一番上にピン留めできます。 または、カスタム検索サービスから返される結果のセットで、サイトまたは Web ページをそれぞれ上位または下位に表示するために、サイトまたは Web ページをブーストおよび降格できます。</li>\n <li>この後、[アクティブ]、[ブロック]、および &lsquo;&rsquo;&lsquo;[固定] タブで順位付け&rsquo;調整を追跡&lsquo;できます。&rsquo; また、いつでも調整に再びアクセスできます。</li>\n</ul>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3f32bc6e-6333-4b76-a4dc-c440aebbf509.png\"><img alt=\"Bike Tours\" border=\"0\" height=\"337\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/eeed5398-4cfe-4878-b94f-dfa7f35abc01.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"自転車ツアー\" width=\"554\"></a></p>\n\n<ul>\n <li>次に、設定を発行します。 API を直接Bing Web Searchプログラムで呼び出す前に、UI でカスタム検索サービスを直接試しに行くことができます。 その場合は、クエリを指定し、テスト API を &lsquo;クリックします&rsquo;。 その後、右側にカスタム検索サービスからのアルゴリズムの結果が表示されます。</li>\n <li>カスタム検索サービスの結果をプログラムで呼び出して取得するには、 API をBing Web Searchできます。 その場合は、costumconfig&rsquo; というカスタム構成パラメーター Bing Web Search標準の API 呼び出しを拡張します。 costumconfig パラメーターを使用した API 要求 URL を次に示します。</li>\n</ul>\n\n<pre class=\"prettyprint\">\nhttps://api.cognitive.microsoft.com/bingcustomsearch/v5.0/search[?q][&amp;customconfig][&amp;count][&amp;offset][&amp;mkt][&amp;safesearch]</pre>\n\n<p>次に示すのは、customconfig パラメーター Bing Web Search API 呼び出しの JSON 応答です。</p>\n\n<p>&nbsp;</p>\n\n<pre class=\"prettyprint\">\n{\n    &quot;_type&quot; : &quot;SearchResponse&quot;,\n    &quot;queryContext&quot; : {...},\n    &quot;webPages&quot; : {...},\n    &quot;spellSuggestion&quot; : {...},\n    &quot;rankingResponse&quot; : {...}\n}\n</pre>\n\n<p>&nbsp;</p>\n\n<p>詳細については、専用のブログのお知らせと次のリソースを参照してください。<br>\n&bull;&nbsp;&nbsp;&nbsp;Bing Custom Search <a href=\"https://customsearch.ai/\">ポータル</a><br>\n&bull;&nbsp;&nbsp;&nbsp; この <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/bing-custom-search/overview\">ガイドのリソースの</a> 完全な概要覧</p>\n\n<h2>新しい AI MVP アワード カテゴリ</h2>\n\n<p>ここまでご利用くださいますよう、ありがとうございます。 報酬として、新しい&rsquo; AI MVP プログラムについてお知らせします。</p>\n\n<p>ご存知のように、データと AI の世界はかつてないペースで進化しており、専門家のコミュニティも進化しています。&nbsp; このMicrosoft MVP アワードプログラムでは、AI の専門家の間で優れたコミュニティ リーダーシップを認識するために、新しい AI Award Category が発表されました。 &ldquo;潜在的な AI MVP&rdquo; には、インテリジェントなアプリとボットの作成、人間の対話 (音声、テキスト、音声,...) のモデリング、AI アルゴリズムの作成、データ セットのトレーニング、この専門知識の技術コミュニティとの共有などの開発者が含まれます。</p>\n\n<p>AI MVP は、次のテクノロジ貢献分野の貢献に基づいて、特典が提供されます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/abd36cce-abea-4fe5-b796-c8f614a74538.png\"><img alt=\"Screenshot_3\" border=\"0\" height=\"156\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b4bf37db-bfed-4f40-b188-58bd7376c3cd.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" title=\"Screenshot_3\" width=\"520\"></a></p>\n\n<p>AI Award Category は、現在の特典カテゴリに新 <a href=\"https://mvp.microsoft.com/en-us/Pages/mvp-award-update\">しく追加されます</a>。 ご自分またはご自分の知り合いが資格を持っている場合は、 <a href=\"https://aka.ms/AIMVP\">申請を送信してください</a>。</p>\n\n<p>もう一度、幸せなコーディングに感謝します。</p>"
