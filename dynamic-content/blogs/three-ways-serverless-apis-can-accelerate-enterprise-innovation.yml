### YamlMime:Yaml
ms.openlocfilehash: c2b56a3c700f9f8666324d465d480693877c86db
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909485"
Slug: three-ways-serverless-apis-can-accelerate-enterprise-innovation
Title: サーバーレス Api を使用して企業のイノベーションを促進する3つの方法
Summary: アーキテクチャが間違っていると、アプリケーションプログラミングインターフェイス (Api) は、アプリケーションだけでなく、ビジネス全体にとってもボトルネックになる可能性があります。 ダウンタイム、パフォーマンスの低下、または高いアプリケーションの複雑さなどのボトルネックにより、インフラストラクチャと組織のコストが複雑化し、収益が失われる可能性があります。
Content: >-
  <p>アーキテクチャが間違っていると、Api はアプリケーションだけでなく、ビジネス全体にとってもボトルネックになる可能性があります。 ダウンタイム、パフォーマンスの低下、または高いアプリケーションの複雑さなどのボトルネックにより、インフラストラクチャと組織のコストが誇張され、収益が失われる可能性があります。 サーバーレス Api は、自動スケール機能と使用量ベースの価格モデルによって、これらのボトルネックを軽減します。</p>


  <p>サーバーレスを人のボトルネックだけでなく、基幹業務として考えると、アプリケーションインフラストラクチャのレイヤーが新たな機会の源になります。 これは API レイヤーに特に当てはまります。 Api は、ソフトウェアサービス間の communicator としての従来の役割に加えて、ビジネスの規模を拡大したり、新しい顧客を productized したり、既存の顧客に新しいサービスを提供したりすることができます。</p>


  <p>Api と API ファーストアーキテクチャの優先順位が高くなると、企業や開発者は、サーバーレスプラットフォームに gravitating て、Api と API ファーストのアプリケーションをホストしてこれらの利点を実感することができます。 API &rsquo; をホストする1つのサーバーレスコンピューティングオプションは <a href="https://azure.microsoft.com/en-us/services/functions/" target="_blank">Azure Functions</a>であり、オンデマンドで拡張できるイベントトリガーのコードであり、使用した分だけ支払います。 Gartner 社は、 <a href="https://www.gartner.com/smarterwithgartner/the-cios-guide-to-serverless-computing/" target="_blank">グローバル企業の 50%</a> が、現在20% を超えるサーバーレス機能プラットフォームを2025によってデプロイしたと予測しています。 <a href="https://azure.microsoft.com/en-us/services/api-management/" target="_blank">API Management</a>を通じて Azure Functions を発行して、サーバーレス api のセキュリティ、変換、保守、監視を行うことができます。</p>


  <h2>市場投入期間の短縮</h2>


  <p>アプリケーションスタックを最新化してサーバーレスプラットフォームでマイクロサービスを実行すると、内部の複雑さが軽減され、新しい機能や製品の開発にかかる時間が短縮されます。 各サーバーレス関数は、マイクロサービスを実装します。 1 つの API Management 製品に多数の関数を追加することで、これらのマイクロサービスを統合された分散アプリケーションに組み込むことができます。 アプリケーションがビルドされたら、API Management ポリシーを使用してキャッシュを実装したり、セキュリティ要件を確認したりすることができます。</p>


  <p><a href="https://aka.ms/azf-quest-study" target="_blank">Quest ソフトウェア</a> は、Azure App Service を使用して Azure Functions でマイクロサービスをホストします。 これらは、他のマイクロサービスや、Azure Cosmos DB managed NoSQL database service などの他の Azure platform リソースとの通信など、新しいテナントやアプリケーション機能の登録などのユーザー機能をサポートします。</p>


  <blockquote>

  <p style="margin-left: 40px;"><em> &ldquo; Microsoft によって構築され、Azure 内でリリースされたテクノロジを活用して、お客様独自の機能よりも迅速に市場に移行できるようにしまし &rsquo; た。平均では、過去3年間に Azure サービスを &rsquo; 利用していたため、過去から66% 高速に新しい機能を提供できるようになりました。 &rdquo; </em> -Michael Tweddle, バイスプレジデント and ジェネラル Manager of Platform Management, Quest</p>

  </blockquote>


  <p>また、Azure API Management は、Azure Functions を使用したビジネスロジックを実装し、マイクロサービス間のアクセス、トラフィック、およびセキュリティを制御するポリシーを適用する、オンデマンドのオンデマンドマイクロサービス用のサーバーレス API ゲートウェイとし<strong>ても使用</strong>されます。</p>


  <h2>インフラストラクチャを最新化する</h2>


  <p>開発者は、インフラストラクチャのプロビジョニングや管理を行うのではなく、アプリケーションの開発に専念する必要があります。 API management は、サーバーレスバックエンドサービスのための一元的で完全に管理されたエントリポイントを提供する、サーバーレス API ゲートウェイを提供します。 これにより、開発者は、グローバルなスケールで Api を発行、管理、保護、および分析することができます。 サーバーレス関数と API ゲートウェイを併用することで、組織はリソースをより適切に最適化し、イノベーションに集中することができます。 たとえば、サーバーレス関数によって提供される API を使用して、レストランが項目を使用していない場合にローカルメニューを調整できます。</p>


  <p><a href="https://aka.ms/azf-chipotle-study" target="_blank">Chipotle</a> は azure を使用して、azure API Management と Azure Functions インフラストラクチャの重要な部分を活用しながら、統合された web エクスペリエンスをゼロから作成できます。 バックエンドサービス (順序付け、配信、アカウント管理、基本設定など) への呼び出しは、 <a href="https://azure.microsoft.com/en-us/services/api-management" target="_blank">Azure API Management</a>にアクセスします。これにより、Chipotle は、単一の簡単に管理されたエンドポイントと API ゲートウェイをさまざまなバックエンドサービスおよびシステムに提供します。 このような機能を使用すると、Chipotle の他の開発チームは、Smith &rsquo; のフロントエンドアプリに透過的な方法で、ゲートウェイの背後にあるバックエンドサービスを最新化することができます。</p>


  <blockquote>

  <p style="margin-left: 40px;"><em> &ldquo; API Management は、API の相互作用との一貫性を確保するために適しています。これにより、1つの URL ( &rdquo; Smith) の背後にあるどこに存在するかを常に把握できるようになります。 &ldquo;API ゲートウェイの背後に多くの変更が加えられていますが &rsquo; 、それについて心配する必要はありません。 &rdquo; </em> -Mike Smith、リードソフトウェア開発者、Chipotle</p>

  </blockquote>


  <h2>Api を使用したイノベーション</h2>


  <p>サーバーレス Api は、収益の増加、コストの削減、ビジネスの機敏性の向上のために使用されます。 その結果、テクノロジはビジネスの成長の鍵となる要因になります。 企業は人工知能を利用して API 呼び出しを分析し、パターンを認識し、将来の購入行動を予測して、販売サイクル全体を最適化することができます。</p>


  <p><a href="https://customers.microsoft.com/en-us/story/811347-pwc-partner-professional-services-azure" target="_blank">PWC AI</a> は、規制機関の知識マイニングソリューション用にスケーラブルな API を作成するために Azure Functions するようにしています。 また、Azure Cognitive Search を使用して、ソリューションによって検出された予測をすばやく表示し、テキスト内の法的な義務を簡単に識別できる AI モデルに長年の経験を埋め込みます。</p>


  <blockquote>

  <p style="margin-left: 40px;">&ldquo;<em> &rsquo; ROI POC を開始しようとしているときに、2 ~ 4 週間の作業を節約するために Azure Functions が付加価値であることがわかります。これにより、予測要求の処理が自動的に行われます。また、モデルを他の PwC チームやクライアントに拡張するためにも使用します。&rsquo;このようにして、作業を相対的に簡単にとことができます。 &rdquo; </em> -Todd morrill Machine Learning 科学者-マネージャー、PwC</p>

  </blockquote>


  <p><strong>Quest Software</strong>、 <strong>Chipotle、</strong>および<strong>PwC</strong>は、Azure Functions や Azure API Management などのツールを利用して、api &rsquo; の監視、管理、およびセキュリティ保護を実現する api アーキテクチャを作成するための、ほんの数 Microsoft Azure のお客様です。 サーバーレステクノロジを使用するように API アプローチを再考と、スケール、コスト、または運用リソースによって制限されない、組織内の新機能のロックが解除されます。</p>


  <h2>すぐに開始する</h2>


  <p><a href="https://aka.ms/aac-azf" target="_blank">Azure アーキテクチャセンター</a>での一般的なサーバーレス API アーキテクチャパターンについて説明します。ここでは、他の azure サービスに加えて Azure Functions と Azure API Management を利用する一般的なパターンの概要と参照アーキテクチャについて説明します。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3dd89182-c378-46df-b822-451f72de72d5.png"><img alt="A serverless web application architecture that serves static content from Azure Blob Storage, and implements an API using Azure Functions. The API reads data from Cosmos DB and returns the results to the web app." border="0" height="459" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44d54ad0-b506-4b3a-b93a-49911fd2ecb9.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1024"></a></p>


  <p><em>サーバーレス API を使用した web アプリケーションの参照アーキテクチャ。&nbsp;</em></p>
