### YamlMime:Yaml
ms.openlocfilehash: 953ed5656941261f4f4ff6a0b2692a387e0c44cb
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905220"
Slug: new-for-developers-azure-cosmos-db-net-sdk-v3-now-available
Title: '開発者向けの新機能: Azure Cosmos DB .NET SDK v3 が利用可能に'
Summary: 'Azure Cosmos DB チームは、7 月にリリースされた Azure Cosmos DB .NET SDK のバージョン 3 の一般提供を発表します。 プレビュー期間中にフィードバックを送信して下さったすべての方に感謝します。 '
Content: >-
  <p style="margin: 0px 0px 10.66px;"><a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB</a> チームは、7 月にリリースされた <strong>Azure Cosmos DB .NET SDK</strong><strong>&nbsp;</strong> のバージョン 3 の一般提供を発表します。 プレビュー期間中にフィードバックを送信して下さったすべての方に感謝します。&nbsp;</p>


  <p style="margin: 0px 0px 10.66px;">この投稿では、&rsquo;&rsquo;.NET SDK v3 の開発者エクスペリエンスを強化するために行った最新の機能強化について説明します。</p>


  <p style="margin: 0px 0px 10.66px;">SDK の最新バージョンは、 を使用して取得し<a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos/" target="_blank">NuGet</a>に投稿<a href="https://github.com/Azure/azure-cosmos-dotnet-v3" target="_blank">GitHub</a>。</p>


  <pre>

  //Using .NET CLI

  dotnet add package Microsoft.Azure.Cosmos


  //Using NuGet

  Install-Package Microsoft.Azure.Cosmos</pre>


  <h2>Azure Cosmos DB とは</h2>


  <p><a href="https://docs.microsoft.com/azure/cosmos-db/introduction">Azure Cosmos DB</a> は、任意の Azure リージョンからデータを読み書きできる、グローバルに分散されたマルチモデル データベース サービスです。 ターンキー <a href="https://docs.microsoft.com/azure/cosmos-db/distribute-data-globally" target="_blank">グローバル分散</a>が提供され、<a href="https://docs.microsoft.com/azure/cosmos-db/request-units" target="_blank"></a><sup>99 番目</sup>のセンタイルでの 1 桁ミリ秒の待機時間、99.999<a href="https://docs.microsoft.com/azure/cosmos-db/high-availability" target="_blank">% の</a>高可用性、スループットとストレージのエラ<a href="https://docs.microsoft.com/azure/cosmos-db/scaling-throughput" target="_blank"></a>スティック スケーリングが保証されます。<a href="https://azure.microsoft.com/support/legal/sla/cosmos-db/v1_3/" target="_blank"></a></p>


  <h2>Azure Cosmos DB .NET SDK バージョン 3 の新機能</h2>


  <p>SDK のバージョン 3 には、新しい直感的なプログラミング モデル、ストリーム API のサポート、変更フィード プロセッサ API の組み込みサポート、パーティション分割されていないコンテナーをスケーリングする機能など、多くの使いやすさとパフォーマンスの向上が含まれています。 SDK は 2.0 .NET Standardをターゲットにし、2.0 でオープンソースGitHub。</p>


  <p>新しいワークロードの場合は、最適なエクスペリエンスを得る最新バージョン 3.x SDK から開始することをお勧めします。 .NET SDK のバージョン 2.x を廃止する予定はありません。</p>


  <h3>ターゲット .NET Standard 2.0</h3>


  <p>既存&rsquo;の Azure Cosmos DB .NET Framework SDK と .NET Core SDK を 1 つの SDK に統合し、<a href="https://docs.microsoft.com/dotnet/standard/net-standard" target="_blank">2.0</a> .NET Standardを対象としました。 .NET Framework 4.6.1 以上および .NET Core 2.0 以上のアプリケーションを含め、.NET Standard 2.0 を実装する任意のプラットフォームで .NET SDK を使用できます。</p>


  <h3>GitHub でのオープンソース</h3>


  <p>Azure Cosmos DB .NET v3 SDK はオープン ソースであり、チームはオープンで開発を行う予定です。 その結果、pull request を受け取り、問題をログに記録し、問題に関するフィードバック<a href="https://github.com/Azure/azure-cosmos-dotnet-v3/" target="_blank">を追跡GitHub</a>。</p>


  <h3>サーフェスを使用した新fluent APIモデル</h3>


  <p>プレビュー以降、より直感的な&rsquo;開発者エクスペリエンスのためにオブジェクト モデルを改善し続けました。 DocumentClient&rsquo; を置き換える新しい<a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.cosmosclient?view=azure-dotnet" target="_blank"><b>トップ レベルの CosmosClient</b></a> クラスを作成し、そのメソッド<a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.database?view=azure-dotnet" target="_blank"><b></b></a>をモジュール型データベースクラスとコンテナー クラス<a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container?view=azure-dotnet" target="_blank"><b>に分割</b></a>しました。<b></b> 使いやすさに関する調査から、この&rsquo;階層により、開発者は API サーフェスを簡単に学習して見つめやすくなります。</p>


  <p><iframe height="780" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F9d877d51328fa39f6bda45c992778126.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <p>また&rsquo;、カスタム オプションを使用して <strong>CosmosClient</strong>、 <strong>Container</strong>、 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.changefeedprocessor?view=azure-dotnet" target="_blank">ChangeFeedProcessor </a></strong>クラスを簡単に作成できる fluent Builder API も追加されました。</p>


  <p><iframe height="870" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F57b996e5f1dd82fcc1aacf00621c2459.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <p>すべてのサンプル<a href="https://github.com/Azure/azure-cosmos-dotnet-v3/tree/master/Microsoft.Azure.Cosmos.Samples/CodeSamples" target="_blank">については、GitHub</a>。</p>


  <h3>高パフォーマンスのためのストリーム API</h3>


  <p>以前のバージョンの Azure Cosmos DB .NET SDK は、常にネットワーク間でデータをシリアル化および逆シリアル化しました。 アプリケーションのコンテキストでは ASP.NET Web APIパフォーマンスのオーバーヘッドが発生する可能性があります。 新しいストリーム API を使用すると、項目またはクエリを読み取る際に、新しい <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.getitemquerystreamiterator?view=azure-dotnet" target="_blank">GetItemQueryStreamIterator</a></strong> メソッドと <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.readitemstreamasync?view=azure-dotnet" target="_blank">ReadItemStreamAsync</a> </strong>メソッドを使用して、ストリームを取得し、逆シリアル化オーバーヘッドなしで応答に渡す操作が可能になります。 詳細については、次のサンプルを<a href="https://aka.ms/cosmosDotnetStreamAPI" target="_blank">GitHubしてください</a>。</p>


  <h3>テストが容易で拡張性が高い</h3>


  <p>.NET SDK バージョン 3 では、すべての API がモック可能で、単体テストを容易にします。</p>


  <p>また、拡張可能な要求 <a href="https://aka.ms/CosmosDotnetSDKV3Handler" target="_blank">パイプラインも</a>導入されました。そのため、サービスに要求を送信するときに実行されるカスタム ハンドラーを渡してみることができます。 たとえば、これらのハンドラーを使用して、要求情報<a href="https://github.com/Azure/azure-cosmos-dotnet-v3/blob/0603747640efde2b40c4768d6e01bc7e0d4826a0/Microsoft.Azure.Cosmos.Samples/CodeSamples/Handlers/LoggingHandler.cs" target="_blank"></a>をログに記録Azure アプリケーション インサイトカスタム再試行ポリシーを定義<a href="https://github.com/Azure/azure-cosmos-dotnet-v3/blob/0603747640efde2b40c4768d6e01bc7e0d4826a0/Microsoft.Azure.Cosmos.Samples/CodeSamples/Handlers/ThrottlingHandler.cs" target="_blank"></a>できます。 一般的に要求されるもう <a href="https://aka.ms/cosmosDotnetSDKV3Serializer" target="_blank">1 つの開発者</a>機能であるカスタム シリアライザーを渡す方法も可能です。</p>


  <h3>SDK から直接 Change Feed Processor API を使用する</h3>


  <p>Azure Cosmos DB の最も一般的な機能の 1 つは、イベント <a href="https://docs.microsoft.com/azure/cosmos-db/change-feed" target="_blank"></a>ソーシング アーキテクチャ、ストリーム処理、データ移動シナリオ、およびマテライズド ビューの構築で一般的に使用される変更フィードです。 変更フィードを使用すると、コンテナーの変更をリッスンし、レコードの作成または更新時にレコードの増分フィードを取得できます。</p>


  <p>新しい <a href="https://docs.microsoft.com/azure/cosmos-db/change-feed-processor" target="_blank">SDK には、</a> Change Feed Processor API のサポートが組み込まれています。つまり、アプリケーションと変更フィード プロセッサの実装を構築するために同じ SDK を使用できます。 以前は、個別の変更フィード プロセッサ ライブラリを使用する必要があります。</p>


  <p>開始するには、Azure Cosmos &quot; DB の変更フィード プロセッサに関する<a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed-processor" target="_blank">ドキュメントを参照してください</a>。&quot;</p>


  <h3>非パーティション分割コンテナーのスケーリング機能</h3>


  <p>&ldquo;&rdquo;パーティション&rsquo;分割されていないコンテナーまたは固定コンテナーを持つ多くのお客様から、10 GB のストレージと 10,000 RU/s のプロビジョニング済みスループット制限を超えてスケーリングする必要があるというお話がありました。 SDK のバージョン 3 を使用すると、新<a href="https://docs.microsoft.com/azure/cosmos-db/migrate-containers-partitioned-to-nonpartitioned" target="_blank"></a>しいコンテナーを作成してデータを移動することなく、これを行う必要が生じ、</p>


  <p>パーティション分割されていないすべてのコンテナー&ldquo;<b></b>&rdquo;に、新しい項目を書き_partitionKey値に設定できるシステム パーティション キーが追加されました。 この値の使用を開始_partitionKey、Azure Cosmos DB は、ストレージ ボリュームが 10 GB を超えるほどコンテナーをスケーリングします。 コンテナーをこの状態に保つ場合は、 <strong>PartitionKey.None</strong> 値を使用して、パーティション キーなしで既存のデータを読み書きできます。</p>


  <p><iframe height="700" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F6a8139b7307d723a621594fba5bfc5e5.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <h3>スループットをスケーリングする簡単な API</h3>


  <p>プロビジョニング&rsquo;されたスループット <a href="https://docs.microsoft.com/azure/cosmos-db/request-units" target="_blank">(RU/s)</a> を上下にスケーリングするために API を再設計しました。 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.readthroughputasync?view=azure-dotnet" target="_blank">ReadThroughputAsync メソッドを</a></strong>使用して現在のスループットを取得し、<strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.replacethroughputasync?view=azure-dotnet" target="_blank">ReplaceThroughputAsync を使用して</a></strong>変更できます。 サンプルを表示します。</p>


  <h2>はじめに</h2>


  <p>新しい Azure Cosmos DB .NET SDK バージョン 3 の使用を開始するには、新しい NuGet <a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos/" target="_blank">パッケージをプロジェクト</a>に追加します。 開始するには、新しいチュートリアルと <a href="https://docs.microsoft.com/azure/cosmos-db/sql-api-dotnet-application" target="_blank">クイック スタート</a> に <a href="https://docs.microsoft.com/azure/cosmos-db/create-sql-api-dotnet" target="_blank">従います</a>。 お客様&rsquo;からのフィードバックをお聞かせください。 問題は、次のリポジトリ<a href="https://aka.ms/CosmosDotnetSDKV3" target="_blank">GitHubできます</a>。</p>


  <p>Twitter でフォローして、最新の Azure <a href="https://twitter.com/search?q=%23cosmosdb">#CosmosDB</a> のニュースと機能を最新の情報にしてください <a href="https://twitter.com/azurecosmosdb" target="_blank">@AzureCosmosDB</a>。 Azure&#39;DB と新しい .NET SDK を使用してビルドCosmosを待つ必要があります。</p>
