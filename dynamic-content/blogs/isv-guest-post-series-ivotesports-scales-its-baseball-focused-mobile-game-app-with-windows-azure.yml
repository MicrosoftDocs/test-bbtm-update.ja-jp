### YamlMime:Yaml
ms.openlocfilehash: 436dde95d9dd29b9684572cad65ad963091a03f5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908907"
Slug: isv-guest-post-series-ivotesports-scales-its-baseball-focused-mobile-game-app-with-windows-azure
Title: 'ISV ゲストポスト シリーズ: iVoteSports は、Azure Baseball-Focusedを使用してモバイル ゲーム アプリWindowsスケーリングします'
Summary: 編集&rsquo;者向け注:&rsquo; iVoteSports の最高アーキテクト兼共同設立者である Bill Davidheiser 氏が書いた今日の投稿では、Windows Azure を使用して iVoteSports MLB に重点を置いた機能を提供する方法について説明しています。
Content: '<p><b><i>編集&rsquo;</i></b>者向け注: <i>&rsquo; </i><i>iVoteSports</i><i> の最高アーキテクト兼共同設立者である Bill Davidheiser 氏が書いた今日の投稿では、Windows Azure を使用して iVoteSports MLB に重点を置いたモバイル ゲームを提供する方法について説明しています。<img style="float: right;" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1030.Heiserhs.png" alt="" border="0" height="120" width="120"></i></p>  <p href="">私たちは iVoteSports.com (<ins cite="mailto:Chimene%20Stewart" datetime="2012-07-24T09:39"></ins>Apple、Android、Amazon アプリ市場で販売) を開始しました。これは、野球などのほとんどのスポーツをゲーム内のゲームに分割できるという非常に単純なアイデアです。 たとえば、すべての野球のイニングには多くの打席が含み、個々のバッカーには、ウォーク、ストラスト、ホーム ランなど、彼の打席に対して多くの潜在的な結果があります。</p>  <p>ゲームの基本的なテーマは、ユーザーが各イベントの結果を予測し、正しく推測するためにポイントを獲得できる点です。&nbsp; winnable ポイントは、イベントの結果の確率など、多くの要因に基づいて決定されます。</p>  <p>ライブ スポーツ イベントの勝者の決定は、イベントの量と頻度が原因で困難です。 例としてベースボールを使用する: 各ゲームには 9 回以上のイニングが含まれます。1 イニングあたり 6 回の打席で、各打席には少なくとも 3 つのイベント (ストラスト、ボールなど) があります。 これは、通常の季節あたり 1 チームあたり 162 &ndash;&nbsp; ゲームのボリュームと組み合せ、少なくともゲームの実用的なリソースの制約内に含まれる人間のアンパイアでは管理できない膨大な量のイベントを作成します。この問題に対処するために、クラウド ソーシングの概念を使用して結果をプログラムで決定する方法を作成しました。</p>  <p><b>WINDOWS AZURE の設計と変動するトラフィック</b></p>  <p>前述のように、ライブ スポーツ イベントの性質は、多くの人が比較的短い期間 (約 3 時間) に集って、急速に分散する点です。 iVoteSports アプリケーションはライブ ゲーム中に再生されるので、これらの急激な使用量の急増をサポートする必要があります。</p>  <p href="https://www.windowsazure.com/en-us/pricing/free-trial/">この種の変動する需要は、クラウド アプリケーションに最適です。 アイドル状態では、2 つの小さな (単一コア) <ins cite="mailto:Chimene%20Stewart" datetime="2012-07-24T09:40"></ins> Windows <a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0159gen">Azure</a> Web ロール インスタンスを維持します。 ただし、多くのプレーヤーが乗り込むほど、Web インスタンスをすばやく追加し、需要が増加するに応じてスケールアウトできます。 &nbsp;1 日内にインスタンスを追加するトリガー ポイントは、主にプロセッサ使用率に基づいて行います。一貫して 80% を超える場合は、インスタンスを追加します。</p>  <p>今後のバージョンでは、Microsoft Enterprise Librarys&rsquo; <a target="_blank" href="https://msdn.microsoft.com/en-us/library/hh680892(v=pandp.50).aspx">Autoscaling Application Block</a> (WASABi) を利用して、管理 API を介してプログラムでインスタンスを追加しますが、現在のところ、スケーリングは手動で実行されます。 容量を増やす必要があるほど人気のあるゲームがある日には、インスタンス数を事前に増やします。</p>  <p>iVoteSports の実際のビルドアウトは、モバイル ゲームよりも多層エンタープライズ アプリケーションに近い結果に変わった。 プレゼンテーション、アプリケーション、データレイヤーの概念は異なります。</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8345.ivote1.png" alt="" border="0"></p>  <p>データベースはマルチテナントです。ユーザー ID&rsquo; は、スコアの維持、予測の作成、結果のアサートなどのアクティビティを扱うすべてのテーブルに関連付けされます。 ビュー、UDF、ストアド プロシージャの開発は、一般的な .Net アプリケーション用に作成されるのとまったく同じでした。 ユーザーの予測と結果の情報だけが毎日保持される (統計とスケジュール データがアーカイブされる) ので、150 <a target="_blank" href="https://www.windowsazure.com/en-us/home/features/data-management/?WT.mc_id=cmp_pst001_blg_post0159sto">GB Windows Azure SQL Database</a>制限は問題ではありません。</p>  <p>SQL Database を使用する最初の決定は、主に、コードを再デプロイすることなく、その他の場所で変更できる最適化された TSQL を作成する必要がありました。 次世代のゲームでは、データ構造の一部を Azure Table Storage のコスト効率の高いデータ構造Windows<a target="_blank" href="https://www.windowsazure.com/en-us/home/features/data-management/?WT.mc_id=cmp_pst001_blg_post0159sto">移行する可能性</a>があります。</p>  <p>サイド ノートとして、サーバーに多くのロジックを備えるモバイル アプリには、便利な利点があります。 Web 開発者は、バグを修正するために、ほぼリアルタイムでホットフィックスをプッシュアウトする機能に取り込まれています。 残念ながら、モバイル コードでバグが見つかった場合、修正に関するリアルタイムの情報はありません。 Apple の場合、変更が承認されるのに 1 週間ほどかかる場合があります。</p>  <h3><b>モバイル アプリ</b></h3>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7750.ivote2.png" alt="" border="0"><br clear="ALL"> プレゼンテーション層はモバイル デバイスです。 私たちは、高速ネットワーク呼び出しができない非常に古い携帯電話を含む、幅広いモバイル デバイス間の予測不可能なトラフィックに対して実際に最適化された軽量 API &ndash; を作成することで始めました。 テスト ケースは、このような過剰なプロセッサを備えた<sup>第 1 世代</sup> の Droid で、画面を越えるのに約 5 秒かかる A bird です。</p>  <p>セキュリティはゲームの大きな問題ではありませんが、電子メール アドレスと物理デバイス ID を結合して認証を適用しました。 将来必要に応じて、特定の関数のロール ベースの承認に使用されるセキュリティ トークンを派生できます。</p>  <p>モバイル デバイスから送信されるトラフィックはすべてステートレスであり、効果的に同期されます。 各モバイル デバイスは、数秒ごとに軽量のサーバー ポーリングを実行して、メッセージが待機中の場合に確認します。 メッセージが待機している場合は、より高価なデータ交換呼び出しが行されます。</p>  <h3><b>確率とポイント</b></h3>  <p>確率はゲームの中心です。 プレイ結果の確率は、履歴イベントの結果 (フライアウトはウォークよりも一般的)、選手のマッチアップ (バッチャー X はピッチャー-Y に対して適切です)、選手の適性 (バッチャーヒット .240) など、いくつかの重要な影響から引き起されます。 もちろん、確率の一部として役割を果たしている球場、けが、天気などの他の要因がありますが、これらの要因は平均して最小限であり、ほとんどの場合、ローカルのスポーツブックに適用できます。</p>  <p>キーのマッシュインフルエンスを組み合わせると、プレイ結果の予測子の Winnable ポイントに変換できる確率が組み合わされます。 その予測を <i>iVote と呼ぶ</i>。 たとえば、Joe Throwhard に対して行った Casey Jones に対するホーム ランは、正しい iVote に対して 30 ポイントを獲得します。一方、Casey よりも弱いバッターに対するホーム ランのプレディケーションは、100 ポイントの機会を与える可能性があります。 一般に、ラスベガスの人々はこれをポイント 拡散と &ldquo;見なします。&rdquo;</p>  <p>さらに一歩進んで、多くの人が同じプレイに関与している場合、ポイントの動機を作成して、あまり人気の低い予測を行い、iVotes のより一層の分布を維持することができます。 この概念は、拡散拡散と呼ばれることが多い という概念に従って &ldquo;、おおよそパターン化されています。&rdquo;</p>  <p>重要なのは、多くの iVoteSports.com を扱う場合でも、私たちは何の問題にもならないアプリケーションではなさそうである点に注意してください。 実際の金額に関係する &ndash; ポイントは 1 つのみです。</p>  <h3><b>統計フィード</b></h3>  <p>現在の統計を追加すると、バッティング ラインアップを事前に読み込み、プレーヤーの BIOS とトリビアを示し、もちろん、確率計算で適切なデータを使用するために最新の統計を使用することで、ゲームをかなり興味深いものにできます。</p>  <p>毎日と試合前の 2 種類 Stats.com データを取得します。 毎日のデータにはスケジュール、名簿、選手の統計が含まれており、毎日午前 4 時 (太平洋時間) にSQL Databaseに読み込まれます。 試合前のデータは、各球場の試合が始まる約 15 分前に読み込まれ、各チームの先発選手と先発ピッチャーが含まれています。</p>  <h3><b>結果の決定</b><img style="float: right;" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8880.ivote3.png" alt="" border="0" height="220" width="207"></h3>  <p>イベントの結果のプログラムによる&rsquo;決定は非常に困難です。 これは、信頼できる役人が各イベントを記録している場合は問題ではありません。しかし、前述のように、人間の役人を使用した場合は、モバイル アプリに対するスケーラブルな答えではなく、1 日の多くの異なる時間に多数のゲームが一度に発生する可能性がありました。</p>  <p>クラウドソーシングの設計パターンは、私たちのために優れた回答でした。 Truthsquad 実験などの多くの優れた記事や実用的な例に記載されている通り、何かが正しいと十分な人に言ってもらえば、おそらくそうでしょう。 もちろん、コラボレーターに対&ldquo;&rdquo;する保証や、非常に多くの人より少ない人がいるなど、集団的な真実に関する注意点があります。 ただし、これらの課題は軽減できます。クラウドソーシング全体で、数学的に実証されたアプローチであり、私たちの目的には非常に効果的です。</p>  <p>グラフ「&lsquo;&rsquo;アサーションの精度への関係」に示すように、特定のイベントで結果をアサートする選手の重大な量に到達すると、アサーションが結果を正確に表すという信頼が得られます。 たとえば、特定のイベントが発生したと言う母集団全体の 30% のユーザー (選手が三振を取ったなど) がある場合、50% を超える信頼度は、確認された実際の結果を持っています。</p>  <p>信頼度が 60% を超える場合、正しく予測した人に報酬を与えるだけでなく、実際に行った場合に iVoted&rsquo; を実行したと言って、不正に見えた人にペナルティを与える可能性があります。</p>  <h3><b>教訓</b></h3>  <p>全体的な設計に非常に快適に感じ取っています。具体的には、Azure でゲームの大きなコンポーネントを実行Windows、新しいプレゼンテーション プラットフォームに迅速に開発できます。</p>  <p>クエリ最適化プロセスWindows Azure SQL Database通常のサーバーよりも困難であるSQLしました。 現在廃止された <a target="_blank" href="https://www.red-gate.com/products/dba/sql-azure-backup">RedGate</a> バックアップ ユーティリティを使用して DB のローカル コピーを作成した後、SQL Profiler を実行し、結果を SQL DB チューニング アドバイザーにフィードしました。 チューニング アドバイザーの推奨インデックスは、チューニング アドバイザーを使用してSQL DatabaseにSQL Management Studio。 Microsoft が近い将来、このプロセスを改善するためのツールを提供する予定です。 開発プロセスWindows学習した Azure レッスンの主な手順は、デプロイで行う必要がありました。 最初は、VM が定期的&rsquo;にリセットされるのを知らずに、Web ロールの Web デプロイ オプションを使用しました。&nbsp; Web デプロイの非永続的な性質により、Web ロール VM が再イメージ化された場合、デプロイは元の状態に戻されます。 再イメージングが発生した場合、Microsoft &ndash; は、少なくとも認識していた通知を送信しません。 これにより、アプリケーションが古い動作に戻り続けたときに混乱が発生しました。 &nbsp;</p>  <p>しかし、全体的には、Azure での優れたWindowsでした。 予測不可能で迅速な需要の変化により、Windows Azure は、ゲームに最適な運用プラットフォームであることが証明されました。 さらに、開発ツールを使用すると、短い学習曲線で生産性が向上しました。</p>  <p>技術的な性質上、最後の結果が使いやすく、スポーツの試合を楽に行うのが望みです。 作業の結果を確認するには、次のページにアクセス www.ivotesports.com。</p>'
