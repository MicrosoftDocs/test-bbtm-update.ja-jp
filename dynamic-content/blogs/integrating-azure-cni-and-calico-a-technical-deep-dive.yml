### YamlMime:Yaml
ms.openlocfilehash: 7e3abe38738ff69f75b9028f8f5d3b45f6db1b38
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890718"
Slug: integrating-azure-cni-and-calico-a-technical-deep-dive
Title: 'Azure CNI Calico の統合: 技術的な詳細'
Summary: Calico ポリシーを使用すると、Kubernetes ポッド間のトラフィックフローを制御するフィルター規則を定義できます。 このブログ記事では、Azure Kubernetes Service がネットワーク用の Azure CNI とネットワーク ポリシーの Calico を組み合わせて使用するためのエンジニアリング作業について、技術的な詳細を確認します。
Content: >-
  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;"><em>この投稿は、Andy Randall 氏(ビジネス開発担当副社長、Kinvolk Gmbh) によって共同執筆されました</em></b></p>


  <p><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">Calico ネットワーク ポリシーの可用性は、Azure Kubernetes Service (AKS) で共有できます。Calico ポリシーを使用すると、Kubernetes ポッド間のトラフィックフローを制御するフィルター規則を定義できます。このブログ記事では、Azure Kubernetes Service がネットワーク用の Azure CNI とネットワーク ポリシーの Calico を組み合わせて使用するためのエンジニアリング作業について、技術的な詳細を確認します。 </b></p>


  <p><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">最初に、いくつかの背景を示します。 <b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">やや簡略化すると、コンテナー ネットワークには次の 3 つの部分があります。</b></b></p>


  <ol dir="ltr">
   <li>
   <div style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b style="font-weight: normal;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">作成された各コンテナーに&rsquo; IP アドレスを割り当てる(これは IP アドレス管理またはIPAM。</b></b></div>
   </li>
   <li>
   <div style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">コンテナー エンドポイント間でパケットをルーティングすると、次に分割されます。</b> </b></b></div>

   <ul>
    <li>
    <div style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">ホストからホストへのルーティング (ノード間ルーティング)。</b></b></b></b></b></div>
    </li>
    <li>
    <div style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">外部ネットワーク インターフェイスとコンテナー間のホスト内のルーティング、および同じホスト上のコンテナー間のルーティング (ノード内ルーティング)。</b></b></b></b></b></b></b></b></b></div>
    </li>
   </ul>
   </li>
   <li>
   <div style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">許可すべきではないパケットを確実にブロックする (ネットワーク ポリシー)。</b></b></b></b></b></b></b></b></b></b></b></b></b></div>
   </li>
  </ol>


  <p><b id="docs-internal-guid-53316075-7fff-2aeb-8d79-fb91b42ab14b" style="font-weight: normal;">通常、単一のネットワーク プラグイン テクノロジは、これらすべての側面に対応します。ただし、Kubernetes Container Network Interface (CNI) によって使用されるオープン API では、実際にはさまざまな実装を組み合わせできます。 </b></p>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">構成を選択すると、機会が得されますが、選択したメカニズムに互換性があり、ネットワークの目標を達成するための計画も必要です。 これらの&rsquo;詳細についてもう少し詳しく見てみる</p>


  <h2>ネットワーク: Azure CNI</h2>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">Azure のようなクラウド ネットワークは、もともとは、通常は 1 つ以上の比較的静的な IP アドレスを持つ仮想マシン用に構築されました。コンテナーによってすべてが変更され、クラウド ネットワーク レイヤーに新しい課題が多数導入されます。数十または数百ものワークロードが定期的に迅速に作成および破棄され、それぞれが基になるネットワーク上の独自の IP エンドポイントになります。</b></p>


  <p><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">クラウドでコンテナー ネットワークを有効にする最初のアプローチでは、VXLAN のようなオーバーレイを利用して、ホスト IP だけが基になるネットワークに公開されました。このようなオーバーレイ ネットワーク ソリューション (flannel、AKSs&rsquo; kubenet (基本) ネットワーク モードなど) は、基になるネットワークをコンテナーから隠すという大きな仕事をします。残念ながら、これは欠点でもあります。コンテナーは実際には基になる VNET で実行されません。つまり、コンテナーは通常のエンドポイントのようにアドレス指定することはできません。また、ネットワーク アドレス変換 (NAT) を介してクラスターの外部でのみ通信できます。</b></p>


  <p><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">AKS で高度なモード ネットワークで有効になっている Azure CNI を使用して、各コンテナーがホストと同じ VNET 内で独自の実際の IP アドレスを取得する機能を追加しました。コンテナーが作成されると、Azure CNI IPAM コンポーネントは VNET から IP アドレスを割り当て、ノード間ルーティング部分を処理して、Azure ソフトウェア定義ネットワークレイヤーのマジックを介して、そのアドレスが基になるネットワーク上に構成されていることを確認します。</b></p>


  <p><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">そのため、IPAMとノード間ルーティングが処理されたので、ノード内ルーティングを検討する必要があります。2 つの&rsquo;コンテナー間、またはホスト ネットワーク インターフェイス (通常は eth0) とコンテナーの仮想イーサネット (veth) インターフェイスの間で、ノード内ルーティングを行うにはどうすれば良いでしょうか。</b></p>


  <p><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">Linux カーネルにはネットワーク機能が豊富であり、この目標を達成するにはさまざまな方法があります。最も簡単で簡単なものの 1 つは、仮想ブリッジ デバイスです。この方法では、イーサネット スイッチを介して接続されている物理マシンと同様に、すべてのコンテナーがローカル レイヤー 2 セグメントに接続されます。</b></p>


  <ul>
   <li><b style="font-weight: normal;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">実際のネットワークからの &lsquo;パケット&rsquo; は、標準レイヤー 2 の手法 (ARP とアドレス学習) を使用して、ブリッジを介して適切なコンテナーに切り替えます。</b></b></li>
   <li><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">実際のネットワークへのパケットは、ブリッジを介して NIC に渡されます。そこで、リモート ノードにルーティングされます。</b></b></b></li>
   <li><b style="font-weight: normal;"><b style="font-weight: normal;"><b style="font-weight: normal;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">イーサネット スイッチで接続されている</b> 2 台の PC と同様に、あるコンテナーから別のコンテナーへのパケットもブリッジを通過します。 </b></b></b></li>
  </ul>


  <p><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;">図 1 に示すこのアプローチは、高パフォーマンスであり、維持するコントロール プレーン ロジックをほとんど必要とせず、堅牢性を確保できるという利点があります。</b></p>


  <p align="center" dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c25a40d5-8f2d-424d-9454-ab1c911efd76.png"><img alt="An image showing an example of Azure CNI networking." border="0" height="462" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/db6d89f7-fc2f-4759-b360-78609cd6f381.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="仮想ネットワークの例をAzure CNI画像。" width="484"></a></b></b></p>


  <p align="center"><b id="docs-internal-guid-48ccc678-7fff-dea4-309c-aeee8456b08c" style="font-weight: normal;"><em>図 1: Azure CNI ネットワーク</em></b></p>


  <h2><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">Azure を使用したネットワーク ポリシー </b></h2>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">Kubernetes には、Kubernetes ネットワーク ポリシー API で定義されている他のコンテナーとの通信を許可するコンテナーを定義するための豊富なポリシー モデルがあります。Ignite で最近説明した通り、この API は現在実装されています。 <a href="https://docs.microsoft.com/en-us/azure/aks/use-network-policies" style="text-decoration: none;" target="_blank">これは、AKS の Azure CNI</a> または Azure の独自の自己管理 <a href="https://docs.microsoft.com/en-us/azure/virtual-network/kubernetes-network-policies" style="text-decoration: none;" target="_blank">型 Kubernetes</a> クラスターで、AKS-Engine を使用する場合と使用しない場合と組み合わせて使用できます。 </b></p>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">Kubernetes ネットワーク ポリシー モデルを一連の許可された IP アドレス ペアに変換し、Linux カーネル iptables モジュールで規則としてプログラミングします。これらの規則は、ブリッジを通過するすべてのパケットに適用されます。これは図 2 に示されています。</b></p>


  <p align="center"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;"><img alt="An image showing how this Azure networking policy works in conjunction with Kubernetes." height="462" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fQiiOwQGqDZ2L0_K2v6MSlHDRYRlQ7Z31GMsBR2GOiq2VUM3dvrhuhTCP0d--6kqpbovNy-LK8FFMO1t12FGlp7cvlKIy_q3f5YgF6og_Owu848HJGae6TqEoRHyBtMuz6cJAORE" style="border: currentcolor; border-image: none; transform: rotate(0rad); -webkit-transform: rotate(0.00rad);" title="この Azure ネットワーク ポリシーと Kubernetes の連携を示す画像。" width="484"></b></p>


  <p align="center"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;"><em>図 2: Azure CNI Manager をAzure Policyする</em></b></p>


  <h2>Calico を使用したネットワーク ポリシー</h2>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">Kubernetes はオープン エコシステムで、Tigeras&rsquo; Calico はクラウド環境とオンプレミス環境全体にネットワーク ポリシーを最初に、最も広くデプロイされた実装としてよく知られています。基本 Kubernetes API に加えて、グローバル ネットワーク ポリシー、ネットワーク セット、より柔軟なルール仕様、Kubernetes 以外のノードでポリシー適用エージェントを実行する機能、Istio との統合によるアプリケーション層ポリシーなど、さまざまな機能をサポートする強力な拡張ポリシー モデルも用意されています。さらに、Tigera は Calico、Tigera Secure を基に構築された商用オファリングを提供し、エンタープライズ管理、制御、コンプライアンス機能のホストを追加します。</b></p>


  <p><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">Kubernetes&rsquo; の前述のモジュール型ネットワーク モデルを考えると、Azure CNI と共にネットワーク ポリシー用の Calico をデプロイすればいいと思う場合があります。これはすべて機能する必要があります。残念ながら、これは単純ではありません。</b></p>


  <p>&nbsp;</p>


  <p>Calico ではポリシーに iptable を使用しますが、これは少し異なる方法で使用されます。 個別のカーネル ルートを&rsquo;使用してコンテナーが確立されると予想され、その特定のコンテナー仮想イーサネット インターフェイス上の各コンテナーに適用されるポリシーが適用されます。 これには、すべてのコンテナー間通信が同一である利点があります (ホストの内部または基になるネットワークをまたがっている場合でも、常にレイヤー 3&rsquo; のルーティング ホップ)、セキュリティ ポリシーは特定のコンテナー コンテキストにより狭く適用されます。</p>


  <p>Calico のAzure CNI互換性を高め、CNI &lsquo;に新しいノード内ルーティング機能を追加しました。これは透過モードと呼&rsquo; ばれる機能です。 このモードで実行するように構成すると、Azure CNIブリッジ デバイスを作成する代わりに、コンテナーのローカル ルートが設定されます。 これを図 3 に示します。<br>

  &nbsp;&nbsp; <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;"><img alt="An image showing Azure CNI and it's compatability with Calico programs." height="462" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/NqSDUhQmtYD7LsPPZLdkdNi5CSyiqKzoFPwC6ebjeawZpcDQvJtLG_zFJ29o0OJwhxhfnqmd22wsef_zxt7VRaKfMbLR_G_rnThW6Z5fgDFZjyE3Kv3LZ_ZBjRyQ0ZI4Rogf3Poz" style="border: currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; transform: rotate(0rad); -webkit-transform: rotate(0.00rad);" title="Calico プログラムとのAzure CNIを示す画像。" width="484"></b></p>


  <p align="center" dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;"><em>図 3: Calico ネットワーク Azure CNIの使用</em></b></p>


  <h2><b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">以降とアップストリーム</b></h2>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">Azure CNI ポリシーと Calico ポリシーが強化された Kubernetes クラスターは、クラスター定義ファイルで次の構成を指定することで、AKS-Engine を使用して作成できます。</p>


  <pre dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">

  <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">&quot;properties&quot;: {</b>


  <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">&quot;orchestratorProfile&quot;: {</b>


  <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">&quot;orchestratorType&quot;: &quot;Kubernetes&quot;,</b>


  <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">&quot;kubernetesConfig&quot;:</b>


  <b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;">{ &quot;networkPolicy&quot;: &quot;calico&quot;, &quot;networkPlugin&quot;: &quot;azure&quot; }</b></pre>


  <p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">これらのオプションは AKS 自体にも統合されています。クラスターの作成時に options<b id="docs-internal-guid-97d5c792-7fff-3d58-e707-1310e7eb2acc" style="font-weight: normal;"><strong>--network-plugin azure --network-policy</strong> Calico を指定するだけで、Azure ネットワークと Calico&nbsp; ネットワーク ポリシーを使用してクラスターをプロビジョニングできます。</b></p>


  <p><b style="font-weight: normal;">詳細については、Azure <a href="https://docs.microsoft.com/en-us/azure/virtual-network/kubernetes-network-policies" target="_blank">Kubernetes</a> ネットワーク ポリシーの概要&ldquo;に関するドキュメントを参照してください。&rdquo;</b></p>
