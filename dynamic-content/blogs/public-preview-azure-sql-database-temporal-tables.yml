### YamlMime:Yaml
ms.openlocfilehash: 320e3afba279813ee0ccf7a7e4e684f3fe05c5de
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894274"
Slug: public-preview-azure-sql-database-temporal-tables
Title: Azure SQL Database テンポラルテーブルのパブリックプレビュー
Summary: パブリックプレビューでは、Azure SQL Database のすべてのサービスレベルでテンポラルテーブルを使用して、データの変更履歴を追跡できます。カスタムコーディングは必要ありません。 アプリケーションでテンポラルテーブルを使用する手順について説明します。
Content: "<p><a href=\"https://azure.microsoft.com/en-us/updates/preview-temporal-tables-in-azure-sql-database/\">パブリックプレビューで</a>使用できるようになりました。テンポラルテーブルを使用して、Azure SQL Database の新しいプログラミング機能を使用できます。これにより、カスタムコーディングを行うことなく、データの変更履歴を追跡および分析することができます。 テンポラル テーブルは、保存されている情報が特定の期間に限り有効と解釈されるように、データを常に時間のコンテキストと密接に関連付けます。</p> <h2>使用シナリオ</h2> <p>実際のデータソースは静的ではありません。重要な情報は時間の経過と共に変化しますが、アプリケーションのシナリオによっては、特定の時点に分析を集中することで、傾向を分析する必要があります。</p> <p>データの変更を追跡するユーザーは、基本的な質問に答えることを目的としています。これは、過去の特定の時点 (昨日、1か月前、1年前など) にファクトがどのように表示されるか、どのような変更が加えられたか、および特定の期間における主要な傾向です。 ただし、データベースを適切にサポートしていない場合は、そのような質問は決して簡単に答えられませんでした。</p> <p>テンポラルテーブルは、履歴データを操作するアプリケーションを開発するための生産性向上ツールとして設計されています。生産性が非常に優れているため、以下に示すシナリオで使用することを強くお勧めします。 テンポラルテーブルは、Azure SQL Database のすべてのサービス階層で使用できることに注意してください。</p> <h3>データの監査</h3> <p>重要な情報が格納されているテーブルで <a href=\"https://msdn.microsoft.com/en-in/library/dn935015.aspx#Anchor_0\" target=\"_blank\">テンポラルのシステムバージョン管理</a> を有効にします。これにより、どの時点で変更が発生したか、いつどこで変更したかを追跡する必要があります。 テンポラルテーブルを使用すると、開発サイクルの初期段階でデータの監査シナリオを計画したり、必要に応じて既存のアプリケーションにデータ監査を追加したりすることができます。</p> <p>新しいアプリケーションを開発する場合は、 <a href=\"https://msdn.microsoft.com/en-us/library/mt590957.aspx\" target=\"_blank\">テンポラルシステムバージョン管理としてキーテーブルを作成</a>します。既存のデータベースでデータ監査を実行する必要がある場合は、ALTER TABLE を使用して <a href=\"https://msdn.microsoft.com/library/mt590957.aspx#Anchor_3\" target=\"_blank\">非テンポラルテーブルをテンポラルに拡張</a>します。 &nbsp; 次の例では、単純な CREATE TABLE ステートメントを使用して、HR データベースでの従業員関連情報の変更の追跡を開始する方法を示します。</p><pre class=\"prettyprint\">CREATE TABLE Employee \n(  \n    [EmployeeID] int NOT NULL PRIMARY KEY CLUSTERED \n  , [Name] nvarchar(100) NOT NULL\n  , [Position] varchar(100) NOT NULL \n  , [Department] varchar(100) NOT NULL\n  , [AnnualSalary] decimal (10,2) NOT NULL\n  , [ValidFrom] datetime2 (0) GENERATED ALWAYS AS ROW START\n  , [ValidTo] datetime2 (0) GENERATED ALWAYS AS ROW END\n  , PERIOD FOR SYSTEM_TIME (ValidFrom, ValidTo)\n )  \n WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.EmployeeHistory));</pre>\n<p>テーブルが作成されると、データの監査はただ1つのクエリになります。 新しい <a href=\"https://msdn.microsoft.com/en-us/library/dn935015.aspx#Anchor_3\" target=\"_blank\">for SYSTEM_TIME</a> 句を使用した次の単純なクエリでは、特定の従業員に対して行われた変更を、関心のある期間にわたって簡単に検索する方法を示します。</p><pre class=\"prettyprint\">SELECT * FROM Employee \nFOR SYSTEM_TIME BETWEEN '2014-01-01' AND '2015-01-01' \nWHERE EmployeeID = 1000 ORDER BY ValidFrom;</pre>\n<h3>特定の時点の分析 (タイムトラベル)</h3>\n<p>個々のレコードに対して発生した変更に重点が置かれているデータ監査とは異なり、タイムトラベルのシナリオでは、通常、データセット全体が過去に参照されたか、または時間の経過と共に変化したかを確認する必要があります。 タイムトラベルには、複数のテンポラルテーブルが含まれる場合があり、それぞれが独立したペースで変化します。</p>\n<ul>\n<li>履歴全体の重要な指標の傾向\n<li>過去の任意の時点 (昨日、1か月前など) のデータの正確なスナップショット\n<li>(1 か月前対 3 か月前など) 関心のある 2 つの時点の違い </li></ul>\n<p>「データ監査のシナリオ」で説明されているように、新しい <a href=\"https://msdn.microsoft.com/en-us/library/mt590957.aspx\" target=\"_blank\">CREATE</a> または <a href=\"https://msdn.microsoft.com/library/mt590957.aspx#Anchor_3\" target=\"_blank\">ALTER TABLE</a> 構文を使用して、重要なテーブルをテンポラルに構成します。</p>\n<h3>行レベルでの不適切なデータの修正</h3>\n<p>テンポラルテーブルの履歴データを使用して、ユーザーまたはアプリケーションが誤って &nbsp; エラーを発生した場合に、個々のテーブル行を \"最後の正常な状態\" にすばやく修復できます。 これは特に、影響を受ける行を見つけることができる場合や、不要なデータ変更の時間がわかっている場合に便利です。 テンポラルテーブルを使用すると、バックアップを処理することなく、効率的に修復を実行できます。 このアプローチにはいくつかの利点があります。</p>\n<ul>\n<li>修復のスコープを非常に正確に制御できます。 影響を受けていない行は最新の状態のままになります。これは、多くの場合、重要な要件です。 \n<li>操作は非常に効率的で、データを使用しているすべてのワークロードに対してデータベースがオンラインのままになります。 \n<li>修復操作自体が、バージョン管理されます。 修復操作自体の監査証跡があるため、必要に応じて後で何が発生したかを分析できます。 </li></ul>\n<p>詳細については、 <a href=\"https://msdn.microsoft.com/library/mt631669.aspx?#Anchor_4\" target=\"_blank\">対応する MSDN 記事</a>をご覧ください。</p>\n<h2>テンポラルテーブルを考慮する必要があるのはなぜですか。</h2>\n<p>データの変更を追跡するための要件がある場合、テンポラルテーブルを使用すると、カスタムソリューションよりも複数の利点が得られます。 テンポラルテーブルは、スキーマの進化によるオブジェクトの作成や、データ分析からセキュリティへのデータ変更まで、開発ライフサイクルのすべてのフェーズを簡略化します。</p>\n<ul>\n<li><strong>テーブルの作成とスキーマの進化</strong>は、よく知られている CREATE/ALTER Table 構文と<a href=\"https://msdn.microsoft.com/en-us/library/mt204009.aspx\" target=\"_blank\">SQL Server 開発ツール</a>の豊富なテーブルエディターを通じてサポートされています。 テンポラルテーブルに対するスキーマ操作は、一般的な使用シナリオに合わせて最適化された既定のスマートオプションを自動的に適用します。 \n<li><strong>変更の追跡</strong> は、ワークロードに対して完全に透過的に行われます。 ユーザーとアプリケーションは、通常の方法でデータを変更しますが、履歴はバックグラウンドで自動的に作成されます。 \n<li><strong>データ分析</strong>: Azure SQL Database を使用すると、 <a href=\"https://msdn.microsoft.com/en-us/library/dn935015.aspx#Anchor_3\" target=\"_blank\">FOR SYSTEM_TIME</a>句を使用して、特定の時点のクエリを非常に簡単に実行できます。 テンポラルクエリの機能は、ビューを使用して複雑なデータベースモデルにクエリを実行するシナリオや、外部キーリレーションシップを持つ複数のテーブルを過去の特定の時点に含めることによって明らかになります。 \n<li><strong>履歴データの不変性: </strong>テンポラルテーブルは、編集アクセス許可を持つユーザーであっても、履歴データを変更できないようにします。 </li></ul>\n<h2>次の手順</h2>\n<p>アプリケーションにテンポラルテーブルを統合する方法については、 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-database-temporal-tables/\" target=\"_blank\">次の記事</a> で詳細な手順を参照してください。 Channel 9 にアクセスして <a href=\"https://channel9.msdn.com/Blogs/jsturtevant/Azure-SQL-Temporal-Tables-with-RockStep-Solutions\" target=\"_blank\">実際の顧客事例</a> を聞き、デモで <a href=\"https://channel9.msdn.com/Shows/Data-Exposed/Temporal-in-SQL-Server-2016\" target=\"_blank\">ライブプレゼンテーション</a> を視聴してください。</p>\n<p>詳細については、 <a href=\"https://msdn.microsoft.com/en-us/library/dn935015.aspx\" target=\"_blank\">MSDN ドキュメント</a>を参照してください。 最後に、テンポラルテーブルを試してみましょう。お客様からのフィードバックをお待ちしております。</p>"
