### YamlMime:Yaml
ms.openlocfilehash: 464b34dcf8cd31ccb514264e585770cf7ac0c52b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909587"
Slug: planet-scale-aggregates-with-azure-documentdb
Title: Azure DocumentDB を使用した地球規模の集計
Summary: 最後のサービス更新で集計関数をサポートするために、DocumentDB SQL文法が拡張されました。 集計のサポートは、ユーザーの音声サイトで最も要求される機能です。そのため、投票されたすべてのユーザーにこの機能を展開する必要があります。
Content: "<p><strong>2017 年 5 月 10 日現在、</strong></p>\n\n<p><strong>Azure Cosmos DB は、Microsoft&rsquo; のグローバル分散マルチモデル データベースです。Azure Cosmos DB は、その中核となるグローバル分散と水平スケールで、最初から構築されました。ユーザーがどこにいてもデータを透過的にスケーリングしてレプリケートすることで、任意の数の Azure リージョンにターンキーグローバル分散が提供されます。スループットとストレージを世界規模で弾力的にスケーリングし、必要なスループットとストレージに対してだけ料金を支払います。Azure Cosmos DB では、世界中の任意の場所で 99&mdash; 番目の割合で 1 桁ミリ秒の待機時間が保証され、パフォーマンスを微調整する複数の定義済みの整合性モデルが提供され、業界をリードするサービス レベル アグリーメント (SLA) によってサポートされるマルチホーム機能を使用して高可用性が保証されます。&nbsp;</strong></p>\n\n<p><strong>Azure Cosmos DB は、スキーマに依存せず、スキーマとインデックスの管理に対処する必要なく、すべてのデータのインデックスを自動的に作成します。また&rsquo;、ドキュメント、キー値、グラフ、および列ファミリのデータ モデルをネイティブにサポートするマルチモデルです。Azure Cosmos DB では、DocumentDB SQL (ドキュメント)、MongoDB (ドキュメント)、Azure Table Storage (キー値)、Gremlin (グラフ) がネイティブにサポートされているので、選択した API を使用してデータにアクセスできます。</strong></p>\n\n<hr>\n<p>最後&rsquo;のサービス更新で集計関数をサポートするために、DocumentDB SQL文法を拡張しました。<a href=\"https://docs.microsoft.com/azure/documentdb/documentdb-sql-query#Aggregates\" target=\"_blank\"></a> 集計のサポートは、ユーザーの声サイトで最も要求される機能です。そのため、投票したすべてのユーザーがこれを展開&#39;うれしく思います。</p>\n\n<p>Azure DocumentDB は、フル マネージドの NoSQL データベース サービスです。高速で予測可能なパフォーマンス、高可用性、エラスティック スケーリング、グローバル分散、開発の容易さを視野に入れて構築されています。 DocumentDB は、JSON データに対して一貫SQL低待機時間で、豊富で使い慣れたクエリ機能を提供します。 これらの独自の利点によって、DocumentDB は、シームレスなスケールとグローバル レプリケーションを必要とする Web、モバイル、ゲーム、IoT などの多くのアプリケーションに最適です。</p>\n\n<p>DocumentDB は完全にスキーマフリーです。 データベース エンジン内で JSON データ モデルを直接処理することで、明示的なスキーマやセカンダリ インデックスの作成を必要とせずに、JSON ドキュメントの自動インデックス作成を実現しています。 DocumentDB では、 を使用した JSON ドキュメントのクエリSQL。 DocumentDB クエリは JavaScript でルート&#39;システム、式の評価、および関数呼び出しです。 さらに、リレーショナル プロジェクション、JSON ドキュメント間の階層ナビゲーション、自己結合、空間クエリ、JavaScript で完全に記述されたユーザー定義関数 (UDF) の呼び出しなどの機能のための自然なプログラミング モデルが提供されます。 これらの機能に加えて、SQL文法を拡張しました。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad80a814-c6d0-4a25-84c5-89d81d89a4af.png\"><img alt=\"graphic\" border=\"0\" height=\"387\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b9fbd30a-c664-4a9c-a5d5-bedb61a636ca.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"グラフィック\" width=\"599\"></a></p>\n\n<h2>地球規模アプリケーションの集計</h2>\n\n<p>&rsquo;完成したゲームに基づいて統計を計算する必要があるモバイル ゲームを構築する場合でも、特定のイベントの発生回数に基づいてアクションをトリガーする IoT プラットフォームを設計する場合でも、単純な Web サイトまたはページ分割された API を構築する場合でも、オペレーション データベースに対して集計クエリを実行する必要があります。 DocumentDB を使用すると、待機時間が短く、パフォーマンスが予測可能な任意のスケールのデータに対して集計クエリを実行できます。</p>\n\n<p>集計サポートは、すべての DocumentDB 実稼働データセンターに展開されています。 既存の DocumentDB アカウントに対する集計クエリの実行を開始したり、SDK、REST API、または Azure Portal を使用して新しい DocumentDB アカウントをプロビジョニングすることができます。 ただし、クロスパーティション集計クエリを実行したり<a href=\"https://docs.microsoft.com/azure/documentdb/documentdb-sdk-dotnet\" target=\"_blank\"></a>、.NET で LINQ 集計演算子を使用したりするには、SDK の最新バージョンをダウンロードする必要があります。</p>\n\n<h2>集計とSQL</h2>\n\n<p>DocumentDB では、集計SQL COUNT、MIN、MAX、SUM、AVG の各関数がサポートされています。 これらの演算子はリレーショナル データベースと同様に動作し、クエリに一致するドキュメントに対して計算値を返します。 たとえば、次のクエリでは、DocumentDB からデバイス xbox-1001 から読み取り数を取得します。</p>\n\n<pre class=\"prettyprint\">\nSELECT VALUE COUNT(1) \nFROM telemetry T \nWHERE T.deviceId = &quot;xbox-1001&quot;</pre>\n\n<p>(VALUE キーワード&rsquo;について疑問に思う場合は、 &ndash; すべてのクエリから JSON フラグメントが返されます。 VALUE を使用すると、JSON ドキュメント {&quot;$1&quot;: 100} ではなく、count のスカラー値 (例: 100) を取得できます。</p>\n\n<p>既存のクエリ文法と機能をシームレスに使用する集計サポートを拡張しました。 たとえば、次のクエリでは、サイトの場所を表す特定の多角形境界内のデバイス間の平均温度の読み取りが返されます (集計と地理空間近接検索の組み合わせ)。</p>\n\n<pre class=\"prettyprint\">\nSELECT VALUE AVG(T.temperature?? 0) \nFROM telemetry T \nWHERE ST_WITHIN(T.location, {&quot;type&quot;: &quot;polygon&quot;: &hellip; })\n</pre>\n\n<p>DocumentDB は、柔軟にスケーラブルな NoSQL データベースとして、任意のストレージまたはスループットのデータの格納とクエリをサポートしています。 コレクション内のパーティションのサイズや数に関係なく、単純な SQL クエリを送信できます。DocumentDB は、データ パーティション間のクエリのルーティングを処理し、一致した各パーティション内のローカル インデックスに対して並列実行し、中間結果をマージして最終的な集計値を返します。 DocumentDB を使用して、待機時間の短い集計クエリを実行できます。</p>\n\n<p>.NET SDK では、次に示すように<a href=\"https://msdn.microsoft.com/en-us/library/azure/microsoft.azure.documents.client.documentclient.createdocumentquery.aspx\" target=\"_blank\">、CreateDocumentQueryT&lt;&gt;</a> メソッドを使用してこれを実行できます。</p>\n\n<pre class=\"prettyprint\">\n client.CreateDocumentQuery&lt;int&gt;(\n    &quot;/dbs/devicedb/colls/telemetry&quot;,\n    &quot;SELECT VALUE COUNT(1) FROM telemetry T WHERE T.deviceId  = &#39;xbox-1001&#39;&quot;,\n     new FeedOptions { MaxDegreeOfParallelism = -1 });\n</pre>\n\n<p>完全な例については、Github のクエリ サンプル <a href=\"https://github.com/arramac/azure-documentdb-dotnet/tree/master/samples/code-samples/Queries\" target=\"_blank\">を参照してください</a>。&nbsp;</p>\n\n<h2>LINQ を使用した集計</h2>\n\n<p><a href=\"https://www.nuget.org/packages/Microsoft.Azure.DocumentDB/\" target=\"_blank\">.NET SDK 1.12.1</a> を使用すると、LINQ を使用して集計のクエリを実行できるほか、データのSQL。 最新の SDK では、Count、Sum、Min、Max、Average の演算子と、CountAsync、SumAsync、MinAsync、MaxAsync、AverageAsync に相当する非同期の対応する演算子がサポートされています。 たとえば、前に示したのと同じクエリを次の LINQ クエリとして記述できます。</p>\n\n<pre class=\"prettyprint\">\nclient.CreateDocumentQuery&lt;DeviceReading&gt;(&quot;/dbs/devicedb/colls/telemetry&quot;,\n     new FeedOptions { MaxDegreeOfParallelism = -1 })\n      .Where(r =&gt; r.DeviceId == &quot;xbox-1001&quot;)\n      .CountAsync();\n</pre>\n\n<p>集計クエリ中に非同期改ページが実行される方法など、 <a href=\"https://docs.microsoft.com/azure/documentdb/documentdb-sql-query#a-idlinqalinq-to-documentdb-sql\" target=\"_blank\">DocumentDBs&rsquo; LINQ</a> のサポートの詳細を確認します。</p>\n\n<h2>Azure Portal を使用した集計</h2>\n\n<p>Azure Portal を使用して、集計クエリの実行を開始することもできます。</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2e06e202-b59b-4b58-a9b2-8fbed4807d99.png\"><img alt=\"screenshot\" border=\"0\" height=\"967\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7aaa3564-f512-4402-8ce9-77ff51f8adb7.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"スクリーン ショット\" width=\"984\"></a></p>\n\n<h2>次の手順</h2>\n\n<p>このブログ記事では、Azure DocumentDB での集計関数とクエリのサポートについて説明しました。 クエリの実行を開始するには、 <a href=\"https://portal.azure.com/#create/Microsoft.DocumentDB\" target=\"_blank\">Azure Portal から新しい DocumentDB アカウントを作成します</a>。</p>\n\n<p>Twitter <a href=\"https://twitter.com/DocumentDB\" target=\"_blank\">@DocumentDB</a> でフォローしたり、Stack Overflow の開発者フォーラムでお問い合わせしたりして、DocumentDB の最新のニュース <a href=\"https://stackoverflow.com/questions/tagged/azure-documentdb\" target=\"_blank\">と機能を最新の情報にStack Overflow</a>。</p>"
