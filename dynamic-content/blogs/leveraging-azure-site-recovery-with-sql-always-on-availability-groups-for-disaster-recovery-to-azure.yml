### YamlMime:Yaml
ms.openlocfilehash: 9a788dbe58b7018e630c3f480f7df0cc632d8518
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896717"
Slug: leveraging-azure-site-recovery-with-sql-always-on-availability-groups-for-disaster-recovery-to-azure
Title: Azure へのディザスター Azure Site Recovery可用性グループSQL Always Onを使用したデータの使用の活用
Summary: この記事では、Azure SIte の回復と可用性グループSQL Always Onエンド エンド の Application Recovery を活用する方法について説明します
Content: "<a href=\"https://aka.ms/asr_sql_landingpage\">Azure Site Recovery、</a> 異種 IT 環境用のワークロード対応のディザスター リカバリー ソリューションを 1 つ提供します。Hyper-V または VMware 仮想マシンまたは物理サーバー上で実行されている場合でも、重要なアプリケーションとワークロードは、Azure にレプリケートして復旧できます。 ASR Recovery Plans を使用すると、お客様はアプリケーションのワークロード対応の復旧ワークフローを作成し、Azure で調整 <strong>された \"</strong> シングル クリック\" アプリケーション復旧を実現できます。\n\nMicrosoft SQL Serverは、顧客のオンプレミス データセンター内で実行される多くのエンタープライズ レベルのファースト パーティ、サード パーティ、およびカスタムのビジネス ライン アプリケーションの基盤です。 SQL Server 2012 年と 2014 年には、SQL AlwaysOn 可用性グループ などのエンタープライズ クラスの高可用性とディザスター リカバリー テクノロジが提供され、azure などのリモート サイトに SQL データベースを保護し、イベント中に迅速にフェールオーバーできます。 SQL可用性グループは、SharePoint、Dynamics、SAP などの主要なアプリケーションのデータベース層の高可用性を構成する場合に推奨されます。\n\n一般的なエンタープライズ アプリケーションは多層です。Web 層/プレゼンテーション層、中間層またはアプリケーション層、および SQL Server ベースのデータベース層で構成されます。 このようなアプリケーションのディザスター リカバリーを計画する場合は、各層の保護と回復を計画し、復旧中に層間の依存関係を調整することが重要です。\n\nAzure Site Recoveryと SQL AlwaysON 可用性グループは無料であり、多層アプリケーションのエンドツーエンドの保護と回復に組み合わせて使用できます。SQL AlwaysOn 可用性グループ のクラス最高の DR 機能を使用すると、SQL データベースを保護できます。一方、Azure Site Recovery レプリケーションを使用して Web 層とアプリ層をレプリケートできます。 最後に、ASR 復旧計画を使用して、ASR 復旧計画の一部としてスクリプト化されたアクションによる SQL AlwaysOn 可用性グループ のフェールオーバーを含む、アプリケーション全体のエンドツーエンドの復旧をシーケンスできます。 次のいくつかのセクションでは、これらのテクノロジを組み合わせて、エンタープライズ アプリケーションの<strong></strong>ワークロード対応復旧計画を 1 回のクリックで<strong>実現する方法について説明します</strong>。\n<h2>一般的な 3 層アプリ</h2>\n次の図は、3 層エンタープライズ アプリケーションのサンプルを示しています。 アプリは、1) 1 つ以上の Web 層 (通常はロード バランサーの背後でスケールアウトされます) 2) アプリケーション ロジックを提供する 1 つ以上のアプリ サーバー、3) 高可用な SQL Server バックエンドで構成されます。 2012 SQL Server以上では、高可用性を設定する推奨される方法は、同期レプリケーション モードで 2 つの可用性グループ レプリカを構成する方法です。\n\n<img class=\" aligncenter\" style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"3 層\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3-tier.jpg\" alt=\"3-tier application\" width=\"292\" height=\"268\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2></h2>\n<h2>すべての階層の保護を構成する</h2>\n次の手順を利用して、上記のアプリケーションを Azure にレプリケートするには、Azure Site RecoveryとSQL AlwaysOn 可用性グループ。\n<h3></h3>\n<h3>Azure SQLレプリカの構成</h3>\n<ol>\n <li>Azure Virtual Networkを作成し、オンプレミス サイトとこのネットワークの間でサイト間 VPN または Express Route を構成します。</li>\n <li>このネットワークに新SQL IaaS 仮想マシンを作成し、非同期可用性グループ レプリカとして構成します。 <em>(注: Azure へのフェールオーバー後に SQL レベルの高可用性が必要な場合は、Azure で 2 つの非同期レプリカ コピーを構成します)</em></li>\n <li>この仮想ネットワークには、ドメイン コントローラーのレプリカを設定する必要があります。</li>\n <li>この VM で VM 拡張機能が有効になっている必要があります。 <em>(注: これは、復旧中に特定のスクリプト化SQLをプッシュするために使用されます)</em></li>\n <li>Azure の内部ロード バランサーを使用して可用性グループの SQL リスナーを構成する <em>(注:</em> クラウド サービスごとにサポートされている ILB は 1 つだけであるから、リスナーを利用するようにアプリのすべてのデータベースを 1 つの可用性グループに構成する)</li>\n <li>リスナーを使用してデータベース層にアクセスするアプリ層を構成します。</li>\n</ol>\n上記の手順に役立つ次のリソースを確認してください。\n<ul>\n <li><a href=\"https://gallery.technet.microsoft.com/scriptcenter/Deploy-a-SQL-Server-5608b684\">ハイブリッド IT セットアップSQL AG をセットアップするためのスクリプト</a></li>\n <li><a href=\"https://msdn.microsoft.com/en-us/library/azure/dn425027.aspx\">ILB を使用したリスナーの構成</a></li>\n <li><a href=\"https://msdn.microsoft.com/en-us/library/azure/dn832621.aspx\">IaaS VM 拡張機能</a></li>\n</ul>\n&nbsp;\n<h3>Web 層とアプリ層の保護を構成する</h3>\n<ol>\n <li>オンプレミス環境に基づいてAzure Site Recovery設定の前提条件を完了します。</li>\n <li>ASR レプリケーションを使用して、フロントエンド VM とアプリ層 VM を Azure にレプリケートします。</li>\n <li>アプリ層とフロントエンド VM が、ILB と SQL レプリカ コピーをホストしている同じ Azure ネットワークにフェールオーバーするように、ASR でネットワーク設定を構成します。 <em>(注: Web 層とアプリ層は、レプリカがデプロイされているクラウド サービスとは異なるクラウド SQL必要があります。ASR は、フェールオーバー時に新しいクラウド サービスを自動的に作成します)</em></li>\n</ol>\n上記の手順に役立ついくつかのリソース:\n<ul>\n <li><a href=\"https://aka.ms/asr_sql_documentation\">VMM/Hyper-V で ASR を構成する</a></li>\n <li><a href=\"https://aka.ms/asr_sql_network_mapping\">ネットワーク マッピングの構成</a></li>\n</ul>\n&nbsp;\n\n次の図は、アプリケーション保護が構成された後のエンドツーエンド トポロジを示しています\n\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"protected\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/protected.jpg\" alt=\"protected\" width=\"642\" height=\"360\" border=\"0\" />\n\n&nbsp;\n\n&nbsp;\n<h2>アプリの完全フェールオーバーのための復旧計画を作成する</h2>\n<h2></h2>\n<h3>フェールオーバー スクリプトSQL構成する</h3>\nお客様のスクリプト拡張機能を活用し、Azure Automation可用性グループのスクリプト化されたフェールオーバー SQL構成します。\n\n1. 可用性グループにフェールオーバーするスクリプトのローカル SQL作成します。次のサンプル スクリプトは、Azure レプリカの可用性グループへのパスを取得し、そのレプリカ インスタンスに渡します。 このスクリプトは、カスタム スクリプト拡張機能SQLレプリカ VM に渡されます。\n<pre class=\"prettyprint\">Param(\n[string]$SQLAvailabilityGroupPath\n)\n\nimport-module sqlps\nSwitch-SqlAvailabilityGroup -Path $SQLAvailabilityGroupPath -AllowDataLoss -force\n\n</pre>\n2.アップロード Azure ストレージ アカウント内の BLOB にスクリプトを追加します (この例では、BLOB の名前は \"AGFailover.ps1\" です)。\n<pre class=\"prettyprint\">$context = New-AzureStorageContext -StorageAccountName \"Account\" -StorageAccountKey \"Key\"\nSet-AzureStorageBlobContent -Blob \"AGFailover.ps1\" -Container \"script-container\" -File \"ScriptLocalFilePath\" -context $context</pre>\n3.Azure の Azure Automationレプリカ VM で上記のスクリプトを呼び出SQL Runbook を作成します。 次のサンプル スクリプトを目的として使用できます。 「Azure <a title=\"Automation Runbook を復旧計画に追加する Azure Automation Runbook</a> を復旧計画に追加する」を参照して、ASR 復旧計画で使用する Azure Automation Runbook\" href=\"https://aka.ms/asr_sql_azure_automation\" target=\"_blank\"> を作成する方法を理解できます。\n<pre class=\"prettyprint\">workflow SQLAvailabilityGroupFailover\n{\n    param (\n        [Object]$RecoveryPlanContext\n    )\n\n    $Cred = Get-AutomationPSCredential -name 'AzureCredential'\n \n    #Connect to Azure\n    $AzureAccount = Add-AzureAccount -Credential $Cred\n    $AzureSubscriptionName = Get-AutomationVariable –Name ‘AzureSubscriptionName’\n    Select-AzureSubscription -SubscriptionName $AzureSubscriptionName\n    \n    InLineScript\n    {\n     #Update the script with name of your storage account, key and blob name\n     $context = New-AzureStorageContext -StorageAccountName \"Account\" \n         -StorageAccountKey \"Key\";\n     $sasuri = New-AzureStorageBlobSASToken -Container \"script-container\" \n         -Blob \"AGFailover.ps1\" -Permission r -FullUri -Context $context;\n     \n     Write-output \"failovertype \" + $Using:RecoveryPlanContext.FailoverType;\n               \n     if ($Using:RecoveryPlanContext.FailoverType -eq \"Test\")\n       {\n           #Skipping TFO in this version.\n           #We will update the script in a follow-up post with TFO support\n           Write-output \"tfo: Skipping SQL Failover\";\n       }\n     else\n       {\n           Write-output \"pfo/ufo\";\n           #Get the SQL Azure Replica VM.\n           #Update the script to use the name of your VM and Cloud Service\n           $VM = Get-AzureVM -Name \"SQLAzureVM\" -ServiceName \"SQLAzureReplica\";     \n       \n           Write-Output \"Installing custom script extension\"\n           #Install the Custom Script Extension on teh SQL Replica VM\n           Set-AzureVMExtension -ExtensionName CustomScriptExtension -VM $VM -Publisher Microsoft.Compute -Version 1.3| Update-AzureVM; \n                    \n           Write-output \"Starting AG Failover\";\n           #Execute the SQL Failover script\n           #Pass the SQL AG path as the argument.\n       \n           $AGArgs=\"-SQLAvailabilityGroupPath sqlserver:\\sql\\sqlazureVM\\default\\availabilitygroups\\testag\";\n       \n           Set-AzureVMCustomScriptExtension -VM $VM -FileUri $sasuri -Run \"AGFailover.ps1\" -Argument $AGArgs | Update-AzureVM;\n       \n           Write-output \"Completed AG Failover\";\n\n       }\n        \n    }\n}</pre>\n<h3></h3>\n<h3>新しい ASR 復旧計画を作成する</h3>\n<ol>\n<ol>\n <li>ポータルAzure Site Recovery新しい復旧計画を作成し、アプリと Web 層の VM を復旧計画に追加します。</li>\n <li>復旧計画で上記の手順を呼び出す \"pre group 1 boot\" スクリプトAzure Automation追加します。</li>\n <li>回復計画をカスタマイズするには、アプリ層の [開始] グループとして [グループ 1] を選択し、Web 層の [開始] グループとして [グループ 2] を選択します (例: アプリ層は、Web 層の前に起動します)。</li>\n <li>Web 層に複数の VM がある場合は、ロード バランサーを事後スクリプトとして作成するスクリプトを Group-2 に追加する必要があります</li>\n <li>復旧計画を保存します。</li>\n</ol>\n</ol>\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;\" title=\"recovery-plan2\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/recovery-plan2.jpg\" alt=\"recovery-plan2\" width=\"1024\" height=\"588\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2>復旧計画を Azure にフェールオーバーする</h2>\n復旧計画を構成したら、それを使用して、Azure への計画的または計画外のフェールオーバーを実行できます。ASR は、アプリと Web 層を Azure にフェールオーバーし、IaaS VM を作成します。 ASR は、上記の Azure Automation Runbook を呼び出し、AlwaysOn 可用性グループSQLフェールオーバーします。 その後、アプリ層が起動し、その後に Web 層が起動します。 すべてのSQLが起動すると、レプリカ インスタンスのSQL Azureを指す新しいリスナーが更新されます。\n\n次の図は、フェールオーバー後の状態を示しています。\n\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"フェールオーバー後\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/after-failover.jpg\" alt=\"after-failover\" width=\"642\" height=\"360\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2>Azure からオンプレミスへのフェールバック</h2>\nオンプレミス サーバーが正常な状態に戻った後は、レプリカからオンプレミスレプリカのコピー SQL Azureレプリケーションを構成できます。 その後、同様の ASR 復旧計画を使用して、アプリケーションをオンプレミスにフェールオーバーできます。\n\n&nbsp;\n\nこれで完了です。 アプリケーション全体をフェールオーバーするために、Azure Site Recovery や SQL AlwaysOn 可用性グループ などのクラス最高のテクノロジを組み合わせた \"シングル クリック\" 復旧計画が作成されています。 アプリケーションが公開サイトの場合は、アプリケーションを復旧するときに Azure Traffic Manager を使用して RTO をさらに最適化する方法<a href=\"https://aka.ms/asr_sql_reduce_rto\">を確認します</a>。"
