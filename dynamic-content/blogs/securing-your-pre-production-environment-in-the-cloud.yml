### YamlMime:Yaml
ms.openlocfilehash: a200f99b95458c8da5f08b82a65dd054807c0247
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892617"
Slug: securing-your-pre-production-environment-in-the-cloud
Title: クラウドで運用前環境をセキュリティで保護する
Summary: この記事では、非常にシンプルで強力なシナリオを紹介し、運用環境にリリースする前にコードをデプロイするために使用される Web アプリケーションとステージングスロットを作成します。
Content: >-
  <a href="https://azure.microsoft.com/en-us/documentation/services/app-service/">Azure App Service</a>のすべての便利なお気に入り機能の1つは、開発者が提供するすべての優れた保存シナリオによる<a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/">デプロイスロット</a>   です。 簡単に言うと、サイトスロットを使用すると、開発者はアプリケーションのステージング環境をセットアップし、ダウンタイムなしで運用コードとシームレスにスワップすることができます。 この機能に関してよく寄せられる質問の1つは、運用前環境をセキュリティで保護して、リリースの準備が整う前に web で認識されないようにするかどうかということです。


  このシナリオは、いくつかのボタンをクリックするだけで実装できます。 Azure <a href="https://azure.microsoft.com/blog/2014/11/13/azure-websites-authentication-authorization/">App Service Authentication の承認</a> 機能を利用すると、基本的に完全に機能する web アプリであるため、サイトスロットをセキュリティで保護することができます。


  このブログでは、非常にシンプルで強力なシナリオについて説明します。 実稼働環境にリリースする前に、コードのデプロイに使用する Web アプリケーションとステージングスロットを作成します。 次に、認証 \ 承認機能を使用してステージングスロットをセキュリティで保護し、 <a href="https://azure.microsoft.com/en-us/documentation/services/active-directory/">Azure Active Directory</a>のユーザーのみが使用できるようにします。ソースコードリポジトリと CI の GitHub を活用します。 GitHub リポジトリがステージング環境にマップされます。


  結果は? セキュリティで保護されたステージング環境を備えた Azure Web アプリ。コードを安心して開発できます。

  <h2>システム要件</h2>

  次の手順では、を所有しているか、にアクセスできることを前提としています。

  <ul>
   <li>Azure サブスクリプション ( <a href="https://azure.microsoft.com/en-us/pricing/free-trial/">こちらをご覧ください</a>)</li>
   <li><a href="https://github.com/">GitHub</a> のアカウント</li>
   <li>Azure App Service に展開できるリポジトリが少なくとも1つ</li>
   <li>ほとんどの場合、 <a href="https://portal.azure.com">Azure プレビューポータル</a>(Ibiza という名前のコード) と既存の<a href="https://manage.windowsazure.com">管理ポータル</a>を使用します。</li>
  </ul>

  <h2>設定 (項目を)</h2>

  新しい Web アプリケーションを作成します。 standard 価格レベルを選択していることを確認してください (デプロイスロットは standard レベルとプレミアムレベルでのみサポートされています)。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Create.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="作成" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Create_thumb.jpg" alt="Create" width="672" height="776" border="0" /></a>


  &nbsp;


  次に、新しい Web アプリのステージングスロットを設定します。 [Web アプリ] ブレードまで下にスクロールし、[デプロイスロット] をクリックします。 [デプロイスロット] ブレードで、[+] ボタンをクリックし、[スロットの追加] ブレードでスロットの名前を選択します (このサンプルでは、"ステージ" を呼び出しています)。 必ず [既存のスロットから構成を複製しない] オプションを選択してください。 サイトスロットの構成の詳細については、 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/#configuration-for-deployment-slots">この</a> ドキュメントを参照してください。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Deployment.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="デプロイ" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Deployment_thumb.jpg" alt="Deployment" width="1254" height="690" border="0" /></a>


  &nbsp;


  次に、Github と新しいステージングサイトの間の継続的インテグレーションを設定します。 [ステージングスロット] ブレードで [継続的デプロイの設定] をクリックし、ソースリポジトリを選択して、CI ソースを構成します (CI の設定の詳細については <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-publish-source-control/">こちら</a>を参照してください)。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Set-up-continuous-deployment.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="Azure App Service での GIT による継続的なデプロイ" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Set-up-continuous-deployment_thumb.jpg" alt="Set up continuous deployment" width="1366" height="658" border="0" /></a>


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Config.-Source-Control.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title=".Config.ソース管理" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Config.-Source-Control_thumb.jpg" alt="Config. Source Control" width="1376" height="682" border="0" /></a>


  &nbsp;


  CI 接続を使用してステージング環境サイトを作成したので、Azure Active Directory (<a href="https://azure.microsoft.com/en-us/documentation/services/active-directory/">AAD</a>) を使用してセキュリティを保護します。 ステージングサイトの [すべての設定] リンクを使用して、[認証/承認] オプションを選択し、[Active Directory 認証] の [オン] ボタンをクリックします。


  <b>注: </b>管理ポータルにログインしているユーザーに関連付けられているテナントに基づいて Active Directory が選択されます。 独自のディレクトリを作成するには、 <a href="https://azure.microsoft.com/en-us/documentation/videos/active-directory-common-sign-up/">この</a> ドキュメントの指示に従います。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Active-Directory-Authentication.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="Active Directory 認証" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Active-Directory-Authentication_thumb.jpg" alt="Active Directory Authentication" width="1275" height="632" border="0" /></a>


  &nbsp;


  これで準備ができました。 ステージングスロットの web サイトブレードで [参照] ボタンをクリックします (ステージングスロットの URL は、https:// &lt; site name &lt; &gt; - &gt; azurewebsites.net/になります)。 AAD ユーザー名を管理ポータルで使用している Microsoft ID に関連付けた場合、ステージングスロットのサインインページが表示されないことがあります。 これが機能することを確認するには、IE では InPrivate ブラウズを、Chrome には Incognito を使用します。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Authentication-for-Stagging.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="Stagging の認証" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Authentication-for-Stagging_thumb.jpg" alt="Authentication for Stagging" width="1027" height="609" border="0" /></a>


  &nbsp;


  ステージングスロットを使用して CI を設定したと仮定した場合、コードを運用環境にスワップできるようになります。 ステージングスロットブレードの [スワップ] ボタンをクリックして、ステージングスロットから運用スロットにコード \ コンテンツをプッシュします。 <b>注:</b> スワップするターゲットスロットを選択できます (スロットが2つ以上ある場合)。スワップ操作を開始する前に、変更をプレビューして、発生する可能性のある警告を解決することができます。


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Swapping.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="切り替え" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Swapping_thumb.jpg" alt="Swapping" width="1378" height="674" border="0" /></a>


  &nbsp;


  結論として、サイトスロットの力と認証の \ 承認機能を組み合わせることにより、開発者は次のことができます。

  <ul>
   <li>運用前環境を web アプリケーション用にセットアップし、それらを運用環境に簡単にスワップして、各環境の設定を微調整します。</li>
   <li>実稼働前環境をセキュリティで保護して、公開されていないことを確認する</li>
  </ul>
