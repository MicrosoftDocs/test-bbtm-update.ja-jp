### YamlMime:Yaml
ms.openlocfilehash: 715c64180dbb61251c8e51f65dd2b37d7b3c3040
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890087"
Slug: open-source-cryptography-cracking-history-s-toughest-code
Title: 'オープン ソース暗号化: 履歴の最も難しいコードを解析する'
Summary: 'コラボレーションによるイノベーション: オープン ソース コミュニティにおける一般的な概念であり、いくつかのすばらしい成果を生み出し、最新のソフトウェアを形成するのに役立っています。'
Content: >-
  <p>コラボレーションによるイノベーション: オープン ソース コミュニティにおける一般的な概念であり、いくつかのすばらしい成果を生み出し、最新のソフトウェアを形成するのに役立っています。 70 年以上前のこの同じ概念は、第二次大戦の長さを推定 2 年短縮するのに役立ち、最新のコンピューティングのシードを設定しました。</p>


  <h2>強力なコード</h2>


  <p>1918 年 2 月 23 日、ドイツのエンジニアである Cher Scherbius は、エンコードされたシークレットを無線波で持ち越すことを可能にする発明である、カリント駆動のサイファー マシンの特許申請を提出しました。 第二次大戦が始まるまでに、ドイツはマシンを改善して、86 兆個のサイファーの組み合わせを備えました。 第二次大戦で最も強力なツールの 1 つとしてテーブルの座を確保し、ドイツの国防総省が最も重要な政府計画を完全に秘密にブロードキャストすることが可能でした。 Enigma を割り込むには&rsquo;、10 年以上の世界の中で最も明るい考え方が必要になります。 幸いにも、彼らは、複数の国の間で協力的な取り組みのおかげで頭のスタートをしました。ただし、これは、国の秘密に関するハードルにも関わらずです。</p>


  <p><a href="https://azure.microsoft.com/en-us/overview/open-source/azure-stories/?wt.mc_id=WW_CE_AP_OO_BLOG_NONE">オープンソースの開発</a> チームが簡単に作業を行うのにクラウドがどのように役立つのかについて確認します。</p>


  <h2>1930 年代のハッキングとハッキング&rsquo;</h2>


  <p>1932 年に、ポーランドのインテリジェンスはドイツ&rsquo;のエニグマ コードの分解に取り組む必要があります。 ポーランドのインテリジェンス チームの台本には、暗号化学者の Marian Reskiki、Polishk Zyskiski、および Jerzy Rozycki が含まれていました。 このトリオは、最終的に Enigma の分解につながる方法とデバイスを開発するために、すばらしい成功を収めました。 数週間以内に、Rekiki は Enigma の内部接続を見分け、チームはすぐに定期的にメッセージの暗号化を解除する可能性があります。 そこから、トリオは、エニグマがさらに複雑になったので、次の 7 年間、猫とマウスのゲームに参加しました。 1939 年に、チームはポーランドから退避し、最終的にはフランスで活動を続けしました。</p>


  <h2>初めてのコード チェックイン?</h2>


  <p>1939 年のドイツ政府の 5 週間前に、ポーランドの暗号化チームは英国とフランスに研究を提供し、Allied コード ブレーカーに 7 年間のヘッド スタートを与える貴重な基盤を提供しました。 コラボレーション ケア パッケージの主なイノベーションには、Enigma の最初の 2 つのキュリーのコードの組み合わせを再現した Zygalski シートと、初期の Enigma でコード化されたメッセージを読み取るブルートフォース暗号分解マシンであるポーランドのボランガが含まれていました。</p>


  <h2>共同作業の必要性</h2>


  <p>英国政府が 1939 年に第一次大陸に入った際、Alan Turing&rsquo; という名の英国の数学者が、英国のインテリジェンスのコードを破る複雑な Bletchley Park&nbsp; に割り当てばばなっていた。1940 年にGitHubは見つかりませんでしたが、Turing &quot;&quot;&mdash;はコミュニティから投稿されたポーランドのコンバマというアイデアにインスピレーションを与えています。 ポーランドのチームに何か月も費やして仕事を&#39;した後、Turing はエピローファニーを持っていました。 その結果、ポーランド語のラバマよりも効果的にエニグマ コードを壊す可能性がある機械機械であるボレテが生み出された。 進歩は進んでいるが、Turing はイノベーションを迅速に追跡する必要があったことを知っていました。 これを行うには、&ldquo;&rdquo;&mdash;悪名高いオオカミが同僚のコード ブレーカーとの共同作業を開始しました。マテマティアンの Gordon Welchman とエンジニアの Tommy Flowers です。</p>


  <h2>新しいコードのチェックイン</h2>


  <p>最新のオープン ソース開発者と同様に、Welchman 自身はすぐに、Turing の設計を革新し、改善する&#39;見つかりました。 Welchman &quot;&quot; は対角線ボードと呼ばれるボレスに追加を作成し、冗長な組み合わせの検索を排除し、マシンをはるかに効率的にしました。 強化されたボレンデの設計は、英国のインテリジェンスに大陸全体を通じて役立ち、数え切れないほどの命を節約し、競合の早期終了に役立つでしょう。</p>


  <p>コラボレーションベースのイノベーションは、&#39;で終わらなかったのです。 Turing&#39;の新入社員である Tommy Flowers は、大陸のハードウェアのアイデアを取り入れ、独自の問題に適応しました。「大陸のサイファーを解読する」です。 Enigma とは異なり、英国のインテリジェンスには、分解するドイツ語のマシンが動作していけなかった。 エニグマよりもさらに複雑だったのは、英国のインテリジェンスが新しい何かを作成する必要がある、</p>


  <p>花とチューリング&mdash;は、花をインスピレーションとして使用して、プログラムできるマシンである本質的に情報を入力できるマシンが必要だと気付 &quot;いています。&quot; この大きな飛び進みにより、世界で初めてプログラミング可能&#39;コロシアスが生み出されました。 コロシアス&mdash;は、コーディング (ソフトウェア) に基づいてさまざまな種類の計算に使用できる、適応可能でプログラミング可能なボレットアンマシンの後の自然な次のステップでした。 何千ものバキューム 式を使用して、最初の Colossus は 1943 年にサービスに入り、間もなく大島の解読を開始しました。</p>


  <h2>コラボレーションによるイノベーションのモデル</h2>


  <p>Colossus は、現在まで、Turing&#39;の最大のイノベーションの 1 つであり、コンピューター設計の基礎である「再プログラミングのアイデア」と別個の ROM と RAM の理論を引き起こすのに役立ちます。 理論上のコンピューター サイエンス、チューリング、チーム、およびポーランドの元のコード ブレーカーの親として広く考えられているのは、オープン ソース コミュニティにおける重要な概念の説得力のある例として機能します。コラボレーションによるイノベーションです。<br>

  &nbsp;<br>

  Colossus&#39;の間には長い道のりは存在しますが、Turing と Flowers が協力してコンピューターを発明する際には、オープン ソースの開発者が最近使い慣れたコラボレーションのシードが存在しました。 これらは、開発者がクラウドベースの環境で活用できるのと同じシードです。 これは&#39;&mdash;感じであり、Bletchley Park で何年も前に行ったような、最新の開発チームの活用に適切なクラウド ソリューションが役立ちます。</p>


  <p><a href="https://azure.microsoft.com/en-us/overview/open-source/azure-stories/?wt.mc_id=WW_CE_AP_OO_BLOG_NONE">オープン アプローチ</a> を使用したクラウド コンピューティングが、現在の課題を解決&#39;確認します。</p>
