### YamlMime:Yaml
ms.openlocfilehash: 99e6580de287e223505df4e4e4981fa64b661cb2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889445"
Slug: introducing-the-azure-cosmosdb-change-feed-processor-library
Title: '#Azure #CosmosDB Change Feed Processor ライブラリの概要'
Summary: Cosmos DB 上で強力なアプリケーションを構築するために、変更フィードのサポートを構築しました。これにより、コレクション内のドキュメントの並べ替えられた一覧が変更された順序で提供されます。 ここでは、使いやすさを維持しながらスケーラビリティに対処するために、Cosmos DB Change Feed Processor ライブラリを紹介します。 このブログでは、変更フィードプロセッサライブラリを使用するタイミングと方法について説明します。
Content: >-
  <p>Azure Cosmos DB は、高速で柔軟なグローバルにレプリケートされたデータベースサービスです。読み取りと書き込みの待機時間を予測して、大量のトランザクションデータや運用データを格納するために使用されます。 <a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Cosmos DB</a>上で強力なアプリケーションを構築するために、変更フィードのサポートを構築しました。これにより、コレクション内のドキュメントの並べ替えられた一覧が変更された順序で提供されます。 ここでは、使いやすさを維持しながらスケーラビリティに対処するために、Cosmos DB Change Feed Processor ライブラリを紹介します。 このブログでは、変更フィードプロセッサライブラリを使用するタイミングと方法について説明します。</p>


  <h2>Change feed: Cosmos DB を使用したイベントソーシング</h2>


  <p>データを格納することは、adventure の始まりにすぎません。 Change feed サポートを使用すると、変更が表示された後に必要な操作に応じて、さまざまなサービスと統合できます。</p>


  <p><strong>#1 の例:</strong> オンラインショッピング web サイトを構築していて、顧客が購入を完了した後に電子メール通知をトリガーする必要がある場合。 Azure Functions、Azure Notification Hub、Azure アプリ Services、またはカスタム構築のマイクロサービスを使用するかどうかにかかわらず、change feed を使用すると、変更が発生した順に表示され、シームレスな統合が可能になります。</p>


  <p><strong>#2 の例:</strong> 自律的な車両からデータを格納しており、受信センサーデータの異常を検出する必要がある。 新しいエントリが Cosmos DB に格納されると、変更フィードに表示されるこれらの変更は、Azure HDInsight、Apache Spark、または Apache Storm によって直接処理されるようになります。 change feed サポートを使用すると、データが Cosmos DB に格納されている間、インテリジェントな処理をリアルタイムで適用できます。</p>


  <p><strong>#3 の例:</strong>アーキテクチャの変更により、Cosmos DB コレクションのパーティションキーを変更する必要があります。 Change feed を使用すると、受信した変更の処理中にデータを新しいコレクションに移動できます。 データを任意の場所から Cosmos DB に移動すると、結果は0ダウンします。<br>

  &nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8e9fa96a-27ce-42cd-b2ad-19c0efcbc568.png"><img alt="changefeedoverview_white" border="0" height="1335" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/199f0195-e9a9-4f70-9121-14ac183a8012.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="changefeedoverview_white" width="2334"></a></p>


  <h2>複数のパーティションを持つ大規模なデータストレージを操作するにはどうすればよいですか。</h2>


  <p>データストレージのニーズが増すにつれて、 &rsquo; データを格納するために複数のパーティションを使用する可能性があります。 &rsquo;各パーティションから手動で変更を読み取ることはできますが、change Feed プロセッサを使用すると、change FEED API を抽象化することで、より簡単に変更を行うことができます。 この関数は、パーティション間の読み取りを容易にし、変更フィードイベント処理を複数のコンシューマーに分散させます。 このライブラリは、チェックポイントとパーティションリース管理 (change feed 操作) を使用して、スレッドセーフでマルチプロセスの安全なランタイム環境を提供します。 Change Feed Processor ライブラリは、.net 開発用の NuGet パッケージとして提供されています。</p>


  <p><strong>Change Feed Processor ライブラリを使用する場合:</strong></p>


  <ul>
   <li>データが複数のパーティションにまたがって格納されている場合に change feed から更新をプルする</li>
   <li>コレクション間でのデータの移動またはレプリケート</li>
   <li>データおよび変更フィードに対する更新によってトリガーされるアクションの並列実行</li>
  </ul>


  <p>Change Feed Processor ライブラリの概要はシンプルで軽量です。 次の例では、さまざまな都市に関連付けられているニュースイベントを含むドキュメントのコレクションがあります。 ここでは、パーティションキーとして city &rdquo; を使用 &ldquo; します。 いくつかの手順で、任意のパーティションから任意のドキュメントに加えられたすべての変更を出力できます。</p>


  <p>これを設定するには、 <a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB.ChangeFeedProcessor/" target="_blank">Change Feed Processor Library Nuget パッケージ</a> をインストールし、リースコレクションを作成します。 リースコレクションは、書き込みリージョンの近くにあるアカウントを使用して作成する必要があります。 このコレクションは、パーティションおよびホスト情報ごとの変更フィードの読み取り進行状況を追跡します。<br>

  &nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6f7fff59-bc54-4ce3-a800-8655c2efab2b.png"><img alt="azure-cosmos-db-2" border="0" height="539" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d9c03c3b-a82f-479b-9c77-9d3e5ec4e178.png" style="background-image: none; display: inline; border-image: none" title="cosmos-2" width="1024"></a></p>


  <p>新しい変更が行われたときに実行されるロジックを定義するには、 <strong>processchanges async </strong>関数を編集します。 ここでは、新しいドキュメントまたは更新されたドキュメントのドキュメント ID を単に印刷します。 この関数を変更して、さまざまなタスクを実行することもできます。</p>


  <p>&nbsp;</p>


  <pre class="prettyprint">

  public Task ProcessChangesAsync(ChangeFeedObserverContext context, IReadOnlyList&lt;Document&gt; docs)
          {
              Console.WriteLine(&quot;Change feed: total {0} doc(s)&quot;, Interlocked.Add(ref totalDocs, docs.Count));
              foreach (Document doc in docs)
              {
                  Console.WriteLine(doc.Id.ToString());
              }

              return Task.CompletedTask;
          }

  </pre>


  <p>&nbsp;</p>


  <p>次に、変更フィードプロセッサを開始するために、 <strong>changefeed processorhost</strong>をインスタンス化し、Azure Cosmos DB コレクションに適切なパラメーターを指定します。 次に、 <strong>Registerobserverasync</strong> を呼び出して、 <strong>IChangeFeedObserver</strong> (この例では<strong>DocumentFeedObserver</strong> ) の実装をランタイムに登録します。 この時点で、ホストは最長一致 &quot; の &quot; アルゴリズムを使用して、Azure Cosmos DB コレクション内のすべてのパーティションキー範囲のリースを取得しようとします。 これらのリースは一定の期間存続しますが、その後、更新する必要があります。 新しいノードがオンラインになると (この場合はワーカーインスタンス)、リース予約が配置されます。 時間の経過と共に、各ホストがより多くのリースを取得しようとすると、ノード間で負荷が変化します。</p>


  <p>&nbsp;</p>


  <pre class="prettyprint">

  DocumentFeedObserver docObserver = new DocumentFeedObserver();


  ChangeFeedEventHost host = new ChangeFeedEventHost(hostName, documentCollectionLocation, leaseCollectionLocation, feedOptions, feedHostOptions);


  await host.RegisterObserverAsync(docObserverFactory);


  </pre>


  <p>&nbsp;</p>


  <h2>次の手順</h2>


  <ul>
   <li>ドキュメント「 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed#change-feed-processor" target="_blank">Azure での Change Feed サポートの使用 CosmosDB」</a>を参照してください。</li>
   <li>サンプルコードを試してみてください。 <a href="https://github.com/Azure/azure-documentdb-dotnet/tree/master/samples/ChangeFeedMigrationTool" target="_blank">新しいコレクションに対する変更を読み取り、コピーする例</a>です。</li>
   <li>開始するに<a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB.ChangeFeedProcessor/" target="_blank">は、NuGet パッケージをダウンロードして</a>ください。</li>
  </ul>


  <p><br>

  Twitter <a href="https://twitter.com/AzureCosmosDB" target="_blank">@AzureCosmosDB</a> と<a href="https://twitter.com/search?q=%23cosmosdb&amp;lang=en" target="_blank"> # CosmosDB</a>に関する最新の Azure Cosmos DB ニュースや機能について最新情報を入手し、 <a href="https://stackoverflow.com/questions/tagged/azure-cosmosdb" target="_blank">Stack Overflow</a>の開発者フォーラムでご連絡ください。</p>
