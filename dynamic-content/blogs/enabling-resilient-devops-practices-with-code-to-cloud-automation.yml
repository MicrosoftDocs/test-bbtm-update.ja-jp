### YamlMime:Yaml
ms.openlocfilehash: 89cd20751c05ebf2b1bbab81064eb62b6a06a1b1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139890808"
Slug: enabling-resilient-devops-practices-with-code-to-cloud-automation
Title: コードからクラウドDevOps回復力のある方法を有効にする
Summary: Microsoft Ignite では、新しい GitHub Actions for Azure を発表しました。これは、Azure と GitHub の統合の成長カタログに追加され、近日公開予定です。
Content: >-
  <p><em>このブログの投稿は、Usha が共同作成者として、Product Manager、Usha GitHub。</em></p>


  <p>デジタル変革が進化するにしたがって、顧客の期待も高まる。 企業は、ユーザーベースの中断をほとんどまたは全く受け入れないバグ防止更新プログラムを頻繁にリリースすることで、継続的な価値を提供することが期待されています。 国や政府が厳格な新しいデータとセキュリティ対策を展開するにつれて、これは小さな大きな問題では "ない"。</p>


  <p>では、ガバナンス、セキュリティ、コンプライアンスの標準を維持しながら、企業はどのようにしてより迅速に出荷できるのでしょうか。その中で、作業をリモートに強制するパンデミックが続くのでしょうか。</p>


  <p><a href="https://aka.ms/devopsreport" target="_blank">Enterprise DevOps 2020 年から 2021</a> 年のレポートに基づき、調査対象の上位企業の 80&ldquo;&rdquo;% が、ソフトウェア開発ライフサイクル (SDLC) の初期段階に移行し始めた、またはガバナンス、セキュリティ、コンプライアンスを自動化したと回答しています。 これらの企業は、ビルドと&rsquo;&ldquo;リリースのワークフローを自動化するだけでなく、コードとしてのすべてという考え方も採用&rdquo;しています。 この変化&ldquo;&rdquo;は、インフラストラクチャの構成とリリース パイプラインだけでなく、コンプライアンスとセキュリティ ポリシーもコードとして記述され、継続的な改善を可能にし、再使用、回復性、透明性の向上を促進します。</p>


  <p>これを&rsquo;念頭に置いて、引き続き絞り込み、更新し、GitHub Actions ポートフォリオに追加します。 <a href="https://aka.ms/MS-Ignite-Session-Resiliant-DevOps-Practices" target="_blank">Microsoft Ignite</a> では、新しい GitHub Actions for Azure を発表しました。これは、<a href="https://aka.ms/GitHubActionsforAzureDocs" target="_blank">Azure と GitHub</a> の統合の成長カタログに追加され、近日公開予定です。 GitHub Actions for Azure を使用すると、Web アプリケーションから Kubernetes へのサーバーレス関数から Azure SQL および MySQL&mdash; データベースへの複数の Azure&mdash; サービスへのデプロイが可能になります。これにより、企業は回復性を確保しながら、SDLC を管理するための自動化されたワークフローを柔軟に構築できます。</p>


  <h2>コードAzure Policyコードとして管理するGitHub</h2>


  <p>クラウド ガバナンスの取り組みでは、Azure portal の各ポリシーを手動で管理する作業から、エンタープライズ規模で管理し、共同作業を行い、反復可能なものに移行する必要性が高まっています。 この取り組みでお客様を支援するために、Azure Policyと GitHubの統合がさらに強力に行われたと発表します。 数回のクリックで、Azure ポリシーを GitHubリポジトリに簡単にエクスポートできます。 エクスポートされたポリシーはすべて、ファイルとしてファイルとしてGitHub。 その後、[管理] アクションを使用して、バージョン管理とプッシュ ポリシー ファイルの変更を使用して、Azure Policy <a href="https://github.com/marketplace/actions/manage-azure-policy" target="_blank">を</a> 追跡Azure Policyできます。 詳細<a href="https://aka.ms/AA9ojd6" target="_blank">については、「Azure Policyを</a>使用したコードとしてのGitHubの管理」を参照し、<a href="https://aka.ms/policyascode" target="_blank">Azure Policy機能に</a>アクセスする方法に関するページを参照してください。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/af5cb530-1ec0-4062-a9b3-facc3b10e553.png"><img alt="Export policy to GitHub." border="0" height="768" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/385a8bf1-35dd-494e-af1b-eea7092fb5fa.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="983"></a></p>


  <h2>ARM インフラストラクチャをコードとしてデプロイする</h2>


  <p>クラウドへの移行により、多くのチームはソリューションをクラウドに繰り返しデプロイし、インフラストラクチャが確実に信頼性の高い状態にある必要があります。 これらの課題に対応するには、Azure Resource Management (ARM) テンプレートを使用してコードとしてデプロイする必要があるインフラストラクチャを定義することで、デプロイを自動化できます。</p>


  <p>この問題に対処するために、Deploy Azure Resource Manager <a href="https://github.com/marketplace/actions/deploy-azure-resource-manager-arm-template" target="_blank">Template アクションをリリースします</a>。 このアクションを使用すると、ARM テンプレートをデプロイし、Azure リソースを管理するワークフローを自動化できます。 このアクションは、任意のデプロイ スコープで ARM テンプレートをデプロイするために <a href="https://docs.microsoft.com/Azure/azure-resource-manager/resource-group-template-deploy-rest#deployment-scope" target="_blank">使用できます</a>。リソース グループ、サブスクリプション、または管理グループ スコープ。 この ARM デプロイ アクションの出力は、ワークフロー内の後続のアクションでも、さらに処理するために使用できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0b4886af-e4e9-42bc-8ec5-c459a18b7152.png"><img alt="Deploy ARM templates." border="0" height="2072" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0a3f839a-a590-4508-b258-9f0c7f315abc.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="ARM テンプレートをデプロイします。" width="3584"></a></p>


  <h2>変更できないインフラストラクチャ用に Azure 仮想マシン イメージを構築する</h2>


  <p>新しく展開された [ <a href="https://aka.ms/build-vm-image-action" target="_blank">Azure 仮想</a> マシン イメージのビルド] アクションにより、仮想マシン (VM) イメージのカスタマイズ、作成、配布が簡単になりました。 このアクションを使用して、継続的デリバリー ワークフローで生成された成果物を保持するカスタム VM イメージを作成し、<a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/shared-images-portal" target="_blank">それらを Shared Image Gallery</a> バージョンまたはマネージド イメージまたは仮想ハード ディスク (VHD) として配布し、<a href="https://aka.ms/AA9ny4b" target="_blank">GitHub と Azure portal</a> の間で完全な追跡可能性を取得できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b1c30090-54a0-49f1-8957-46fb5735f8a4.png"><img alt="Virtual machine image gallery." border="0" height="604" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a7344646-06db-40b1-8efa-b01a3d938dad.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1178"></a></p>


  <h2>Kubernetes の変更を Azure portalコミットGitHubトレースする</h2>


  <p><a href="https://github.com/Azure/k8s-deploy" target="_blank">Kubernetes</a> クラスターへのデプロイ アクションが強化され、Azure portal の変更ログ ビューを有効にして、Azure Kubernetes Service (AKS) クラスターで実行されたデプロイを、変更のデプロイに使用された特定の GitHub ワークフローにデプロイされた正確な GitHub コミットと問題からトレースできます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/816dc15d-d2b3-4a7a-a80d-cf5780b3eff3.png"><img alt="A changelog view in the Azure portal." border="0" height="522" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6cbda55e-2faa-4948-8d03-89a0da20abce.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="プロパティの変更ログ ビュー Azure portal。" width="1709"></a></p>


  <h2>Pull Request ワークフローの一部としてコンテナー イメージをスキャンする</h2>


  <p>コンテナー スキャン アクションをワークフロー<a href="https://github.com/Azure/container-scan" target="_blank"></a>に追加し、継続的インテグレーション (CI) またはプル要求 (PR) ワークフローの一部として作成された Docker イメージをセキュリティで保護するためのチェックを追加できます。 これは、開発者が Docker イメージの一般的な脆弱性をスキャンし、コンテナー レジストリにプッシュする前、またはコンテナー化された Web アプリまたは Kubernetes クラスターにデプロイする前に信頼を得るのに役立ちます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b84e1a53-02ab-4a5f-8400-e4f9f3df7672.png"><img alt="Container scanning action results." border="0" height="960" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86405469-d1ec-4dfa-aaca-b983e57cf4c2.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="コンテナースキャン アクションの結果。" width="1911"></a></p>


  <p>&nbsp;</p>


  <h2>はじめに</h2>


  <p>GitHub、<a href="https://github.com/Azure/build-vm-image" target="_blank">Azure 仮想</a>マシン<a href="https://aka.ms/AA9ojd6" target="_blank">の</a>デプロイ、<a href="https://github.com/Azure/arm-deploy" target="_blank">ARM</a> テンプレートのデプロイ アクション、およびコンテナー スキャン アクションとの統合を開始するには、Azure Policy のドキュメントを<a href="https://github.com/Azure/container-scan" target="_blank"></a>参照してください。</p>


  <p>また、CI/CD プロバイダーとして DevOps Actions <a href="https://aka.ms/devopsstarterforgithub" target="_blank"></a> をサポートするGitHub向上したスターター エクスペリエンスを自由に確認してください。 この新しい機能強化により、開発者は 4 つの簡単な手順GitHubサンプル アプリケーションのエンド to エンドのワークフローを設定できます。</p>


  <p>&rsquo;&rsquo;これらの機能に関する変更や提案がある場合は、フィードバックと、pull request を受け取る <a href="https://github.com/azure/actions" target="_blank">GitHub Action</a>&mdash;&rsquo; リポジトリへの投稿が気に入っています。 特定のアクションで問題が発生した場合は、アクション リポジトリで問題を開くすることもできます。</p>


  <ul>
      <li>コードから<a href="https://aka.ms/GitHubandAzure" target="_blank">クラウドGitHub自動化するために、Azure との統合の詳細を確認します</a>。</li>
      <li>詳細なアクション<a href="https://github.com/Azure/actions" target="_blank">の包括的な一覧GitHub確認してください</a>。</li>
  </ul>
