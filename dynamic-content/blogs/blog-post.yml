### YamlMime:Yaml
ms.openlocfilehash: 0e2106026c8fac154f09a455a47c98b04870ab68
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889538"
Slug: blog-post
Title: WebJobs SDK のプレビューの発表
Summary: >-
  本日、Scott Hanselman が導入した Windows Azure WebJobs SDK の更新プログラムをリリースします。


  このリリースをダウンロードする


  WebJobs SDK は、ギャラリーからNuGetできます。 コンソール アプリケーションで,...
Content: "本日、Scott Hanselman が導入した Windows Azure WebJobs SDK の更新プログラムを<a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">リリースします</a>。\n\n<strong>このリリースをダウンロードする</strong>\n\nWebJobs SDK は、ギャラリーからNuGetできます。 コンソール アプリケーションでは、次のように NuGet パッケージ マネージャー コンソールを使用して、NuGet ギャラリーからこれらのパッケージをインストールまたは更新できます。\n<pre class=\"prettyprint\">Install-Package Microsoft.WindowsAzure.Jobs -Pre \nInstall-Package Microsoft.WindowsAzure.Jobs.Host -Pre</pre>\n<strong>WebJobs SDK のシナリオ</strong>\n\nSDK を使用してより簡単に処理できる一般的なシナリオを次Windows Azure WebJobsします。\n<ul>\n<ul>\n <li>画像処理または CPU 負荷の高い作業。 Web サイトの一般的な機能は、画像またはビデオをアップロードする機能です。 多くの場合、アップロード後にコンテンツを操作する必要があります</li>\n <li>キュー処理。[VH1] Web フロントエンドがバックエンド サービスと通信する一般的な方法は、キューを使用する方法です。 Web サイトは、作業を完了する必要がある場合、メッセージをキューにプッシュします。 バックエンド サービスは、キューからメッセージをプルし、処理を完了します。</li>\n <li>RSS 情報集約。 RSS フィードのリストを維持するサイトがある場合は、フィードからのすべての記事をバックグラウンド プロセスにプルすることができます。</li>\n <li>ログ ファイルの集計やクリーンアップなどのファイルのメンテナンス。分析ジョブを実行するために、いくつかのサイトによって作成されたログ ファイルや別々の期間に作成されたログ ファイルを組み合わせる作業が必要になる場合があります。 また、使用していないログ ファイルをクリーンアップするために毎週実行するタスクをスケジュール設定する場合もあります。</li>\n <li>電子メールの送信など、バックグラウンド スレッドで実行したいその他の時間のかかるタスク。 これまでは、アプリがアイドル状態の場合、IIS ASP.NET アプリがリサイクルされたため、この操作を実行する必要が生じなかったためです。 これで、<a href=\"https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx\">Azure Web サイトWindows AlwaysOn</a> を使用して、アプリがアイドル状態のときに Web サイトがリサイクルされるのを維持できます。<a href=\"https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx\">AlwaysOn</a> は、サイトがスリープ状態にならないよう保証します。つまり、WebJobs と WebJobs SDK を使用して実行時間の長いタスクまたはサービスを実行できます。</li>\n</ul>\n</ul>\n<strong>WebJobs SDK とは</strong>\n\nAzure <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">Web サイトWindows WebJobs</a> 機能を使用すると、Web サイトでサービスやバックグラウンド タスクなどのプログラムを簡単に実行できます。 ファイル、.<em>cmd</em>、.exeファイルなどの実行可能ファイル<em>.batWeb サイト</em>にアップロードして実行できます。<em> </em> ただし、最も便利な作業を行うには、多くの複雑なプログラミングが必要です。 ここで、Windows Azure WebJobs SDK が提供されます。これは、一般的なタスクを実行するために最小限のコードを記述できるフレームワークを提供します。\n\nWebJobs SDK には、BLOB、キュー、テーブルのWindows Azure Storageするバインドおよびトリガー システムがあります。 バインディング システムを使用すると、オブジェクトの読み取りまたは書き込みを行うWindows Azure Storageできます。 トリガー システムは、キューまたは BLOB で新しいデータを受信するたびに、コード内の関数を呼び出します。\n\nWeb ジョブ SDK には次のコンポーネントが含まれています。\n<ul>\n<ul>\n <li>NuGetパッケージ。 このNuGetを使用すると、コードで WebJobs SDK バインドを使用し、Windows Azure Storageテーブル、BLOB、キューを使用してシステムをトリガーできます。</li>\n <li>ダッシュボード:  WebJobs SDK の一部は、Windows Azure Web サイトに既にインストールされ、NuGet パッケージを使用して作成するプログラムの詳細な監視と診断を提供します。 これらの監視および診断機能を使用するためにコードを記述する必要はありません。</li>\n</ul>\n</ul>\n<strong>SDK の目標</strong>\n<ul>\n<ul>\n <li>バックグラウンド処理の作業を行う際に、Windows Azure Storageを簡単に使用する方法を提供します。\n<ul>\n <li>SDK を使用すると、アプリケーション内でAzure Storage使用しやすくなります。 ストレージから読み取り/書き込みを行うコードの記述を扱う必要はありません。</li>\n</ul>\n</li>\n <li>ユーザーに診断コードやログ コードを記述することなく、豊富な診断と監視エクスペリエンスを提供します。</li>\n</ul>\n</ul>\n<strong>SDK の機能</strong>\n\n<strong>Azure Storage</strong>\n\nSDK は、Azure BLOB、キュー、テーブルで動作します。\n\n<strong>トリガー</strong>\n\n関数は、キューまたは BLOB で新しい入力が検出されると実行されます。 例: 次のスニペットの ProcessQueue 関数は、新しいメッセージが \"longqueue\" という名前のキューに入るとトリガーされます。 トリガーの詳細については、以下を参照してください。<a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/01/28/trigger-bindings-and-route-parameters-in-azurejobs.aspx\">https://blogs.msdn.com/b/jmstall/archive/2014/01/28/trigger-bindings-and-route-parameters-in-azurejobs.aspx</a>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/8156.P1.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/8156.P1.png\" border=\"0\"></a>\n\n<strong>バインド</strong>\n\nSDK では、 へのバインドがサポートされ、C# BCL 型と Azure ストレージ (BLOB、テーブル、キューなど) の間のモデル バインドが提供されます。 これにより、開発者は BLOB、テーブル、キューからの読み取り/書き込みを簡単に行えます。開発者は、Azure Storage からの読み取り/書き込みに関する平般的なコードについて学習する必要はありません。\n<ol>\n <li><strong>利便性</strong>。 使用に最も役立つ型を選択すると、WebJobs SDK によってグルー コードが管理されます。 BLOB に対して文字列操作を行う場合は、TextWriter への変換方法を気にするのではなく、TextReader/TextWriter に直接バインドできます。</li>\n <li><strong>フラッシュと終了</strong>: WebJobs SDK は未処理の出力を自動的にフラッシュして閉じます。</li>\n <li><strong>単体テスト可能性</strong>。 SDK を使用すると、ICloudBlob ではなく TextWriter のような BCL 型をモックできるので、コードを単体テストできます。</li>\n <li><strong>診断</strong>モデル バインドはダッシュボードと一緒に機能し、パラメーターの使用状況に関するリアルタイムの診断を提供します。</li>\n</ol>\n現在サポートされているバインディングを次に示します。 <strong>Stream、TextReader/Writer、String</strong>\n\nオブジェクトに対するバインドの動作の詳細についてはAzure Storage <a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/18/azure-storage-bindings-part-1-blobs.aspx\">Blobs</a><strong>、 </strong> Queues、およびTable <a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/18/azure-storage-bindings-part-2-queues.aspx\">に関するページ</a><strong>を</strong><a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/03/06/azure-storage-bindings-part-3-tables.aspx\"><strong>参照してください。</strong></a>\n\n<strong>ホスティング</strong>\n\nホストは、プログラム内のすべての関数が何を持っているかを知る実行コンテナーです。 JobHost オブジェクト ( <a href=\"https://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs.Host\">Microsoft.WindowsAzure.Jobs.Host</a> に含まれています) は、バインドを読み取り、トリガーでリッスンして、関数を呼び出します。\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2500.P2.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2500.P2.png\" border=\"0\"></a>\n\n<strong>Web ジョブを監視するダッシュボード。</strong>\n\nWebJobs (<strong><em>任意の</em></strong>言語および任意の種類で記述) が実行される場合は、リアルタイムで監視できます。 実行されているかどうかを確認したり、Web ジョブの特定の実行のログを確認したりすることもできます。\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/5415.P4.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/5415.P4.png\" border=\"0\"></a>\n\nSDK を使用して Web ジョブを作成した場合は、プログラム内の関数の診断と監視エクスペリエンスを取得します。 例: たとえば、次のフローを持つ \"ImageResizeAndWaterMark\" という名前の Image processing WebJob があるとします。 ユーザーが画像を BLOB に \"images1-input\" コンテナーにアップロードすると、WaterMark 関数がトリガーされます。 Watermark は画像を処理し、images2-input conainer に書き込み、画像のサイズを変更して \"images2-output\" BLOB コンテナーに書き込む Resize 関数をトリガーします。 次の図は、この Web ジョブのコードを示しています。\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7652.P-code.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7652.P-code.png\" border=\"0\"></a>\n\nAzure で WebJob を実行すると、Windows Azure Websites ポータルの [WEBJOBS] タブにある [ImageResizeAndWaterMark] のログ リンクをクリックして、Web ジョブ ダッシュボードを表示できます。 ダッシュボードは SiteExtension です。 という URL に移動してアクセスできます <a href=\"https://mysite.scm.azurewebsites.net/azurejobs\">https://mysite。<strong>scm.azurewebsites.net/</strong> <strong>azurejobs</strong></a><a href=\"https://mysite.scm.azurewebsites.net/azurejobs\">。</a>  SiteExtension にアクセスするには、デプロイ資格情報が必要です。 サイト拡張機能へのアクセスの詳細については、Kudu プロジェクトのドキュメントを参照してください。 <a href=\"https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service\">https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service</a>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2437.p-final.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2437.p-final.png\" border=\"0\"></a>\n\n<strong>関数の実行の詳細</strong>\n\nこの \"ImageResizeAndWaterMark\" WebJob の特定の実行を監視している場合は、次のような関数の詳細を表示できます。\n<ul>\n<ul>\n <li>この関数のパラメーターは何ですか?</li>\n <li>関数の実行にどのくらいの時間がかかっています。</li>\n <li>BLOB からの読み取りにかかる時間と、読み取り/書き込まれたバイト数。</li>\n</ul>\n</ul>\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7242.P-again.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7242.P-again.png\" border=\"0\"></a>\n\n<strong>再生を呼び出 &amp; す</strong>\n\n上の例では、WaterMark 関数が何らかの理由で失敗した場合、実行チェーンをトリガーして Resize を呼び出す新しいイメージを Replay WaterMark にアップロードできます。 これは、関数をまとめてチェーンするための複雑なグラフがある場合に、問題を診断してデバッグするのに役立ちます。 ダッシュボードから関数を呼び出す方法も可能です。\n\n<strong>関数の因果関係</strong>\n\n上の例では、WaterMark 関数が BLOB に書き込むときに Resize 関数がトリガーされるのを知っています。 ダッシュボードには、関数間のこの因果関係が表示されます。 新しい入力が検出されるとトリガーされる多数の関数をチェーンしている場合は、この因果関係グラフを確認すると便利です。\n\n<strong>BLOB の検索</strong>\n\n[BLOB の検索] をクリックすると、その BLOB に対して何が起こったかについての情報を取得できます。 例えば。[VH1] ImageResizeAndWaterMark の場合、WaterMark 関数が実行されたため、BLOB が書き込まれます。 検索 BLOB の詳細については、次を参照してください。<a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/19/who-wrote-that-blob.aspx\">https://blogs.msdn.com/b/jmstall/archive/2014/02/19/who-wrote-that-blob.aspx</a>\n\n<strong>サンプル</strong>\n\nWebJobs SDK のすべてのサンプルがあります<a href=\"https://aspnet.codeplex.com/SourceControl/latest#Samples/AzureWebJobs/ReadMe.txt\">https://aspnet.codeplex.com/SourceControl/latest#Samples/AzureWebJobs/ReadMe.txt</a>\n<ul>\n<ul>\n <li>BLOB、テーブル、キューのトリガーとバインドを使用する方法のサンプルを確認できます。</li>\n <li>PhluffySuffy というサンプルがあります。これは、顧客が Blob Storage から画像を処理する関数をトリガーする画像をアップロードできる画像処理 Web サイトです。</li>\n</ul>\n</ul>\n<strong>ドキュメント</strong>\n<ul>\n<ul>\n <li><a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs\">はじめに SDK を使用Windows Azure WebJobsする</a></li>\n <li><a href=\"https://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK\">Channel 9 のビデオ「ジョブを SDK を使用してジョブを簡単Windows Azure WebJobsする</a></li>\n <li><a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">Windows Azure WebJobs WebJobs SDK</a></li>\n <li><a href=\"\"></a></li>\n <li>WebJobs および WebJobs SDK に関する記事の一覧</li>\n</ul>\n</ul>\n<strong>SDK を使用した WebJobs のデプロイ</strong>\n\nKudu または Web デプロイを使用して Web ジョブをデプロイできます。 Web ジョブを Web サイトと共にデプロイする場合は、次のプロトタイプを確認 <a href=\"https://visualstudiogallery.msdn.microsoft.com/f4824551-2660-4afa-aba1-1fcc1673c3d0\">してください</a>。\n\n<strong>0.1.0-alpha1 から 0.2.0-alpha2 の既知の問題</strong>\n\n<strong>ダッシュボードは、0.2.0-alpha2 でデプロイされた WebJobs でのみ機能します</strong>\n\nSDK の 0.1.0-alpha1 でデプロイされた WebJob がある場合、ダッシュボードにアクセスして Web ジョブのログを表示すると、\"ホストが実行されていない\" という警告が表示されます。これは、このリリースの一環として、新しいバージョンのダッシュボードがすべての Azure Web サイトにデプロイされる場合に発生します。 新しいダッシュボードには、0.1.0-alpha1 と互換性がないプロトコルの変更があります。 このエラーを回避するには、0.2.0-alpha2 パッケージを使用して Web ジョブを更新しNuGet WebJob を再デプロイしてください。\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7522.Image-2.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7522.Image-2.png\" border=\"0\"></a>\n\n<strong>フィードバックを送信し、ヘルプを得る</strong>\n\nAzure <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">Web サイト</a>と Windows SDK の WebJobs 機能Windows Azure WebJobsプレビュー中であり、正式にはサポートされていません。 フィードバックは、今後のバージョンに加えた変更で考慮されます。\n\nチュートリアルに直接関連しない質問がある場合は、<a href=\"https://azure.microsoft.com/en-us/support/forums/\">Windows Azure</a> フォーラム、ASP.NET フォーラム、または StackOverflow.com に投稿<a href=\"https://stackoverflow.com/\">できます</a>。<a href=\"https://forums.asp.net/1247.aspx\"></a> Twitter <a href=\"https://twitter.com/search?q=AzureWebJobs\">#AzureWebJobs</a> を使用します。"
