### YamlMime:Yaml
ms.openlocfilehash: edf528d2e52bc3e81c5753b8a7cdfc2517a1446a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910812"
Slug: developing-a-windows-azure-appfabric-application
Title: Windows Azure AppFabric アプリケーションの開発
Summary: これまでの Vikram Desai によるこの投稿は、AppFabric チームブログの2011年7月15日に最初に掲載されています。  この記事では、web フロントエンドを含む AppFabric アプリケーションの開発について説明します。
Content: "<p><i>これまでの <a target=\"_blank\" href=\"https://social.msdn.microsoft.com/profile/vikram%20desai%20-%20microsoft/\">Vikram Desai</a> によるこの投稿は、AppFabric チームブログの2011年7月15日に最初に掲載されています。</i></p>  <p>この記事では、web フロントエンドとデータベースを含む AppFabric アプリケーションの開発について説明します。 アプリケーションを開発する前に、 &rsquo; Microsoft Live Id を使用して、APPFABRIC LABS ポータル <a target=\"_blank\" href=\"https://portal.appfabriclabs.com/\">https://portal.appfabriclabs.com</a> にサインインします。これは限定的な CTP であるため、承認されたユーザーのみがサービスにアクセスできますが、すべてのユーザーがローカルコンピューター上で <a target=\"_blank\" href=\"https://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=17691\">SDK と VS ツール</a> を試すことができます。 AppFabric 6 月 CTP へのアクセスを要求するには、 <a target=\"_blank\" href=\"https://blogs.msdn.com/b/appfabric/archive/2011/06/24/see-what-our-customers-are-already-doing-with-the-windows-azure-appfabric-june-ctp.aspx\">このブログ記事</a>の手順に従ってください。</p>  <p>SDK をインストールしたら、Visual studio を起動し、新しい AppFabric アプリケーションを作成します。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4520.SS1.png\" alt=\"\" height=\"210\" width=\"406\" border=\"0\"><br> アプリケーション定義ビュー (App.xaml) は、新しいプロジェクトの作成時に開かれる既定のビューです。 このビューを使用すると、アプリケーションを構成するさまざまなサービスを追加して構成することができます。 ここでは、アプリケーションを構成するさまざまなサービスを追加できます。 このアプリケーションは、ビデオを再生し、バックエンドデータベースにアクセスしてビデオの一覧を取得するフロントエンド web 層で構成されています。 web プロジェクトを追加するには、アプリケーションの .cs ビューを開き、[ <b><i>add New Service- &gt; ASP.NET</i></b> ] をクリックして<b>PlayerWeb</b>という名前を指定します。 この記事と共に、このアプリの完成したソリューションもアタッチしています。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3568.SS2.png\" height=\"202\" width=\"404\"><br> 同様に、データベース<b><i> &gt; </i></b>の新しいサービスを追加するには、「 <b>videodb</b> 」という名前の新しいサービス SQL Azure を追加します。</p>  <p>既定では、データベースが追加されると、SQL Express のローカルデータベースが参照されます。 アプリケーションをローカルで開発する場合は、SQL Express でデータベースを作成して使用します。 アプリケーションがクラウドにデプロイされると、データベースは SQL Azure データベースをポイントします。 アプリケーションマネージャーについて詳しく説明した後の投稿では、データベースを変更して、ローカルデータベースではなく SQL Azure データベースをポイントする方法を説明します。</p>  <p><img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8080.SS3Lft.png\" alt=\"\" height=\"141\" width=\"263\" border=\"0\"></p>  <p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0880.SS3Rt.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0880.SS3Rt.png\" alt=\"\" height=\"151\" width=\"235\" border=\"0\"></a></p>  <p>データベースを追加すると、[プロパティ] パネルに入力された既定のデータベース名は &ldquo; [<b><i>データベース</i></b> &rdquo; ] になります。 これは、AppFabricPlayer アプリケーションで使用されるデータベースに変更する必要があります。 このアプリでは、 <b>appfabricplayer</b>という名前のデータベースを SQL Express に作成し、再生するビデオを格納するテーブルを追加します。 データベース内のテーブルが作成され、次のスクリプトを使用して設定されます。</p>  <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">  <tbody>  <tr>  <td valign=\"top\" width=\"1638\">  <p>CREATE TABLE [dbo] です。[AppFabricVideos]( <br> &nbsp;&nbsp;&nbsp; [Id] [int] ID (1, 1) は NULL ではありません。 <br> &nbsp;&nbsp;&nbsp; 題 [nvarchar](256) NOT NULL, <br> &nbsp;&nbsp;&nbsp; 記述 [nvarchar](2048) NOT NULL, <br> &nbsp;&nbsp;&nbsp; Uri [nvarchar](1024) NOT NULL, <br> &nbsp;&nbsp;&nbsp; 制約 [PK_AppFabricVideos] 主キー ([Id] ASC) <br> )</p>  <p>INSERT INTO [dbo]。[AppFabricVideos] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ([タイトル] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 、[説明] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , [Uri]) <br> &nbsp;&nbsp;&nbsp;&nbsp; 値 <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (' Service bus/REST API ' <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最近のリリースチームでは、キューとトピックの新しいサポートが新たにリリースされました。これにより、HTTP だけでなく、クライアントライブラリを使用してキューにアクセスできるようになりました。 このエピソードでは、Perry に参加しています。これは、チームのテスターであり、キューを使用して HTTP API を使用する方法を示しています。Ron &hellip; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , '<a target=\"_blank\" href=\"%27%29\">')</a> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br> INSERT INTO [dbo]。[AppFabricVideos] <br> ([タイトル] <br> 、[説明] <br> , [Uri]) <br> &nbsp;&nbsp;&nbsp; 値 <br> &nbsp;&nbsp;&nbsp;(' Windows Azure AppFabric June CTP の発表 ' <br> &nbsp;&nbsp;&nbsp;では、microsoft は、開発者が web、ビジネスロジック、およびデータベース層を問わず、Windows Azure Platform の単一の論理エンティティとして、多層アプリケーションを簡単に構築、デプロイ、管理、監視できるようにする機能を備えた、Windows Azure AppFabric 6 月の CTP のリリースを発表しています。 <br> &nbsp;&nbsp;&nbsp; , '<a target=\"_blank\" href=\"%27%29\">')</a></p>  <p>Go</p>  </td>  </tr>  </tbody>  </table>  <p>アプリで正しいデータベースを参照するには、videodb 定義のデータベース名プロパティを SQL Express- <b>appfabricplayer</b>で作成したデータベースに変更します。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2335.SS4.png\" alt=\"\" height=\"158\" width=\"362\" border=\"0\"></p>  <p>これで、web からデータ層に構成できるアプリケーションに ASP.NET とデータベースサービスが追加されました。 AppFabric アプリケーションを使用すると、アプリ内のさまざまなサービス間の関係を指定できます。 リレーションシップを使用すると、アプリケーション内のサービス間の依存関係を定義できます。 結果として得られるコンポジションモデルは、アプリケーションのデプロイ、構成、制御、監視、トラブルシューティング、および拡張のために、管理時に使用されます。</p>  <p>ASP.NET とデータベースの間に構成するには、アプリケーション定義 (app.config) ビューで、PlayerWeb と videodb の間にサービス参照を追加します。 PlayerWeb をクリックし、次に [ <b><i>Videodb</i></b>エンドポイント] を選択して、 <b><i>- &gt; サービス参照の追加をクリック &gt; </i></b>します。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5355.SS5lft.png\" alt=\"\" height=\"123\" width=\"284\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7848.SS5Rt.png\" alt=\"\" height=\"103\" width=\"286\" border=\"0\"></p>  <p>参照名を Import1 から VideoDbImport に変更します。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1373.SS6UL.png\" height=\"135\" width=\"427\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7411.SSUR.png\" height=\"135\" width=\"427\"></p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0474.SSLL.png\" height=\"135\" width=\"427\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5706.SSLR.png\" height=\"135\" width=\"427\"></p>  <p>これで、アプリケーションは構造的に完成しました。 アプリケーションダイアグラムを表示するには、ソリューションエクスプローラーで [App.xaml] を右クリックし、[ダイアグラムの表示] を選択します。</p>  <p>次に、アプリケーションのロジックを追加します。 ここでは、web プロジェクトで「Video .cs」というモデルクラスを作成し、クラスに次のコードを追加します。<img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0841.SS7L.png\" alt=\"\" height=\"226\" width=\"333\" border=\"0\"><img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6558.SS7R.png\" alt=\"\" height=\"295\" width=\"125\" border=\"0\"></p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">  <tbody>  <tr>  <td valign=\"top\" width=\"1638\">  <p>using System; <br> using System.Collections.Generic; <br> 使用します。 <br> System.web を使用する <br> 使用して、. Data. SqlClient;</p>  <p>名前空間 PlayerWeb <br> { <br> &nbsp;&nbsp;&nbsp; パブリッククラスのビデオ <br> &nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリック文字列タイトル {get; set;} <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリック文字列の説明 {get; set;} <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリック文字列 VideoSourceURI {get; set;} <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリック int Id {get; set;}</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリックビデオ () <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; パブリック IEnumerable &lt; ビデオ &gt; getvideos () <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; リスト &lt; ビデオ &gt; ビデオ = 新しいリスト &lt; ビデオ &gt; ();</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; やり直し <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 使用 (SqlConnection 接続 = ServiceReferences ()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 接続.Open (); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SqlCommand コマンド = connection) を使用します。CreateCommand ()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; メニュー.CommandText = \"select * from AppFabricVideos\"; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SqlDataReader reader = command を使用しています。ExecuteReader ()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (リーダーRead ()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ビデオ.追加 (新しいビデオ ()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Id = (int) リーダー [\"Id\"], <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Title = reader [\"Title\"] string, <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Description = reader [\"Description\"] string, <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VideoSourceURI = reader [\"Uri\"] 文字列 <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (SqlException ex) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TraceError (\"データベースからのビデオの取得中にエラーが発生しています: {0} \", ex); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ビデオを返す <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp; } <br> }</p>  </td>  </tr>  </tbody>  </table>  <p>ここでは、SqlConnection を取得するためのコードを次に示します。 <br> SqlConnection 接続 = ServiceReferences () です。 <br> 以前は、ASP.NET とデータベース間にサービス参照を追加すると、参照先のデータベースにアクセスするためのヘルパーメソッドが作成されました。 このコードでは、SqlConnection を簡単に解決できます。 内部では、ヘルパーメソッドには、アプリケーション定義からデータベース名と接続文字列を読み取るコードがあります。 後でアプリケーションを管理ポータルで構成すると、アプリケーション管理者がこの情報をどのように変更できるかがわかります。</p>  <p>アプリケーションを完了するには、default.aspx、default.aspx、および sites のコードを変更します (これらのファイルと共に完全なソリューションを、 <a href=\"https://skydrive.live.com/redir.aspx?cid=e29520586d3d0983&amp;resid=E29520586D3D0983%21103\">こちら</a> からダウンロードできます (ダウンロード AppFabricPlayer.zip)。 <br> デバッグなしでデバッグを開始 (Ctrl + F5) を使用して &gt; Visual Studio のローカル環境でアプリケーションを実行します。 Visual Studio の [出力] ウィンドウには、アプリケーションをローカルエミュレーターでテストする準備ができた時間が表示されます。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2806.NewOne.png\" alt=\"\" height=\"141\" width=\"322\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7178.SS8R.png\" alt=\"\" height=\"154\" width=\"252\" border=\"0\"></p>  <p>上に示した公開アドレスは、web アプリのアドレスです。 また、アプリケーションログファイルの場所へのポインターも取得します。 アプリケーション内の ASP.NET コンポーネントがトレースを出力していた場合、トレースはこの場所のファイルに格納されます。 別の注意: デバッガーでこのアプリケーションをデバッグする場合は、デバッガーを w3wp.exe プロセスにアタッチし、コードをステップ実行できます。</p>  <p>アプリケーションがローカルで実行されていることを確認したので、クラウドで実行するために発行する準備ができました。 AppFabric アプリケーションマネージャーを使用して Azure にデプロイするには、Visual Studio 内からアプリケーションを発行することから始めることができます。 これを行うには、ソリューションエクスプローラーで [AppFabricPlayer] をクリックし、[発行] を選択します。 Appfabric アプリケーションマネージャーの名前空間へのアクセスを可能にする管理キーを含め、AppFabric アプリケーションマネージャーの名前空間に発行するために必要な資格情報を入力する必要があります。 アプリケーションを公開するために必要な管理キーを取得 https://portal.appfabricabs.com するには、[AppFabric サービス] をクリックし、[アプリケーション] を選択します。 右側の [プロパティ] グリッドのプロパティから、次のプロパティウィンドウのように管理キーを取得できます。</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8117.SS9L.png\" alt=\"\" height=\"224\" width=\"242\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6765.9R.png\" alt=\"\" height=\"269\" width=\"251\" border=\"0\"></p>  <p>また、AppFabric アプリケーションマネージャーポータルからアプリケーションパッケージをインポートすることもできます。 これを行うには、に移動し、に <a target=\"_blank\" href=\"https://yournamespacehere.appmanager.appfabriclabs.com/\">https://yournamespacehere.appmanager.appfabriclabs.com</a> ログインします。 ここでは、([共通タスク] の下で) 新しいアプリケーションを作成し、インポートするパッケージを選択します。 <br> <a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1134/2086.clip_5F00_image036_5F00_5818C2F6.png\"></a></p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0882.SS10.png\" alt=\"\" height=\"77\" width=\"491\" border=\"0\"></p>  <p>単純な AppFabric アプリケーションを開発し、それを Azure に発行する方法を説明しました。次のブログ記事では、AppFabric アプリケーションマネージャーを使用してこのアプリケーションを管理する方法を説明します。</p>  <p>AppFabricPlayer ソリューションは <a target=\"_blank\" href=\"https://skydrive.live.com/redir.aspx?cid=e29520586d3d0983&amp;resid=E29520586D3D0983%21103\">こちら</a> (AppFabricPlayer.zip) からダウンロードできます。</p>  <p><iframe style=\"overflow: hidden; width: 300px; height: 50px;\" src=\"https://www.facebook.com/plugins/like.php?href= https://blogs.msdn.com/b/windowsazure/archive/2011/07/18/developing-a-windows-azure-appfabric-application.aspx;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50\" frameborder=\"0\" scrolling=\"no\"></iframe><br> <a href=\"https://twitter.com/share?href=https://blogs.msdn.com/b/windowsazure/archive/2011/07/18/developing-a-windows-azure-appfabric-application.aspx\" class=\"twitter-share-button\" data-count=\"horizontal\" data-via=\"windowsazure\">ツイート</a>  <script type=\"text/javascript\" src=\"https://platform.twitter.com/widgets.js\"></script>  </p>"
