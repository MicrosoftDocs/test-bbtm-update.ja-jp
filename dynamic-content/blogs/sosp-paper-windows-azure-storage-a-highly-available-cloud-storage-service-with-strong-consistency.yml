### YamlMime:Yaml
ms.openlocfilehash: 604c4c8d4b485a839a2f71f2374d29836c9495d0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892360"
Slug: sosp-paper-windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency
Title: 'SOSP Paper - Windows Azure Storage: 強力な整合性を備Storage高可用性クラウド クラウド サービス'
Summary: 最近、オペレーティング システム原則 (SOSP) に関する第 23 回 ACM のWindows Azure Storageの内部の詳細を説明する論文を公開しました。  この論文は、こちらから確認できます。 会議...
Content: <p>最近、オペレーティング システム原則 (SOSP) に関する第 23 回 ACM のWindows Azure Storageの内部の詳細を説明する論文を公開しました。</p>  <p>この論文は、こちらから確認 <a href="https://sigops.org/sosp/sosp11/current/2011-Cascais/printable/11-calder.pdf">できます</a>。 カンファレンスでは、このトークのビデオもここに投稿 <a href="https://www.youtube.com/watch?v=QnYdbQO0yj4">しました</a>。 ここでは、トークのスライドを利用&nbsp;<a href="https://sigops.org/sosp/sosp11/current/2011-Cascais/11-calder.pptx">できます</a>。</p>  <p>このペーパーでは、ストレージ スタンプを使用してデータ センター内およびデータ センター間で容量をプロビジョニングおよびスケールアウトする方法と、スタンプとストレージ アカウントの管理にストレージ ロケーション サービスを使用する方法について説明します。 次に、スタンプ内のアーキテクチャの 3 つの異なるレイヤー (フロントエンド レイヤー、パーティション レイヤー、ストリーム レイヤー) の詳細、これらのレイヤーがある理由、それらの機能、機能、および 2 つのレプリケーション エンジン (スタンプ内とスタンプ間) の詳細に焦点を当てました。 さらに、この論文では、私たちが行った設計上の決定/トレードオフの一部と、この大規模な分散システムの構築から得られた教訓をまとめます。</p>  <p>Windows Azure Storage の主な設計目標は、アーキテクチャで予想されるネットワーク パーティション分割の種類に対して、整合性、可用性、およびパーティショントレランス (CAP) (これら 3 つすべて(2 つではなく、すべて 2 つ) を提供します。 これは、ノード レベルやラック レベルのネットワークパーティション分割など、スタンプ内で発生する一般的な種類のパーティション分割/障害に対するパーティション許容度である一方で、強力な整合性と高可用性を提供するために、パーティション層とストリーム 層を共同設計することで実現されます。</p>  <p>この短いカンファレンスでは、パーティション層がストレージ スタンプあたり数百億のオブジェクトに対して自動的に負荷分散されたオブジェクト インデックスを提供する方法、ストリーム 層がスタンプ内レプリケーションを実行して障害に対処する方法、および 2 つのレイヤーがどのように一貫性を提供するように共同設計されているのかについて、重要な詳細に触れ取ってみます。 可用性と、ノードおよびラック レベルのネットワークのパーティション分割と障害に対するパーティション トレラント。</p>  <p>Brad Calder</p>
