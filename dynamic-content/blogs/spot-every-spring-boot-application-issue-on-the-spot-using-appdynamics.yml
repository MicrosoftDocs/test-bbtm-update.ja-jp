### YamlMime:Yaml
ms.openlocfilehash: 1d3b46286c8ddcd4d1306557e1fffae51a6ca233
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892335"
Slug: spot-every-spring-boot-application-issue-on-the-spot-using-appdynamics
Title: AppDynamics を使用して、すべての Spring Boot アプリケーションの問題を特定します。
Summary: アプリケーションを監視して、IT スタック全体のインフラストラクチャ、ネットワーク、セキュリティに関連付ける機能は、デジタル変換された世界に不可欠になりました。 Azure Spring Cloud に AppDynamics を統合することで、Spring Boot アプリケーションを簡単にインストルメント化できます。
Content: >-
  <p>現時点では、完全な stack 可観測性を実現するために、Azure Spring Cloud での <a href="https://aka.ms/Start-AppDynamics" target="_blank">Appdynamics</a> の統合を発表いたします。</p>


  <p>過去20か月間、多くの企業ユーザーと協力して、彼らが直面しているシナリオについて学習しました。 多くのお客様には、オンプレミスのデータセンターで実行されている、何千もの Spring Boot アプリケーションがあります。 これらのアプリケーションをクラウドに移行する際、開発者が長年にわたって使用しているソリューションを使用して、アプリケーションパフォーマンス監視 (APM) 用にそれらをインストルメント化する必要があります。 さらに、AppDynamics などのエージェントを使用して、既にエンドツーエンドの監視用に事前にインストルメント化されているデスクトップおよびモバイルアプリケーションの継続性を確保する必要があります。これにより、すべてのアプリケーション、マイクロサービス、インフラストラクチャだけでなく、動的なハイブリッド、マルチクラウド環境の依存関係も自動的に検出されます。 Azure Spring Cloud に AppDynamics を統合することで、引き続き、AppDynamics で Spring Boot アプリケーションを簡単にインストルメント化できます。</p>


  <p style="margin-left: 40px;"><em> &quot; Azure Spring Cloud のデプロイは、はるかに広範なマルチリージョンのマルチクラウドアーキテクチャの1つのコンポーネントにすぎません。私たち &rsquo; は、何年もの間に AppDynamics を使用し、パフォーマンスメトリックをキャプチャして、完全なスタック全体の可用性を監視するために、この単一のウィンドウを用意することを強く望んでいました。それだけでなく、AppDynamics は、イベントドリブンアーキテクチャを採用するための1つのコンポーネントである強力な APM ツールです。私たちは自己復旧と AIOps を試しており、この領域の機能を拡張する必要があります。これを行うことができます。</em> &quot; &mdash;devon yost、Enterprise 設計者、<a href="https://www.digitalrealty.com/" target="_blank">デジタルリアル度信頼</a></p>


  <p style="margin-left: 40px;">&quot;<em>お客様はアプリケーションを最新化し、Azure Spring cloud などのクラウドプラットフォームの使いやすさとスケーリングを活用することを検討しているため、完全なスタックの可観測性がかつてないほど重要になっています。多くの Presidio &rsquo; のお客様は、AppDynamics のインストルメンテーション機能を活用して、ビジネスに必要な高パフォーマンスでコスト効率に優れた方法で Spring Boot アプリケーションを実行できます。Azure と Azure Spring Cloud Platform への移行を計画しているため、これらのアプリケーションについての洞察と可視性の一貫性をさらに高める必要があります。Azure Spring Cloud support for AppDynamics は、2つのプラットフォームを統合し、Presidio とその顧客に明確なパスを提供します。 &quot; &mdash; </em>Rich Gondek、シニアテクニカルディレクター、デジタルビジネスソリューションとサービス、 <a href="https://www.presidio.com/" target="_blank">Presidio</a>。</p>


  <p style="margin-left: 40px;">&ldquo;<em>私 &rsquo; は Microsoft との継続的なパートナーシップを利用しています。AppDynamics は、リアルタイムの可視性を持つ Azure Spring Cloud 内で作業している開発者を対象としています。これにより、パフォーマンスの問題の根本原因を特定し、ビジネスへの影響に関するマイクロサービスを最適化することができます。</em> &rdquo; &mdash;Gregg Ostrowski, エグゼクティブ CTO at AppDynamics</p>


  <p style="margin-left: 40px;">&ldquo;<em>Microsoft は、Spring 開発者が Azure で大規模なアプリを簡単に実行できるようにすることを約束しています。AppDynamics は、多くのお客様のための完全なスタック可観測性の重要な部分であり、パートナーシップを通じて、Azure Spring Cloud に統合されたこの機能を利用できるようになりました。AppDynamics &mdash; のような開発者 &mdash; 向けに選択した APM ツールをサポートすることで、新しい機能の提供に専念できるように変更を最小限に抑えることができます。</em> &rdquo; &mdash;ジュリア Liuson、社内副社長、開発者部門、Microsoft</p>


  <p style="margin-left: 40px;"><strong><a href="https://www.youtube.com/watch?v=4dZuRX5bNAs&amp;ab_channel=JavaonAzure" target="_blank"><img alt="Click here to watch the video" border="0" height="563" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7534f7c0-dff1-4835-820b-114869c90d0a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="AppDynamics ビデオの中で、クリック可能なイメージ。 ビデオを見るには、画像をクリックします。" width="1024"></a></strong></p>


  <p style="margin-left: 40px;"><em>AppDynamics を使用して Spring Boot &nbsp; アプリケーションを監視する方法については、上記のビデオを &nbsp; ご覧ください。</em></p>


  <p>アプリケーションを監視して、IT スタック全体のインフラストラクチャ、ネットワーク、セキュリティに関連付ける機能は、デジタル変換された世界に不可欠になりました。 技術者は、顧客やビジネスに影響を与える前に問題を予測できるように、完全なスタック可観測性を要求します。 同時に、開発者は、Azure Spring Cloud などの最新のアジャイルクラウドプラットフォームを採用して、迅速かつ簡単にアプリケーションを大規模にデプロイして実行することで、IT スタックのイノベーションと進化を続けます。 そのような場合には、完全なスタックの可視性、洞察、アクションに迅速に移行できることが重要です。これにより、IT チームは、大量のデジタルエクスペリエンスを実現し、コストとパフォーマンスを最適化し、デジタルビジネス収益を最大限に引き出すことができます。</p>


  <p>AppDynamics と Microsoft はパートナーと連携して、azure のお客様がクラウドネイティブアプリケーションを使用してそのレベルのビジネス可観測性を維持できるようにします。 お客様は、AppDynamics &mdash; を使用して Azure Spring Cloud にデプロイされたサービスとワークロードの中で最も重要なものを、コードを変更せずに確認できます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c384f218-e284-4f15-b059-bb27d289b36c.jpg"><img alt="Banner image" border="0" height="134" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3c59bf84-4756-45a7-8fc0-1c9ac1918e4f.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="さまざまな職場の設定でアプリケーション監視ソフトウェアを使用する場合を示す一連のイメージを含むバナー。" width="1666"></a></p>


  <p>Azure Spring Cloud デプロイで AppDynamics エージェントをアクティブ化することは、Azure CLI を介してサービスをデプロイするときに JVM オプションと環境変数を構成するのと同じように簡単です。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1a1ab230-a5b9-48ce-ab4c-d8c4c9ca03c1.jpg"><img alt="Shows Azure CLI command to activate AppDynamics as part a deployment" border="0" height="416" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8c8106b4-a900-4de4-94ae-f5bb3b4d267b.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図1" width="1024"></a></p>


  <p><em><strong>図 1:</strong> デプロイの一部として AppDynamics をアクティブにする Azure CLI コマンドを示します。</em></p>


  <p>AppDynamics エージェントは、azure Spring Cloud 内で Azure Resource Manager (ARM) テンプレート、Bicep テンプレート、または Terraform を使用してアクティブ化することもできます。</p>


  <p>アクティブ化が行われたら、AppDynamics ポータルを開いて監視を開始します。 次に示すビューでは、AppDynamics に Azure Spring Cloud のすべての Spring Boot アプリケーションが表示されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/db200205-1788-47ab-832c-e73a05c7ee5d.jpg"><img alt="Shows all the Spring Boot applications running in a production workload" border="0" height="444" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5d628960-40d6-4c1b-8cad-24f5fe7d7bb8.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図2" width="1024"></a></p>


  <p><em><strong>図 2:</strong> 実稼働ワークロードで実行されているすべての Spring Boot アプリケーションを表示します</em></p>


  <p>また、アプリケーションによるデータフローを示す自動化されたフローマップを表示して、Spring Boot アプリとその依存関係、およびビジネスへの影響を軽減するために対処する必要がある問題の正確な場所が明らかになります。 次に示すビューでは、追加の構成を必要と &mdash; しない自動フローマップが自動的に使用できるようになります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c01dc0db-7304-4d68-b871-d7eec6576e85.jpg"><img alt="Shows automated app flow maps for Spring Boot applications and their dependencies" border="0" height="590" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8c77807b-6b6b-4be8-9137-f7f80e3b913d.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図3" width="1024"></a></p>


  <p><em><strong>図 3:</strong> Spring Boot アプリケーションとその依存関係の自動アプリフローマップを表示します</em></p>


  <p>AppDynamics は、運用アプリケーションの動作に基づいて主要ビジネストランザクションをトレースします。 パフォーマンスを動的に設定し、 <em>正常</em>なものを自動的に検出します。これにより、顧客と開発者は、しきい値を超えた場合にのみ警告を受け取ることができます。 次に示すビューには、 <em>api ゲートウェイアプリから customers-services アプリへ</em> のデータフローと、MySQL データベースへのフローが示されています。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0aa974e2-b7fb-4e2e-a374-c3b8d6db6056.jpg"><img alt="Shows flow of data from one Spring Boot app to another Spring Boot app, and then to a MySQL database" border="0" height="587" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/514c1a8c-feb1-46ee-9b4c-da7ca280db06.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図4" width="1024"></a></p>


  <p><em><strong>図 4:</strong> 1つの Spring Boot アプリから別の Spring Boot アプリへ、そして MySQL データベースへのデータフローを示します。</em></p>


  <p>また、完全な呼び出し履歴、詳細なメソッドレベルコードの詳細、データベースクエリなどの詳細な診断情報を取得することもできます。 時折トラブルシューティングを行うために <em><a href="https://docs.appdynamics.com/21.9/en/application-monitoring/development-level-monitoring" target="_blank">開発モード</a></em> を有効にすることができます。これにより、appdynamics が収集するデータに対する特定の既定の制限がオフになるため、アプリケーションのアクティビティをさらに可視化できます。 次に示すビューでは、すべてのデータベース呼び出しをズームしています。過去数時間では、応答時間が適切に500万の呼び出しが行われました。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/15b4bc37-410e-4797-b7ca-004a5f6d9038.jpg"><img alt="Zooms into all the database calls from a Spring Boot application" border="0" height="590" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fcddd350-ef5b-49c9-95d1-079e859a124e.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図5" width="1024"></a></p>


  <p><em><strong>図 5:</strong> Spring Boot アプリケーションからのすべてのデータベース呼び出しにズームインします。</em></p>


  <p>最も低速なデータベース呼び出しを探すことができます。 次に示す <em>顧客サービス</em> アプリのビューでは、これらは最も低速なデータベース呼び出し &mdash; です。接続のセットアップには多くの時間が費やされます。 常に、改善の余地があります。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ffdd0f64-d645-47a7-8755-46c31250d35d.jpg"><img alt="Shows slowest database calls from a Spring Boot application" border="0" height="302" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1dbd5a9f-5492-4631-ac05-2adc48ef4661.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図6" width="1024"></a></p>


  <p><em><strong>図 6:</strong> Spring Boot アプリケーションからの最も低速なデータベース呼び出しを表示します</em></p>


  <p>また、AppDynamics には、jvm メトリックを時系列で確認できる優れた JVM メトリックブラウザーもあります。 次に示すビューでは、jvm <em>スレッド</em> の数と <em>jvm の CPU 使用率</em>を確認できます。 もちろん、メトリックブラウザーではさらに多くの洞察を得ることができます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/575fceb8-52c6-46de-a822-5fcfbe42627f.jpg"><img alt="Shows JVM Metrics across time in AppDynamics Metric Browser" border="0" height="588" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31e12782-ea1e-4dc0-b2a7-aa5a25f3c168.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="図7" width="1024"></a></p>


  <p><em><strong>図 7:</strong> AppDynamics メトリックブラウザーで時間の経過と共に JVM メトリックを表示します</em></p>


  <p>AppDynamics を使用すると、開発者、オペレーター、およびビジネスチーム間でのシームレスなコラボレーションを実現できます。 統合された監視とリアルタイムの洞察により、これらのチームをまとめて、アプリケーションのパフォーマンス、ユーザーエクスペリエンス、ビジネスパフォーマンスを維持します。</p>


  <h2>ソリューションを構築して今すぐ監視する</h2>


  <p>Azure Spring Cloud は、Microsoft と VMware によって共同で構築、運用、サポートされています。 これは Spring Boot アプリケーション用の完全に管理されたサービスであり、インフラストラクチャと Spring Cloud ミドルウェア管理の複雑さを解消します。そのため、ビジネスロジックの構築に専念し、Azure で動的なスケーリング、パッチ、セキュリティ、コンプライアンス、高可用性を実現することができます。 いくつかの手順で、Azure Spring Cloud のプロビジョニング、アプリケーションの作成、Spring Boot アプリケーションのデプロイとスケーリング、数分で監視を開始できます。 今後も、開発者にとって使いやすく、エンタープライズ対応の機能を Azure Spring Cloud にお届けします。 Azure Spring Cloud を使用してインパクトソリューションを構築する方法をご紹介します。</p>


  <p>AppDynamics を使用して Spring Boot アプリケーションの<a href="https://aka.ms/Start-AppDynamics" target="_blank">監視を開始</a>します。 この発表の詳細については、「 <a href="https://www.appdynamics.com/blog/news/appdynamics-microsoft-azure-spring-cloud" target="_blank">Appdynamics</a>」を参照してください。</p>


  <h2>リソース</h2>


  <ul>
      <li>GitHub に関する<a href="https://docs.microsoft.com/en-us/learn/modules/azure-spring-cloud-workshop/" target="_blank">MS の学習モジュール</a>または自習<a href="https://github.com/microsoft/azure-spring-cloud-training" target="_blank">用ワークショップ</a>の使用方法について説明します</li>
      <li>Azure Spring Cloud でのソリューションの実装に関する<a href="https://docs.microsoft.com/en-us/azure/spring-cloud/" target="_blank">詳細</a>情報</li>
      <li>AppDynamics によって発行された関連 <a href="https://docs.appdynamics.com/21.9/en/application-monitoring/install-app-server-agents/java-agent/install-the-java-agent/monitor-azure-spring-cloud-with-java-agent" target="_blank">ドキュメント</a> を表示する</li>
      <li><a href="https://github.com/Azure-Samples/spring-petclinic-microservices" target="_blank">Spring Petclinic アプリケーション</a>の分散バージョンをデプロイする</li>
      <li>エンタープライズのベストプラクティス &mdash; <a href="https://docs.microsoft.com/en-us/azure/spring-cloud/reference-architecture" target="_blank">Azure Spring Cloud リファレンスアーキテクチャ</a>を活用して Spring Boot アプリケーションをデプロイする</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-cloud" target="_blank">Spring Boot</a>、 <a href="https://docs.microsoft.com/en-us/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-cloud" target="_blank">Spring cloud</a>、 <a href="https://aka.ms/migrate-tomcat-to-azure-spring-cloud-service" target="_blank">Tomcat</a>アプリケーションを Azure spring cloud に移行する</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/developer/java/spring-framework/" target="_blank">Azure サービスと対話</a>するためのワイヤ Spring アプリケーション</li>
      <li>ご意見やご質問がございましたら、 <a href="mailto:mailto:AzureSpringCloud-Talk@service.microsoft.com" target="_blank">電子メール</a>でお送りください。</li>
  </ul>
