### YamlMime:Yaml
ms.openlocfilehash: 373adc6262d8451dd4a0e1b3d26ee4211b240ac3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139896027"
Slug: container-tooling-for-service-fabric
Title: Visual Studio 2017 の Service Fabric のコンテナーツール
Summary: 'Visual Studio 2017 更新プログラム 7 (15.7) の一部である Service Fabric ツールの最新バージョンには、Service Fabric 機能の新しいコンテナーツールが含まれています。 '
Content: >-
  <p>Visual Studio 2017 更新プログラム 7 (15.7) の一部である Service Fabric ツールの最新バージョンには、Service Fabric 機能の新しいコンテナーツールが含まれています。 この新機能により、既存のアプリケーションのデバッグとデプロイが、これまでになく簡単に Service Fabric できます。</p>


  <h2>コンテナー化 .NET Framework アプリケーションと .net Core アプリケーションを Service Fabric で実行します。</h2>


  <p>これで、既存のコンソールまたは ASP.NET アプリケーションを取得し、コンテナーイメージにデプロイし、ローカルの開発者ワークステーションのコンテナーとして Service Fabric で実行およびデバッグできるようになりました。 数回クリックするだけで、既存の .net アプリケーションを Service Fabric 環境内のコンテナーで実行できます。 ソリューションエクスプローラーでプロジェクトを右クリックし、[<strong> 追加 &gt; ]、[コンテナー Orchestrator サポート</strong>] の順に選択します。 これにより、 <strong>Service Fabric</strong>を選択して [ <strong>OK</strong>] をクリックするダイアログボックスが表示されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2a6fd520-75d3-4045-8f04-fbe4c0b2dbc5.gif"><img alt="Container-Tools" border="0" height="720" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0b3bbcc5-dfd3-4524-8ec3-31135a10d2c0.gif" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="コンテナー-ツール" width="1026"></a></p>


  <p>これにより、プロジェクトに Docker ファイルが作成され、必要な Service Fabric ファイルが追加されるだけでなく、ソリューションに新しい Service Fabric アプリケーションプロジェクトを作成することもできます。 プロジェクトが既存の Service Fabric アプリケーションを含むソリューションの一部である場合、プロジェクトは自動的にそのアプリケーションに追加されます。 これは、Service Fabric するためにコンテナー化するソリューション内のプロジェクトごとに実行する必要があります。</p>


  <h2>Service Fabric で実行されているコンテナーのデバッグ</h2>


  <p>わずか数回のクリックで既存の .NET プロジェクトを簡単にコンテナー化できるだけでなく、コンテナーインスタンス内で実行されているコードを Service Fabric で実行してデバッグすることもできます。 F5 キーを押すと、コンテナーで実行されている場合でも、各サービスの Visual Studio 内で完全なデバッグサポートを受けることができます。 最適なデバッグエクスペリエンスを実現するには、1つのノードクラスターを使用して &ldquo; 、アプリケーション &rdquo; モードを更新します。</p>


  <h2>コンテナー化されたアプリケーションを Service Fabric に発行する</h2>


  <p>アプリケーションを Azure に発行するのに時間が&#39;と、Visual Studio の [発行] ダイアログボックスで、イメージをにプッシュするための Azure Container Registry (ACR) と、クラスターの接続情報を入力するように求められます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/96d657ed-c6a7-416e-98d1-0e5fa3e6b989.png"><img alt="image" border="0" height="456" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6a1b0493-5773-4c2b-b0fd-6fc10a1ef522.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="絵" width="600"></a></p>


  <p>また、上記のシナリオをサポートするために、Service Fabric の Visual Studio Team Services タスクも更新しました。展開: <a href="https://docs.microsoft.com/en-us/vsts/build-release/tasks/deploy/service-fabric-deploy?view=vsts">Service Fabric アプリケーションの展開</a>。</p>


  <p>最新のツールを入手するには、 <a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-get-started#install-the-sdk-and-tools">Service Fabric SDK</a>バージョン3.1 と最新の<a href="https://www.visualstudio.com/vs/">Visual Studio 2017</a>リリースをインストールします。</p>


  <p>セットアップ方法とツールの使用方法の詳細については、次の記事を参照してください。</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-how-to-debug-windows-containers">方法: Visual Studio 2017 を使用して Azure Service Fabric で Windows コンテナーをデバッグする</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-host-app-in-a-container">チュートリアル:Windows コンテナー内の .NET アプリケーションを Azure Service Fabric にデプロイする</a></li>
   <li><a href="https://github.com/MikkelHegn/ContainersSFLab">コンテナーと Service Fabric ラボを使用したリフトアンドシフトの ASP.NET</a></li>
  </ul>


  <p>すべてのお客様から...</p>


  <p>Service Fabric チームと Visual Studio チーム</p>
