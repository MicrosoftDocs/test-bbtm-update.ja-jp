### YamlMime:Yaml
ms.openlocfilehash: 528d5694ea85c005094d17a02196f1a6265cbfac
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895128"
Slug: diagnosing-modsecurity-for-azure-websites
Title: Azure Websites での ModSecurity に関する問題の診断
Summary: この投稿は、Azure Websites での ModSecurity の問題の診断に役立ちます。
Content: >-
  前の <a href="https://azure.microsoft.com/blog/2014/09/29/modsecurity-for-azure-websites/">記事 </a>では、Azure Websites での modsecurity の使用について説明しています。 ModSecurity の規則と構成は、特に外部ソースからコンポーネントをコピーする場合に、非常に複雑になる可能性があります。 通常は、ModSecurity の単純な構成から始め、それをテストして、より複雑な構成にまで対応できるようにします。 これにより、変更を追跡し、障害の診断に役立てることができます。 ここでは、問題が発生した可能性がある原因を解明するためのヒントを紹介します。

  <h2>どのような ModSecurity が HTTP 要求と応答に対して実行しているのか操作方法知ることができますか。</h2>

  <b>SecRuleEngine</b>を<b>DetectionOnly</b>に設定すると、開発者は、受信要求をブロックすることなく、ルールがどのような処理を行うかをテストする優れた方法を提供できます。 <b>DetectionOnly</b>の出力は、通常、Azure Websites 内の<b>d:\home\LogFiles</b>ディレクトリにリダイレクトされるイベントログに送信されます。 これらのログを FTP でダウンロードして、どのルールがトリガーされているかの詳細なログを取得することができます。


  詳細ログが必要な場合は、以下の構成オプションを conf ファイルに追加できます。

  <blockquote><span style="color: #0000ff;">Secdebuglog</span> <span style="color: #ff0000;">d:\home\site\wwwroot\modsecurity\logs </span> <span style="color: #0000ff;">SecDebugLogLevel</span> <span style="color: #ff0000;"> 9</span></blockquote>

  これはグローバル設定であるため、web サイトでは、トラフィックが中程度の重大なパフォーマンスの問題が発生する可能性があります。 サイトへのライブトラフィックがない場合は、次の例に示すように、条件付きデバッグ設定を使用することをお勧めします。


  のデバッグログを特定のクライアント IP アドレスに限定するには、次のようにします。

  <blockquote><span style="color: #0000ff;">Secrule</span> REMOTE_ADDR <span style="color: #ff0000;">" @ipMatch 192.168.1.1" "フェーズ: 1、id: 1234、debugLogLevel、nolog、pass、Ctl: = 9"</span></blockquote>

  特定のパラメーターが要求に存在する場合にデバッグログのスコープを指定するには、次のようにします。

  <blockquote><span style="color: #0000ff;">Secrule</span> ARGS: debug_log <span style="color: #ff0000;">" @streq on" フェーズ: 1、id: 1235、debugLogLevel、nolog、pass、Ctl: = 9 "</span></blockquote>

  ログレベルの意味の詳細については、 <a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#SecDebugLog">Modsecurity のドキュメント</a> を参照してください。


  <b><i>注:</i></b> <i>これらの設定はコンテンツディレクトリにデータを書き込みます。そのため、web サイトにストレージクォータがある場合は、構成と要求のボリュームに基づいて、この問題に直面する危険性があります。</i>

  <h2>ModSecurity ルールがトリガーされないのはなぜですか。</h2>

  ここでは、トリガーされない規則に関する問題を診断するために実行できる手順をいくつか示します。


  1. <i><b>web.config</b>は正しいですか?</i>

  web.config ファイルの構成セクションが正しいことを確認し、複数の場所からセクションをコピーした場合は、XML が正しくマージされ、構成が予期されるセクションにあることを確認してください。


  2. <i>ModSecurity に含まれるファイルに適切なパスがありますか。 </i>ModSecurity web サイトから無料で利用可能な OWASP CRS ルールには、インクルードする他の conf ファイルを指すディレクティブが含まれています。 これらのファイルをそのように使用している場合は、d:\home\sites\wwwroot などの正しい場所 <b> を指すように、include ディレクティブの場所を編集する必要があります。\</b>


  3. トリガーされて<i>いない特定のルールですか。</i><b>Secdebuglog</b>設定を使用して、各ルールの各 HTTP 要求または応答に対して modsecurity が行っている処理を診断できます。 これは、特定のルールに関する問題を診断するために使用します。 上記の例に示すように、特定のルールに対して ctl: debugLogLevel = 9 をいつでも設定できます。
