### YamlMime:Yaml
ms.openlocfilehash: 2a9f1e0b068e31f196a3215c68eb5cfcefaf993c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909781"
Slug: introducing-a-new-capability-in-the-windows-azure-ad-developer-preview-the-windows-azure-authentication-library
Title: 'Windows Azure AD Developer Preview での新機能の導入: Windows Azure Authentication Library'
Summary: 先月、Windows Azure Active Directory (Windows Azure AD) の開発者プレビューを発表しました。これは、Windows Azure Active Directory を外部の開発者に開くプロセスを開始しました。
Content: '<p>先月、Microsoft の外部の開発者に <a href="https://www.windowsazure.com/en-us/home/features/identity/?WT.mc_id=cmp_pst001_blg_post0166ide" target="_blank">Windows Azure Active Directory</a> を開くプロセスを開始した Windows Azure Active Directory (Windows Azure AD) の開発者プレビューを発表しました。 その最初のリリースの詳細については、こちらを参照してください。</p>  <p>現在、開発者プレビューの新機能である Windows Azure 認証ライブラリ (ドキュメントでは AAL と呼ばれます) を導入して、.NET 開発者は、アプリケーションへのアクセスをセキュリティで保護する機能など、追加の価値の高いシナリオで Windows Azure AD&rsquo; を迅速かつ簡単に利用できます。の API と、他のネイティブ クライアントまたはサービス ベースのアプリケーションで使用するためにサービス API を公開する機能。</p>  <p>AAL Developer Preview では、ネイティブ クライアントと API 保護領域での考え方を早期に確認できます。&nbsp;これは、ライブラリ ビットを含む一連の NuGet パッケージ、事前にプロビジョニングされたテナントに対してすぐ動作する一連のサンプル、および開始する必要がある重要なドキュメントで構成されています。</p>  <p>始める前に、開発者は当然、Windows Azure AD でサポートされている標準ベースのプロトコル (現在は WS-Fed と OAuth など) に直接書き込み可能です。 これは、完全にサポートされているアプローチです。&nbsp; ライブラリは、サービスの使用を &amp; 開始するためのより高速な方法を探している開発者が利用できるもう 1 つのオプションです。</p>  <p>この投稿の残りの&rsquo;部分では、プレビューの詳細、参加方法、将来の外観について説明します。</p>  <h3>Windows&rsquo; Azure Authentication Library の開発者プレビューの機能</h3>  <p>ライブラリは、.NET アセンブリの形式を受け取り、パッケージを介NuGetします。 そのため、Visual Studio から直接プロジェクトに追加できます (詳細については、こちらをNuGet<a href="https://docs.nuget.org/docs/start-here/overview" target="_blank">してください</a>)。</p>  <p>AAL には、.NET クライアント アプリケーションとサービスの両方の機能が含まれている。 クライアントでは、ライブラリを使用して次の操作を行います。</p>  <ul>  <li>Windows Azure AD ディレクトリ テナント、AD FS 2.0 サーバー、および Azure AD Access Control でサポートされているすべての ID プロバイダー (Windows Live ID、Facebook、Google、Yahoo!、任意の OpenID プロバイダー、任意の WS-Federation プロバイダー) に対する認証をユーザーに求める</li>  <li>現在のワークステーション ユーザーのユーザー名/パスワードまたは Kerberos チケットを利用して、プログラムでトークンを取得する</li>  <li>サーバーからサーバーへのサービス呼び出しのトークンを取得するためにサービス プリンシパルの資格情報を活用する</li>  </ul>  <p>最初の 2 つの機能は、WPF アプリケーションやコンソール アプリなどのソリューションをセキュリティで保護するために使用できます。 3 つ目の機能は、クラシック サーバーとサーバーの統合に使用できます。</p>  <p>Azure Windowsライブラリを使用すると、名前空間とディレクトリ テナントの両方Windows Azure AD Access Control機能セットにアクセスできます。 これらの機能はすべて、単純なプログラミング モデルを通じて提供されます。 Windows Azure AD テナントは、呼び出すサービス、サービスが信頼する ID プロバイダー、Windows Azure AD がトークンの署名に使用するキーなど、シナリオの多くの側面について既に知っています。 AAL では、その知識を活用して、低レベルの構成とプロトコルの詳細に対処する必要が省力化されます。 ライブラリの動作方法の詳細については、Vittorio Bertoccis の投稿を&rsquo;参照 <a href="https://bit.ly/N2cfDv" target="_blank">してください</a>。</p>  <p>Windows Azure 認証&rsquo;ライブラリで保存できるコードの量を知るために、Windows Azure AD Developer Preview から Graph <a href="https://go.microsoft.com/fwlink/?LinkID=95732&amp;clcid=0x409" target="_blank">API</a> サンプルを更新し、ライブラリを使用して Graph を呼び出すのに必要なトークンを取得しました。 サンプルの元のリリースには、約 700 行のコードを考慮した、そのタスクのカスタム コードが含めがありました。 Azure Authentication Library Windowsのおかげで、これらの 700 行がライブラリへの 7 行の呼び出しに置き換えられる。</p>  <p>サービス側では、ライブラリを使用すると、受信トークンを検証し、ClaimsPrincipal の形式で呼び出し元の ID を返すことができます。この機能は、開発プラットフォームの残りの部分の動作と一致します。</p>  <p>ライブラリと共に、Azure Authentication Library を使用して実装できる主なシナリオを示す一連のサンプルWindowsリリースしています。 サンプルはすべて、次のリンクを介して MSDN コードで個別にダウンロードできます。</p>  <ul>  <li><a href="https://go.microsoft.com/fwlink/?LinkId=259814" target="_blank">ブラウザー ポップアップを使用したネイティブ アプリケーションから REST サービス &ndash; への認証</a></li>  <li><a href="https://go.microsoft.com/fwlink/?LinkId=259815" target="_blank">ユーザー資格情報を使用した &ndash; ネイティブ アプリケーションから REST サービスへの認証</a></li>  <li><a href="https://go.microsoft.com/fwlink/?LinkId=259816" target="_blank">サーバー間認証</a></li>  <li><a href="https://go.microsoft.com/fwlink/?LinkID=95732&amp;clcid=0x409" target="_blank">&ndash; Windows Azure AD ユーザー ピッカー AAL で更新</a></li>  </ul>  <p>これらのサンプルを簡単に試してみることができます。すべてが、事前にプロビジョニングされたテナントに対して動作するように構成されています。 これらは包括的な readme ドキュメントによって補完されます。このドキュメントでは、独自のディレクトリ テナントと Windows Azure AD Access Control 名前空間を利用するために Visual Studio ソリューションを再構成する方法が詳しく説明されています。</p>  <p><a href="https://msdn.microsoft.com/en-us/library/dd630118" target="_blank">MSDN</a> ドキュメントの Windows Azure Active Directory ノードにアクセスすると、AAL に関する重要なドキュメントで拡張<a href="https://go.microsoft.com/fwlink/?LinkId=258232" target="_blank">されている場合があります</a>。</p>  <h3>今後期待できるもの</h3>  <p>前に説明したように、AAL の Developer Preview では、ネイティブ クライアントと API 保護領域での考え方を早期に確認できます。 開発の初期段階でネイティブ アプリと API シナリオを探索して実験する機会を確実に得る機会を確保するために、開発者プレビューを今すぐご利用いただけます。 MSDN フォーラムのページを使用して、フィードバックを提供し、<a href="https://social.msdn.microsoft.com/Forums/en-US/WindowsAzureAD/" target="_blank">ご意見Windows Azure AD共有することができます</a>。 もちろん、プレビューなので、一部の変更は今後変わります。 計画した変更の一部を次に示します。</p>  <h4>その他のプラットフォーム</h4>  <p>Developer Preview は .NET アプリケーションを対象としますが、これらのライブラリの恩恵を受ける可能性があるプラットフォームは他にも多数あるとわかっています。</p>  <p>クライアント アプリケーションの場合、WinRT、iOS、Android 用のプラットフォーム固有のバージョンの AAL の開発に取り組み中です。 他のユーザーも追加する場合があります。 サービス側の機能については、さらに多くの言語のサポートを追加する必要があります。&nbsp; 最初に表示するプラットフォームに関するフィードバックがある場合は、お知らせする適切な時期です。</p>  <h4>名前空間とディレクトリ Access Control機能の収束</h4>  <p>最初の Developer Preview のお知らせで詳しく説明しますが、現在の時点では、名前空間とディレクトリ テナントAccess Controlいくつかの違いがあります。 プログラミング モデルはテナントの種類間で&rsquo;一貫しています。コードを変更してそれを考慮する必要はありません。 ただし、テナントの種類に応じて異なる機能を使用できます。 今後、これらの違いは徐々に消えるのが分かっています。</p>  <h4>ライブラリのリファクタリング</h4>  <p>Developer Preview 用にリリースされたアセンブリは、ネイティブ コアを中心に構築されています。 現在のアーキテクチャの理由は、一部の製品にクレーム ベースの ID 機能を追加するために使用している他のライブラリと一部のコードを共有しているからです。 ネイティブ コアが存在すると、.NET アプリケーションでライブラリの Developer Preview を使用する場合にいくつかの制約が生まれます。 たとえば、使用する &ldquo;ライブラリの&rdquo; バージョンを決定する際には、ターゲット アーキテクチャ (x86 または x64) のビットが重要です。 既知の制限事項の詳細な一覧については、サンプルのリリース ノートを参照してください。&nbsp;Azure Authentication Library for .NET Windowsの今後のリリースには、ネイティブ コアが含まれる予定はありません。</p>  <p>さらに、Developer Preview では、AAL にはクライアント側とサービス側の両方の機能が含まれている。 今後、ライブラリにはクライアント機能だけが含まれるので、 トークンの検証、OAuth2 承認フローの処理、同様の機能などのサービス側の機能は、Windows Identity Foundation に個別の拡張機能として提供され、<a href="https://connect.microsoft.com/site1168/Downloads/DownloadDetails.aspx?DownloadID=35417" target="_blank">OAuth2 の WIF</a> 拡張機能で開始した作業を続行します。</p>  <h4>Windows Azure Authentication Library とオープン ソース</h4>  <p>開発者プレビューの Windows Azure Authentication Library プログラミング モデルのシンプルさは、上級ユーザーが必要な程度に調整できない可能性も意味します。 この問題に対処するために、オープン ソース ライセンスで AAL の今後の削除をリリースする予定です。 そのため、開発者はコードをフォークし、ニーズに合わせて変更し、必要に応じて改善をメイン ライン コードに戻すことができます。</p>  <p>AAL の Developer Preview は、アプリを完全に活用するために必要なツールを提供するためのもう 1 つのWindows Azure AD。 もちろん、作業は開始するだけであり、多くの作業が残っています。 ライブラリサンプルと&rsquo; NuGets をダウンロードし、スピンを与えて、ご自分の考えをお知らせください。</p>  <p>最後に、これまでにフィードバックを提供して下さったすべての方に感謝します。 お客様が受け取った時間&rsquo;と、ご提供されたフィードバックの深さに本当に&rsquo;感謝します。 私&rsquo;たちは、適切な方向にWindows Azure AD進化し続ける必要があります。</p>  <p>-&nbsp;提供: Alex Simons、Active Directory 部門のプログラム管理のディレクター</p>'
