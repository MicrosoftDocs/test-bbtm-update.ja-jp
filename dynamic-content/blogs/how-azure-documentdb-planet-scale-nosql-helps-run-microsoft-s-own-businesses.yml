### YamlMime:Yaml
ms.openlocfilehash: ffde467701454a814a691aa5347b9686b34fdc61
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893951"
Slug: how-azure-documentdb-planet-scale-nosql-helps-run-microsoft-s-own-businesses
Title: Microsoft が Azure Cosmos DB を使用して非常にスケーラブルなサービスを構築する方法
Summary: Microsoft Data Amp では、この週、Microsoft の Data Platform の最新のイノベーションを使用して、データの信じられない機能を活用する方法について説明します。 データ プラットフォームの重要な部分の 1 つは...
Content: >-
  <p><strong><a href="https://docs.microsoft.com/en-us/azure/documentdb/documentdb-nosql-local-emulator">https://docs.microsoft.com/en-us/azure/documentdb/documentdb-nosql-local-emulator</a>2017 年 5 月 10 日現在、</strong></p>


  <p><strong>Azure Cosmos DB は、Microsoft&rsquo; のグローバル分散マルチモデル データベースです。Azure Cosmos DB は、その中核となるグローバル分散と水平スケールで、最初から構築されました。ユーザーがどこにいてもデータを透過的にスケーリングしてレプリケートすることで、任意の数の Azure リージョンにターンキーグローバル分散が提供されます。スループットとストレージを世界規模で弾力的にスケーリングし、必要なスループットとストレージに対してだけ料金を支払います。Azure Cosmos DB では、世界中の任意の場所で 99&mdash; 番目の割合で 1 桁ミリ秒の待機時間が保証され、パフォーマンスを微調整する複数の定義済みの整合性モデルが提供され、業界をリードするサービス レベル アグリーメント (SLA) によってサポートされるマルチホーム機能を使用して高可用性が保証されます。&nbsp;</strong></p>


  <p><strong>Azure Cosmos DB は、スキーマに依存せず、スキーマとインデックスの管理に対処する必要なく、すべてのデータのインデックスを自動的に作成します。また&rsquo;、ドキュメント、キー値、グラフ、および列ファミリのデータ モデルをネイティブにサポートするマルチモデルです。Azure Cosmos DB では、DocumentDB SQL (ドキュメント)、MongoDB (ドキュメント)、Azure Table Storage (キー値)、Gremlin (グラフ) がネイティブにサポートされているので、選択した API を使用してデータにアクセスできます。</strong></p>


  <hr>

  <p>Microsoft Data Amp では、この週、 <a href="https://www.microsoft.com/dataamp">データ</a> プラットフォームで Microsoft&rsquo; の最新のイノベーションを使用して、データの信じられない機能を活用する方法について説明しました。 データ プラットフォームの重要な部分の 1 つは、Azure Cosmos DB、Microsofts&rsquo; のグローバル分散<a href="https://docs.microsoft.com/azure/cosmos-db/introduction">マルチモデル データベース サービスです</a>。 Azure Cosmos DB は、多くの年の間、ファースト パーティのアプリケーションのバックエンドとしてMicrosoft サービス広く使用されています。</p>


  <p>このブログでは、Windows、ユニバーサル ストア、および Azure IoT Hub チームによる Azure Cosmos DB のファーストパーティ アプリケーションのケース スタディと、これらのチームが Azure Cosmos DB のスケーラビリティ、低待機時間、柔軟性の利点を活用してイノベーションを行い、ビジネス価値をサービスに提供する方法について説明します。</p>


  <h2>Microsoft DnA: Microsoft がエラー報告と診断を使用してエラー報告を改善するWindows</h2>


  <p>Microsoft Windows Data and Analytics (DnA) チームは、データ分析用のクラッシュ レポート テクノロジを実装Windows。 コンポーネントの 1 つは、すべてのデバイスで Windows サービスとしてWindowsされます。 アプリケーションがユーザー&#39;のデスクトップで応答を停止するたびに、Windows&rsquo; はエラー後のデバッグ情報を収集し、エラーの解決策を見つけることに関心がある場合は、ユーザーに確認を求めるメッセージを表示します。 ユーザーが受け入れる場合、ダンプはインターネットを使用して DnA サービスに送信されます。 ダンプがサービスに到達すると、分析され、使用可能なときにソリューションがユーザーに送り返されます。</p>


  <h3>Windows診断情報を報告するエラー</h3>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fa8b07ec-f097-4fcf-bcff-a313d3c3ba35.jpg"><img alt="clip_image002" border="0" height="537" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c0b662bd-0dcb-4d1d-aa61-8f03a5b153b0.jpg" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="clip_image002" width="771"></a></p>


  <p>&nbsp;</p>


  <h3>Windows&#39;キーと値の参照が必要な場合</h3>


  <p>DnAs の&rsquo;用語では、クラッシュ レポートはバケットに編成 &ldquo;されます&rdquo;。 各バケットは、アプリケーション名、アプリケーション バージョン、モジュール名、モジュールバージョン、OS 例外コードなどの主要な属性によって問題を分類するために使用されます。 各バケットには、同じバグが原因のクラッシュ レポートが含まれている。 ハードウェアベンダーとソフトウェア ベンダーの大規模なエコシステムと、エラー レポートに関して収集された 15 年間のデータにより、DnA サービスのデータベース クラスターには <strong>100</strong> 億を超える一意のバケットがあります。</p>


  <p>DnA チームの要件の&rsquo; 1 つは、非常に単純な顔値でした。 <strong>バケットのハッシュを指定すると、バケット/問題に対応する ID が返されます (使用可能な場合)。</strong> しかし、このスケールは興味深い技術的な課題を生み出しました。 多くのデータ (100 億バケット、1 日 600 万件の増加)、要求の量とグローバルなリーチ (Windows を実行している任意のデバイスからの要求)、および低待機時間の要件 (優れたユーザー エクスペリエンスを確保するために) がありました。</p>


  <p>バケット ディメンションを&ldquo;&rdquo;格納するために、DnA チームは、プロビジョニングされたスループットの 1 秒あたり 400,000 要求ユニットを持つ単一の Cosmos DB コンテナーをプロビジョニングしました。 すべてのアクセスは主キー &ldquo;によって行っていたので、パーティション キーは ID&rdquo; と同じに構成され、さまざまな属性のダイジェストが値として使用されます。 Azure Cosmos DB &lt;では p99 で 10 ミリ&lt;秒の読み取り待機時間と 15 ミリ秒の書き込み待機時間が提供されたので、DnA では、データと要求のボリュームが時間の長い間増加し続けている場合でも、バケットとルックアップの問題に対して高速な検索を実行できます。</p>


  <h3>Windows cab カタログのメタデータとクエリ</h3>


  <p>DnA チームは、高速なリアルタイム検索以外に、最も影響の大きな問題を修正することで、Microsoft&rsquo; や他のベンダー製品の改善に役立つエンジニアリング上の決定を行うデータを使用したいと考えました。 たとえば、チームは、信頼性の問題の上位 1% に対処すると、顧客の問題の 50%&rsquo; に対処できると見なしています。 この分析では、クラッシュ ダンプバイナリ ファイル &ldquo;、cabs&rdquo; の格納、有用なメタデータの抽出、このデータに対する分析とレポートの実行が必要でした。 これにより、多くの興味深い課題が独自に提示されました。</p>


  <ul>
   <li>チームは、約 600 種類の信頼性インシデント データ <strong>を扱います</strong>。 スキーマとインデックスを管理するには、チームに対するエンジニアリングと運用上の大きなオーバーヘッドが必要でした。</li>
   <li>cab メタデータも大きなデータ量でした。 約 50 億台のタクシーがいて、毎日 3,000 万台の新しいタクシーが追加されました。</li>
  </ul>


  <p>DnA チームは、オンプレミスの SQL サーバー クラスターに基づいて、以前のソリューションからバケット ディメンションストアと Cab カタログ ストアを Azure Cosmos DB に移行できます。 データベースの負荷が&rsquo;高いデータベースを Cosmos DB に移行した後、DnA は、Cosmos DB によって提供される速度、スケール、柔軟性の恩恵を受けしました。 さらに重要なのは、データベースのメンテナンスを減らして、データベースのユーザー エクスペリエンスを向上Windows。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/82376144-66ba-47fa-a4e8-6807ababfa55.jpg"><img alt="clip_image004" border="0" height="674" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a19374f3-94cb-4c06-a90c-a6b8162ad8b9.jpg" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="clip_image004" width="404"></a></p>


  <p>ケース スタディについては、<a href="https://customers.microsoft.com/en-US/story/microsoftdataandanalytics">Microsofts&rsquo; DnA チームが Azure Cosmos DB</a> を使用して地球規模のビッグ データ収集を実現しています。</p>


  <h2>Microsoft Global Homing Service: Xbox Liveとユニバーサル ストアで高可用性ロケーション サービスを構築する方法</h2>


  <p>Microsofts&rsquo; ユニバーサル ストア&rsquo; チームは、Windows Store、Xbox、および大規模な一連の Microsoft サービス 全体で Microsoft の店舗を販売するために使用される e コマース プラットフォームを実装しています。 ユニバーサル ストア バックエンドの主要な内部コンポーネントの 1 つは Global Homing Service (GHS) です。グローバル ホーム サービス (GHS) は、1 対多の任意の多数の ID に関連付けられた場所メタデータをすばやく取得する機能をダウンストリーム コンシューマーに提供する信頼性の高いサービスです。</p>


  <h3>4 つのリージョンにわたる Azure Cosmos DB を使用したグローバル ホーム サービス (GHS)</h3>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0281f508-a27f-4db8-bba2-a3b2f50e021f.png"><img alt="GLS" border="0" height="455" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/df3ee525-fde3-40f9-8578-c3376078b25c.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="GLS" width="488"></a></p>


  <p><strong>GHS は、そのコンシューマー サービスの大部分がホット パスであり、1 秒あたり数十万件の要求を受け取ります。</strong> そのため、サービスの待機時間とスループットの要件は厳密です。 このサービスでは、パートナー チームの要件を満たすために、99.99% の可用性と予測可能な待機時間を 99.9 番目の 99.9 のセンタイルでエンドツーエンドで維持する必要があります。 待ち時間を短縮するために、サービスは geo 分散型で、パートナー サービスを呼び出すのに可能な限り近い位置にいます。</p>


  <p>GHS の初期設計は、Azure Table Storageとさまざまなレベルのキャッシュの組み合わせを使用して実装されました。 このソリューションは最初の一連の負荷に対してうまく機能しましたが、GHS の重要な性質と主要なパートナーからのサービスの導入の増加を考えると、既存の SLA&rsquo; がパートナーの 300ms の P99.9 &lt;要件を満たしていない、99.99% の信頼性が 1 分間で満たされないのが明らかになりました。 GHS&rsquo; 呼び出しパスに重要な依存関係を持つパートナーは、全体的な信頼性が高かった場合でも、タイムアウトの数が許容範囲を超え、パートナー自身の SLA が顕著に低下する期間が発生する可能性が見つかりました。 これらのタイムアウトの増加期間には&ldquo;&rdquo;マイクロ停止という名前が付け、主要パートナーは毎日これらの追跡を開始しました。</p>


  <p>LevelDB、Kafka、MongoDB、Cassandra など、考えられる多くのソリューションを調査した後、ユニバーサル ストア チームは GHSS&rsquo; Azure Table バックエンドと、その前の元のキャッシュを Azure Cosmos DB バックエンドに置き換える選択をしました。 GHS は、パートナー チームが最大のフットプリントを持つ 4 つの地理的リージョンにデプロイされた、1 秒あたり 600,000 個の要求ユニットを含む単一の Cosmos DB コレクションをデプロイしました。 Azure Cosmos DB への切り替えの結果、GHS のお客様は、p50 待機時間が 30ms を超え、マイクロ停止の数と規模が大幅に減少しています。 GHS&rsquo; の可用性は、移行後も 99.99% 以上のままです。 サービスの可用性の増加に加えて、全体的な待機時間は、ほとんどの GHS 呼び出しパターンでも大幅に改善されました。</p>


  <h3>AZURE と DB の移行の前と後の GHS マイクロCosmos数</h3>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/48f6ea9e-7d42-4894-b2aa-f51a29b0aa38.png"><img alt="clip_image006" border="0" height="229" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2e2cebf3-3d72-4fae-8509-d412887c6131.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="clip_image006" width="714"></a></p>


  <h2>Microsoft Azure IoT Hub: 数十億の IoT デバイスからの firehose を処理する方法</h2>


  <p><a href="https://azure.microsoft.com/services/iot-hub/">Azure IoT Hub は</a>、組織が最大数十億の IoT デバイスに接続、監視、管理できるフル マネージド サービスです。 IoT Hub、デバイス間の信頼性の高い通信、デバイス メタデータと同期された状態情報のクエリ可能なストアを提供し、デバイス接続とデバイス ID 管理イベントの広範な監視を提供します。 Azure IoT Hub IoT デバイスからの大量の書き込みのインジェスト ポイントにあるので、バックエンドに堅牢でスケーラブルなデータベースが必要でした。</p>


  <p>IoT Hubは、デバイスと&ldquo;<a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins"></a>&rdquo;バック エンドがデバイスの状態と構成を同期するために使用できる API の一部として、デバイス関連の情報であるデバイス ツインを提供します。 デバイス ツインは、バックエンド内のデバイスに割り当てられたタグ、デバイスの構成または条件を含む報告されたプロパティのプロパティ バッグ、および構成変更を実行するためにデバイスに通知するために使用できる必要なプロパティのプロパティ バッグを含む JSON &ldquo;&rdquo; &ldquo;&rdquo; ドキュメントです。 IoT Hub チームは、Hbase、Cassandra、MongoDB に対して Azure Cosmos DB を選択しました。これは、Cosmos DB では、低待機時間の保証、ストレージとスループットの柔軟なスケーリング、グローバル分散による高可用性、自動インデックス作成による豊富なクエリ機能など、チームが必要とする機能が提供されたためです。</p>


  <p>IoT Hubツイン データを JSON ドキュメントとして格納し、ほぼリアルタイムでデバイスから報告された最新の状態に基づいて更新を実行します。 このアーキテクチャでは、デバイス ID&nbsp; に基づく&nbsp;&nbsp;パーティション キーを使用するパーティション分割コレクションを使用して、大量の書き込みを処理するために柔軟にスケーリングします。 IoT Hubでは、Service Fabricを使用して複数のサーバー間でデバイスをスケールアウトします。各サーバーは、1-N の Azure Cosmos DB パーティションと通信します。 このトポロジは、使用可能な各 Azure リージョンIoT Hubレプリケートされます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8986f2f0-503c-4b6d-827c-5939df59468f.png"><img alt="clip_image001" border="0" height="317" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/11650702-4a9d-47f6-bac8-8dbad4dc72b6.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="clip_image001" width="634"></a></p>


  <h2>次の手順</h2>


  <p>このブログでは、Azure Cosmos DB のファーストパーティの使用事例と、これらの Microsoft チームが Azure Cosmos DB を利用して、ユーザー エクスペリエンスの向上、待ち時間、およびサービスの信頼性を向上させる方法について説明しました。</p>


  <ul>
   <li><a href="docs.microsoft.com/azure/documentdb/documentdb-distribute-data-globally">Azure Cosmos DB を使用したグローバル分散に関するページを参照してください</a>。</li>
   <li>Azure portal から新しい Azure Cosmos DB アカウントを作成するか、Azure Cosmos <a href="https://docs.microsoft.com/azure/documentdb/documentdb-nosql-local-emulator">DB</a> Emulator。</li>
   <li>Twitter <a href="https://twitter.com/AzureCosmosDB">@CosmosDB</a> でフォローしたり、Stack Overflow の開発者フォーラムでお問い合わせしたりして、最新の Azure Cosmos DB のニュースと機能に関する最新情報<a href="https://stackoverflow.com/questions/tagged/azure-cosmos-db">を確認してください</a>。</li>
  </ul>
