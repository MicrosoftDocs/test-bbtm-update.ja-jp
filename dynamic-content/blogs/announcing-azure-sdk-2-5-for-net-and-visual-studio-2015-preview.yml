### YamlMime:Yaml
ms.openlocfilehash: 3d362e45b4806a5bbdeac7a6abc8f54dd7b7bb62
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891271"
Slug: announcing-azure-sdk-2-5-for-net-and-visual-studio-2015-preview
Title: Azure SDK 2.5 for .NET および 2015 プレビュー Visual Studio発表
Summary: 本日は、Azure SDK 2.5 for Visual Studio 2012、2013、2015 Preview をお知らせします。 また、2015 年 2 月のプレビュー Visual Studio、さらに多くの Azure 機能が追加される予定です。
Content: "本日は、Azure SDK 2.5 for Visual Studio 2012、2013、2015 Preview をお知らせします。また、2015 年 2 月のプレビュー Visual Studio、さらに多くの Azure 機能が追加される予定です。この投稿では、これらのリリースの機能と、可能なシナリオについて説明します。\n\n<span style=\"text-decoration: underline\">Azure SDK 2.5 for .NET [<a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids\">VS 2013VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs11AzurePack.appids\">2012VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2015AzurePack.appids\">2015 Preview のダウンロード</a>]</span>\n<ul>\n <li><strong>Cloud Services および Virtual Machines</strong> の診断の機能強化: 診断機能で Azure 拡張機能モデルが使用され、診断を有効にしたり、再デプロイせずに構成を更新したりできます。新しい機能には、構造化ログ、クラッシュ ダンプ、および初回のサポートVirtual Machines ETW が含まれます。</li>\n <li><strong>Azure Resource Managerツール</strong>: Azure ギャラリー テンプレートを使用して、複数の Azure リソースで構成されるアプリケーションを作成します。このエクスペリエンスは、JSON テンプレートとパラメーター ファイルを使用して、宣言型Project反復可能な方法で複雑な環境を作成できる新しいクラウドデプロイ の種類で利用できます。</li>\n <li><strong>クイック スタート</strong>: [&gt;File New Project Cloud]/&gt;(クラウドの新しいファイルの作成)ダイアログには、新しいテンプレートが含まれています。新しいMicrosoft Azure示します。</li>\n <li><strong>WebJobs の</strong>リモート デバッグサーバー エクスプローラーサポート: コンソールまたは Web プロジェクトから Web ジョブを発行する機能を以前に追加しました。このリリースでは、サーバー エクスプローラーデバッグ機能が追加されています。</li>\n <li><strong>Storage Explorer での BLOB フォルダーのサポート</strong>: Blob Storage コンテナー内のフォルダーを表示および作成Storage Explorer。</li>\n <li><strong>HDInsight サーバー エクスプローラーと Hive クエリ</strong>のサポート: Hive クエリを記述し、Hive ジョブを表示します(Visual Studio。</li>\n</ul>\n∙\n\n<span style=\"text-decoration: underline\">Visual Studio 2015 プレビュー [<a href=\"https://aka.ms/vs2015preview\">ダウンロード</a>]</span>\n\nAzure SDK 2.5 は、Visual Studio 2015 プレビューでサポートされている最初の Azure SDK です。 上記の機能にVisual Studio 2013、Visual Studio 2015 Preview には次の機能が導入されています。\n<ul>\n <li><strong>追加接続済みサービス</strong>: サービスやサービスに簡単Azure Storage接続Mobile Services。このフローでは、適切なプロジェクト参照が追加され、接続文字列が挿入され、サービスの使用に関する開始ガイダンスが提供されます。</li>\n <li><strong>Enterprise SSO</strong>: シングル サインオンを使用してエンタープライズ シングル サインオン (SSO) をAzure Active Directory。</li>\n <li><strong>Connect Visual Studio Azure アカウントに</strong>アクセスする: Visual Studioサインインすると、Azure サブスクリプションに自動的にサインインされます。 また、追加の Azure アカウントにサインインして、それらのすべてのアカウントの Azure サブスクリプションとリソースに同時にアクセスすることもできます。</li>\n <li><strong>Code Analysis Azure</strong>: この NuGet パッケージには、Azure アプリケーションのパフォーマンス、スケーラビリティ、またはセキュリティの問題を引き起こすコーディング パターンを識別するコード分析ルールが提供されます。</li>\n <li><strong>ASP.NET 5.0</strong>: [プレビュー] タブとパフォーマンスの向上により、Azure への発行が更新されました。</li>\n</ul>\n<h1>診断: ETW を使用した診断ログの改善</h1>\nETW イベント ソースを使用して構造化ログとセマティック ログを実行できます。 ETW イベント ソースとイベント ID を使用すると、アプリケーション ワークフローの論理イベントとステージを定義できます。 複数の階層にわたるイベントを追跡して、アプリケーション ワークフローの問題の診断に役立ちます。\n\nイベント ソースのログ記録を有効にするには、まずソースでイベント クラスを定義します。 次のスニペットは、 <b>2 つのイベント</b> を含むサンプルのゲストブック アプリケーションの EventSource を示しています。\n<pre class=\"prettyprint\">[EventSource(Name=\"Contoso-GuestBook\")]\npublic sealed class GuestBookEventSource: EventSource\n{\n    ...\n\n    [Event(1, Message = \"Added entry in table storage for guest '{1}'\", \nLevel = EventLevel.Informational)]\n    public void GuestBookEntryAdded (string guestName, Guid activityID )\n    {\n        if (this.IsEnabled()) {WriteEvent(1, guestName, activityID);}\n    }\n\n    [Event(2, Message = \"Queued message to process blob '{0}'\", \nLevel = EventLevel.Informational)]\n    public void ThumbnailRequestPosted(string pictureUrl, Guid activityID)\n    {\n        if (this.IsEnabled()) { WriteEvent(2, pictureUrl, activityID);}\n    }\n    ...\n}</pre>\nイベントを定義した後、アプリケーションにログを記録します。 たとえば、ゲストブック アプリケーションでは、GuestBookEntryAdded イベントをログに記録します。\n<pre class=\"prettyprint\">GuestBookEventSource.Log.GuestBookEntryAdded(\n    entry.GuestName, GuestBookEventSource.CurrentThreadActivityId);</pre>\nコード内のイベントをログに記録したら、[ロール] を右クリックして [プロパティ] を選択して、ロールの診断を構成 <b>します</b>。 [構成 <b>] プロパティ</b> ページで、[診断の <b>有効化] がオン</b> に設定され、[構成] <b>をクリックします。</b> を追加します。\n\n[診断構成 <b>] ダイアログで</b> 、[ <b>ETW ログ] タブに移動し、[ETW</b> ログの転送を有効にする <b>] を選択します</b>。 イベント ソース名を指定し、[イベント ソースの追加] ボタンをクリックして、転送する適切なイベント ソース <b>を追加</b> します。 追加したら、ログの保存場所、ログ レベル、キーワード フィルター、転送頻度など、追加のプロパティを構成します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/Diagnostics1.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"Diagnostics1\" alt=\"Diagnostics1\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Diagnostics1_thumb.png\" width=\"610\" height=\"454\" border=\"0\" /></a>\n\nクラウド サービスをデプロイすると、診断の概要が表示されます。 ロールの診断データを表示するには、ロールを右クリックして [診断データの表示 <b>] を選択します</b>。 これにより、診断の概要ページが表示されます。ETW ログの新しいセクションが表示されます。 対応するエラーを表示するには、適切な ETW ログ テーブルを選択します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image004.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image004\" alt=\"clip_image004\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image004_thumb.png\" width=\"610\" height=\"562\" border=\"0\" /></a>\n\n新しい診断機能では拡張機能モデルが使用されます。このため、クラウド サービスの発行後に実行中のサービスの診断構成を更新できます。 これを行うには、[更新プログラム] <b>をサーバー エクスプローラー</b> ロールを右クリックし、[診断の更新 <b>] を選択します</b>。\n<h1>診断: クラッシュ ダンプの構成</h1>\nクラッシュ ダンプを構成するには、[診断構成] ダイアログの [ <b>クラッシュ</b> ダンプ] タブに移動します。 クラッシュ ダンプを収集するプロセスの名前を追加すると、診断によって選択した BLOB コンテナーに収集されます。 既定では、クラウド ロールの最も一般的なプロセスは、クラッシュ ダンプ収集用に事前に選択されています。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image006.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image006\" alt=\"clip_image006\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image006_thumb.png\" width=\"610\" height=\"454\" border=\"0\" /></a>\n<h1>診断: Virtual Machines</h1>\nアプリケーションを監視したり、トレース ログを使用Virtual Machinesから診断データを収集したりすることができます。 診断を有効にするには、<b>サーバー エクスプローラーを開</b>き (&gt;<b>サーバー エクスプローラーを表示</b>)、仮想マシンを右クリックし、[構成] <b>を選択します。</b>\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image008.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image008\" alt=\"clip_image008\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image008_thumb.jpg\" width=\"429\" height=\"357\" border=\"0\" /></a>\n\n表示されたダイアログに、[インストールされている拡張機能] <b>セクションが表示</b> されます。 このセクションのドロップダウン メニューをクリックし、[診断] 拡張機能Microsoft Monitoring Agent<b>選択</b>し、[追加] をクリック<b>します</b>。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image010.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image010\" alt=\"clip_image010\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010_thumb.png\" width=\"610\" height=\"334\" border=\"0\" /></a>\n\nこれにより、診断構成ダイアログが表示されます。 設定は、PaaS のシナリオで見たのとまったく同じです。 そのため、ETW EventSource を使用して診断コードを開発し、IaaS VM の診断構成をまったく同じ方法で設定できます。 ログに記録する情報の構成が完了したら、変更内容を保存し、仮想マシンに変更を適用する構成を更新します。\n\n<em>2.5 リリースの診断機能の 1 つの制限は、Compute Emulator でアプリケーションをローカルでデバッグするときに診断ログがキャプチャされないという点です。パフォーマンス カウンター、IIS ログ、またはイベント ログは取得しない。また、ローカル デバッグ シナリオでは、ログは Azure ストレージまたは開発ストレージに転送されません。アプリケーションをローカルでデバッグしている間にアプリケーション ログを表示するには、System.Diagnostics.Trace を使用します。このトレースは、コンピューティング ログにトレースを表示Emulator。</em>\n<h1>Azure Resource Manager ツール</h1>\nこのAzure Resource Managerツールを使用すると、リソース グループ内にリソースを迅速かつ効率的に作成してデプロイし、組織と反復性を向上できます。このツールでは、カスタマイズとパラメーター化を可能にし、ある環境から次の環境に移行する際のコストを削減する Azure ギャラリー テンプレートを使用します。概要 <b>File-New Project Cloud&gt;&gt;-&gt; Cloud Deployment</b> Project からデプロイ プロジェクトを作成します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image012.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image012\" alt=\"clip_image012\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image012_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n\nプロジェクトを作成すると、一般的な Azure ギャラリー テンプレートの一覧が表示されます。 今後のリリースでは、ネットワーク、ストレージ、仮想マシンなどの他の Azure 機能を使用するアプリケーション シナリオ用に、さらに多くのテンプレートが追加される予定です。 構築するソリューションに最も近いテンプレートを選択します。\n\n<b><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image014.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image014\" alt=\"clip_image014\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image014_thumb.png\" width=\"610\" height=\"458\" border=\"0\" /></a></b>\n<h2>クラウド アプリ ソリューション</h2>\nAzure ギャラリーから <b>Web </b>サイト テンプレートを選択して、ASP.NET Website Project と新しいプロジェクトの種類 (<b>MyAzureCloudApp.Deployment</b> という名前の Azure Resource Manager Deployment プロジェクト) を含むソリューションを作成します。 デプロイ プロジェクトには、デプロイ テンプレート ファイル (<b>WebSiteDeploy.json</b>)、テンプレート パラメーター定義 (<b>WebSiteDeploy.param.dev.json</b>)、および Azure へのリソースのデプロイに使用できる PowerShell スクリプト (<b>Publish-AzureResourceGroup.ps1</b>) が含まれます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image016.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image016\" alt=\"clip_image016\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image016_thumb.jpg\" width=\"413\" height=\"315\" border=\"0\" /></a>\n\nデプロイ テンプレートとパラメーター ファイルを使用すると、クラウド ライフサイクル パターンで簡単に作業し、これらのファイルを構成としてコードとして扱うことができます。 *.dev.json という名前のパラメーター ファイルが既定で作成されます。このパラメーター ファイルをコピーし、*.test.json または *.staging.json という名前を付けると、1 つのテンプレートを使用して複数の環境を構築できます。\n\nVisual Studio組み込みの JSON エディターを使用してこれらの JSON ファイルを簡単に編集し、公開されている JSON スキーマに基づく IntelliSense を含めます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/image.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"image\" alt=\"image\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb.png\" width=\"610\" height=\"391\" border=\"0\" /></a>\n<h2>Azure リソースを作成する</h2>\nAzure にリソースをデプロイする最も簡単な方法は、[デプロイ] タブを右クリックしProject新しいデプロイのデプロイ<b>...] を選択します。&gt;</b> [リソース グループへのデプロイ] ダイアログが表示されます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image018.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image018\" alt=\"clip_image018\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image018_thumb.png\" width=\"500\" height=\"326\" border=\"0\" /></a>\n\nWeb アプリケーションに必要なすべてのリソースを含む Azure リソース グループを作成するには、[リソース グループ] コンボ ボックスを<strong></strong>クリックし、[新規の作成] を選択して [リソース グループの作成] ダイアログ<strong>を</strong>表示します。 [リソース グループの <strong>作成] </strong>ダイアログの [作成] ボタンを <b>クリック</b> すると、Azure リソース グループはプロビジョニングされますが、リソースはまだプロビジョニングされていません。\n\nデプロイ テンプレート ファイル (websitedeploy.json) とテンプレート パラメーター ファイル (websitedeploy.param.dev.json) では、デプロイとプロビジョニングの詳細またはリソースを指定します。 ストレージ アカウントは、テンプレートのデプロイに含めAzure Resource Managerにアプリケーション パッケージをアップロードするために使用されます。 ストレージ アカウントをまだ持ってない場合は、先に進む前にストレージ <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-create-storage-account/\">アカウントを作成する</a> 必要があります。\n\n[パラメーターの <b>編集]</b> ボタンをクリックすると、Web サイト名、Web ホスティング プラン名、Web サイトの場所などを指定できるダイアログが表示されます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image019.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image019\" alt=\"clip_image019\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image019_thumb.png\" width=\"403\" height=\"318\" border=\"0\" /></a>\n\nパラメーター値は <b>WebSiteDeploy.param.dev.json</b> ファイルに保存されます。そのため、この情報を次にデプロイする場合は、この情報を入力する必要はありません。 ローカル JSON をカスタマイズして格納できると、リソースを再デプロイするときにエラーが発生する可能性が減少します。\n\nすべてのパラメーターを指定して保存したら、[デプロイ] ボタンを<strong></strong>クリックして、アプリケーションとリソースを Azure にデプロイします。 [出力] ウィンドウで詳細な進行状況を確認できます。また、リソース グループとデプロイされたリソースはすべて、新しい <a href=\"https://portal.azure.com/\">強化された Azure Portal</a> を使用して表示できます。\n<h1>クイック スタート</h1>\nクイック スタートには、Azure SDK や他のライブラリを利用して Azure サービスと対話する方法を示すサンプル コードが用意されています。 [ファイル ] - [新しいファイル<b>] -&gt; [Project -&gt;&gt; クイック スタート] の下にある [クイック スタート] を見つける</b>。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/dialog.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"ダイアログ (dialog)\" alt=\"dialog\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dialog_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n\n現在のリリースでは、Azure Storage (BLOB、テーブル、キュー)、DocumentDB、Azure Redis Cache Service、Azure Media Services、Azure WebJobs (BLOB、テーブル、キュー、Service Bus キュー) と Service Bus (トピック、キュー) の使い方を示すサンプルがあります。 また、Microsoft Azure Management Libraries (MAML) を使用して C# を使用して Azure でリソースをプログラムで作成する方法を示すサンプルもあります。\n<h1>WebJobs</h1>\nAzure WebJobs WebJobs SDK が一般公開されています。 WebJobs と WebJobs SDK の詳細については、「推奨リソース」のAzure WebJobs <a href=\"https://aka.ms/webjobs\">開始してください</a>。\n\n以前に、コンソールまたは Web プロジェクトから WebJobs を発行する機能を追加しました。 このリリースでは、リモート デバッグサーバー エクスプローラーサポートを追加しました。\n<h2>WebJobs SDK は WebJobs テンプレートにプレインストールされています</h2>\nWebJobs プロジェクト テンプレートに、<a href=\"https://go.microsoft.com/fwlink/?LinkID=320976\">WebJobs SDK への参照が自動的に含まれる。</a> プロジェクトの作成時に、必要な Web ジョブの種類を指定します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image023.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image023\" alt=\"clip_image023\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image023_thumb.jpg\" width=\"610\" height=\"325\" border=\"0\" /></a>\n\nオンデマンド ジョブとスケジュールされたジョブの場合、プロジェクトにドロップされるファイルは、スケジュールされたタスクまたはオンデマンド タスクに固有です。 オンデマンドジョブまたはスケジュールされたジョブの Program.cs ファイルには、WebJob を明示的に実行するコードが含まれている。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image025.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image025\" alt=\"clip_image025\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image025_thumb.jpg\" width=\"610\" height=\"303\" border=\"0\" /></a>\n\n継続的な Web ジョブは、別の Program.cs ファイルを取得します。 継続的なテンプレート コードには、WebJob ホストを起動して終了をブロックする呼び出しが含まれています。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image027.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image027\" alt=\"clip_image027\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image027_thumb.jpg\" width=\"610\" height=\"303\" border=\"0\" /></a>\n\n同様に、Continuous WebJob プロジェクトにドロップされる Functions.cs ファイル内のコードには、キューの監視に使用される WebJobs SDK 対応属性の一部Azure Storage含まれています。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image029.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image029\" alt=\"clip_image029\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image029_thumb.jpg\" width=\"610\" height=\"300\" border=\"0\" /></a>\n<h2>WebJobs サーバー エクスプローラー機能</h2>\nWebJobs は、対応する Web サイトの サーバー エクスプローラーに表示され、実行モードに従ってグループ化されます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image031.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image031\" alt=\"clip_image031\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image031_thumb.jpg\" width=\"489\" height=\"520\" border=\"0\" /></a>\n\n各 Web ジョブ サーバー エクスプローラー、追加された機能のコンテキスト メニュー ジェスチャが公開されます。 Web ジョブのダッシュボードへのアクセスは、1 回のメニュー クリックで行うのと同じほど簡単です。 開発者は、コンテキスト メニュー ジェスチャを使用して、オンデマンドまたはスケジュールされた Web ジョブを実行することもできます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image033.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image033\" alt=\"clip_image033\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image033_thumb.jpg\" width=\"610\" height=\"450\" border=\"0\" /></a>\n\n継続的な Web ジョブ ノードでは、Azure WebJob のダッシュボードにアクセスする 1 回のクリック方法も提供されます。 継続的な Web ジョブは、コンテキスト メニューから開始または停止することもできます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image035.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image035\" alt=\"clip_image035\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image035_thumb.jpg\" width=\"610\" height=\"507\" border=\"0\" /></a>\n<h2>WebJobs リモート デバッグ</h2>\nまた、継続的な Web ジョブに対するリモート デバッグのサポートも追加されました。 継続的 Web ジョブが開始すると、[デバッガーのアタッチ] ジェスチャは、継続的 Web ジョブのノードのコンテキスト メニューから表示されます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image037.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image037\" alt=\"clip_image037\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image037_thumb.jpg\" width=\"610\" height=\"445\" border=\"0\" /></a>\n\n継続的 Web ジョブのコードにブレークポイントを配置し、デバッガーをアタッチすることで、コードをステップ実行し、Visual Studio でローカルで実行されている場合と同様にデバッグできます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image039.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image039\" alt=\"clip_image039\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image039_thumb.png\" width=\"610\" height=\"274\" border=\"0\" /></a>\n<h1>Storage Explorer</h1>\nBLOB フォルダーを使用すると、BLOB のグループを論理ユニットに簡単に分割できます。これは、すべての情報を格納するために 1 つの BLOB コンテナーを使用している場合に特に便利です。 これらの BLOB フォルダーは、 文字で区切られた BLOB 名のプレフィックス <b>/</b> です。 たとえば、<b>pictures</b> フォルダー内に <b>file.png</b> BLOB がある場合、その BLOB の URL は <span style=\"text-decoration: underline\">https://&lt; storageaccountname.blob.core.windows.net/&gt;&lt; blobcontainernamepictures&gt;/<b>/file.png</b></span>\n\nこのリリースから、Azure BLOB コンテナー内のフォルダーを表示および移動するには、Visual Studio。 フォルダーをダブルクリックしてフォルダー内に移動し、上矢印を使用してレベルを上に移動します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image041.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image041\" alt=\"clip_image041\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image041_thumb.png\" width=\"610\" height=\"208\" border=\"0\" /></a>\n\nさらに、[アップロード] ボタンを使用して BLOB をアップロードするときに、Azure Storageを作成できます。\n<h1>HDInsight サーバー エクスプローラー Hive クエリのサポート</h1>\nSDK には サーバー エクスプローラー のツールが含まれるので、HDInsight でホストされている Hadoop サービスを使用してビッグ データを操作し、Hive を使用してデータセットに対してクエリを実行すると、生産性が向上します。\n\n他の Azure サービスと同様に、サブスクリプション内の HDInsight リソースを参照し、一般的な開発テスト タスクを実行できます。このテーブルを使用サーバー エクスプローラー Hive テーブルを簡単に参照し、スキーマを調べ、テーブルの最初の 100 行に対してクエリを実行することもできます。これは、操作しているデータの形状を理解するのに役立ちます。\n\nまた、Hive クエリを作成してジョブとして送信するツールも用意されています。 Hadoop クラスターに対してコンテキスト メニューを使用して、クイック スクリプト用の \"Hive クエリの記述\" からすぐに開始します。 ジョブ ブラウザー ツールを使用すると、ジョブの送信と状態を視覚化できます。任意のジョブをダブルクリックして、[Hive ジョブの概要] ウィンドウで概要と詳細を取得します。次の例では、地理情報を使用してテーブルに対してクエリを実行し、すべての国の数を検索し、国別に並べ替えています。\n\n最後に、HDInsight によって使用されるバッキング BLOB ストレージがエクスプローラーに一覧表示されます。任意の BLOB コンテナーに移動し、それを開いてファイルを操作できます。 バッキング ストアは、Azure ダッシュボードでのクラスターの作成中に Hadoop クラスターに関連付けされます。 Hadoop クラスターの管理は、同じ Azure ダッシュボードで引き続き実行されます。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/clip_image002.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image002\" alt=\"clip_image002\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image002_thumb.jpg\" width=\"610\" height=\"367\" border=\"0\" /></a>\n\nより複雑なスクリプトの開発とライフサイクル管理を行う場合は、Hive プロジェクトを Visual Studio。 新しいプロジェクト ダイアログ (下記参照) に、新しい HDInsight テンプレート カテゴリが表示されます。 便利な開始点は、Hive サンプル プロジェクトの種類です。 このプロジェクトには、Web サーバー ログを処理する場合の、より複雑な Hive クエリとサンプル データが事前に設定されています。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/clip_image0041.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image004[1]\" alt=\"clip_image004[1]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0041_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n<h1>Visual Studio 2015 Preview</h1>\nAzure SDK 2.5 は、Visual Studio 2015 プレビューでサポートされている最初の Azure SDK です。 上記の機能にVisual Studio 2013、2015 プレビュー Visual Studio次の機能が導入されています。\n<h1>複数のアカウントを使用したサインイン</h1>\nAzure サブスクリプションVisual Studio関連付けられているアカウントを使用して 2015 年 2015 年プレビューにサインインすると、自動的に Azure にサインインします。 サーバー エクスプローラー Azure リソースが表示されます。 同じアカウントで 2 回サインインする必要がなくなりました。\n\n複数のアカウントで同時にサインインできるようになりました。 たとえば、MSDN サブスクリプションに関連付けられている Microsoft アカウントでサインインし、会社のサブスクリプションの組織アカウントで同時にサインインできます。 別のアカウントでサインインするには、 [サブスクリプション] の [Azure] ノードを右クリックサーバー エクスプローラーサブスクリプションの管理<b>] を選択します。 </b>これにより、[サブスクリプションの管理Microsoft Azure] ダイアログが表示されます。このダイアログには、サブスクリプションに追加したアカウントVisual Studio。 新しいアカウントを追加するには、[アカウントの追加] リンクをクリックします。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image043.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image043\" alt=\"clip_image043\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image043_thumb.png\" width=\"500\" height=\"360\" border=\"0\" /></a>\n\nこのダイアログでアカウント、サブスクリプション、リージョン、または証明書をオフにして、関連付けられているリソースをフィルター処理サーバー エクスプローラー。\n\n注: サインイン機能のもう 1 つの改善点は、証明書をインポートすることなく SQL データベースを サーバー エクスプローラー で表示する機能です。 この特定の機能は、Visual Studio 2013 Update 4 で使用できます。 Azure アカウントにサインインし、SQL データベースを表示サーバー エクスプローラー。\n<h1>接続済みサービスの追加</h1>\nVisual Studio 2015 の新しい [接続済みサービスの追加] ダイアログを使用すると、アプリケーションを Azure Storage、Azure Mobile Services、Office 365、Salesforce に簡単に接続できます。 シングル サインオンをAzure Active Directory設定できます。\n\nAzure Storage Web アプリケーションから Azure Storage ASP.NET 接続を追加するには、[参照] ノードを右クリックし、[接続済みサービスの追加] を選択<b>します。</b>\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image045.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image045\" alt=\"clip_image045\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image045_thumb.jpg\" width=\"436\" height=\"379\" border=\"0\" /></a>\n\n[接続済みサービスの追加] ダイアログで、<b>サービス プロバイダー Azure Storage</b> [構成] をクリック<b>します</b>。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image047.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image047\" alt=\"clip_image047\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image047_thumb.png\" width=\"610\" height=\"400\" border=\"0\" /></a>\n\n後続の [Azure Storage] ダイアログには、さまざまなサブスクリプションから使用できるストレージ アカウントの一覧が表示されます。 既存のストレージ アカウントを選択するか、新しいストレージ アカウントをプロビジョニングします。 アカウントを選択した後、[追加] <b>をクリック </b>して、アプリケーションからそのストレージ アカウントに接続します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image049.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image049\" alt=\"clip_image049\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image049_thumb.png\" width=\"610\" height=\"419\" border=\"0\" /></a>\n\nダイアログでは、最新の Azure Storage パッケージと Storage NuGet 内の選択したストレージ アカウントの接続文字列を使用して、新しい参照が追加web.config。次に、はじめにを使用するための次の手順を示すページが表示Azure Storage。 ブラウザーで はじめに ファイルを右クリックし、[ブラウザーで表示] を<b></b>GettingStarted.htmlしてソリューション エクスプローラーページ<b>に移動します</b>。\n\n[アプリの追加] ダイアログの [笑顔の送信] アイコンをクリックして、フィードバック接続済みサービス送信します。 フィードバックをお寄せください。\n<h1>Enterprise シングル サインオン </h1>\nビジネス アプリケーションの一般的なタスクは、 を使用してエンタープライズ シングル サインオン用にアプリケーションを構成Azure Active Directory。 これで、アプリケーションを右クリックし、[アプリケーションの構成] を選択することで、アプリケーションの構築中にいつでも簡単<b>にAzure AD Authentication</b>。 これにより、[接続済みサービスの追加] エクスペリエンスに似たウィザードが表示され、Active Directory で動作するアプリケーションを構成するプロセスが案内されます。 ウィザードで Active Directory ドメインを指定すると、その Active Directory にアプリケーションが登録され、サインインを要求するようにアプリケーションが構成されます。 アプリケーションをドメインに登録することは、開発/テスト環境での作業を開始するための優れた方法です。 アプリケーションの構成ファイルを再構成して、他のドメインを使用するようにすることができます。そのためには、アプリケーションのライフサイクルで、ある環境から次の環境に移動します。 この機能の詳細については、Azure Active Directory の <a href=\"https://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/411\" title=\" 概要 \"> Azure Active Directory 概要 </a> に関するビデオを参照してください。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/foo.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo-537x369.png\" alt=\"Configure Azure AD Authentication\" width=\"537\" height=\"369\" class=\"alignnone size-medium wp-image-219253\" style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" /></a>\n\n<h1>Microsoft Code Analysis for Azure プレビュー</h1>\nVisual Studio 2015 Preview の .NET Compiler Platform には、コードを記述するときにリアルタイムでコードの問題を検出する新しいコード分析機能が用意されています。 これらの機能を活用して、azure NuGet パッケージ用の Microsoft Code Analysis を通じて提供される azure 用の少数のコード分析ルールをまとめました。 これらの規則は、コード内の問題を特定し、可能な場合は自動修正を推奨します。\n\nパッケージをインストールするには、ソリューションを右クリックし、[<b>ソリューションの NuGet パッケージの管理</b>] を選択します。 [<b>プレリリースを含める</b>] チェックボックスがオンになっていることを確認し、 <b>Azure Code Analysis</b>を検索します。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image051.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image051\" alt=\"clip_image051\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image051_thumb.png\" width=\"610\" height=\"96\" border=\"0\" /></a>\n\nこれにより、 <b>VisualStudio</b> <b>パッケージが検索されます</b>。 ソリューション内のプロジェクトを選択し、[ <b>インストール</b> ] をクリックして、これらのプロジェクトのコード分析を有効にします。 アナライザーがプロジェクトに追加されると、コード分析は常に実行されます。 ソリューション全体でコード分析を実行するには、ソリューションをビルドします。 ソースファイルを編集すると、コード分析の警告またはエラーがエラー一覧に自動的に表示されます。\n\nコードを記述すると、問題が発生している行には赤色 (エラーの場合) または緑色の下線 (警告の場合) が表示されます。 下線付きのコードをポイントすると、詳細情報が表示されます。 問題の横にある電球をクリックすると、修正プログラムの詳細が表示されます。 たとえば、次のスクリーンショットは、worker ロールの Run () メソッドが async として宣言されているコードの問題を示しています。 これは、ワーカーロールでいくつかの非同期操作を実行することが必要になる可能性がある一般的なシナリオです。 ただし、Run () メソッド自体を async として宣言すると、無限ループでロールが再開されます。 問題を検出し、電球メニューを使用して自動修正を行い、非同期操作を別のメソッドに移動する Run () メソッドをリファクターします。\n\n<b><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image053.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image053\" alt=\"clip_image053\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image053_thumb.png\" width=\"610\" height=\"206\" border=\"0\" /></a></b>\n\nすべてのコードの問題に自動修正があるわけではありません。 自動修正を提供できない場合は、電球メニューで、問題の解決方法を説明しているドキュメントを参照してください。\n\nNuGet パッケージに用意されているコード分析規則は、新しい .net コンパイラのコード分析機能を紹介するために設計された初期の規則のセットにすぎません。 ご意見をお寄せいただくために、さらに多くのルールを提供し、引き続きこの操作を繰り返します。\n<h1>ASP.NET 5.0 発行</h1>\nプロジェクトを右クリックして [<b>発行</b>] を選択すると、ASP.NET 5.0 (vnext) プロジェクトを発行できます。 このリリースの新機能である [プレビュー] タブが有効になり、アップロードされるファイルを確認できるようになりました。\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/Publish1.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"Publish1\" alt=\"Publish1\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Publish1_thumb.png\" width=\"610\" height=\"479\" border=\"0\" /></a>\n<h1>まとめ</h1>\nAzure SDK 2.5 と Visual Studio 2015 Preview を使用すると、豊富なクラウドアプリケーションの開発をこれまで以上に簡単に行うことができます。 現在のリリースでは、Azure デベロッパーセンターの .NET 開発者向けリソースが増えています。これにより、開発環境をより楽しく効率的にすることができます。 以前のバージョンからの重大な変更と、プレビュー機能に関する既知の問題については、「 <a href=\"https://msdn.microsoft.com/en-us/library/azure/dn873976.aspx\">AZURE SDK 2.5 リリースノート</a> 」を参照してください。\n\nまだ Azure アカウントを持っていない場合は、無料試用版にサインアップして、今までに示したすべての機能の使用を開始できます。 その後、 <a href=\"https://azure.microsoft.com/en-us/develop/net/\">Azure デベロッパーセンター</a> にアクセスして、それを使用してアプリを構築する方法について詳しく知ることができます。 SDK の使用を開始するには、次の2つの方法があります。\n<ul>\n <li><span style=\"text-decoration: underline\">SDK をローカルにインストール</span>する: <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids\">vs 2013</a>  |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs11AzurePack.appids\">vs 2012</a>  |  と<a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2015AzurePack.appids\">2015 Preview</a>のダウンロード</li>\n <li><span style=\"text-decoration: underline\">azure の VM イメージ</span>: azure sdk 2.5 の使用を開始する最も簡単な方法は、azure sdk 2.5 で Visual Studio 2015 Preview のイメージを使用するか、azure 仮想マシンギャラリーから azure sdk 2.5 を使用して Visual Studio Community 2013 を使用することです。 これらのイメージはいずれも、Azure のすべてのお客様が利用できます。 MSDN サブスクライバーの場合は、Windows 8.1 と Windows Server 2012 Visual Studio Update 4 および Azure SDK 2.5 に更新されたに基づいて、追加の Visual Studio 2013 イメージの利点を活用することもできます。</li>\n</ul>\n<h1>謝辞</h1>\n<i>このブログ記事では、複数の担当者の共同作業について説明します。Saurabh pant Bhatia と Azure Cloud Tools チームに感謝します。</i>"
