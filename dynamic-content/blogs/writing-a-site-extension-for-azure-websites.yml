### YamlMime:Yaml
ms.openlocfilehash: 7cc3abfb938d2639aafb14cf2856be773b8ef183
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139888872"
Slug: writing-a-site-extension-for-azure-websites
Title: Azure Websites のサイト拡張機能の作成
Summary: Azure Websites のサイト拡張機能を使用すると、開発者は、Azure Web サイトで実行できる "アプリ" を基本的に記述して、管理機能を追加できます。 また、次の拡張機能も使用できます...
Content: "<p>Azure Websites のサイト拡張機能を使用すると、開発者は、Azure Web サイトで実行できる \"アプリ\" を基本的に記述して、管理機能を追加できます。 これらの拡張機能は、他のユーザーが拡張機能をインストールして使用できるようにする <a href=\"https://www.siteextensions.net/\">サイト拡張機能ギャラリー</a>にも発行できます。 サイト拡張機能の作成は、通常の web サイトの作成とは大きく異なります。 実際の違いは、コードがサイトにインストールされる方法です。</p> <h4></h4> <h4>SCM サイト</h4> <p>Azure Web サイトを作成するたびに、対応する \"SCM\" (サイトコントロールマネージャー) サイトも取得されます。このサイトは、管理/デバッグに使用され、常に SSL 経由で実行されます。 SCM サイトの URL は、既定のホスト名および \"SCM\" と常に同じです。 たとえば、my site が \"demo.azurewebsites.net\" の場合、SCM サイトは \"demo.scm.azurewebsites.net\" になります。 サイトにインストールされているサイト拡張機能には、ここからアクセスできます。</p> <p>&nbsp;</p> <h4>サイト拡張機能の作成とローカルでのテスト</h4> <p>この例では、Visual Studio 2013 を使用して、既存のファイルカウンターのサイト拡張機能を ASP.Net MVC アプリケーションとして書き直しますが、使い慣れたエディターを使用できます。 このサンプルのコードは、 <a href=\"https://github.com/projectkudu/FileCounterMVC\">こちら</a>から入手できます。</p> <ol> <li>まず、\"FileCounterMVC\" という新しい \"ASP.Net Web Application\" を作成します。 \"空\" のテンプレートを選択し、[MVC] のチェックボックスをオンにします。 (Visual Studio 2012 では、[新しいプロジェクト] ダイアログボックスで \"ASP.Net MVC Empty Project\" を選択できます)。<br><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/01NewProject.png\"><img title=\"01-NewProject\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"01-NewProject\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/01NewProject_thumb.png\" width=\"1197\" height=\"829\"></a>  <li>ソリューションエクスプローラーで、\"Controllers\" フォルダーを右クリックし、\"HomeController\" という新しい \"MVC 5 コントローラー-空\" コントローラーを追加します。  <li>HomeController ファイルが開いたら、次のコードを追加します。 \"If-else\" ステートメントを使用すると、Visual Studio でサイトをローカルに実行できます。 これは、Azure Websites では、パブリックサイトの物理パスを含む \"ホーム\" という環境変数が常に定義されているために機能します。 サイト拡張機能は SCM サイト内から実行されるため、この変数を使用して、パブリックサイトの物理パスを把握できます。 定義されていない場合は、サイトのコンテンツフォルダーが現在のサイトのルートであることを前提としています。 <br></li><pre class=\"prettyprint\">using System;\nusing System.IO;\nusing System.Web.Mvc;\n\nnamespace FileCounterMVC.Controllers\n{\n    public class HomeController : Controller\n    {\n        public ActionResult Index()\n        {\n            string siteFolder;\n            int fileCount;\n\n            if (Environment.GetEnvironmentVariable(\"home\") != null)\n            {\n                // Maps to the physical path of your site in Azure\n                siteFolder =\n                    Environment.ExpandEnvironmentVariables(@\"%HOME%\\site\\wwwroot\");\n            }\n            else\n            {\n                // Maps to the current sites root physical path.\n                // Allows us to run locally.\n                siteFolder = Server.MapPath(\"/\");\n            }\n\n            fileCount =\n                Directory.GetFiles(\n                    siteFolder,\n                    \"*.*\",\n                    SearchOption.AllDirectories).Length;\n\n            return View(model: fileCount);\n        }\n    }\n}</pre>\n<p></p>\n<li>ビューを追加するには、\"Index ()\" メソッド内の任意の場所を右クリックし、[ビューの追加] をクリックします。 &nbsp; [ビューの追加] ダイアログで、[レイアウトページを使用する] チェックボックスをオフにし、[追加] をクリックします。 &nbsp; これで、\"Index. cshtml\" という名前のビューが作成されました。 \n<li>次のコードをコピーして、インデックスビューに貼り付けます。 <br></li><pre class=\"prettyprint\">@model int\n@{Layout = null;}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;File Counter MVC&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt; \n        &lt;h1&gt;Your site has @Model files!&lt;/h1&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n<p></p>\n<li>F5 キーを押した場合、アプリが動作するかどうかをテストするためだけに IIS Express でアプリケーションをローカルで実行できます。 &nbsp;サイトフォルダーはローカルのサイトフォルダーにマップされているため、FileCounterMVC アプリのファイル数を取得します。 <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/09debugger.png\"><img title=\"09-デバッガー\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"09-debugger\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09debugger_thumb.png\" width=\"647\" height=\"329\"></a> </li></ol>\n<p>&nbsp;</p>\n<h4>Azure Web サイトでプライベートサイト拡張機能をテストする</h4>\n<p>サイト拡張機能をローカルでテストしたので、Azure Web サイトにプライベートサイト拡張機能としてインストールすることができます。</p>\n<ol>\n<li>プロジェクトのルートに Applicationhost.config ファイルを追加します。 このファイルを使用すると、SCM サイトで使用される applicationHost.config ファイルを、アプリで必要になる可能性のある変更と共に変換できます。 ほとんどのアプリでは、次の Applicationhost.config ファイルは (アプリパスの変更を除き) 使用するのが適切であると考えられますが、詳細については、 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-transform-extend/\">こちら</a>を参照してください。 <b><i>ソリューションエクスプローラーでファイルを右クリックし、[プロパティ] にアクセスして、[出力ディレクトリにコピー] 設定を [新しい場合はコピーする] に設定します。</i></b> <br></li><pre class=\"prettyprint\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt; \n&lt;configuration xmlns:xdt=\"\"&gt;\n  &lt;system.applicationHost&gt;\n    &lt;sites&gt;\n      &lt;site name=\"%XDT_SCMSITENAME%\" xdt:Locator=\"Match(name)\"&gt;\n        &lt;application path=\"/filecounterMVC\" applicationPool=\"%XDT_APPPOOLNAME%\" xdt:Transform=\"Insert\"&gt;\n          &lt;virtualDirectory path=\"/\" physicalPath=\"%XDT_EXTENSIONPATH%\" /&gt;\n        &lt;/application&gt;\n      &lt;/site&gt;\n    &lt;/sites&gt;\n  &lt;/system.applicationHost&gt;\n&lt;/configuration&gt;<br></pre>\n<p></p>\n<li>\"Build .cmd\" という名前のファイルをプロジェクトのルートに追加し、次の内容をコピーします。 &nbsp;これは、アプリを簡単にビルドできるようにするサンプルビルドスクリプトで、\".\" の下にある web サイトで実行する準備ができているフォームに整理することができます。\\ アイテムフォルダー。 &nbsp;このスクリプトを実行することは、Visual Studio の \"Web アプリケーションプロジェクト- &gt; publish &gt; To File System\" アクションを右クリックした場合と機能的に同等であることを理解しておくとよいでしょう。 &nbsp;ファイルを追加した後、コマンドプロンプトから \"build .cmd\" を実行してビルドします。 <br></li><pre class=\"prettyprint\">if not exist ..\\artifacts mkdir ..\\artifacts\n\"%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe\" FileCounterMVC.csproj /p:webpublishmethod=filesystem;PublishUrl=..\\artifacts /t:WebFileSystemPublish<br></pre>\n<p></p>\n<li>これでプロジェクトがビルドされたので、SCM サイトにアップロードしてテストする準備ができました。 &nbsp; ブラウザーを開き、に https://sitename.scm.azurewebsites.net/debugconsole.&nbsp 移動します。または、に https://sitename.scm.azurewebsites.net アクセスして、[デバッグコンソール] リンクをクリックすることもできます。 \n<li>デバッグコンソールから、\"<span style=\"font-family: 'Courier New'\">mkdir SiteExtensions\\FileCounterMVC</span>\" を実行します。 &nbsp; 次に、FileCounterMVC ディレクトリに移動します。 &nbsp; Chrome または Firefox を使用している場合は、次に示すように、\"アーティファクト\" フォルダーの内容をドラッグアンドドロップすることができます。 &nbsp; IE を使用している場合は、最初に [アーティファクト] フォルダーの内容を圧縮してから、画面の右側にある zip ファイルをドラッグアンドドロップして、デバッグコンソール解凍する必要があります。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/15CopyToSCMSite.png\"><img title=\"15-CopyToSCMSite\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"15-CopyToSCMSite\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/15CopyToSCMSite_thumb.png\" width=\"1457\" height=\"932\"></a> <br>\n<li>コンテンツがコピーされたら、サイトを再起動する必要があります。 &nbsp; 最も簡単な方法は、ページの上部にある [サイト拡張機能] タブをクリックし、[サイトの再起動] ボタンをクリックすることです。 \n<li>FileCounterMVC サイト拡張機能のプライベートバージョンがインストールされたので、URL https:// &lt; sitename &gt; . scm.azurewebsites.net/FileCounterMVC &nbsp; にアクセスして移動できます。ファイルパスが \"home\" 環境変数にマップされているため、サイト拡張機能では、(SCM サイトではなく) パブリックサイト内のファイルの数を指定する必要があります。 &nbsp; パブリックサイトでファイルを追加/削除し、ファイルカウンターのサイト拡張機能を更新すると、ファイル数の変更が表示されます。URL が \"/FileCounterMVC\" にマップされていることを確認している場合は、デバッグコンソールを使用して、生成された applicationHost.config ファイルを調べることができます。 &nbsp; まず、: C:\\DWASFiles\\Sites \\~ 1 &lt; sitename &gt; \\ Config に移動し、[編集] ボタンをクリックして \"applicationHost.config\" ファイルを開き、\" &lt; Sites &gt; \" セクションを検索します。 &nbsp; 名前の先頭に \"~\" が付いているサイトエントリは、SCM サイトです。 &nbsp; このサイト内には、事前にインストールされたサイト拡張機能である多数のアプリが既に一覧表示されています。 &nbsp; これで、サイトで使用されている実際の構成ファイルである \"applicationHost.config\" ファイルを開くと、次のような \"FileCounterMVC\" という名前の新しいアプリエントリがあることがわかります。 &nbsp; これはどのように機能するのでしょうか。 &nbsp; SCM サイトが読み込まれると、\"SiteExtensions\" フォルダーの下にある Applicationhost.config ファイルが検索されます。 &nbsp; 見つかった場合は、それを使用して、必要な &nbsp; 設定を使用して applicationHost.config の基本ファイルを applicationHost.config ファイルに変換します。すばらしいですね。<br></li><pre class=\"prettyprint\">&lt;site name=\"~1ehdemo\" id=\"154213853\"&gt;\n  &lt;!-- Other apps are not shown. --&gt;\n  &lt;application path=\"/filecounterMVC\" applicationPool=\"~1ehdemo\"&gt;\n    &lt;virtualDirectory path=\"/\" physicalPath=\"D:\\home\\SiteExtensions\\FileCounterMVC\" /&gt;\n  &lt;/application&gt;\n&lt;/site&gt;</pre>\n<p></p></ol>\n<p>&nbsp; </p>\n<h4>SiteExtensions.net でホストされているパブリックサイト拡張機能ギャラリーへの発行</h4>\n<p>プライベートサイト拡張機能を構築するのはすばらしいことですが、気に入ったことはありませんか。 サイト拡張機能をサイト拡張機能ギャラリーにアップロードすると、他の Azure Websites ユーザーは自分のサイトに拡張機能を簡単にインストールできます。 ここでは、FileCounterMVC の例を使用してこれを行う方法を示します。</p>\n<ol>\n<li>FileCounterMVC をアプリケーションのルートに追加し &nbsp; ます。以下の内容をコピーして、情報に一致させるために必要なフィールドを変更します。 &nbsp;<strong>ファイルを右クリックし、[プロパティ] にアクセスして、[出力ディレクトリにコピー] 設定を [新しい場合はコピーする] に設定します。</strong> <pre class=\"prettyprint\">&lt;?xml version=\"1.0\"?&gt;\n&lt;package &gt;\n  &lt;metadata&gt;\n    &lt;id&gt;filecountermvc&lt;/id&gt;\n    &lt;title&gt;File Counter MVC&lt;/title&gt;\n    &lt;version&gt;1.0.1&lt;/version&gt;\n    &lt;authors&gt;Elliott Hamai&lt;/authors&gt;\n    &lt;licenseUrl&gt;https://opensource.org/licenses/Apache-2.0&lt;/licenseUrl&gt;\n    &lt;projectUrl&gt;https://github.com/projectkudu/FileCounterMVC&lt;/projectUrl&gt;\n    &lt;requireLicenseAcceptance&gt;false&lt;/requireLicenseAcceptance&gt;\n    &lt;description&gt;A sample mvc Site Extension that counts the number of files in the web root&lt;/description&gt;\n    &lt;iconUrl&gt;https://raw.githubusercontent.com/projectkudu/FileCounterMVC/master/FileCounter50x50.png&lt;/iconUrl&gt;\n    &lt;tags&gt;filecounter sample siteextension&lt;/tags&gt;\n  &lt;/metadata&gt;\n  &lt;files&gt;\n    &lt;file src=\"**\\*.*\" target=\"content\" /&gt;\n  &lt;/files&gt;\n&lt;/package&gt;</pre>\n<li>\"Build. cmd\" を実行して、\"成果物\" フォルダーにプロジェクトをリビルドします。 \n<li>nuget.exe コマンドラインユーティリティをここ <a href=\"https://docs.nuget.org/docs/start-here/installing-nuget\">https://docs.nuget.org/docs/start-here/installing-nuget</a> からダウンロードします。 \n<li>\"アーティファクト\" フォルダーから次のコマンドを実行して、親ディレクトリの下に NuGet パッケージ (FileCounterMVC) を生成します。 <pre class=\"prettyprint\">nuget pack FileCounterMVC.nuspec -outputdirectory ..\\ –nopackageanalysis</pre>\n<li>ブラウザーを開き、に移動します。 <a href=\"https://www.siteextensions.net/\">https://www.siteextensions.net/</a> \n<li>ログインするか、無料アカウントに登録します。 &nbsp;次に、[サイト拡張機能のアップロード] リンクに移動します。 \n<li>先ほど作成した nupkg パッケージを追加し、[アップロード] をクリックします。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/19UploadSiteExtension2.png\"><img title=\"19-UploadSiteExtension2\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"19-UploadSiteExtension2\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/19UploadSiteExtension2_thumb.png\" width=\"1255\" height=\"856\"></a> <br>\n<li>次のページでは、追加するパッケージに関する情報を確認するように求めるメッセージが表示されます。 &nbsp; 下部には、\"検索結果に表示される\" というメッセージが表示されます。 &nbsp; [はい] を選択した場合は、サイト拡張機能ギャラリーにサイト拡張機能がパブリック表示されます。 &nbsp; このデモでは、[はい] を選択し、[submit] を選択します。<br><br><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/20UploadSiteExtensionpublish.png\"><img title=\"20-UploadSiteExtensionpublish\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"20-UploadSiteExtensionpublish\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/20UploadSiteExtensionpublish_thumb.png\" width=\"317\" height=\"180\"></a><br> </li></ol>\n<h4>Azure サイト拡張機能ギャラリーを使用したサイト拡張機能のインストール</h4>\n<p>サイト拡張機能が公開されたので、サイトにインストールできます。</p>\n<ol>\n<li>最初に、デバッグコンソールを使用してサイトから FileCounterMVC フォルダーを削除し、何も存在しないことを確認します。 \n<li>\"Portal.azure.com\"- &gt; \"Websites の参照\"- &gt; \"サイト名\" に移動します。 \n<li>サイトブレードの下部にある \"拡張機能\" という名前の部分をクリックし、[追加] をクリックします。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/21AzureGallery.png\"><img title=\"21-AzureGallery\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"21-AzureGallery\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/21AzureGallery_thumb.png\" width=\"1784\" height=\"1036\"></a> <br>\n<li>オプションの一覧に新しい拡張機能が表示されます。 &nbsp; それを選択し、条項に同意して、[ok] をクリックします。 &nbsp; これにより、サイト拡張機能がインストールされ、手動で行ったのと同じようにサイトが再起動されます。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/22azuregalleryclean.png\"><img title=\"22-azuregallery\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"22-azuregallery-clean\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/22azuregalleryclean_thumb.png\" width=\"1788\" height=\"1035\"></a><br> \n<li>ポータルに \"成功\" と表示されたら、[インストール済みサイト拡張機能] ブレードを開き、[ファイルカウンター MVC] 拡張機能をクリックできます。 &nbsp; 新しいブレードで、[参照] をクリックして拡張機能に直接移動し、機能することを確認します。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/23siteextensionbrowse.png\"><img title=\"23-siteextensionbrowse\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"23-siteextensionbrowse\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/23siteextensionbrowse_thumb.png\" width=\"1784\" height=\"1036\"></a><br> </li></ol>\n<h4>MyGet でホストされているプライベートサイト拡張機能ギャラリーへの発行</h4>\n<p>サイト拡張機能をパブリックに使用しない場合、または SiteExtensions.net を使用するためにコミットすることなくワークフロー全体をテストする場合は、プライベートフィードを使用するようにサイトを構成できます。 この例では、プライベート MyGet フィードを使用してサイト拡張機能をホストする手順について説明します。</p>\n<ol>\n<li>ブラウザーを開き、<a href=\"https://www.myget.org/\">https://www.myget.org/</a> に移動します。 \n<li>アカウントを持っていない場合は、ログインまたはサインアップします。 \n<li>新しいフィードを作成し、[パッケージの追加] ボタンをクリックします。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/24mygetupload.png\"><img title=\"24-myget-アップロード\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"24-myget-upload\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/24mygetupload_thumb.png\" width=\"1289\" height=\"658\"></a> <br>\n<li>前の手順で作成した nupkg パッケージを選択し、[追加] をクリックします。\n<li>[フィードの詳細] ページに移動し、[フィード URL] をメモします。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/25mygetcopyfeed.png\"><img title=\"25-myget-copyfeed\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"25-myget-copyfeed\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/25mygetcopyfeed_thumb.png\" width=\"1287\" height=\"570\"></a> <br>\n<li>に <a href=\"https://portal.azure.com\">https://portal.azure.com</a> 戻ります。 &nbsp;サイトブレードを開き、[サイト設定] パーツをクリックします。 \n<li>[サイト設定] ブレードで SCM_SITEEXTENSIONS_FEED_URL という名前のアプリ設定を追加し、その値を MyGet FEED に設定します。 &nbsp;次に、[保存] をクリックします。<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/26portalappsetting.png\"><img title=\"26-ポータル-appsetting\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"26-portal-appsetting\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/26portalappsetting_thumb.png\" width=\"1923\" height=\"1033\"></a><br> \n<li>\"Success\" メッセージが表示されたら、[サイト] ブレードの下にある [拡張機能] の部分をクリックし、前のように拡張機能を追加します。 &nbsp; 拡張機能の一覧は、フィードで使用可能なものだけでなく、他のいくつかの特殊な拡張機能を表示するようになったため、通常よりも小さくなっています。 </li></ol>"
