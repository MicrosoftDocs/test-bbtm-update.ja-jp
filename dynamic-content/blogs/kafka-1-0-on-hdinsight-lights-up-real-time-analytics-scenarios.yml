### YamlMime:Yaml
ms.openlocfilehash: 7bd93533e6b936774c1b4119251b06a861e0bcb5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895855"
Slug: kafka-1-0-on-hdinsight-lights-up-real-time-analytics-scenarios
Title: HDInsight 上の Kafka 1.0 では、リアルタイム分析シナリオが明るみになります
Summary: HDInsight での Apache Kafka 1.0 のリリースにより、お客様は最も要求の厳しいシナリオを簡単に実装できる主要な機能を利用できます。 簡単な概要を次に示します。
Content: >-
  <p>データ エンジニアは、HDInsight 上の Kafka を、リアルタイム データ パイプラインの高スループットで待機時間の短いインジェスト プラットフォームとして気に入っています。 メッセージ圧縮、構成可能な保持ポリシー、ログ圧縮 <a href="https://cwiki.apache.org/confluence/display/KAFKA/Compression">などの</a> Kafka <a href="https://kafka.apache.org/documentation/#brokerconfigs">機能を</a>既 <a href="https://kafka.apache.org/documentation/#compaction">に活用しています</a>。 HDInsight での Apache Kafka 1.0 のリリースにより、お客様は最も要求の厳しいシナリオを簡単に実装できる主要な機能を利用できます。 簡単な概要を次に示します。</p>


  <h2>重複を排除する必要&rsquo;がなさそうに、べき等プロデューサー</h2>


  <p>データ消費イベントと呼ばれる Kafka トピックに、プロデューサーがユーザーによって消費されたデータ量を書き込む携帯ネットワーク課金システムを考えてみることができます。 ブローカーまたは接続が失敗した場合、プロデューサーはメッセージ書き込みの受信確認を取得し、そのメッセージを再試行します。 これにより、システムへの書き込みの重複が発生し、ユーザーが過剰に機能します。</p>


  <p>上記のような重要なシナリオでは、データ エンジニアは、ハッシュやメッセージ ID の保存など、カスタム重複排除ロジックを記述して維持する必要がありました。 ただし、 <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-98+-+Exactly+Once+Delivery+and+Transactional+Messaging">べき等プロデューサーを</a> 有効にすると、Kafka によってそのロジックが処理されます。 レコードには、一意のプロデューサー ID とメッセージのシーケンス番号が含まれます。 Kafka ブローカーは、シーケンス番号が、そのプロデューサーのコミットされたシーケンス番号より 1 つ多い場合にのみ、プロデューサーからのメッセージを受け入れる必要があります。 プロデューサーの再試行では重複は発生しない。 これにより、1 つのプロデューサー セッション内でべき等性が保証されます。</p>


  <h2>精度を確保するためのトランザクション</h2>


  <p>原子性とも <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-98+-+Exactly+Once+Delivery+and+Transactional+Messaging#KIP-98-ExactlyOnceDeliveryandTransactionalMessaging-TransactionalGuarantees">呼ばれる</a>この Kafka 機能を使用すると、マルチトピックおよびマルチパーティションアトミック書き込みを有効にします。 プロデューサーはメッセージをバッチで送信して、コンシューマーがバッチ内のすべてのメッセージを使用するか、バッチ内のメッセージを使用しないかのどちらかになります。 また、Kafka ではコンシューマー オフセットが記録されるので、実稼働と消費の両方を 1 つの単位でまとめてバッチ処理できます。</p>


  <p>上記&rsquo;の携帯ネットワーク課金システムを基に構築します。 data-consumption-events トピックの個々のイベントを使用し、月次累積を計算し、それを monthly-data-usage という名前の Kafka トピックに書き込むアプリケーションを考え出します。 データの使用状況を示す顧客ポータルは、月次データ使用状況に関するトピックの最新のエントリに基づいて作成されます。 Kafka トランザクション機能より前では、イベントの使用と累積合計の書き込みとの間にエラーが発生した場合、合計は不正確になります。 これは、コミットされた消費イベントの一部が合計から除外されるためです。 トランザクションを有効にすると、イベントの使用と合計の書き込みを 1 つの単位としてバッチ処理できます。 月次データ使用量に書き込む前にエラーが発生した場合、コンシューマー オフセットはコミットされません。 アプリケーションは、欠落したイベントを使用して、正確な合計を確保します。</p>


  <h2>1 回の処理</h2>


  <p>これまでは、HDInsight 上の Kafka を使用して、少なくとも 1 回または 1 回だけセマンティクスを取得できます。 べき等プロデューサーとトランザクションおよびコンシューマー オフセットを組み合わせることで、Kafka でセ<a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-129%3A+Streams+Exactly-Once+Semantics"></a>マンティクスを 1 回だけ実現できます。 つまり、入力メッセージが重複も失われもな"ない"ので、アプリケーションは正しい結果を計算します。</p>


  <p>単純な携帯電話の課金の例を続ける場合、セマンティクスは、顧客によるデータ消費イベントが 1 回だけ合計に反映されるという意味です。 顧客は、ポータルで正確な使用状況を表示できる自信を持って表示できます。</p>


  <p>これは、複数の処理ステージと中間結果を使用して、実稼働環境の他のさまざまなシナリオに拡張できます。 任意のステップでデータが失われたり重複したりすると、データ パイプライン全体に波及効果が発生する可能性があります。 HDInsight 上の Kafka を使用すると、失われたメッセージや重複したメッセージを含め、正確な結果を保証できます。</p>


  <h2>レコード ヘッダー</h2>


  <p>ほとんどのメッセージング システムでは、メッセージ ヘッダーがサポートされています。 ヘッダーは、暗号化または圧縮される可能性があるメッセージ ペイロードとは別です。 携帯データネットワークの課金シナリオでは、ヘッダーにセル の高台 ID やネットワーク プロバイダー ID などの情報が含まれている場合があります。そのため、自動ルーティング、メッセージ フローの監視、メタデータ監査などのシナリオが可能になります。</p>


  <p>以前は、データ パイプラインに他のシステムからのメッセージ ヘッダーが含まれている場合、ヘッダーを破棄するか、ペイロード形式に変換してペイロード自体に含める必要がありました。 データ エンジニアは、カスタム ラッピングとラップ解除のコードを作成および管理する必要があります。 HDInsight <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-82+-+Add+Record+Headers">上の</a> Kafka でのレコード ヘッダーのサポートにより、すべてのルーティングとフィルター処理のシナリオをネイティブで実現できます。 これにより、エンドツーエンドの待機時間がはるかに短くなります。これはリアルタイム システムにとって重要です。</p>


  <p>上記の主な機能に加えて、このバージョンではパフォーマンスが大幅に向上し、バグが修正されています。 完全な比較については、 <a href="https://www.apache.org/dist/kafka/1.0.0/RELEASE_NOTES.html">1.0 および 0.11</a> Apache Kafkaリリース ノート <a href="https://archive.apache.org/dist/kafka/0.11.0.0/RELEASE_NOTES.html">を参照してください</a>。 HDInsight 上の Kafka の以前のバージョンは <a href="https://archive.apache.org/dist/kafka/0.10.0.1/RELEASE_NOTES.html">0.10 でした</a>。</p>


  <p><a href="https://docs.microsoft.com/en-us/azure/hdinsight/kafka/apache-kafka-get-started">概要</a> で Kafka を使用Azure HDInsight。 最新の更新プログラムについては <a href="https://twitter.com/azurehdinsight?lang=en">@AzureHDInsight</a> 、 <a href="https://azure.microsoft.com/en-us/blog/tag/hdinsight/">HDInsight ブログ</a> をご覧ください。 質問とフィードバックについては、 にお問い合わせください <a href="mailto:AskHDInsight@Microsoft.com">AskHDInsight@Microsoft.com</a>。</p>
