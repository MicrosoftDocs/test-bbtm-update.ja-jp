### YamlMime:Yaml
ms.openlocfilehash: 3e771faa6523e8cf21ef5f4f3d08a6e7395c5041
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139893594"
Slug: azure-monitor-new-services-and-capabilities-for-metrics
Title: 'Azure Monitor: メトリック用の新しいサービスと機能'
Summary: Azure Monitor は、より多くのリソース、多次元メトリックの導入、および新しいメトリックグラフ化エクスペリエンスのために、メトリックの可用性を発表します。
Content: >-
  <p><em>このブログ投稿は、Vitaly Gorbenko、シニアプログラムマネージャー、Azure Monitor および Anirudh Cavale、Program Manager、Azure Monitor によって共同で作成されました。</em></p>


  <p>今年の前半では、Azure 用の Microsoft &rsquo; の組み込みプラットフォーム監視サービスである<a href="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-azure-monitor" target="_blank">Azure Monitor</a>の一般提供を発表しました。 このサービスを使用すると、ユーザーはネイティブリソースメトリックにアクセスして、Azure でのワークロードのパフォーマンスと正常性を可視化できます。 起動以来、Azure Monitor メトリックの使用量が大幅に増加していることがわかりました。 現在、メトリックエコシステムに新たに追加された機能についてお知らせします。 メトリックをシームレスに視覚化し、より多くの Azure リソースを監視し、メトリックへのディメンションの追加によってより深い洞察を得ることができます。</p>


  <h2>その他の Azure リソースに対するメトリックの追加</h2>


  <p>多くの Azure リソースに対してメトリックを利用できるようにするためのフィードバックをお送りしました。 Azure Monitor 経由でメトリックを利用できるようになった追加の Azure リソースについてお知らせします。これにより、Azure ワークロードの状態とパフォーマンスをより詳細に把握できるようになります。 これらのメトリックはすべて、Azure Portal および Azure Monitor REST Api を使用してアクセスできます。</p>


  <p>Azure Monitor ファミリに次のリソースをご利用いただき、ありがとうございます。</p>


  <ul>
   <li><strong>オートメーション:</strong> Azure Automation アカウントで実行されているジョブの数が表示されます。</li>
   <li><strong>自動スケール:</strong> メトリックを使用できるようになりました。自動スケール設定の評価方法、どのメトリック値が読み取られているか、および実行されているスケールアクションを理解するのに役立ちます。</li>
   <li><strong>従来のコンピューティング:</strong> 従来のコンピューティング Vm のネットワーク入出力、ディスク読み取り/書き込み、CPU 使用率などのホストメトリックにアクセスできるようになりました。</li>
   <li><strong>CosmosDB:</strong> CosmosDB の要求数を地域、データベース、コレクション、状態コード別に決定します。</li>
   <li><strong>DataLake Analytics:</strong> DataLake Analytics アカウントで成功、失敗、および取り消されたジョブの数を確認できます。これらのジョブの合計 AU 時間も測定します。</li>
   <li><strong>DataLake ストア:</strong> DataLake ストアアカウントで格納、書き込み、および読み取りを行っているデータの量を把握できます。</li>
   <li><strong>Expressroute:</strong> Express Route 回線のイングレスとエグレスの合計バイト数を計測できるようになりました。</li>
   <li><strong>Public IP Addresses：</strong> パブリック IP アドレスリソースに対して転送または削除される受信パケットとバイトを理解するために、メトリックを使用できるようになりました。</li>
   <li><strong>ソフトウェアの Load Balancer:</strong> ロードバランサーの VIP と DIP エンドポイントの可用性についてクエリを実行できるようになりました。</li>
   <li><strong>Storage:</strong>ストレージアカウントとその基になるサービス (blob、ファイル、テーブル、キュー) の容量とトランザクションのメトリックにアクセスできるようになりました。 新しい <a href="https://aka.ms/azuremonitor/storage-metrics" target="_blank">Azure storage メトリック</a>の詳細については、こちらをご覧ください。</li>
   <li><strong>Traffic Manager:</strong> Traffic Manager のプロファイルとエンドポイントの可用性とクエリのメトリックを表示します。</li>
   <li><strong>Virtual Network ゲートウェイ:</strong> VPN ゲートウェイのスループット、バイト単位、送信バイト数、パケット数、パケットアウトの可視性を取得します。</li>
  </ul>


  <p>Azure Monitor で利用できるすべてのリソースとメトリックの完全な一覧については、 <a href="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-supported-metrics">こちら</a>を参照してください。</p>


  <h2>多次元メトリック (パブリックプレビュー)</h2>


  <p>また、より多くのメトリックが優れているのに対して、より迅速なトラブルシューティングに役立つリソースのパフォーマンスをさらに詳しく把握する必要があるというフィードバックも提供しています。</p>


  <p>メトリックを提供する新しいリソースの種類のホストに加えて、Azure Monitor は多次元メトリックのパブリックプレビューをサポートするようになりました。 ネイティブメトリックにディメンションを関連付けることができるようになりました。 ディメンションは、メトリックをさらに分割するために使用できる名前と値のペア (属性) です。これらの追加の属性を使用すると、メトリックをわかりやすく調べることができます。</p>


  <p>アプリケーションがデータを書き込んでいる Blob のメトリックと、他のアプリがデータを読み取っている Blob のメトリックを見てみましょう &rsquo; 。 ミッションクリティカルなビジネスアプリケーションをサポートするために、Blob の書き込み操作と読み取り操作が非常に高速 (わずか数ミリ秒で) 行われることが予想されます。 ディメンションをサポートする前に、全体的 &lsquo; な SUCCESS E2E latency &rsquo; メトリックを使用して、平均待機時間を監視することができました。 現在、新しいディメンションのサポートを使用して、このメトリックをディメンション &lsquo; API 名 &rsquo; で分解できます。 次に示すのは、すべての API 名で同じメトリックを比較したものと、API 名によって停止したものです。</p>


  <p>&nbsp;</p>


  <table border="1" cellpadding="2" cellspacing="0" width="999">
   <tbody>
    <tr>
     <td valign="top" width="499"><strong>メトリック名</strong></td>
     <td valign="top" width="499"><strong>メトリック値: 平均 (ミリ秒)</strong></td>
    </tr>
    <tr>
     <td valign="top" width="499">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="499">20</td>
    </tr>
   </tbody>
  </table>


  <table border="1" cellpadding="2" cellspacing="0" width="999">
   <tbody>
    <tr>
     <td valign="top" width="333"><strong>メトリック名</strong></td>
     <td valign="top" width="333"><strong>[API Name](アプリ名)</strong></td>
     <td valign="top" width="333"><strong>メトリック値: 平均 (ミリ秒)</strong></td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">Get Block List</td>
     <td valign="top" width="333">50</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">Put Block List</td>
     <td valign="top" width="333">46</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">Put Block</td>
     <td valign="top" width="333">18</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">コンテナーのプロパティの取得</td>
     <td valign="top" width="333">7.0</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">Blob リースの取得</td>
     <td valign="top" width="333">6.4</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">Blob リースの解放</td>
     <td valign="top" width="333">5.9</td>
    </tr>
    <tr>
     <td valign="top" width="333">Success E2E Latency (成功 E2E 待機時間)</td>
     <td valign="top" width="333">BLOB のプロパティの取得</td>
     <td valign="top" width="333">3.6</td>
    </tr>
   </tbody>
  </table>


  <p>これにより、Get Block List &rsquo; API 名を持つ &lsquo; トランザクションの方が、他よりも時間がかかることがわかります。</p>


  <p>Azure Storage、API Management、Traffic Manager などのサービスは、既に多次元メトリックを生成しています。 リソースを生成するメトリックとそれぞれのディメンションの完全な一覧については、 <a href="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-supported-metrics" target="_blank">こちらを参照</a>してください。</p>


  <h2>新しいメトリックグラフ作成エクスペリエンス (パブリックプレビュー)</h2>


  <p>多次元メトリックエコシステムの一部として、 <a href="https://aka.ms/azuremonitor/new-metrics-charts" target="_blank">新しいメトリックグラフ作成エクスペリエンス</a> が導入されています。これを使用すると、多次元のグラフと、ディメンションのない基本メトリックの両方を表示できます。 新しいエクスペリエンスのチャートでは、さまざまなリソースの種類、リソースグループ、およびサブスクリプションにわたってメトリックをオーバーレイできます。また、フィルターやセグメンテーションを適用してカスタマイズできます。 グラフをカスタマイズした後、それらをダッシュボードにピン留めし、他のチームメンバーと共有することができます。</p>


  <p>上記の Success E2E latency &rsquo; メトリックの &lsquo; 例 &nbsp; に戻って、新しいエクスペリエンスを使用して、Storage リソースのトランザクションの平均待機時間を調べ、それをアプリケーションメトリックに corelate します。 次の図は、api 名ディメンションで &ldquo; &rdquo; セグメント化されており、api 名によって分類された平均エンドツーエンド (E2E) トランザクションの待機時間をプロットしています。 下のグラフは Application Insights メトリック &lsquo; サーバーの要求を示しています。この要求 &rsquo; は、応答コード200を返した成功した web 要求の量を表示するようにカスタマイズされ、要求の送信元の国によって分割されます。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1ccffdec-35a6-4403-9c4a-40e01dd5f5fa.png"><img alt="Monitor" border="0" height="881" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/eac5a031-6cc1-4a1f-a91f-351efd209398.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Monitor" width="1621"></a></p>


  <p>多次元メトリックと、この強力な新しいグラフ機能の使用を開始することをお待ちしております。</p>


  <h2>プログラムによるアクセス</h2>


  <p>ユーザーは、新しい REST API (プレビュー) バージョンまたは新しい <a href="https://www.nuget.org/packages/Microsoft.Azure.Management.Monitor/0.18.0-preview">.NET SDK</a>を使用して多次元メトリックを照会することもできます。 リソースのメトリックとディメンションを検出し、メトリック値を照会します。 次のリンクに従って、Azure Monitor の <a href="https://docs.microsoft.com/en-us/rest/api/monitor/metricdefinitions" target="_blank">メトリック定義 REST API</a>、 <a href="https://docs.microsoft.com/en-us/rest/api/monitor/metrics" target="_blank">メトリック REST API</a>、 <a href="https://azure.microsoft.com/en-us/resources/samples/monitor-dotnet-multidimensional-metrics-api/">.net サンプル</a>に関するドキュメントを参照してください。 近日中に Java SDK を発行し、PowerShell と CLI 2.0 のサポートを追加します。</p>


  <h2>まとめ</h2>


  <p>要約すると、Azure Monitor、さらに多くの Azure リソースに使用できるメトリックが増え続けます。 これで、メトリックにドリルダウンし、必要に応じてフィルター処理できる新しいエクスペリエンスが追加されました。 今後数か月の間に、Azure Monitor によってメトリックとログデータを出力するサービスがさらに表示されることが予想されます。 さらに、ディメンションによってフィルター処理されたこれらのメトリックに対してアラートルールを作成することができます。 ご意見やご感想をお寄せいただければ、ご <a href="https://feedback.azure.com/forums/231545-diagnostics-and-monitoring" target="_blank">意見をお</a> 寄せください。</p>
