### YamlMime:Yaml
ms.openlocfilehash: 5ef577c50360de19dfbbe6b47853ef0e459e6c57
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894017"
Slug: book-excerpt-to-the-cloud-cloud-powering-an-enterprise
Title: '書籍の抜粋: "クラウドへのクラウド: Enterprise の電源投入"'
Summary: Microsoft IT グローバル戦略イニシアチブチームのシニアマネージャーである、こんにちは、 &rsquo; m Pankaj Arora さん。  Microsoft CEO の Ballmer が公的に宣言 &ldquo; された場合、 &rsquo; すべてを &rdquo; クラウドに再登録します...
Content: <p>Microsoft IT グローバル戦略イニシアチブチームのシニアマネージャーである、こんにちは、 &rsquo; m Pankaj Arora さん。</p>  <p>Microsoft CEO の Ballmer が公的に宣言 &ldquo; した場合、2010年3月にクラウドコンピューティングのすべて &rdquo; を再利用していまし &rsquo; たが、マイクロソフト &rsquo; の製品を参照しているだけでは &rsquo; ありませんでした。 また、IT 組織にクラウドコンピューティングへの移行を義務付けるように要求しています。 この宣言から、私の仕事仲間や私は、グローバル企業でクラウドコンピューティングを導入するために何が必要かについてよく学んだと思います。 SaaS、PaaS、IaaS &mdash; &rsquo; のすべての共通モデル &mdash; が<a href="https://technet.microsoft.com/en-us/library/gg521165.aspx" target="_blank">クラウドにデプロイ</a>され、サービスとしてのデータの使用が開始されるようになりました。&nbsp;</p>  <p>私たちのベルト &mdash; と<a href="https://www.cio.com/article/695777/Gartner_Predictions_for_2012_More_Cloud_Consumerization_Loss_of_IT_Control" target="_blank">業界の予測</a>の下に多数 2012 &mdash; のデプロイエクスペリエンスがあります。このコミュニティでは、2人の同僚と共に、クラウドについて共同作成した本 &rsquo; について、クラウド<i>への Enterprise</i>を提供しています。 まとめとして、エンタープライズクラウド導入の <i>理由、目的、および方法について説明</i> します。 &rsquo;私たちは、クラウドコンピューティングを導入する経験とベストプラクティスに基づき、業界と顧客のエクスペリエンスにも対応しています。&nbsp;</p>  <p href="" target="_blank">次に示すのは、本の実稼働前バージョンの第4章から抜粋したものです。これは、 <a href="https://www.amazon.com/Cloud-Powering-Enterprise/dp/007179221X/" target="_blank">Amazon</a>、 <a target="_blank" href="https://www.barnesandnoble.com/w/to-the-cloud-pankaj-arora/1104664478?ean=9780071792219">Barnes &amp; 立派</a> 、および <a target="_blank" href="https://www.mhprofessional.com/product.php?isbn=007179221X">McGraw</a> <a href="" target="_blank"></a> の他のアウトレットによる印刷と電子ブックで入手できます。 詳細については、こちらの書籍の web サイトを参照してください。</p>  <p>自由に質問してみてください。これらの抜粋 (および本) は、クラウドコンピューティング戦略とデプロイに役立ちます。</p>  <p>Pankaj</p>  <h3 class="Sub-Headings">アーキテクチャの原則</h3>  <p class="FirstParaNoIndent">企業のデータセンターからアプリケーション &nbsp; やデータを移動しても、ハードウェア障害、アプリケーションに対する予期しない需要、または実稼働環境で発生した不測の問題のリスクはなくなります。 ただし、クラウドで実行されているサービスは、拡張性とフォールトトレラントで、オンプレミスのソリューションよりも優れたパフォーマンスを発揮する必要があります。</p>  <p class="FirstParaNoIndent">クラウドプロバイダーによって使用される仮想化とクラウドファブリックのテクノロジにより、理論的に無制限の容量にスケールアウトできるようになります。 これは、アプリケーションアーキテクチャと、物理容量ではなく、オートマトンのレベルによってスケーラビリティが制限されることを意味します。 このセクションでは、アプリケーションエンジニアや運用担当者がクラウド用に拡張性と信頼性に優れたアプリケーションを適切に設計するために理解する必要がある、いくつかの設計原則を紹介します。</p>  <h3 class="Sub-Headings">回復性</h3>  <p class="FirstParaNoIndent">適切に設計されたアプリケーションは、1つのスケールユニットに何かが発生しただけでは停止しません。 一方のコンポーネントで障害が発生した場合、パフォーマンスの問題、データの損失、または障害が発生する可能性があります。 このため、クラウド中心のソフトウェアエンジニアが特定のレベルの pessimism を cultivate しています。 最悪のシナリオをすべて考慮することで、問題が発生した場合のフォールトトレランスと回復性を備えたアプリケーションを設計できます。</p>  <p class="FirstParaNoIndent">プレゼンテーション層と機能ロジックが1つのアプリケーションコンポーネントに緊密に統合されているモノリシックソフトウェア設計では、効率的にスケーリングしたり、エラーを適切に処理したりすることはできません。 クラウド用にアプリケーションを最適化する &nbsp; には、厳密な依存関係を排除し、ビジネスロジックとタスクを疎結合モジュールコンポーネントに分割して、独立して機能させる必要があります。 アプリケーションの機能は、他のアプリケーションコンポーネントの状態に関係なく機能する自律的な役割で構成されるのが理想的です。 企業の複雑さを最小限に抑えるために、開発者は可能な限り再利用可能なサービスを活用する必要があります。</p>  <p class="FirstParaNoIndent">前述の Microsoft online オークションツールについて説明します。 このようなアプリケーションを設計する方法の1つは、それぞれのサービスに異なる需要パターンがあり、他のサービスとは比較的非同期であるため、ユーザーに情報を提示する UI レイヤー、イメージの変更点、および入札ルールを適用し、適切なデータベースの更新を行うビジネスロジックコンポーネントという、3つのコンポーネントに分割することです。 オークションの開始時には、ユーザーがカタログに追加した項目の画像をアップロードするときに、多くのイメージのサイズ変更が発生します。 オークションの終わりに向かって、お互いに入札を試みると、入札エンジンの需要が高まっています。 各コンポーネントは、システムの負荷に基づいて必要に応じてスケールユニットを追加します。 たとえば、イメージの [拡大/縮小] コンポーネントが失敗した場合、ツールの機能全体は失われません。</p>  <p class="FirstParaNoIndent"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6266.image1-copy.png" alt="" border="0"></p>  <p class="BeforeListBody">クラウドモデルに組み込まれている冗長性と自動化により、クラウドサービスの信頼性が高くなります (一般に、Pessimism)。 &nbsp;多くの場合、クラウドプロバイダーには複数 &ldquo; の可用性ゾーンがあり、それらのゾーン &rdquo; によってネットワークインフラストラクチャ、ハードウェア、さらには電力が分割されます。 これらのゾーン全体で1つのアプリケーションの複数のスケールユニットを操作すると、リスクをさらに軽減できます。プロバイダーによっては、より高い SLA を保証する前に、このことが必要になる場合があります。 このため、障害を検討する際の実際の質問は、アプリケーションのインスタンスが突然再起動されたり、ダウンしたり、移動したりした場合にどうなるかということです。</p>  <ul>  <li>どのようにエラーが発生したかを確認できます。</li>  <li>アプリケーション機能 (存在する場合) は使用できますか。</li>  <li>ユーザーのデータと機能を回復するために必要な手順を教えてください。</li>  </ul>  <p class="MyBodyText">不要な依存関係を削除すると、アプリケーションの安定性が向上します。 アプリケーションが1つの使用シナリオに依存しているサービスがダウンした場合は、他のアプリケーションシナリオを引き続き利用できます。</p>  <p class="MyBodyText">&nbsp;バックエンドでは、一部のクラウドプロバイダーが要求を調整したり、SQL PaaS などのストレージプラットフォームで実行時間の長いクエリを終了したりする可能性があるため、エンジニアには再試行ロジックを含める必要があります。 たとえば、別のソースのデータを要求するコンポーネントには、指定された期間内に指定された回数だけデータを要求してから、例外をスローするロジックを含めることができます。</p>  <p class="MyBodyText">クラウドインスタンスの再起動がときどき発生する場合は、アプリケーションの設計に永続的なキャッシュを含めて、別のスケールユニットまたは再起動する元のインスタンスがトランザクションを復旧できるようにする必要があります。 永続的な状態を使用するには、クラウドベースのアプリケーションの別の設計原則を状態 &mdash; する必要があります。</p>  <h3 class="Sub-Headings">ステートレス</h3>  <p class="FirstParaNoIndent">状態の設計は、クラウドのスケーラビリティとフォールトトレランスに不可欠です。 ダウンタイムが予期しないものであるか計画されているか (オペレーティングシステムの更新と同様)、1つのスケールユニットがダウンすると、別のスケールユニットがダウンします。 アプリケーションユーザーは、何かが発生したことを確認する必要はありません。 スケーリングの目的ではなく、冗長性と可用性を確保するために、重要なクラウドサービスごとに複数のスケールユニットをデプロイすることが重要です。</p>  <p class="MyBodyText">クラウドプロバイダーは一般に、アプリケーションがステートレスであることを必要とします。 1つのセッションでは、アプリケーションのユーザーは、ステートレスな負荷分散 &rdquo; または &ldquo; セッションアフィニティの欠如と &ldquo; 呼ばれるものとは独立して動作する1つ以上のスケールユニットインスタンスを操作できます。 &rdquo;開発者は、スケールユニットの作業メモリにアプリケーションまたはセッション状態を保持しないようにする必要があります。これは、ユーザーが特定のスケール単位と排他的に対話する保証がないためです。 そのため、ステートレス設計を使用しないと、多くのアプリケーションがクラウドで適切にスケールアウトできなくなります。 ほとんどのクラウドプロバイダーは、この問題に対処するための永続的なストレージを提供します。これにより、アプリケーションは、任意のスケールユニットで取得できる方法でセッション状態を格納できます。</p>  <h3 class="Sub-Headings">並列処理</h3>  <p class="FirstParaNoIndent">&nbsp;並列化とマルチスレッドアプリケーションの設計を利用することで、パフォーマンスが向上し、クラウドの主要な設計原則になります。 負荷分散や、クラウドプラットフォームに固有のその他のサービスを使用すると、負荷を相対的に簡単に分散できます。 クラウドでの低コストの迅速なプロビジョニングにより、スケールユニットは、いくつかの API 呼び出し内で並列処理をオンデマンドで使用でき、簡単に使用停止されます。</p>  <p class="MyBodyText">大規模な並列処理は、リアルタイムのエンタープライズ Data Analytics など、ハイパフォーマンスコンピューティングのシナリオにも使用できます。 多くのクラウドプロバイダーは、並列処理のための大規模なタスクの分割を可能にするフレームワークを直接または間接的にサポートしています。 たとえば、Microsoft はワシントン大学と提携して、科学研究を実行するための Azure Windows の機能を示しています。 結果として、2000サーバーに相当する1週間未満の計算が実行さ250万れました。 [1] は、それ以外の場合には数か月かかる可能性のあるコンピューティングジョブです。</p>  <h3 class="Sub-Headings">待機時間</h3>  <p class="FirstParaNoIndent">ソフトウェア &nbsp; エンジニアは、次の一般的な設計原則を適用して、ネットワーク待機時間が可用性とパフォーマンスに影響を与える可能性を低減できます。</p>  <ul>  <li>クロスプレミスシステムの場合と同様に、待機時間の長いシステムから取得したデータには、キャッシュを使用します。</li>  <li>特にクロスプレミスの統合が関係している場合は、コンポーネント間の頻繁な通信やペイロードを減らします。</li>  <li>コンテンツをグローバルに地理的に分散 &nbsp; し、レプリケートします。 前述のように、Azure Windows の content delivery network を有効にすると、エンドユーザーは最も近い地理的な場所から BLOB ストレージコンテンツを受け取ることができます。</li>  </ul>  <h3 class="Sub-Headings">自動スケーリング</h3>  <p class="FirstParaNoIndent">自動スケール機能をサポートするクラウドサービスの場合、エンジニアは既存の監視 Api をポーリングし、サービス管理 Api を使用してアプリケーションに自己スケール機能を構築できます。 たとえば、トラフィックがランダムに急増したり、特定の CPU 消費量のしきい値に達したときに、アプリケーションインスタンスを自動的に追加する使用率ベースのロジックを考えてみます。 同じルーチンがメッセージをリッスンし、必要に応じてより一般的なレベルに達するとインスタンスをシャットダウンするように指示する場合があります。</p>  <p class="MyBodyText">財務ベースのロジックもあります。 たとえば、コスト制御ロジックを追加して、指定した条件下で重要なアプリケーションが自動スケールされないようにしたり、使用量が急増した場合にアラートをトリガーしたりできます。</p>  <p class="MyBodyText"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0363.image2-copy.png" alt="" border="0"></p>  <p class="MyBodyText">データのスケーリングは、アプリケーションのスケーリングと同様に重要です。この場合も、適切な設計になります。 再考 &nbsp; は、アプリケーション &rsquo; のデータ層のアーキテクチャをクラウドで使用できるようにしますが、煩雑で、パフォーマンスと可用性の向上につながる可能性もあります。 たとえば、既存のデータベースにデータを格納するのに十分なサイズのソリューションを提供するクラウドデータストレージサービスがない場合は、データセットをパーティションに分割し、複数のインスタンスに格納することを検討してください。 シャーディング &rdquo; と &ldquo; 呼ばれるこの手法は、多くのクラウドプラットフォームでは標準になっており、SQL Azure を含むいくつかのに組み込まれています。 これが最初に必要ではない場合でも、データ要件が大きくなるにつれて、時間がかかることがあります。 &nbsp;</p>  <div><hr align="left" size="1" width="33%">  <div>  <p>[1] &ldquo; Windows Azure を使用して、科学者が確保タンパク質謎をます。 &rdquo;エクスプローラー.</p>  </div>  </div>
