### YamlMime:Yaml
ms.openlocfilehash: ab33778d76495b6816ec53b800c768601f724bc1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891176"
Slug: azure-automation-new-graphical-and-textual-authoring-features
Title: 'Azure Automation: 最新のグラフィカルおよびテキスト作成機能'
Summary: Azure Automation Runbook の作成機能を継続的にアップグレードしています。 この投稿では、グラフィカル作成モデルまたは PowerShell スクリプト作成モデルを使用して、洗練された Runbook を作成できる最新の作成ツールと機能を紹介します。
Content: >-
  <p><strong>重要な注意:&nbsp;</strong> 最新の情報については、次の新しいブログ記事を参照してください:&nbsp; <a href="https://azure.microsoft.com/en-us/blog/azure-automation-graphical-and-textual-runbook-authoring/">Azure Automation: グラフィカルおよびテキスト Runbook の作成</a></p>


  <p>&nbsp;</p>


  <p>このAzure AutomationでAzure portal&nbsp;グラフィカル ツールとグラフィカル プログラミング モデルを使用して Runbook&nbsp; を作成できます。コードは必要ありません。&nbsp;ライブラリからキャンバスにアクティビティを挿入し、それらをワークフローにリンクし、IT プロセスを自動化する便利な Runbook を作成するためにプロパティを構成します。&nbsp;Orchestrator System Centerユーザーは、Runbook を作成するこの直感的な方法を理解している必要があります。&nbsp;さらに、PowerShell ワークフロー&nbsp; スクリプトの作成を好むユーザーのために、テキスト作成ワークスペースを更新して、より大きな編集スペースと、グラフィカル作成と共有される新しいライブラリとテストエクスペリエンスを提供しました。グラフィカルおよびテキストの作成ツールは無料であり、要件に応じていずれかのツールまたは両方を使用できます。 この投稿では、新しいオーサリング エクスペリエンスの主な機能についてお見聞きし、新しいオーサリング エクスペリエンスを試してみ<a href="https://portal.azure.com/" target="_blank">Azure portal。</a></p>


  <h1>グラフィカル作成</h1>


  <p>System Center Orchestrator で Runbook を作成したり、ワークフローを視覚化できるエディターを好む方のために、Automation チームは、Azure Automation 用の最初のクラウドベースのグラフィカル Runbook エディターとグラフィカル プログラミング モデルをリリースしました。 新しいグラフィカル作成ワークスペースは、次の 4 つの主要なコンポーネントを含む、全画面のブラウザー内エクスペリエンスです。</p>


  <ul>
   <li>ライブラリ。コマンドレット、Runbook、およびアセットは、参照または検索を使用して簡単に見つかる</li>
   <li>ワークフローを構築するキャンバス</li>
   <li>構成ウィンドウ。各アクティビティとリンクのプロパティとパラメーターを構成します</li>
   <li>作成中に Runbook をテストおよびデバッグするテスト ウィンドウ</li>
  </ul>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_310361" width="636"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/GraphicalWorkspace.png"><img alt="Graphical Authoring Workspace" class="size-medium wp-image-310361" height="316" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/GraphicalWorkspace-636x316.png" width="636"></a></div>


  <div align="alignnone" width="636">&nbsp;</div>


  <div align="alignnone" width="636">グラフィカル作成ワークスペース</div>


  <p>&nbsp;</p>


  <h2>ライブラリ</h2>


  <p>作成ワークスペースの左側&nbsp; にあるライブラリには、Runbook のビルドに使用するアクティビティが含まれている。&nbsp; 新しいライブラリでは、Automation アカウント内のすべてのコマンドレット、Runbook、およびグローバル資産にアクセスできます。&nbsp; さらに、グラフィカル作成ツールキットの完成に役立ついくつかの主要な Runbook 制御アクティビティも提供しています。 ライブラリ内の項目は次のとおりです。</p>


  <ul>
   <li>コマンドレット <ul>
    <li>これらはライブラリ内のコア オブジェクトであり、PowerShell モジュールや PowerShell モジュールを持つ任意のサービスまたはシステムREST API管理できます。</li>
    <li>モジュール名、コマンドレット名で整理</li>
   </ul>
   </li>
   <li>Runbooks <ul>
    <li>これらは、より高いレベルの Runbook を作成するために使用できるモジュール形式でタスクをカプセル化した場所です。</li>
    <li>タグ (まだ使用できません) と [すべて] カテゴリで&ldquo;整理&rdquo;</li>
   </ul>
   </li>
   <li>アセット <ul>
    <li>これらは、Runbook インベントリ全体で使用する変数、資格情報、接続、証明書を格納する Automation 資産です。</li>
    <li>すべての資産について、資産&ldquo;の値&rdquo;を取得できます。変数資産の場合は、[値&nbsp;&ldquo;の設定] を&rdquo;選択できます。</li>
    <li>資産の種類別に整理された後、資産名</li>
   </ul>
   </li>
   <li>Runbook コントロール <ul>
    <li>これらは、重要なシナリオを可能にAzure Automationによって提供される特別なアクティビティです。</li>
    <li>ジャンクション <ul>
     <li>ジャンクション アクティビティは、ワークフローの次のアクティビティに進む前に、すべての受信ブランチが完了するまで待機します。</li>
    </ul>
    </li>
    <li>ワークフロー スクリプト <ul>
     <li>これは、PowerShell ワークフロー スクリプトを Runbook に挿入できる汎用アクティビティです。</li>
     <li>これは、カスタム スクリプトが必要な状況に役立ちます。たとえば、InlineScript ブロックを含むアクティビティを構成できます。</li>
    </ul>
    </li>
   </ul>
   </li>
  </ul>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_310371" width="205"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/GraphLibrary1.png"><img alt="Graphical Authoring Library" class="size-medium wp-image-310371" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/GraphLibrary1-205x369.png" width="205"></a> グラフィカル作成ライブラリ</div>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_310381" width="416"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/GraphLibrary2.png"><img alt="Graphical Authoring Library Detail" class="size-medium wp-image-310381" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/GraphLibrary2-416x369.png" width="416"></a> グラフィカル作成ライブラリの詳細</div>


  <p>&nbsp;</p>


  <h2>キャンバス</h2>


  <p>グラフィカル作成の主な機能の 1 つは、Runbook を構築するオーサリング ワークスペースの中央にある新しいキャンバスです。&nbsp; キャンバスを使用すると、アクティビティの追加と削除、アクティビティの移動、アクティビティのリンク、構成用のアクティビティまたはリンクの選択、移動または削除するアクティビティとリンクのグループの選択、垂直方向と水平方向のスクロール、拡大または縮小 (近日公開予定) を行えます。</p>


  <h2>構成</h2>


  <p>グラフィカル作成ワークスペースの右側にある構成ウィンドウは、Runbook 内の各アクティビティとリンクを構成する場所です。&nbsp; ここでは、グラフィカル Runbook を作成するときに多くの時間を費やすので、可能な限りシンプルで直感的な方法を試しました。 基本的な構成には、キャンバスのアクティビティに表示されるラベルと、Runbook 内のアクティビティの一意識別子であるラベルと、このアクティビティの使用方法に関する後の参照のためにメモを残すコメントが含まれます。 また、アクティビティの名前付き入力パラメーターの値と、PowerShell 共通パラメーターなどの追加パラメーターを設定することもできます。 &nbsp;</p>


  <div align="alignnone" id="attachment_310241" width="556"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/ActivityConfigureBasic.png"><img alt="Activity Configuration" class="size-medium wp-image-310241" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ActivityConfigureBasic-556x369.png" width="556"></a> アクティビティの構成</div>


  <p>&nbsp; アクティビティの入力パラメーター値を構成するのは非常に簡単です。&nbsp; アクティビティにパラメーター セットがある場合は、まず、使用するパラメーター セットを選択します。&nbsp; その後、使用に合ったパラメーターを構成できます。&nbsp; UX では、各パラメーターの型、必須か省略可能か、既定値かを示します。 &nbsp;</p>


  <div align="alignnone" id="attachment_310221" width="286"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/ActivityConfigureParameters.png"><img alt="Activity Configuration Input Parameters" class="size-medium wp-image-310221" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ActivityConfigureParameters-286x369.png" width="286"></a> アクティビティ構成の入力パラメーター</div>


  <p>&nbsp; パラメーターごとに、パラメーターの種類に応じて、選択するデータ ソースの一覧があります。</p>


  <ul>
   <li>定数値 <ul>
    <li>使用するカスタム値を設定できます</li>
   </ul>
   </li>
   <li>アクティビティの出力 <ul>
    <li>Runbook で以前のアクティビティの出力を使用するか、前のアクティビティの出力の プロパティを使用することができます</li>
   </ul>
   </li>
   <li>Runbook の入力 <ul>
    <li>Runbook 入力パラメーターの 1 つを使用できます</li>
   </ul>
   </li>
   <li>PowerShell 式 <ul>
    <li>このオプションを使用すると、パラメーターの入力として任意の PowerShell スクリプトからの出力を使用できます。</li>
   </ul>
   </li>
   <li>Automation アセット: 変数、資格情報、接続、証明書 <ul>
    <li>定義済みの Automation 資産の使用を選択できます</li>
   </ul>
   </li>
   <li>空の文字列</li>
   <li>[Null]</li>
  </ul>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_315681" width="320"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/ActivityConfigureDataSources2.png"><img alt="Activity Input Parameter Configuration Data Sources" class="size-medium wp-image-315681" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ActivityConfigureDataSources2-320x369.png" width="320"></a> アクティビティ入力パラメーターの構成データ ソース</div>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_310191" width="301"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/ActivityConfigureDataSourceActivityOutput.png"><img alt="Activity Input Parameter Configuration Data Source: Activity Output" class="size-medium wp-image-310191" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ActivityConfigureDataSourceActivityOutput-301x369.png" width="301"></a> アクティビティ入力パラメーター構成データ ソース: アクティビティ出力</div>


  <p>&nbsp;</p>


  <h2>リンクの構成</h2>


  <p>Runbook 内のリンクごとに、いくつかの重要な構成を行う必要があります。&nbsp; リンク&rsquo;がパイプラインまたはシーケンスの種類になるかどうか、およびリンク全体のデータ フローの条件を定義する必要があるかどうかを決定する必要があります。&nbsp; さらに、後で&rsquo;参照するためにコメントを残す必要があります。 リンクの種類は、アクティビティ出力データの使用可能な方法と、前のアクティビティからの出力が次のアクティビティのアクションに与える影響に影響を与えるので、選択するリンクの種類は非常に重要です。</p>


  <ul>
   <li>パイプライン リンク <ul>
    <li>次のアクティビティは、出力オブジェクトごとに 1 回実行されます</li>
    <li>前のアクティビティからの出力がない場合、次のアクティビティは実行されません</li>
    <li>個々のオブジェクトとして使用できる以前のアクティビティからの出力</li>
   </ul>
   </li>
   <li>シーケンス リンク <ul>
    <li>次のアクティビティは 1 回だけ実行されます</li>
    <li>オブジェクトの配列として使用できる以前のアクティビティからの出力</li>
   </ul>
   </li>
  </ul>


  <p>&nbsp; リンクで設定できる便利な構成の 1 つは、条件です。&nbsp; Condition 式内で、true または false を返す PowerShell スクリプト ブロックを設定します。 (次の機能: 式の作成に役立つ UX コントロール)</p>


  <ul>
   <li>条件が true に評価される <ul>
    <li>ダウンストリーム アクティビティが実行されます</li>
    <li>ダウンストリーム アクティビティは、アップストリーム アクティビティからのデータにアクセスできます。</li>
   </ul>
   </li>
   <li>条件が false に評価される <ul>
    <li>ダウンストリーム アクティビティは実行されません</li>
   </ul>
   </li>
  </ul>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_315671" width="405"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/LinkConfiguration2.png"><img alt="Link Configuration" class="size-medium wp-image-315671" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/LinkConfiguration2-405x369.png" width="405"></a> リンクの構成</div>


  <p>&nbsp;</p>


  <h2>Runbook の入力パラメーター</h2>


  <p>Runbook の入力パラメーターを定義する準備ができたら、上部のコマンド バーの [入力と出力] をクリックし、ビジュアル エディターを使用してパラメーターを作成できます。&nbsp; 必要な数の入力パラメーターを作成し、それぞれの名前と型 (String、Int32、Int64、Decimal、Boolean、Datetime、Object) を定義できます&nbsp; 。さらに、パラメーターが必須か省略可能か定義できます。一部の型では、必要に応じて既定値を設定します。&nbsp; ドキュメントを参照するために、各パラメーターの説明を指定できます。 &nbsp;</p>


  <div align="alignnone" id="attachment_310341" width="297"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/RunbookInputParameters.png"><img alt="Configure Runbook Input Parameters" class="size-medium wp-image-310341" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/RunbookInputParameters-297x369.png" width="297"></a> Runbook 入力パラメーターの構成</div>


  <p>&nbsp;</p>


  <h1>テキスト作成</h1>


  <p>PowerShell ワークフロー スクリプトを使用して Runbook を作成する場合は、オンライン作成を簡単にする必要がある、更新されたテキスト作成ワークスペースが提供されます。&nbsp; このリリースには、より大きな &ndash; 編集スペース、統合ライブラリ、より使いやすいテスト エクスペリエンスが含まれており、ワークフロー スクリプトを作成しながら生産性を向上させることができます。</p>


  <h2>大きな編集ウィンドウ</h2>


  <p>編集ウィンドウには、行番号付け、コンテキストの強調表示、および検索が引き続き表示されます。ただし、大きな勝ちは編集ウィンドウのサイズの大幅な増加です。これにより、スクロールすることなく、より多くのスクリプトを表示できます。 &nbsp; <img alt="Textual Authoring Workspace" border="0" height="305" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/TextualWorkspace.png" style="border-width: 0px; margin-right: 0px; margin-left: 0px; display: inline;" title="テキスト作成ワークスペース" width="610"></p>


  <h2>ライブラリ</h2>


  <p>テキスト作成ワークスペースは、ライブラリ コンポーネントをグラフィカル作成と共有します。&nbsp; ライブラリから、システム内に存在するコマンドレット、Runbook&nbsp; 、および資産を見つけ、必要なコマンドレットをテキスト エディターに挿入できます。</p>


  <h1>テスト エクスペリエンス</h1>


  <p>新しいテスト エクスペリエンスのグラフィカルおよび&nbsp;テキスト作成の&nbsp;共有管理の側面。&nbsp; 主な機能は次のとおりです。</p>


  <ul>
   <li>テストの実行間で値を&rsquo;保持するパラメーター値入力ペイン。各テストでパラメーター値を再入力する必要がな</li>
   <li>標準の PowerShell 書式設定を使用した大きなテスト出力ウィンドウ</li>
   <li>テスト ジョブの状態と例外メッセージの個別のウィンドウ</li>
   <li>ワークフロー データ ストリームの色分け出力 &ndash; 、詳細、警告、エラー</li>
   <li>テスト ブレードが閉じている場合でも、テストは続行されます。出力状態が維持され、ブレードを再び開きます</li>
   <li>Start、Stop、Suspend、Resume コマンド</li>
   <li>ahybrid アプリケーションでテストを実行する&nbsp;runbook worker</li>
  </ul>


  <p>グラフィカル Runbook テストにはアクティビティ レベルのトレースも含め、各アクティビティの開始時間と終了時間がテスト出力ウィンドウに表示されます。&nbsp; 間もなく、各アクティビティの入力オブジェクトと出力オブジェクトも表示され、簡単なデバッグが可能になります。</p>


  <p>&nbsp;</p>


  <div align="alignnone" id="attachment_310351" width="539"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/05/07/TestPane.png"><img alt="Test Pane" class="size-medium wp-image-310351" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/TestPane-539x369.png" width="539"></a> テスト ウィンドウ</div>


  <p>&nbsp;</p>


  <h1>グラフィカルおよびテキスト作成モデル</h1>


  <p>グラフィカル作成モデルとテキスト作成モデルは明確に異なります。それぞれに、以下に示す重要な特性があります。&nbsp; 一方を優先するユーザーもいます。一部のユーザーは、必要性に応じて両方を利用します。</p>


  <h2>グラフィカル</h2>


  <ul>
   <li>ビジュアルドラッグ アンド ドロップ リンク構成オーサリング モデル</li>
   <li>プロセスを介したデータの流れに専念</li>
   <li>影響を受ける IT プロセスとシステムを視覚化できる</li>
   <li>より高いレベルの言語なので、生産性が向上する可能性があります</li>
   <li>必要に応じて PowerShell スクリプトを含め可能</li>
   <li>Orchestrator ユーザー System Center使い慣れたユーザー</li>
   <li>デザイナーはクラウド ベース</li>
  </ul>


  <h2>テキスト</h2>


  <ul>
   <li>PowerShell ワークフロー スクリプト作成モデル</li>
   <li>低レベルの言語なので、汎用性が高い</li>
   <li>既存の PowerShell スクリプトを使用できる</li>
   <li>PowerShell ユーザーの使い慣れたユーザー</li>
   <li>デザイナーがクラウドベースまたはクライアント (ISE) である</li>
  </ul>


  <p>&nbsp;</p>


  <h1>知っておくべきこと</h1>


  <p>役に立つヒントと既知の問題を次に示します。&nbsp; これはプレビュー リリースなので、引き続きいくつかの問題が解決される予定です。ただし、Automation に対する更新プログラムは継続的にリリースされています。そのため、時間の間に問題が消えるのが分かっています。</p>


  <ul>
   <li>グラフィカル エクスペリエンスの PowerShell 式エディター内では、次のような以前のアクティビティの出力を参照できます。
   <pre class="prettyprint">
  $ActivityOutput[&lsquo;activity label&rsquo;]

  $ActivityOutput[&lsquo;activity label&rsquo;].Property1

  </pre>
   </li>
   <li>同様に、Runbook の入力パラメーターは次のように参照できます。
   <pre class="prettyprint">
  $InputParameterName</pre>
   </li>
   <li>パイプラインリンクの種類とシーケンス リンクの種類の違いを理解します。
   <ul>
    <li>パイプライン
    <ul>
     <li>個々のオブジェクトとして使用できる以前のアクティビティからの出力</li>
     <li>次のアクティビティは、前のアクティビティからのオブジェクト出力ごとに 1 回実行されます。&nbsp; 前のアクティビティで出力が生成されない場合、次のアクティビティは実行されません。</li>
    </ul>
    </li>
    <li>シーケンス
    <ul>
     <li>オブジェクトの配列として使用できる以前のアクティビティからの出力</li>
     <li>次のアクティビティは 1 回だけ実行されます</li>
    </ul>
    </li>
   </ul>
   </li>
   <li>Runbook 入力パラメーターの定義を変更し、変更をテストする場合は、ドラフトを保存し、テスト ウィンドウを閉じて再び開いて、変更されたパラメーターがテスト ウィンドウに表示される必要があります。</li>
   <li>グラフィカル Runbook の出力は、Runbook の最後のアクティビティからの出力です。&nbsp; この動作は、Runbook の出力が Runbook 内の任意のアクティビティから発生する可能性があるテキスト形式の Runbook の動作とは異なります。</li>
  </ul>


  <ul>
   <li>既知の問題
   <ul>
    <li>テスト ジョブ (特に子 Runbook を含む Runbook の場合) は、実行状態に入るのに最大で 1 分以上かかる場合があります。&nbsp; これは不満であり、起動パフォーマンスの向上に取り組み中です。&nbsp; Automation の使用状況と請求には、ジョブの起動時間は含まれません。ジョブが実際に実行状態にある時間のみです。</li>
    <li>設計上、ジャンクション アクティビティは複数の受信シーケンス リンクを持つ可能性がありますが、受信パイプライン リンクは 1 つのみです。 問題は、現在も複数のパイプライン リンクを警告なしでジャンクションにフックできる点です。&nbsp; Runbook を保存して発行できますが、Runbook を開始しようとすると失敗します。</li>
    <li>並列分岐で子 Runbook を実行することはできません。&nbsp; グラフィカル Runbook と textual Runbook の両方について、子 Runbook が並列分岐で実行されている場合に予測できない出力動作が検出されました。 これは PowerShell ワークフローの問題です。&nbsp; そのため、起動時に Runbook が失敗するグラフィカル Runbook のチェックを追加しました。このケースが存在する場合は、便利なエラー メッセージが表示されます。</li>
    <li>アクティビティに対するループ/再試行はまだ実装されていません。ただし、これは、次の機能に関する一覧で高い値です。</li>
   </ul>
   </li>
  </ul>


  <p>&nbsp;</p>


  <h1>まとめ</h1>


  <p>これは、新しいグラフィカルおよびテキスト形式の Runbook 作成エクスペリエンスの簡単な概要であり、Azure Automation。&nbsp; これらのツールの目的は、IT プロセスを自動化するために使用する Runbook を効率的に作成できる点です。&nbsp; このプレビュー リリースでは、豊富なツール セットを提供しています。以降のリリースごとに、価値と使いやすさを向上する機能を追加します。 この&#39;クラウド (Azure Azure Automationその他) およびオンプレム IT 管理用の単一の自動化ポータルであるのを忘れないでください。 次のAzure Automation? このサービスについては、こちらを <a href="https://aka.ms/Q2p1ap" target="_blank">参照し</a>、Twitter <a href="https://twitter.com/AzureAutomation" target="_blank">Azure Automation</a> に従ってください。</p>
