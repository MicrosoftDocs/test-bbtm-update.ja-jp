### YamlMime:Yaml
ms.openlocfilehash: e0ef959ddce25714288b815e972fd627db35772a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910386"
Slug: run-azure-cli-as-a-docker-container-avoid-installation-and-setup
Title: 'Docker Azure CLIとして実行する: インストールとセットアップを避ける'
Summary: この投稿では、新しく公開された Docker Hub イメージを使用してコンテナーとして Azure CLI を実行する方法について説明し、Azure CLI Docker イメージを利用して、1 つのコマンドを使用して Azure サービスの管理をすばやく開始する方法を示します。
Content: >-
  これで、既存の Azure SDK、サービス、またはサービスを通じて <a href="https://azure.microsoft.com/en-us/downloads/" target="_blank">Azure</a> <a href="https://azure.microsoft.com/en-us/documentation/articles/powershell-install-configure/" target="_blank">サービスAzure PowerShell</a>使用Azure CLI。 Azure CLI – コマンド ライン インターフェイスはクロス プラットフォームであり、Linux、Mac、および Windows クライアントでサポートされています。 このブログでは、Docker ホストにアクセスできる限り、新しくリリースされた Azure CLI Docker イメージを利用して、使用しているクライアント OS または Linux ディストリビューションに関係なく、Azure CLI をすぐに使用する方法について説明します。<a href="https://docs.docker.com/articles/basics/" target="_blank"></a>


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/06/01/2015-05-31_19h08_42.png"><img style="display: inline;" title="2015-05-31_19h08_42" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2015-05-31_19h08_42_thumb.png" alt="2015-05-31_19h08_42" width="640" height="366" /></a>


  Docker コンテナーとしてAzure CLIの利点は 2 つあります。 1 つ目は、1 つのコマンドのみを実行することで、すぐに開始できます。次に、高度な Azure CLI の使用を開始すると、開発環境内の異なるクライアント間を移動し、実行したすべての作業を保持し、1 つのパッケージ (コンテナー) として別のクライアントからアクセスする機能を提供できます。 これらは実際には Docker コンテナーの一般的な主な使用例の一部ですが、現在は、docker コンテナー イメージとして Azure CLI を実行するシナリオで使用できます。


  Docker コンテナーとしてAzure CLI実行するには、次のようにします。

  <ol>
   <li>Docker ホストへのアクセス権を持っている必要があります。Azure Linux VM で Docker ホストをプロビジョニングするには、こちらを参照 <a href="https://azure.microsoft.com/blog/2015/01/08/introducing-docker-in-microsoft-azure-marketplace/" target="_blank">してください</a>。</li>
   <li>次を実行します。</li>
  </ol>

  <pre class="prettyprint">$ docker run -it microsoft/azure-cli</pre>

  上記のコマンドを実行すると、既にインストールされ、使用Azure CLIを求めるメッセージが表示されます。 この時点から、最新のビットとAzure CLIサポートされているコマンド、および最新のビットにアクセスできます。 この時点で最初に行いたいのは、サブスクリプションにログインし、Azure リソースの管理を開始する方法です。


  上記のコマンドを初めて実行する場合、Docker Hub リポジトリからイメージをダウンロードするには数分かかる場合があります。ただし、後続の実行では、ローカルで使用可能なイメージが利用されます。


  Azure サービス全体で Azure CLI を使用する方法の詳細については、「Azure CLI GitHub リポジトリ: <a href="https://github.com/Azure/azure-xplat-cli" target="_blank">Microsoft Azure</a> クロス プラットフォーム コマンド ライン」を参照してください。Azure CLI を使用して Azure 仮想マシンを管理する場合は、リファレンス

  <ul>
   <li>
  <h3><a href="https://azure.microsoft.com/en-us/documentation/articles/xplat-cli-azure-resource-manager/" target="_blank"><span style="font-size: small;">Azure Resource Management Azure CLIを使用して Mac、Linux、Windows用のアプリケーションを使用する</span></a><span style="font-size: small;"> </span></h3>

  </li>
   <li>
  <h3><a href="https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-command-line-tools/" target="_blank"><span style="font-size: small;">Azure Service Management Azure CLI Mac、Linux、および Windows の使用</span></a></h3>

  </li>

  </ul>

  サブスクリプションがセットアップされ、別のクライアントで引き続き使用する Azure CLI 環境が用意されている場合は、新しく作成したコンテナーを新しい個人用イメージとしてコミットし、将来使用するためにプライベート リポジトリに保存できます。

  <pre class="prettyprint">$ docker run -it &lt;your private repo&gt;/azure-cli</pre>

  <strong><em><span style="color: #ff0000;">警告: サブスクリプションにログインして新しいイメージをキャプチャする場合は、プライベート サブスクリプション情報が含まれるので、新しく作成されたイメージをパブリックにプッシュしない必要があります。代わりに、イメージをローカルに保存するか、プライベート リポジトリを使用して、上記の同じコマンドを引き続き使用します。 </span></em></strong>
