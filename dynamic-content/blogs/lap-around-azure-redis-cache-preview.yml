### YamlMime:Yaml
ms.openlocfilehash: 3fcc6acce9e6cdd41d48e23ec521e931fff9a4d2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891511"
Slug: lap-around-azure-redis-cache-preview
Title: Azure Redis Cache のラップ
Summary: '2014年5月12日に、Azure Redis Cache (プレビュー) の利用可能性が発表されました。 この新しいキャッシュサービスにより、お客様は、Microsoft によって管理される、セキュリティで保護された専用 Redis cache を使用できるようになります。 '
Content: >-
  [更新された Sep 24 2014]Azure Redis Cache は、99.9% の可用性 SLA で一般提供されるようになりました。


  この新しいキャッシュサービスにより、お客様は、Microsoft によって管理される、セキュリティで保護された専用 <a href="https://redis.io/">Redis cache</a>を使用できるようになります。 このサービスでは、Redis が提供する豊富な機能セットとエコシステムを利用し、Microsoft による信頼性の高いホスティングと監視を受けられます。


  この投稿では、Azure Redis Cache と、それが提供する主な機能について説明します。


  この投稿を Azure Redis Cache のシリーズの最初の方として計画しています。 では、"Redis" というタグが付いたブログ投稿をご覧ください。


  このコンテンツに関するビデオチュートリアルと詳細については、 <a href="https://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant">Azure Redis Cache (プレビュー) に関する記事</a>をご覧ください。


  &nbsp;


  <b>Cache </b>


  Redis は、 <a href="https://redis.io/">Redis.io</a>に " <i>...オープンソース、BSD ライセンス、高度なキー値ストア。キーは文字列、ハッシュ、リスト、セット、および並べ替えられたセットを含むことができるため、これはデータ構造サーバーと呼ばれることがよくあります。</i>


  キーと値ペアのみを扱う従来のキャッシュとは異なり、Redis は高パフォーマンスな種類のデータに人気があります。 Redis は、文字列への追加など、これらの型に対するアトミック操作の実行をサポートしています。ハッシュの値をインクリメントします。リストにプッシュします。積集合、和集合、および差集合を計算しています。または、並べ替えられたセット内の順位が最も高いメンバーを取得します。


  その他の機能として、トランザクションのサポート、パブリッシュ/サブスクライブ、Lua スクリプト、有効期限が制限されたキー、Redis を従来のキャッシュのように動作させるための構成設定があります。


  Redis creator Salvatore Sanfilippo ( <a href="https://twitter.com/antirez">@antirez</a> ) の書き込みでは、"<i>redis にはさまざまなユースケースがあります。これを説明する最も簡単な方法は、従来のデータベースとメモリ内の計算を実行することです。Redis は、一連のコマンドを使用してメモリ内にアクセスされるデータ構造を公開</i>します。 詳細については、このブログの「一般的な Redis の使用例」を参照してください。


  Redis が正常に動作するために重要な点は、Redis を中心として正常に動作する強力なオープン ソース エコシステムが構築されていることです。 この1つのリフレクションは、複数の言語で使用できるさまざまな <a href="https://redis.io/clients">Redis クライアント</a> のセットです。


  すべてのテクノロジが成功するための最後の鍵は、運用シナリオで使用する <a href="https://redis.io/topics/whos-using-redis">お客様</a> です。ここでも、Redis は正常に成功しています。


  <b>Redis on Windows</b>


  Microsoft Open Technologies は、過去数年間、Windows に redis のポートを保持しているため、Windows ユーザーが redis を利用できるようにします。


  開発者は、 <a href="https://github.com/MSOpenTech/Redis">GitHub リポジトリ</a>を使用して、上記のプロジェクトに従うか、ビルドまたは投稿することができます。 また、Nuget パッケージを使用して、Windows 互換性のある redis サーバー (redis-server.exe) と Redis クライアント (redis-cli.exe) のバイナリをダウンロードすることもできます。


  <b>Redis をローカルで実行する </b>


  <i>このセクションでは、Redis サーバーとクライアントをローカルで実行する方法について説明します。これは、主に Azure 向けに開発しているユーザーであっても、非常に貴重な学習、開発、診断リソースです。ただし、ローカル Redis サーバーまたはクライアントは Azure Redis Cache と通信する <b>必要</b> がないため、ユーザーはこのセクションをスキップすることを選択できます。</i>


  <span style="text-decoration: underline">Redis サーバー</span>


  Redis サーバーをローカルで起動するために必要なのは、 <i>redis-serve.exe</i>を実行しているものだけです。 これにより、ローカル Redis サーバーが起動され、既定のポートをリッスンします。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/06/Capture.png"><img style="border-width: 0px" title="キャプチャ" alt="Capture" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Capture_thumb.png" width="636" height="359" border="0" /></a>


  <span style="text-decoration: underline">Redis コマンドラインクライアント</span>


  redis-cli.exe を実行して、Redis クライアントをローカルで実行します。 クライアントがランチすると、既定のポートに接続しているサーバーに自動的に接続されます。


  クライアントに <i>ping</i> を入力すると、サーバーから <i>の応答が返され </i>ます。


  これで、最初の Redis コマンドを発行するように設定されました。


  <i><span style="font-family: lucida console">azureblog の設定: firstset "Hello World"</span></i>


  <i><span style="font-family: lucida console">azureblog の取得: firstset</span> </i>


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image003.jpg"><img style="border-width: 0px" title="clip_image003" alt="clip_image003" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image003_thumb.jpg" width="627" height="149" border="0" /></a>


  Redis <a href="https://redis.io/commands">コマンド</a> の完全なセットは、redis <i>-cli</i>から実行できます。これには、 <a href="https://redis.io/commands/info">INFO</a>などの redis health の監視コマンドも含まれます。 <i>Redis cli</i>は、優れた開発および診断ツールであるだけでなく、ユーザーが redis コマンドを理解するのに役立つ優れた学習ツールでもあります。


  <b>Azure Redis キャッシュ (プレビュー)</b>


  <span style="text-decoration: underline">サイズ、価格、Sku</span>


  Azure Redis Cache プレビューは2つのレベルで提供されています。


  <b>Basic</b> –単一のキャッシュノード (開発/テストおよび重要ではないワークロードに最適)


  <b>Standard</b> –レプリケートされたキャッシュ (2 つのノード、マスターとレプリカ)


  Azure Redis Cache は、250 MB、1 gb、2.5 GB、6 GB、13GB、26 GB、53 GB、Azure サービスリージョン " href="https://azure.microsoft.com/en-us/regions/#services"> の <a title=" さまざまなリージョン </a> で利用できます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/06/S2.png"><img class="alignnone size-medium wp-image-162101" alt="S2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/S2-241x369.png" width="241" height="369" /></a><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/06/B2.png"><img class="alignnone size-medium wp-image-162111" alt="B2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/B2-241x369.png" width="241" height="369" /></a>


  価格の詳細については、 <a href="https://azure.microsoft.com/en-us/pricing/details/cache/">Azure Cache の価格</a>に関するページを参照してください。


  <span style="text-decoration: underline">Azure Redis Cache "Hello World"</span>


  このセクションでは、Azure Redis Cache を作成し、C# アプリケーションに接続します。


  新しい Azure Redis Cache の概要は簡単です。新しいキャッシュを作成するには、 <a href="https://portal.azure.com/">Azure プレビューポータル</a>にサインインし、[<strong>新しい</strong><b>  - &gt; </b>Redis cache] をクリックし<b><strong>ます。</strong> </b><strong></strong>


  <a href="https://msdn.microsoft.com/en-us/library/dn690516.aspx"><i>Azure Redis Cache を作成する方法</i></a><i>の詳細な手順については、MSDN ドキュメント</i>を参照<i>してください。</i><i></i>


  <a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/image_4B8B65E4.png"><img style="border-width: 0px" title="clip_image007" alt="clip_image007" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image007.png" width="569" height="543" border="0" /></a>


  新しいキャッシュ オプションの構成が完了したら、<strong>[作成]</strong> をクリックします。 キャッシュが作成されるまで数分かかる場合があります。 キャッシュが作成されると、新しいキャッシュの状態が [ <strong>実行中</strong> ] になり、既定の設定で使用できるようになります。


  <a href="https://mscblogs.blob.core.windows.net/media/scottgu/Media/clip_image042_6FB35124.jpg"><img style="border-width: 0px" title="clip_image008" alt="clip_image008" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image008.jpg" width="477" height="642" border="0" /></a>

  <table cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td width="6"></td>

  </tr>

  <tr>

  <td></td>

  <td><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image011.png"><img style="border-width: 0px" title="clip_image011" alt="clip_image011" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image011_thumb.png" width="546" height="288" border="0" /></a></td>

  </tr>

  </tbody>

  </table>

  キャッシュエンドポイントとキーは、Azure プレビューポータル内のキャッシュインスタンスの [プロパティ] ブレードと [キー] ブレードから取得できます。


  これらを取得したら、redis-cli.exe を使用してキャッシュへの接続を作成できます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image013.jpg"><img style="border-width: 0px" title="clip_image013" alt="clip_image013" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image013_thumb.jpg" width="628" height="149" border="0" /></a>


  <span style="text-decoration: underline">Redis C# クライアント</span>


  Redis は、複数の言語で使用できるさまざまな <a href="https://redis.io/clients">redis クライアント</a> のセットを提供します。 次の例では、StackExchange. Redis C# Redis クライアントを使用しています。


  <i>詳細については、 </i> <a href="https://github.com/StackExchange/StackExchange.Redis"><i>stackexchange. redis</i></a> <i> </i>の<i>github ページと</i> <a href="https://github.com/StackExchange/StackExchange.Redis#documentation"><i>stackexchange クライアントのドキュメント</i></a>を参照して<i>ください。</i>


  StackExchange.Redis NuGet パッケージを使用して Visual Studio でクライアント アプリケーションを構成するには、<strong>ソリューション エクスプローラー</strong>で [<strong>NuGet パッケージの管理</strong>] をクリックします。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image016.png"><img style="border-width: 0px" title="clip_image016" alt="clip_image016" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image016_thumb.png" width="712" height="295" border="0" /></a>[<strong>オンライン検索</strong>] テキストボックスに「 <strong>Stackexchange. Redis</strong> 」と入力し、結果からそれを選択して、[<strong>インストール</strong>] をクリックします。


  NuGet パッケージは、stackexchange. Redis Cache クライアントを使用して Azure Redis Cache にアクセスするために、クライアントアプリケーションに必要なアセンブリ参照をダウンロードして追加します。


  プログラムを使用してキャッシュを操作するには、まずキャッシュへの接続を確立します。


  まず、StackExchange. Redis client を使用するすべてのファイルの先頭に次を追加します。

  <pre class="prettyprint">using StackExchange.Redis;</pre>

  Redis cache への接続は、クラスインスタンスによって <code>ConnectionMultiplexer</code> 管理されます。 このインスタンスは、クライアントアプリケーション全体で共有および再利用されるように設計されており、操作ごとに作成する必要はありません。


  Azure Redis Cache に接続して、接続さ <code>ConnectionMultiplexer</code> れたのインスタンスを返すには、静的 <code>Connect</code> メソッドを呼び出し、キャッシュエンドポイントを渡します。

  <pre class="prettyprint">ConnectionMultiplexer connection = ConnectionMultiplexer.Connect("contoso5.redis.cache.windows.net,ssl=true,password=... ");</pre>

  接続が確立されたら、メソッドを呼び出し <code>ConnectionMultiplexer.GetDatabase</code> て、Redis cache データベースへの参照を返します。

  <pre class="prettyprint">// connection refers to a previously configured ConnectionMultiplexer

  IDatabase cache = connection.GetDatabase();</pre>

  <i>Redis のデータベースは、データのグループ化にすぎません。通常、アプリケーションで関連データを論理的にグループ化する必要がある場合に便利です。</i>


  キャッシュに項目を格納する、またはキャッシュから項目を取得するには、<code>StringSet</code> メソッドと <code>StringGet</code> メソッドを使用します。

  <pre class="prettyprint">// If key1 exists, it is overwritten.

  cache.StringSet("key1", "value1");

  string value = cache.StringGet("key1");</pre>

  <code>StringGet</code> を呼び出すと、オブジェクトが存在する場合はそのオブジェクトが返され、存在しない場合は null が返されます。 その場合、目的のデータ ソースから値を取得してキャッシュに格納しておき、後で使用することができます。

  <pre class="prettyprint">string value = cache.StringGet("key1");

  if (value == null)

  {
     // The item keyed by "key1" is not in the cache. Obtain
     // it from the desired data source and add it to the cache.
     value = GetValueFromDataSource();
     cache.StringSet("key1", value);
  }</pre>

  キャッシュ内の項目の有効期限を指定するには、<code>StringSet</code> の <code>TimeSpan</code> パラメーターを使用します。

  <pre class="prettyprint">cache.StringSet("key1", "value1", TimeSpan.FromMinutes(90));</pre>

  <i>Azure Redis Cache は、プリミティブデータ型だけでなく .net オブジェクトもキャッシュできますが、.net オブジェクトをキャッシュする前に、そのオブジェクトをシリアル化する必要があります。StackExchange. Redis では、これはアプリケーション開発者の責任です。これにより、開発者はシリアライザーを柔軟に選択できるようになります。詳細については、「 </i><a href="https://msdn.microsoft.com/en-us/library/dn690521.aspx#Objects"><i>キャッシュ内の .net オブジェクトの操作</i></a>」を参照してください<i>。</i>


  <a name="specify-the-expiration-of-an-item-in-the"></a>


  これで、Azure Redis Cache に正常に接続され、Set と Get 操作が実行されました。


  ASP.NET セッション状態を格納するために Azure Redis Cache を使用する方法の例については、 <a href="https://blogs.msdn.com/b/webdev/archive/2014/05/12/announcing-asp-net-session-state-provider-for-redis-preview-release.aspx">Azure Redis Cache ASP.NET セッション状態プロバイダー</a>に関するブログの投稿をご覧ください。


  <b>Microsoft がホストする Redis Cache の特典</b>


  Azure Redis Cache は、Microsoft が管理する、セキュリティで保護された専用 <a href="https://redis.io/">Redis cache</a>を使用する機能をお客様に提供します。 このサービスでは、Redis が提供する豊富な機能セットとエコシステムを利用し、Microsoft による信頼性の高いホスティングと監視を受けられます。


  次に、Microsoft がホストする Redis に追加される2つの重要な値について詳しく説明します。


  - Azure Redis Cache Standard Sku でのターンキーレプリケーションのサポート。


  - 組み込みの監視とアラート


  <span style="text-decoration: underline">レプリケーション</span>


  Redis cache エンジンでは、マスタスレーブレプリケーションがサポートされており、非常に高速な非ブロックの初回同期と、差分分割での自動再接続が可能です。 Azure Redis cache は、この機能の上に構築され、すべての standard レベルのキャッシュでレプリケーションを提供します。 これにより、キャッシュの可用性を大幅に向上させることができます。ノード障害復旧は高速で、データ損失はゼロ (または最小) です。


  内部的には、Standard SKU キャッシュ (master + スレーブ) ごとに2つのノードをプロビジョニングし、Redis レプリケーションを使用して2つのノードを同期させます。さらに、マスターへのハートビートを保持します。マスターがダウンしたことを検出するとすぐに、スレーブをマスターに昇格させます。 通常、キャッシュに関する通知のすべてのユーザーは、キャッシュが使用できなくなるまでの小さなブリップが発生であり、その後すぐに正常な状態に戻ります。


  &nbsp;


  <span style="text-decoration: underline">監視とアラート</span>


  すべての Azure Redis cache には、既定で監視される主要なメトリックがあります。 最初のプレビューリリースでは、キャッシュヒット、キャッシュミス、Get/Set コマンド、削除されたキー、期限切れのキー、使用メモリおよび使用された CPU を追跡しています。 今後数か月の間に、このセットに追加される予定です。


  監視対象のデータは、キャッシュインスタンスのポータルページに表示されます。ユーザーは、時間、日、週、または特定のカスタムの時間範囲のデータを表示することを選択できます。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image018.jpg"><img style="border-width: 0px" title="clip_image018" alt="clip_image018" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image018_thumb.jpg" width="628" height="551" border="0" /></a><b></b>


  ユーザーは、データの表示に加えて、ユーザー定義の時間間隔中に特定のメトリックがユーザー定義のしきい値を超えたときにアラートを設定するように選択できます。


  たとえば、キャッシュに削除が表示されている場合、アラートによってキャッシュ管理者に通知される可能性があります。 さらに、キャッシュがホットで実行され、より大きなサイズにアップグレードする必要があるというシグナルが表示される可能性があります。


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/05/clip_image020.jpg"><img style="border-width: 0px" title="clip_image020" alt="clip_image020" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image020_thumb.jpg" width="296" height="867" border="0" /></a>


  これで、Azure の主要な機能を簡単にRedis Cacheされます。


  15 分で Azure Redis Cache <a href="https://azure.microsoft.com/blog/2014/06/05/mvc-movie-app-with-azure-redis-cache-in-15-minutes/">MVC Movie App を</a>使用したサンプル アプリケーションRedis Cache確認する


  以下のセクションでは、その他の Azure Cache リソースの一覧を示します。


  Happy Caching!


  &nbsp;


  <b>詳細情報</b>


  詳細については、次のリンクを参照してください。


  · <a href="https://channel9.msdn.com/Shows/Web+Camps+TV/A-look-around-the-Redis-Cache-Preview-with-Saurabh-Pant">Channel 9 ビデオ: Azure Redis Cache (プレビュー) を確認する</a>


  · <a href="https://azure.microsoft.com/en-us/documentation/services/cache/">Azure Cache ホーム ページ</a>


  · <a href="https://aka.ms/clb5bw">Azure Cache フォーラム </a>- すべての質問に対する回答Redis Cacheします
