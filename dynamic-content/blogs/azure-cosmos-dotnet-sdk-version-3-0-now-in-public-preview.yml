### YamlMime:Yaml
ms.openlocfilehash: dc37f41a3e826dd908729a538bb919a8d934ae84
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139889283"
Slug: azure-cosmos-dotnet-sdk-version-3-0-now-in-public-preview
Title: Azure Cosmos DB .NET SDK Version 3.0 がパブリック プレビュー中
Summary: Azure Cosmos DB チームは、.NET SDK のバージョン 3.0 を発表します。現在はパブリック プレビューが開始され、GitHub!
Content: >-
  <p>Azure Cosmos DB チームは、.NET SDK のバージョン 3.0 を発表します。現在はパブリック プレビューが開始され、GitHub!</p>


  <p>フィードバックをお寄せいただきありがとうございます。お試しのうえ、ご意見をお寄せください。 最新バージョンは、NuGetを<a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos" target="_blank">通じて</a>取得し、<a href="https://aka.ms/CosmosDotnetSDKV3" target="_blank">GitHub。</a></p>


  <div style="background: rgb(238, 238, 238); padding: 5px 10px; border: 1px solid rgb(204, 204, 204); border-image: none;"><code>Install-Package Microsoft.Azure.Cosmos -Version 3.0.0.1-preview &ndash;prerelease</code></div>


  <h2>Azure Cosmos DB とは</h2>


  <p><a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB</a> は、任意の Azure リージョンからデータを読み書きできる、グローバルに分散されたマルチモデル データベース サービスです。 ターンキー グローバル分散を提供し、99 番目のセンタイルでの 1 桁ミリ秒の待機時間と、スループットとストレージのエラスティック スケーリングを保証します。</p>


  <h2>.NET SDK のバージョン 3.0 の新機能</h2>


  <p>SDK のバージョン 3.0 は .NET Standard 2.0 を対象とし、新しい直感的なオブジェクト モデルやストリームのサポートなど、多くの使いやすさとパフォーマンスの向上が特徴です。 また、SDK は、<a href="https://github.com/Azure/azure-cosmosdb-java" target="_blank">Java</a>、<a href="https://github.com/Azure/azure-cosmos-js" target="_blank">JavaScript</a>、<a href="https://github.com/Azure/azure-cosmos-python" target="_blank">Python</a> SDK を、GitHub 上のオープン ソースとして参加しています。</p>


  <p>これはバージョン 3.0 SDK の初期プレビューであり、ユーザーは引き続き.NET SDK のバージョン 2.x を実稼働ワークロードに使用することをお勧めします。 現時点では、.NET SDK のバージョン 2.x のサポートを廃止または廃止する予定はありません。</p>


  <h2>ターゲット .NET Standard 2.0</h2>


  <p>既存&rsquo;の .NET SDK と .NET Core SDK を 1 つの .NET SDK に統合し、 <a href="https://docs.microsoft.com/dotnet/standard/net-standard" target="_blank">2.0 .NET Standardを</a>対象としました。 つまり、.NET Framework 4.6.1 以上と .NET Core 2.0 以上のアプリケーションの両方で .NET SDK を使用できます。</p>


  <h2>直感的なプログラミング モデル</h2>


  <p>この数か月間、チームはフィードバックに基づいて Azure Cosmos DB SDK の開発者エクスペリエンスの向上に取り組み続けきました。</p>


  <h3>新Fluent API Surface</h3>


  <p><b>DocumentClient</b>&rsquo; を置き換える新しいトップ レベル<b><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.cosmosclient" target="_blank">の CosmosClient</a></b> クラスを作成し、そのメソッドを modular <b>CosmosDatabase</b>、<b>CosmosContainer</b>、<b>CosmosItems のクラスに分割</b>しました。 新しいプログラミング モデルでは、アプリケーション コードから UriFactory などのノイズ&ldquo;&rdquo;が不要になります。</p>


  <p><iframe height="870" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F5a31fae256f8edec510cfbb60fe9a239.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <p>使いやすさに関する調査では、新しい開発者が次に何を行うのかを簡単に見つめやすくする階層が示されました。 また、 <b>モジュール型の CosmosDatabase </b>型と <b>CosmosContainer </b>型を使用すると、依存関係の挿入も簡単になります。 これで、クライアント、データベース、コンテナーの名前を渡さずに、アプリケーション内のデータベースまたはコンテナーのコンテキストを簡単に渡すのが可能です。</p>


  <h3>テストが容易</h3>


  <p>開発者からの多数の要求に従い、すべての型がモック可能になったので、新しい階層型プログラミング モデルを使用すると単体テストが簡単になります。 また、 <a href="https://aka.ms/CosmosDotnetSDKV3Handler" target="_blank">SDK 要求/</a> 応答パイプラインにプラグインできる CosmosConfiguration.AddCustomHandlers() を介したミドルウェアの機能拡張も導入しました。</p>


  <h3>名前の変更</h3>


  <p>SDK&rsquo; を Azure Cosmos DB リソース モデルに合わせて調整するために、いくつかの名前付け変更を行いました。 Azure Cosmos DB&rsquo; では複数のデータ モデルがサポートされているので、コレクションとドキュメントの名前を、すべての SDK のコンテナーと項目の汎用名に変更します。</p>


  <h2>パフォーマンスの向上</h2>


  <p>以前のバージョンの SDK では、ネットワーク間で常にデータがシリアル化および逆シリアル化されています。 多くの場合、これは不要であり、パフォーマンスのオーバーヘッドにつながります。 <a href="https://www.asp.net/web-api" target="_blank">ASP.NET Web API</a> のコンテキストで項目またはクエリを読み取る場合は、新しい <a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.cosmositems.readitemstreamasync#Microsoft_Azure_Cosmos_CosmosItems_ReadItemStreamAsync_System_Object_System_String_Microsoft_Azure_Cosmos_CosmosItemRequestOptions_System_Threading_CancellationToken_" target="_blank">ReadItemAsStreamAsync</a> メソッドと <a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.cosmositems.createitemqueryasstream#Microsoft_Azure_Cosmos_CosmosItems_CreateItemQueryAsStream_Microsoft_Azure_Cosmos_CosmosSqlQueryDefinition_System_Object_System_Nullable_System_Int32__System_String_Microsoft_Azure_Cosmos_CosmosQueryRequestOptions_" target="_blank">CreateItemQueryAsStream</a> メソッドを使用して、シリアル化オーバーヘッドなしでストリームを取得して応答に渡すだけでできます。<br>

  <iframe height="600" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2Fb71354b81091cf189ddab641f33c1447.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <h3>動的への依存を削除しました</h3>


  <p>新しい SDK では引き続き動的を使用できますが、独自の動的型は挿入されなくなりました。 また&rsquo;、2.x.x SDK が持っていた二重逆シリアル化の発生も削除されました。</p>


  <h3>合理化された例外処理</h3>


  <p>非同期の await 呼び出し全体で例外をマーシャリングすると、コストが高くなります。 新しい SDK は、開発者が期待する型指定されたプログラミング モデルの例外を引き続きスローします。 ただし、Stream プログラミング モデルの場合は、サーバーから返される応答に <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.cosmos.cosmosresponsemessage" target="_blank">対して CosmosResponseMessage.StatusCode</a> が提供されます。 SDK は、応答が返されなきエラーのみをスローし、パフォーマンスを重要なアプリケーションが例外の使用を細かく制御できます。</p>


  <h2>オープン ソース</h2>


  <p>Azure Cosmos DB .NET SDK はオープン ソースです。 問題&rsquo;をログに記録し、フィードバックを追跡し、<a href="https://aka.ms/CosmosDotnetSDKV3" target="_blank">GitHub。</a></p>


  <h2>プレビュー機能に関する FAQ</h2>


  <p>このプレビュー リリースでは、まだサポートされていない機能がいくつかあります。 これには次のようなものがあります。</p>


  <ul>
      <li>LINQ のサポート</li>
      <li>ユーザー定義関数 (UDF) とトリガー</li>
      <li>ユーザーとアクセス許可</li>
      <li>Change Feed</li>
  </ul>


  <p>これらの将来のサポートは、今後のリリースで予定されています。</p>


  <h2>はじめに</h2>


  <p>新しい SDK の使用を開始するには、新しい sdk パッケージ<a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos/" target="_blank">NuGetプロジェクト</a>に追加します。 <a href="https://aka.ms/CosmosDotnetSDKV3GetStarted" target="_blank">.NET と .NET</a> Core の新しい<a href="https://aka.ms/CosmosDotnetCoreSDKV3GetStarted" target="_blank">チュートリアルに従います</a>。 お客様&rsquo;からのフィードバックをお聞かせください。 電子<a>askcosmosdb@microsoft.com</a>メールまたはログに関する<a href="https://aka.ms/CosmosDotnetSDKV3" target="_blank">問題は、GitHubです</a>。</p>


  <p>Twitter でフォローして、最新の Azure <a href="https://twitter.com/search?q=%23cosmosdb" target="_blank">#CosmosDB</a> のニュースと機能を最新の情報にしてください <a href="https://twitter.com/azurecosmosdb" target="_blank">@AzureCosmosDB</a>。 Azure Cosmos DB を使用して何を構築するのかを確認Cosmosしています。</p>
