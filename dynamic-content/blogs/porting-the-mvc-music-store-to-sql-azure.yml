### YamlMime:Yaml
ms.openlocfilehash: c5ae387e459a70b6c59941f1db0cf25678d5f495
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909577"
Slug: porting-the-mvc-music-store-to-sql-azure
Title: MVC ミュージックストアを SQL Azure に移植する
Summary: '[この記事は SQL Azure チームによって提供されました。]mvc ミュージックストアは ASP.NET mvc 2 に基づいて構築された未処理のチュートリアルアプリケーションです。 これは、オンラインでアルバムを販売する軽量のサンプルストアです,...'
Content: '<p>[この記事は SQL Azure チームによって提供されました。]</p><p>mvc ミュージックストアは ASP.NET mvc 2 に基づいて構築された未処理のチュートリアルアプリケーションです。 これは、オンラインでアルバムを販売する軽量サンプルストアで、Entity Framework 4 による MVC 2 の生産性向上機能とデータアクセスを示しています。 ASP.NET。 詳細につい <a href="https://mvcmusicstore.codeplex.com/">ては、CodePlex の</a>「」を参照してください。 練習として、SQL Server から SQL Azure に移植し、SQL Azure と Windows Azure で実行されている既存のアプリケーションを簡単に取得する方法を説明します。</p>  <p>データベースの移動プロセスは非常に簡単です。データベース、スキーマ、およびデータを作成し、接続文字列を変更して SQL Azure を指すようにする必要があります。 アプリケーションを Windows azure に移動するには Windows azure クラウドプロジェクトを作成し、MVC ミュージックストアプロジェクトをアタッチする必要があります。 MVC ミュージックストアプロジェクトに対するいくつかの調整が実行されています。</p>  <h2>SQL Azure でのスキーマとデータの取得</h2>  <p>CodePlex からダウンロードできる MVC ミュージックストアは SQL Server で実行されます。ダウンロードには、音楽ストアデータベースをすばやく作成するために、オンプレミスの SQL Server データベースにアタッチする SQL Server .mdf ファイルと .ldf ファイルが含まれています。 ただし、CodePlex プロジェクトには、データベーススキーマとデータを作成するための<a href="https://mvcmusicstore.codeplex.com/SourceControl/changeset/changes/9299484ae233">transact-sql SQL 作成スクリプト</a>も含まれています。1つは SQL Azure 用で、もう1つは SQL Server 用です。 SQL Azure データベース、スキーマ、および作成されたデータを取得する手順を次に示します。</p>  <ol>   <li><a href="https://mvcmusicstore.codeplex.com/">ここ</a>からリンクされている .zip ファイルを使用して、CODEPLEX から MVC Music ストアをダウンロードします。 このファイルは SQL、<a href="https://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=mvcmusicstore&amp;DownloadId=155653">こちら</a>からダウンロードしてハードドライブにコピーすることができます。 </li>    <li>SQL Azure ポータルにログインします。 </li>    <li>SQL Azure プロジェクトを作成するか、既存のプロジェクトを使用して MvcMusicStore という名前のデータベースを作成します。 </li>    <li>SQL Server Management Studio を使用して SQLAzure-MvcMusicStore-Create を開き、接続情報用に新しく作成したデータベースを選択します。 これまでに完了したことがない場合は、SQL Azure する SQL Server Management Studio に関するブログ記事をご覧ください。 サーバー名、管理者のログインとパスワードは SQL Azure ポータルにあります。 </li>    <li>SQL Azure 上の新しいデータベースに対して SQL Server Management Studio 内からスクリプトを実行します。これにより、スキーマが作成され、すべてのデータが必要になります。 </li> </ol>  <h2>クラウド Project の作成</h2>  <p>次の手順では、インターネットインフォメーションサーバーでローカルに実行するように設計された MVC ミュージックストアプロジェクトを、Windows Azure に対して有効にします。 汎用プロジェクトでこれを行う方法の詳細については、 <a href="https://blogs.msdn.com/b/jnak/archive/2010/02/08/migrating-an-existing-asp-net-app-to-run-on-windows-azure.aspx">こちら</a>を参照してください。 ただし、MVC ミュージックストアの手順を見てみましょう。</p>  <ol>   <li>まず、Visual Studio 2010 を使用して Windows Azure Cloud Server プロジェクトを作成します。 既存の MVC プロジェクトをクラウドプロジェクトに追加し、クラウドの側面を MVC プロジェクトに追加しようとする方がはるかに簡単です。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2210.clip_5F00_image002_5F00_thumb.jpg" width="628" height="355"></a></p>      <p>私はクラウドサービスの <b>MVCMusicStoreCloudService</b>に名前を付けています。</p>   </li>    <li>次の手順では、クラウドサービスにロールを追加しません。 MVC ミュージックストアは、後で web ロールとして追加します。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image003" border="0" alt="clip_image003" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8463.clip_5F00_image003_5F00_thumb.png" width="643" height="404"></a></p>   </li>    <li>ウィザードが終了したので、ソリューションエクスプローラーは次のようになります。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004" border="0" alt="clip_image004" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7802.clip_5F00_image004_5F00_thumb.png" width="278" height="211"></a> </p>   </li>    <li>先ほどダウンロードした .zip ファイルに戻って、次のように MVCMusicStoreCloudServer の兄弟として作成したディレクトリ構造に MvcMusicStore プロジェクトをコピーします。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image006" border="0" alt="clip_image006" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5342.clip_5F00_image006_5F00_thumb.jpg" width="867" height="290"></a></p>   </li>    <li>Visual Studio 2010 に戻って、ソリューションエクスプローラーのソリューションを右クリックし、MvcMusicStore プロジェクトをソリューションに追加します。 </li>    <li>MvcMusicStore プロジェクトを web ロールとして追加するには、MVCMusicStoreCloudService プロジェクトのロールを右クリックし、[<b>追加</b>]、[ <b>web ロール Project] の</b>順に選択します。       <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image007" border="0" alt="clip_image007" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3771.clip_5F00_image007_5F00_thumb.png" width="465" height="166"></a></p>   </li>    <li>MvcMusicStore を選択し、[追加] を押します。ソリューションエクスプローラーは次のようになります。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image008" border="0" alt="clip_image008" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5430.clip_5F00_image008_5F00_thumb.png" width="280" height="414"></a></p>   </li>    <li>MvcMusicStore がプロジェクトとして追加されたので、それを右クリックして [ <b>Project のアンロード</b>] を選択する必要があります。 これにより、.csproj ファイルを変更できるようになります。 </li>    <li>アンロード MvcMusicStore を右クリックし、[MvcMusicStore の編集] を選択します。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image009" border="0" alt="clip_image009" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8562.clip_5F00_image009_5F00_thumb.png" width="402" height="238"></a></p>   </li>    <li>.Csproj ファイルを変更して、Web ロールの種類を追加します。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image010" border="0" alt="clip_image010" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6825.clip_5F00_image010_5F00_thumb.png" width="812" height="291"></a></p>   </li>    <li><b>MvcMusicStore</b>を保存し、プロジェクトファイルをソリューションに再度読み込みます。 </li>    <li>次に、MvcMusicStore プロジェクトのローカルコピーを true としてマークします。 これを行うには、アセンブリを右クリックし、[プロパティ] を選択し、[ローカルコピー] 設定を変更します。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image011" border="0" alt="clip_image011" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4762.clip_5F00_image011_5F00_thumb.png" width="309" height="170"></a></p>   </li>    <li>最後に、MVCMusicStore プロジェクトでは、Microsoft. Windoweruntime アセンブリへの参照を追加します。      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image012" border="0" alt="clip_image012" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4452.clip_5F00_image012_5F00_thumb.png" width="486" height="412"></a></p>   </li> </ol>  <h2>接続文字列の変更</h2>  <p>SQL Azure にアクセスするには、MvcMusicStore プロジェクトの web.config の接続文字列を変更する必要があります。 ダウンロードされた web.config は App_Data のローカルデータベースを指します。 接続文字列を変更する最も簡単な方法は、SQL Azure ポータルに戻り、ポータルから接続文字列をコピーすることです。 </p>  <p>私は次のようになります。</p>  <p><i>Server = tcp: database. windows. net; Database = MvcMusicStore;ユーザー ID = XXXXXX@XXXXXX ;パスワード = myPassword;Trusted_Connection = False です。Encrypt = True;</i></p>  <p>ダウンロードした接続文字列は次のようになります。</p>  <p><i>metadata = res://*/Models.StoreDB.csdl | res://*/Models.StoreDB.ssdl | res://*/Models.StoreDB.msl; provider = system.string; provider connection string = &amp; Quot; Data Source = .\SQLEXPRESS;AttachDbFilename = |DataDirectory | \MvcMusicStore.mdf; Integrated Security = True;User Instance = True;MultipleActiveResultSets = True &amp; quot;</i></p>  <p>SQL Express ではなく、SQL Azure を指すように接続文字列を変更する必要があります。 太字で表示されているテキストに注意してください。</p>  <p><i>metadata = res://*/Models.StoreDB.csdl | res://*/Models.StoreDB.ssdl | res://*/Models.StoreDB.msl; provider = 接続文字列 = &amp; quot;<b>Server = tcp: database. windows. net; Database = MvcMusicStore;ユーザー ID = XXXXXX@XXXXXX ;パスワード = myPassword;Trusted_Connection = False です。Encrypt = True;</b> &amp;quot</i></p>  <p>これを保存すると、SQL Azure に接続するために必要なすべての変更が完了します。 これで、App_Data ディレクトリから削除して、MvcMusicStore を削除できます。 これにより、Windows Azure にパッケージ化してデプロイすることができなくなります。 ファイルが少なくなるほど、Azure Windows のアップロードにかかる時間が短縮されます。</p>  <h2>さらにいくつかの微調整</h2>  <p>MVC Music Store で使用される既定のメンバーシップとロールプロバイダーは、Windows Azure Platform で完全には使用できません。 ブログの投稿をわかりやすくするために、この機能を MVC ミュージックストアから削除します。 ただし、クラウド Storage を使用する SDK サンプルに含まれている実装を使用することをお勧めします。これらの設定方法の詳細については、こちらの<a href="https://blogs.msdn.com/jnak/archive/2008/11/10/asp-net-mvc-on-windows-azure-with-providers.aspx"><b>投稿</b></a>を参照してください &#160;。</p>  <p>これらの行を web.config から削除するには、次の手順を実行します。</p>  <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">connectionString</span><span class="kwrd">=&quot;data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true&quot;</span> <span class="attr">providerName</span><span class="kwrd">=&quot;System.Data.SqlClient&quot;</span> <span class="kwrd">/&gt;</span></pre>      <p>およびこれらの行:</p>    <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">authentication</span> <span class="attr">mode</span><span class="kwrd">=&quot;Forms&quot;</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">forms</span> <span class="attr">loginUrl</span><span class="kwrd">=&quot;~/Account/LogOn&quot;</span> <span class="attr">timeout</span><span class="kwrd">=&quot;2880&quot;</span> <span class="kwrd">/&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">authentication</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">membership</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlMembershipProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.SqlMembershipProvider&quot;</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">enablePasswordRetrieval</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">enablePasswordReset</span><span class="kwrd">=&quot;true&quot;</span> <span class="attr">requiresQuestionAndAnswer</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">requiresUniqueEmail</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">maxInvalidPasswordAttempts</span><span class="kwrd">=&quot;5&quot;</span> <span class="attr">minRequiredPasswordLength</span><span class="kwrd">=&quot;6&quot;</span> <span class="attr">minRequiredNonalphanumericCharacters</span><span class="kwrd">=&quot;0&quot;</span> <span class="attr">passwordAttemptWindow</span><span class="kwrd">=&quot;10&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">membership</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">profile</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlProfileProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Profile.SqlProfileProvider&quot;</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">profile</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">roleManager</span> <span class="attr">enabled</span><span class="kwrd">=&quot;true&quot;</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span>        <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlRoleProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.SqlRoleProvider&quot;</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetWindowsTokenRoleProvider&quot;</span>        <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">roleManager</span><span class="kwrd">&gt;</span></pre>      <p>メンバーシップとロールを実装していないため、プロジェクトファイルから AccountController とアカウントのビューを削除する必要もあります。 最後に、次のように、サイトの [管理者] リンクを削除する必要があります。</p>    <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">li</span><span class="kwrd">&gt;&lt;</span><span class="html">a</span> <span class="attr">href</span><span class="kwrd">=&quot;/StoreManager/&quot;</span><span class="kwrd">&gt;</span>Admin<span class="kwrd">&lt;/</span><span class="html">a</span><span class="kwrd">&gt;&lt;/</span><span class="html">li</span><span class="kwrd">&gt;</span></pre>      <p>ASPNETDB.MDF を削除することもできます。App_Data からの MDF データベースを削除することによって、プロジェクトファイルを再度 sliming します。</p>    <h2>Ready to Deploy</h2>    <p>これは、Azure および SQL Azure Windows に MVC ミュージックストアをデプロイするために必要なすべての変更です。 azure devfabric Windows でテストし、Windows azure にデプロイします。</p>    <h2>まとめ</h2>    <p>質問、懸念事項、コメントがありますか。 これらを下に投稿してください。</p>'
