### YamlMime:Yaml
ms.openlocfilehash: 8082afdeed1140761d500f025ffd64e3f7361c35
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139894146"
Slug: azps-1-0
Title: Azure PowerShell 1.0
Summary: 新しい 1.0 Azure PowerShellと WebPI で使用PowerShell ギャラリーお知らせします。 このリリースでは、Azure PowerShellの多くの変更と機能強化を歓迎Azure PowerShell。 これらの変更点と機能強化については、こちらを参照してください。
Content: "<p>新しい 1.0 Azure PowerShellと WebPI で使用PowerShell ギャラリーお<a href=\"https://www.powershellgallery.com/profiles/azure-sdk/\">知</a><a href=\"https://aka.ms/webpi-azps\">らせします</a>。 このリリースの Azure PowerShell、次の変更を歓迎します。</p>\n\n<ul>\n    <li>コマンドレットのサポートを向上Azure Resource Managerの Azure Service Management コマンドレットとサイド バイ サイドで使用Azure Automation。 コマンドレットResource Managerは&rsquo;、まだすぐに出荷される予定Azure Automation、間もなく出荷されます。 それまでは、ここで説明するように手動でインポート <a href=\"https://azure.microsoft.com/en-us/blog/using-azure-resource-manager-in-azure-automation-runbooks/\">できます</a>。 モジュールがAzure Automation出荷される場合の更新については、次の手順に従います。</li>\n    <li>Azure サービスの管理とResource Manager機能を分離して、コマンドレットターゲットの Azure の機能を明確に示します</li>\n    <li>セマンティック バージョン管理を適用し、特定のメジャー バージョンの Azure PowerShell に対して作成されたコマンドレットで、更新プログラムから更新プログラムへのAzure PowerShell</li>\n    <li>WebPI と Azure PowerShellを使用してPowerShell ギャラリー機能と欠陥の解決を迅速に配信できます</li>\n    <li>ドキュメントの改善Azure PowerShellドキュメントに引き続き重点的に取り組む</li>\n    <li>証明書認証のサポート Azure Resource Manager</li>\n    <li>仮想マシンによる仮想マシンのディスク暗号化Azure Key Vault</li>\n    <li>Azure Data Lake コマンドレットと Notification Hub コマンドレットの概要</li>\n    <li>その他のResource Manager、Web Apps多くの Azure サービスの機能強化</li>\n</ul>\n\n<h1>Azure PowerShell 1.0 および Azure PowerShell 0.9.x</h1>\n\n<p>Azure PowerShell 1.0 と Azure PowerShell 0.9.x はどちらも WebPI にインストールできます。 これは、0.9.x Azure PowerShellユーザーが既存のスクリプトを 1.0 にアップグレードすることを許可することを目的としています。 欠陥の修正と 0.9.x Azure PowerShellサポートに取り組していますが、新機能は追加されません。 新機能の開発では、Azure PowerShell 1.0 以上を対象とします。</p>\n\n<h1>WebPI Azure PowerShellを使用PowerShell ギャラリーの配信</h1>\n\n<p>インストールには、PowerShell ギャラリー <a href=\"https://aka.ms/webpi-azps\">WebPI</a> <a href=\"https://www.powershellgallery.com/profiles/azure-sdk/\">という 2 つの</a>オプションがあります。 WebPI は月次の更新プログラムを受け取ります。 毎月第 1 火曜日を対象にしています。 PowerShell ギャラリーは、継続的に更新プログラムを受け取ります。 PowerShell ギャラリーからのインストールを選んだ場合は、これが Azure PowerShell で最新および最良の点について情報を取得できる最初のチャネルになります。</p>\n\n<h1>WebPI Azure PowerShell 1.0 のインストール</h1>\n\n<p>WebPI Azure PowerShell 1.0 以上をインストールする方法は、0.9.x の場合と同じエクスペリエンスです (このインストール リンクを<a href=\"https://aka.ms/webpi-azps\">クリックしてください</a>)。 0.9.x Azure PowerShellインストールされている場合は、0.9.x をアンインストールするように求めるメッセージが表示されます。 Azure PowerShell からAzure PowerShellインストールした場合PowerShell ギャラリー環境で一貫性を確保するために、インストールの前にモジュールを削除するAzure PowerShellがあります。</p>\n\n<p>Azure PowerShell PowerShell ギャラリー を使用してインストールし、代わりに WebPI インストールを使用する場合は、WebPI からインストールする前に次のコマンドを実行してください。</p>\n\n<pre class=\"prettyprint\">\n# Uninstall the AzureRM component modules\nUninstall-AzureRM\n\n# Uninstall AzureRM module\nUninstall-Module AzureRM\n\n# Uninstall the Azure module\nUninstall-Module Azure\n\n# Or, you can nuke all Azure* modules\n# Uninstall-Module Azure* -Force</pre>\n<!-- <script src=\"https://gist.github.com/devigned/b810efb0347ebe70713c.js\"></script> -->\n\n<p><strong>注: </strong><em>WebPI を使用してインストールするときに発生する powerShell $env:PSModulePath に関する既知の問題があります。システムの更新や他のインストールが原因でコンピューターを再起動する必要がある場合は、$env:PSModulePath に Azure PowerShell がインストールされているパスが含まれる可能性があります。これは、コンピューターを再起動するか、Azure PowerShell:PSModulePath に$envすることで修正できます。</em></p>\n\n<p><strong>注: </strong><em>Azure モジュールにPowerShell ギャラリーした場合は、アンインストールするように求める求めが表示されます。これは、インストールしたモジュールと、その場所に関する混乱を防ぐためです。PowerShell ギャラリーは通常、%ProgramFiles%\\WindowsPowerShell\\Modules にインストールされます。これに対し、WebPI インストーラーは Azure モジュールを %ProgramFiles%\\Microsoft SDKs\\Azure\\PowerShell PowerShellGet\\. にインストールします。この場合、モジュールはアンインストールされ、ロックされた .&#39;dll と、モジュールの依存関係がアンインストール時に読み込まれると、その中に存在するフォルダーは残されます。PowerShell ギャラリー モジュールをアンインストールした後もインストール時にエラーが発生する場合は、%ProgramFiles%\\WindowsPowerShell\\Modules フォルダー内の Azure* フォルダーを削除します。</em></p>\n\n<h1>1.0 Azure PowerShell 1.0 を使用してインストールPowerShell ギャラリー</h1>\n\n<p>Azure PowerShell 1.0 以上を PowerShell ギャラリー からインストールする方法は、Azure PowerShell 1.0 プレビューの場合と同じです。</p>\n\n<pre class=\"prettyprint\">\n# Install the Azure Resource Manager modules from PowerShell Gallery\nInstall-Module AzureRM\nInstall-AzureRM\n\n# Install the Azure Service Management module from PowerShell Gallery\nInstall-Module Azure\n\n# Import AzureRM modules for the given version manifest in the AzureRM module\nImport-AzureRM\n\n# Import Azure Service Management module\nImport-Module Azure</pre>\n<!--<script src=\"https://gist.github.com/devigned/cb564edea9f2c53d814e.js\"></script>-->\n\n<h1>上記のスクリプトでは何が起こっていますか?</h1>\n\n<p>上記のスクリプトは非常に無実に見えますが、ここでは多くのことを行っています。 このモジュールの機能は、この記事で前に示したセマンティック バージョン管理機能の中心です。 <strong>Install-Module AzureRM は、AzureRM</strong> モジュールのブートストラップ モジュールをインストールします。 このモジュールには、安全で一貫性のある方法で AzureRM モジュールを更新、アンインストール、インポートするためのコマンドレットが含まれています。</p>\n\n<p>AzureRM モジュールには、モジュールの一覧と、AzureRM のメジャー バージョンに対して重要な変更が導入されるのを保証するために必要なバージョン範囲 (最小値と最大値) が含まれています。 セマンティック バージョン管理の詳細については、「 」を参照してください <a href=\"https://semver.org\">https://semver.org</a>。つまり、特定のバージョンの AzureRM を使用してコマンドレットを作成し、ブートストラップを介してインストールされたモジュールのすべてが、壊れる変更が生じない点を知る必要があります。</p>\n\n<p>2 番目の <strong>コマンド Install-AzureRM は</strong> 、ブートストラップ モジュールで宣言されたモジュールをすべてインストールします。</p>\n\n<p>3 番目の <strong>コマンドである Install-Module Azure は、</strong> Azure モジュールをインストールします。 これは、Azure PowerShell 0.9.x のサービス管理モジュールとなります。 大きな変更はなく、以前のバージョンの Azure モジュールと互換性があります。</p>\n\n<p>4 番目の <strong>コマンド Import-AzureRM</strong> は、AzureRM モジュール内のすべてのモジュールをインポートし、&#39;の一覧を表示します。 これにより、読み込Azure PowerShellモジュールが、AzureRM モジュールに必要なバージョン範囲内に確実に含まれます。</p>\n\n<p>5 番目の <strong>コマンドである Import-Module Azure は、</strong> Azure サービス管理モジュールをインポートします。 Azure モジュールと AzureRM モジュールは PowerShell セッションに読み込まれ、両方を一緒に使用できます。</p>\n\n<p>AzureRM モジュールで行われた作業の大部分は、指定された最小バージョン範囲と最大バージョン範囲でモジュールの依存関係を導入できる方法で行いました。 これは、今後、より堅牢な PowerShellGet モジュールの依存関係リゾルバーに置き換えられる予定です。</p>\n\n<h1>Azure PowerShell を使ってみる</h1>\n\n<p>アプリケーションの使用Azure PowerShell、これまでと同じシンプルな方法です。 必要な操作は、<strong>Login-AzureRmAccount</strong> を使用してログインし、次の手順でスクリプトをAzure PowerShell。</p>\n\n<pre class=\"prettyprint\">\n# To login to Azure Resource Manager\nLogin-AzureRmAccount\n\n# You can also use a specific Tenant if you would like a faster login experience\n# Login-AzureRmAccount -TenantId xxxx\n\n# To view all subscriptions for your account\nGet-AzureRmSubscription\n\n# To select a default subscription for your current session\nGet-AzureRmSubscription &ndash;SubscriptionName &ldquo;your sub&rdquo; | Select-AzureRmSubscription\n\n# View your current Azure PowerShell session context\n# This session state is only applicable to the current session and will not affect other sessions\nGet-AzureRmContext\n\n# To select the default storage context for your current session\nSet-AzureRmCurrentStorageAccount &ndash;ResourceGroupName &ldquo;your resource group&rdquo; &ndash;StorageAccountName &ldquo;your storage account name&rdquo;\n\n# View your current Azure PowerShell session context\n# Note: the CurrentStoargeAccount is now set in your session context\nGet-AzureRmContext\n\n# To import the Azure.Storage data plane module (blob, queue, table)\nImport-Module Azure.Storage\n\n# To list all of the blobs in all of your containers in all of your accounts\nGet-AzureRmStorageAccount | Get-AzureStorageContainer | Get-AzureStorageBlob</pre>\n<!--<script src=\"https://gist.github.com/devigned/a41a64a477c0b3c77f7b.js\"></script>-->\n\n<p>上記では、 <strong>Get-AzureRmContext コマンドレットが表示される可能性</strong> があります。 これは、0.9.x Azure PowerShell 0.9.x のスクリプト作成方法からの変更Azure PowerShell。 プロファイルを使用するのではなく、Azure PowerShell 1.0 では、ローカル状態の永続化のために現在のセッション内で Context を使用します。 コンテキストは、現在の Azure 環境 (パブリック クラウドまたは他)、アカウント、テナント、サブスクリプション、ストレージ アカウントを追跡します。 他の既定値に対してコマンドレットを実行する場合は、 <strong>Set-AzureRmContext を使用します</strong>。 このコマンドレットの詳細については、 <strong>Set-AzureRmContext のヘルプを実行します</strong>。</p>\n\n<h1>証明書を使用したAzure Resource Manager</h1>\n\n<p>証明書認証は、証明書認証で最も要求されている機能の 1 つAzure PowerShell。 &#39;、テナント ID、クライアント ID、シークレットを使用するのではなく、Azure PowerShell ユーザーが証明書を使用して認証を行うサービス プリンシパルを構成する機能が追加されました。 この機能により、お客様は、サービス プリンシパル認証が以前に使用できなかったAzure Automationなどの Azure 機能をより有効に活用できます。 次に示すのは、証明書認証の使用を開始するAzure PowerShellスクリプトです。Azure Resource Manager。</p>\n\n<pre class=\"prettyprint\">\n# Login to Azure PowerShell\nLogin-AzureRmAccount\n\n# Create the self signed cert\n$currentDate = Get-Date\n$endDate = $currentDate.AddYears(1)\n$notAfter = $endDate.AddYears(1)\n$pwd = &quot;P@ssW0rd1&quot;\n$thumb = (New-SelfSignedCertificate -CertStoreLocation cert:\\localmachine\\my -DnsName com.foo.bar -KeyExportPolicy Exportable -Provider &quot;Microsoft Enhanced RSA and AES Cryptographic Provider&quot; -NotAfter $notAfter).Thumbprint\n$pwd = ConvertTo-SecureString -String $pwd -Force -AsPlainText\nExport-PfxCertificate -cert &quot;cert:\\localmachine\\my\\$thumb&quot; -FilePath c:\\certificates\\examplecert.pfx -Password $pwd\n\n# Load the certificate\n$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(&quot;C:\\certificates\\examplecert.pfx&quot;, $pwd)\n$keyValue = [System.Convert]::ToBase64String($cert.GetRawCertData())\n$keyId = [guid]::NewGuid()\nImport-Module AzureRM.Resources\n$keyCredential = New-Object  Microsoft.Azure.Commands.Resources.Models.ActiveDirectory.PSADKeyCredential\n$keyCredential.StartDate = $currentDate\n$keyCredential.EndDate= $endDate\n$keyCredential.KeyId = $keyId\n$keyCredential.Type = &quot;AsymmetricX509Cert&quot;\n$keyCredential.Usage = &quot;Verify&quot;\n$keyCredential.Value = $keyValue\n\n# Create the Azure Active Directory Application\n$azureAdApplication = New-AzureRmADApplication -DisplayName &quot;&lt;Your Application Display Name&gt;&quot; -HomePage &quot;&lt;https://YourApplicationHomePage&gt;&quot; -IdentifierUris &quot;&lt;https://YouApplicationUri&gt;&quot; -KeyCredentials $keyCredential  \n\n# Create the Service Principal and connect it to the Application\nNew-AzureRmADServicePrincipal -ApplicationId $azureAdApplication.ApplicationId\n\n# Give the Service Principal Reader access to the current subscription\nNew-AzureRmRoleAssignment -RoleDefinitionName Reader -ServicePrincipalName $azureAdApplication.ApplicationId\n\n# Now you can login to Azure PowerShell with your Service Principal and Certificate\nLogin-AzureRmAccount -TenantId (Get-AzureRmContext).Tenant.TenantId -ServicePrincipal -Certificate Thumbprint $thumb -ApplicationId $azureAdApplication.ApplicationId</pre>\n<!--<script src=\"https://gist.github.com/devigned/dae74a7ca54000f7b714.js\"></script>-->\n\n<h1>Web Appsコマンドレットの機能強化</h1>\n\n<p>Azure Web Appsモジュールは、1.0 リリースでも更新されています。 コミュニティからのフィードバックに基づいて、リソース グループ間でのより優れたパイプ処理と一覧の作成を可能にすることで、Web Apps コマンドレットのWeb Appsを効率化しました。 次のスクリプトは、単語よりも優れた方法を示しています。</p>\n\n<pre class=\"prettyprint\">\n# Login if you haven&#39;t already\nLogin-AzureRmAccount\n\n# Create a new resource group\nNew-AzureRmResourceGroup -Location westus -Name webapptestrg\n\n# Create a new WebApp\nNew-AzureRmWebApp -ResourceGroupName webapptestrg -Location westus -Name djtestwebapp\n\n# List all the WebApps for all of your resource groups\n# Note: better piping support\nGet-AzureRmResourceGroup | Get-AzureRmWebApp\n\n# List all WebApps for all of your resource groups\n# Note: this is the same thing as the previous command, but less key strokes\nGet-AzureRmWebApp</pre>\n<!-- <script src=\"https://gist.github.com/devigned/f17d3929ededa6edc5a9.js\"></script> -->\n\n<h1>Azure Resource Manager機能強化</h1>\n\n<p>Azure PowerShell 1.0 リリースの一環として、管理コマンドレットにいくつかの機能強化を行いました。 これらの機能強化は、1.0 の一部であるコマンドレット名の変更に加えて追加されています。 変更には次のものが含まれます。 New-AzureRMResourceGroup新しいリソース グループを作成する機能が提供され、New-AzureRmResourceGroupDeploymentテンプレートをデプロイする機能が提供されます。 パイプを使用すると、2 つを一緒に使用できます。 これにより、コマンドレットを理解および使用しやすくなります。 また、監査ログには、さまざまなスコープでログを取得するコマンドレットが多数用意されています。Get-AzureResourceProviderLog、Get-AzureResourceGroupLog、Get-AzureSubscriptionIdLog、Get-AzureResourceLog など。</p>\n\n<p>ログを取得するには、多くの場合、ログ コマンドレットの組み合わせを実行する必要があります。 このエクスペリエンスは最適ではありません。 この機能を 1 つのコマンドレットに統合しました。このコマンドレットは、パラメーターを使用して異なるスコープで呼び出すことができます。 次に、適切なパラメーターGet-AzureRmLogを呼び出してスコープを指定できます。 詳細については、「管理 <a href=\"https://aka.ms/azps-1-0-rm-changes\">PowerShell コマンドレットに対するAzure Resource Manager」を参照してください</a>。</p>\n\n<h1>1.0 Azure PowerShellの準備はできましたか?</h1>\n\n<p>これらの更新プログラムにわくわくして、開始したい場合は、 <a href=\"https://aka.ms/webpi-azps\">WebPI Azure PowerShell 1.0 を</a>インストールします。</p>"
