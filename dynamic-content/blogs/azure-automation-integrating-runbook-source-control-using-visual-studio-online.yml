### YamlMime:Yaml
ms.openlocfilehash: ebf17fc643b7359a669781238668ec17f0e8d490
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139891178"
Slug: azure-automation-integrating-runbook-source-control-using-visual-studio-online
Title: 'Azure Automation: Visual Studio Online を使用した Runbook ソース管理の統合'
Summary: 概要Azure Automation Azure リソースとサードパーティのシステムを管理する場合に最適ですが、Azure Automation のリソース (Runbook、モジュール、資産など) 自体を管理する場合は?...
Content: >-
  <h2>はじめに</h2>

  Azure Automation Azure リソースとサードパーティシステムの管理には最適ですが、Azure Automation のリソース (Runbook、モジュール、資産など) 自体を管理する場合は、どうしますか?もちろん、Azure Automation ポータルと Azure Automation PowerShell コマンドレットを使用すると、基本的な管理タスクを実行できますが、ソース管理システムを使用して Runbook、モジュール、資産を格納し、変更の追跡、以前のバージョンからの監査、復元、開発、ステージング間でのバージョンの移動を可能にする場合は、どうなるかについて説明します。 および実稼働ブランチで変更制御を可能にしますか?


  少し Runbook マジックを使用すると、ソース管理システムに基づいて Automation リソースをそれ自体に継続的に統合できるよう Azure Automation を設定できます。 このブログ記事では、Azure Automation を使用して Visual Studio Online (VSO) Git リポジトリに対して繰り返しクエリを実行し、このソース管理リポジトリから Automation アカウントに Runbook (ps1 ファイル) を自動的に発行する方法について具体的に説明します。 このブログでは Runbook についてのみ説明しますが、もちろん、同様に Azure Automation を使用して、ソース管理に格納されているモジュールと資産を Azure Automation に継続的に統合することもできます。


  &nbsp;

  <h2>The Sync-VsoGitRunbook Runbook</h2>

  このブログ「 <strong>Sync-VsoGitRunbook</strong>」に伴う Runbook は、このシナリオのすべてのタスクを実行します。これで、この Runbook を使用できます。コピーを今すぐつかむ:


  <a href="https://gallery.technet.microsoft.com/Sync-runbooks-from-Visual-b1186286" target="_blank"><img style="border-width: 0px;" title="Runbook のダウンロード" alt="Download runbook" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/BCDLButton.png" width="108" height="29" border="0" /></a>


  次の図は、ソース管理に格納されている Runbook を新しいアカウントに継続的に統合Azure Automationしています。 統合の大きな部分は、通常のように VSO Git リポジトリを管理するだけで Runbook を管理できる部分です。

  <ul>
   <li>Runbook を更新する場合は、それらの更新をコミットし、VSO Git リポジトリにプッシュします。</li>
   <li>更新を元に戻す場合は、コミットを元に戻すだけで済む。</li>
   <li>ステージング ブランチの更新プログラムを実稼働環境に昇格する場合は、ステージングを実稼働環境にマージします。</li>
  </ul>

  <strong>Sync-VsoGitRunbook Runbook</strong> は、同期する VSO git リポジトリと同期するアカウントAzure Automationパラメーターを受け取ります。 この Runbook を実行している Automation アカウントに同期するか、別のアカウントに同期することができます。 内部的には、Runbook は指定された VSO Git リポジトリの内容を取得し、Runbook を再帰的にインポートし(親 Runbook の前の子 Runbook)、指定した Azure Automation アカウントに発行します。


  Runbook を手動で開始して、VSO git リポジトリと Azure Automation アカウントのオンデマンド同期を実行することも、スケジュール資産を使用してスケジュールに基く同期を自動化することもできます。 異なる Git ブランチと Azure Automation アカウントに対する実行ごとに、スケジュールに基いてこの Runbook の複数の実行を設定することで、QA から実稼働への変更制御を実現できます。 たとえば、git ステージング ブランチとステージングオートメーション アカウントのパラメーター値を持つスケジュールされた Runbook と、git 運用ブランチと運用オートメーション アカウントのパラメーター値を持つ 1 つのスケジュールされた Runbook を使用できます。 これにより、ステージング Automation アカウントがステージング Git ブランチと同期され、運用オートメーション アカウントが運用 Git ブランチと同期されます。 Git ステージング ブランチから git 運用ブランチにマージすると、更新された Runbook が運用 Automation アカウントに自動的に移動されます。


  &nbsp;


  <img style="border: 0px;" title="Runbook シナリオのフローチャート" alt="Runbook scenario flow-chart" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_1.png" width="770" height="552" border="0" />


  &nbsp;

  <h2>Visual Studio Online の設定</h2>

  開始するには、オンライン アカウントに Visual Studioし、プロジェクトとリポジトリを構成する必要があります。ここから開始 <a href="https://go.microsoft.com/fwlink/?LinkId=307137&amp;clcid=0x409" target="_blank">できます</a>。


  Git プロジェクトとリポジトリを構成するには、このブログに従 <a href="https://blogs.msdn.com/b/visualstudioalm/archive/2013/01/30/getting-started-with-git-in-visual-studio-and-team-foundation-service.aspx" target="_blank">います</a>。


  &nbsp;

  <h2>サンプル プロジェクトの作成</h2>

  この時点で、Automation Runbook 用のVisual Studio作成する準備が整いました。この例では、単純な空の値を使用Project。


  &nbsp;


  <img style="border-width: 0px;" title="空のプロジェクト" alt="Blank project" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_2.png" width="710" height="77" border="0" />


  &nbsp;

  <h2>Projectの構成</h2>

  プロジェクトの構造については、Runbook を含むフォルダーの階層があり、親 Runbook は最高レベルのディレクトリ、サブディレクトリ内の子、サブディレクトリのサブディレクトリには子の子が含まれている必要があります。 Runbook は、ディレクトリ ツリーを再帰的にウォークし、最下位のサブディレクトリ (ほとんどの子 Runbook) に Runbook を最初に発行して上に移動します。そのため、子 Runbook は、子 Runbook を呼び出す Runbook (親 Runbook) の前に常にインポートされます。この処理が必要なのは、Azure Automationサービスですべての子 Runbook を最初に発行する必要があるためです。


  次の例を示します。


  <img style="border: 0px;" title="親から子へのディレクトリ構造" alt="Parent to child directory structure" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_3.png" width="536" height="460" border="0" />


  &nbsp;


  オンライン プロジェクト ビューで同様Visual Studio構造を持つ:


  &nbsp;


  <img style="border: 0px;" title="VSO のディレクトリ構造" alt="Directory structure in VSO" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_4.png" width="550" height="436" border="0" />


  &nbsp;

  <h2>VSO 代替認証資格情報の設定</h2>

  <strong>Sync-VsoGitRunbook Runbook</strong> を機能するには、Visual Studio Online ダッシュボード (右) で使用できる "マイ プロファイル" から構成された VSO 代替認証資格情報が使用されます。


  [ユーザー プロファイル] ダイアログで、[資格情報] を選択して、代替の認証資格情報を定義します。このユーザー名とパスワードは、 <strong>Sync-VsoGitRunbook Runbook への入力として</strong> 使用されます。


  &nbsp;


  <img style="border-width: 0px;" title="[代替資格情報ユーザー プロファイル] ダイアログ" alt="Alternate Credential User Profile dialog" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_5.png" width="764" height="678" border="0" />


  &nbsp;


  &nbsp;

  <h2>Runbook のSync-VsoGitRunbook開始</h2>

  <ol>
   <li>まだ行っていない場合は、Azure Automation Runbook を使用して Azure サブスクリプションを管理Connect-Azureします。詳細 <a href="https://blogs.technet.com/b/keithmayer/archive/2014/04/06/step-by-step-getting-started-with-windows-azure-automation.aspx" target="_blank">については、このブログ投稿</a> (IIS をお持ちの場合) またはこのブログ <a href="https://blogs.technet.com/b/orchestrator/archive/2014/04/10/managing-azure-services-with-the-microsoft-azure-automation-preview-service.aspx" target="_blank">投稿 (IIS</a> をお持ちでない場合) を参照してください。</li>
   <li>スクリプト センターSync-VsoGitRunbook Runbook をダウンロードします。  <a href="https://gallery.technet.microsoft.com/Sync-runbooks-from-Visual-b1186286" target="_blank"><img style="border-width: 0px;" title="Runbook のダウンロード" alt="Download runbook" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/BCDLButton.png" width="108" height="29" border="0" /></a></li>
   <li>Runbook をインポートして発行Sync-VsoGitRunbookする</li>
   <li>次の資産を作成Azure Automationします
  <ul>
   <li>資格情報 – この資産には、代替認証資格情報のユーザー名とパスワードが含まれている</li>
   <li>接続 – Automation アカウントに発行された が存在するサブスクリプション ID を持つ Azure 接続の種類を作成します</li>
  </ul>

  </li>
   <li>次のパラメーターを使用して、Sync-VsoGitRunbook Runbook の毎日のスケジュールを追加します
  <ul>
   <li>VSOCredentialName - VSO プロファイル ダイアログから構成された VSO 代替認証資格情報名とパスワードを含む資格情報資産の名前。</li>
   <li>VSOAccount – VSO Online のアカウント名 (例: <a href="https://accountname.visualstudio.com)">https://accountname.visualstudio.com)</a></li>
   <li>VSOProject – リポジトリを含む VSO プロジェクトの名前</li>
   <li>VSORepository – Runbook プロジェクトを含むリポジトリの名前</li>
   <li>VSORunbookFolderPath – runbook がProjectルートへのパスを指定します。次の例を使用して、/Project1/Project1 を使用します。</li>
  </ul>

  </li>

  </ol>

  <blockquote>              <img style="border-width: 0px;" title="Runbook フォルダーのパス" alt="Runbook folder path" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_6.png" width="693" height="309" border="0" /></blockquote>

  <ol>

  <ul>
   <li>VSOBranch – 省略可能。既定値は "master" です。 Runbook の詳細のクエリに使用されるブランチ名</li>
   <li>AutomationAccount – Runbook の同期先の Automation アカウントの名前</li>
   <li>AzureConnection – Automation サービスで作成された Azure 接続設定の名前。この接続設定には、サブスクリプション ID と、管理証明書を保持する証明書設定の名前が含されます。</li>
  </ul>

  </ol>

  &nbsp;

  <h2>まとめ</h2>

  次Sync-VsoGitRunbook Runbook は、Runbook のソース管理管理と継続的インテグレーションを活用する方法を示しています。このブログ記事で示されているシナリオは、他のオンライン ソース管理システム (例: GitHub) を使用して実行することもできます。ScriptCenter には、Azure Automationリポジトリのコンテンツのダウンロードを開始するために、既に GitHub Runbook <a href="https://gallery.technet.microsoft.com/scriptcenter/a-GitHub-Repository-265c0b49" target="_blank">Azure Automation</a>。 その Runbook を使用すると、このブログ記事で示されているのと同様のソリューションを構築できますが、ソース管理システムGitHubをターゲットにできます。 ご覧のように、Azure Automationは真に強力な自動化および統合サービスです。


  まだAzure Automationユーザーではありませんか? <a href="https://account.windowsazure.com/PreviewFeatures?fid=automation" target="_blank">プレビューにサインアップし</a> 、次のガイド <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-create-runbook-from-samples/" target="_blank">はじめにしてください</a>。
