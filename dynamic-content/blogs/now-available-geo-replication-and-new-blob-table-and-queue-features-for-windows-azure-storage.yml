### YamlMime:Yaml
ms.openlocfilehash: 2881572af1bce78702ace7a0adde105b2cad222a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892816"
Slug: now-available-geo-replication-and-new-blob-table-and-queue-features-for-windows-azure-storage
Title: '利用可能: Geo-Replication BLOB、テーブル、およびキューの新しい機能をWindows Azure Storage'
Summary: BUILD Day 2 の講演では、Windows Azure&nbsp; BLOB、テーブル、キューの機能向上を可能にするための geo レプリケーションと新しいバージョンの REST API のリリースを発表しました。...
Content: '<p class="Answer">BUILD <a target="_blank" href="https://www.buildwindows.com/">Day 2</a> の講演では、Windows Azure&nbsp; BLOB、テーブル、キューの機能向上を可能にするための geo レプリケーションと新しいバージョンの REST API のリリースを発表しました。現時点では、2 つのデータ センター間Windows Azure BLOB データと Table データを geo レプリケートしています。 &nbsp;</p>  <h3>geo レプリケーション</h3>  <p class="Answer">お客様は、Azure と他のクラウド プラットフォームにおけるディザスター リカバリー機能の重要性を絶えず強調しています。&nbsp;Geo&rsquo; レプリケーションに関する水曜日のお知らせは、この領域で役立ち、お客様のコストを増やさずに行います。&nbsp;geo レプリケーションでは、Windows Azure BLOB と Table のデータが、数百マイル離れている場所と同じリージョン内の 2 つの場所 (&nbsp;&nbsp;つまり、米国中北部と米国中南部の間、北ヨーロッパと西ヨーロッパの間、および東部と南部の間の 2 つの場所東アジア 間でレプリケートされます。異なるリージョン間でデータをレプリケートする必要があります。&nbsp;これで、BLOB とテーブルのすべてのストレージ アカウントWindows Azure Storage geo レプリケーションが有効になります。&nbsp;&nbsp;更新プログラムは非同期的に geo レプリケートされるので、既存のパフォーマンスに変更はありません。 &nbsp;</p>  <h3>新しい BLOB、テーブル、およびキューの機能</h3>  <p class="Answer">改善REST API、次の新しいバージョン (&ldquo;2011-08-18&rdquo;) がリリースされました。</p>  <ul>  <li>Table Upsert &ndash; を使用すると、Windows Azure Tables に 1 つの要求を送信して、エンティティを挿入するか (存在しない場合)、エンティティを更新/置換できます (&rsquo;存在する場合)。</li>  <li>テーブル プロジェクション (選択) を &ndash; 使用すると、クライアントはエンティティ プロパティのサブセットを&rsquo;取得できます。&nbsp; これにより、エンティティの取得に使用されるシリアル化/逆シリアル化のコストと帯域幅が削減され、パフォーマンスが向上します。</li>  <li>BLOB HTTP ヘッダーのサポートが強化され &ndash; 、ストリーミング アプリケーションとブラウザーのダウンロードのエクスペリエンスが向上します。</li>  <li>Queue UpdateMessage &ndash; を使用すると、クライアントはメッセージのリースを取得し、メッセージの処理中にリースを更新できるだけでなく、メッセージの内容を更新して処理の進行状況を追跡できます。</li>  <li>表示タイムアウトを使用した Queue InsertMessage - 新しく挿入されたメッセージを、タイムアウトが切れるまでキューに表示されない状態にできます</li>  </ul>  <h3>Table Upsert</h3>  <p class="Answer">Table Upsert を使用すると、クライアントはエンティティを更新または挿入するために 1 つの要求を送信できます。エンティティが既に存在するかどうかに基づいて適切なアクションが実行されます。&nbsp; これにより、アプリケーションがエンティティが&rsquo;存在しない場合は挿入するか、存在する場合は更新するシナリオで呼び出しが保存されます。&nbsp; この機能は、InsertOrReplace Entity API と InsertOrMerge Entity API を介して公開されます。&nbsp;</p>  <ul>  <li>InsertOrReplace エンティティが &ndash; 存在しない場合はエンティティを挿入し、存在する場合は既存のエンティティを置き換える。</li>  <li>InsertOrMerge エンティティが &ndash; 存在しない場合はエンティティを挿入し、存在する場合は既存のエンティティとマージします。</li>  </ul>  <h3>テーブル プロジェクション (選択)</h3>  <p class="Answer">テーブル プロジェクションを使用すると、1 つ以上のエンティティのプロパティのサブセットを取得し、それらのプロパティ/列のみを Azure テーブルから返します。&nbsp;プロジェクションは、Azure Table からデータを取得する際の待機時間を短縮Windows向上します。 &nbsp;また、関心のあるプロパティのみを返して帯域幅を節約できます。</p>  <h3>BLOB のダウンロード エクスペリエンスの向上</h3>  <p class="Answer">ストリーミング アプリケーションのエクスペリエンスを向上し、ダウンロードをWindowsするために、Azure BLOB に HTTP ヘッダーのサポートが追加されました。 &nbsp;このサポートがない場合、ダウンロードが中断された場合、一部のブラウザーでは最初から BLOB の読み取りを再開する必要があります。&nbsp;&nbsp;</p>  <h3>Queue UpdateMessage</h3>  <p class="Answer">現在の Queue API では、ワーカーがキューからメッセージを取得したら、タイムアウトが切れる前にメッセージの処理を完了できるよう、十分な長い可視性タイムアウトを指定する必要があります。&nbsp; 多くのシナリオでは、メッセージの処理にさらに時間が必要な場合に、ワーカーが可視性タイムアウトを延長する必要がある場合があります。&nbsp; この新しい UpdateMessage API により、このようなシナリオが可能になります。&nbsp; これにより、ワーカーはメッセージのリースとして表示タイムアウトを使用して、処理が完了するまで定期的にリースを拡張し、メッセージの所有権を維持することができます。&nbsp;</p>  <p class="Answer">UpdateMessage API では、メッセージの内容の更新もサポートされています。&nbsp; これにより、ワーカーはキュー内のメッセージを更新して進行状況情報を記録できます。&nbsp;&nbsp; その後、ワーカーがクラッシュした場合、これにより、次のワーカーは、前のワーカーが離れた場所からメッセージの処理を続行できます。&nbsp;</p>  <p class="Answer">この機能により、worker ロールは以前よりも実行時間の長いタスクを実行できます。&nbsp; また、リースを非常に短い間隔 (1 分など) に設定して、worker ロールが失敗した場合、別の worker ロールが取得するために 1 分以内にメッセージが表示されるので、フェールオーバー時間を短縮できます。</p>  <h3>キュー InsertMessage と可視性タイムアウト</h3>  <p class="Answer">メッセージの初期可視性タイムアウト値を指定するために、InsertMessage API にサポートが追加されました。&nbsp; これにより、新しく挿入されたメッセージは、タイムアウトが切れるまでキューに表示されません。 これにより、後で表示されるメッセージを追加することで、将来の作業をスケジュールできます。</p>  <p>詳細については、BUILD トークまたは次のいずれかのブログ記事を参照してください。</p>  <ul>  <li><a target="_blank" href="https://channel9.msdn.com/Events/BUILD/BUILD2011/SAC-961T">Windows Azure Storage BUILD トーク</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/09/15/introducing-geo-replication-for-windows-azure-storage.aspx">geo レプリケーション</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/09/15/windows-azure-tables-introducing-upsert-and-query-projection.aspx">新しいテーブル機能</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/09/15/windows-azure-queues-improved-leases-progress-tracking-and-scheduling-of-future-work.aspx">新しいキュー機能</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/09/15/windows-azure-blobs-improved-http-headers-for-resume-on-download-and-a-change-in-if-match-conditions.aspx">新しい BLOB 機能</a></li>  </ul>  <p>BUILD で行われた Windows Azure 関連のお知らせの詳細については、ブログ記事「JUST ANNOUNCED @ BUILD: New Windows Azure Toolkit for Windows 8、Windows Azure SDK 1.5、Geo-Replication for Windows Azure Storage、More&nbsp;」を参照してください。 BUILD の詳細や、講演を見る場合は、「BUILD Virtual Press Room」を参照してください。&nbsp;ビルドに<a target="_blank" href="https://twitter.com/windowsazure">@WindowsAzure</a>関する<a target="_blank" href="https://twitter.com/#%21/STBNewsBytes">@STBNewsBytes</a>最新のニュースとリアルタイムの話については、 と に従います。<i>&nbsp;</i></p>  <p><i>Brad Calder は、Windows Azure Storage のジェネラル マネージャーです。</i></p>'
