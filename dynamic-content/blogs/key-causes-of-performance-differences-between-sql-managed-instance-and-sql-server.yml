### YamlMime:Yaml
ms.openlocfilehash: d96f36e613c15137200e2b6942285e8091b0b8e8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139895493"
Slug: key-causes-of-performance-differences-between-sql-managed-instance-and-sql-server
Title: マネージド インスタンスとマネージド インスタンスのパフォーマンスのSQLの主なSQL Server
Summary: Azure SQL Database マネージド インスタンスと SQL Server のパフォーマンスの違いを引き起こす可能性がある基になる要因と、SQL Server と Azure SQL Database の間で公平な比較を行う手順について説明します。
Content: "<p>マネージド インスタンスMicrosoft Azure SQL Database<a href=\"https://docs.microsoft.com/en-us/azure/sql-database/sql-database-managed-instance-index\" target=\"_blank\">移行</a>すると、フル マネージドでインテリジェントなクラウド データベース サービスからのみ得る運用上および財務上の利点が多く得されます。 これらの利点の一部は、データベース全体のパフォーマンスを最適化または改善する機能から得たものがあります。 移行後、多くのお客様はワークロードのパフォーマンスをオンプレミス<a href=\"https://www.microsoft.com/en-us/sql-server\" target=\"_blank\">の SQL Server</a> で経験した結果と比較することを望んでいます。また、結果に驚&#39;場合もあります。 多くの場合、オンプレミスの SQL Server データベースで優れた結果が得られます。これは、SQL Database マネージド インスタンスでは管理容易性と高可用性のためのオーバーヘッドが発生します。 それ以外の場合は、SQL Database マネージド インスタンスの方が良い結果が得られます。これは、データベース エンジンの最新バージョンでは、以前のバージョンの SQL Server と比較してクエリ処理と最適化機能が向上しています。</p>\n\n<p>この記事は、パフォーマンスの違いを引き起こす可能性がある基になる要因と、SQL Server と SQL Database の間で公平な比較を行う手順を理解するのに役立ちます。</p>\n\n<p>比較結果&#39;驚く場合は、ワークロードに影響を与える可能性がある要因と、公平な比較を確実に行うテスト環境を構成する方法を理解することが&#39;重要です。 マネージド インスタンスのパフォーマンスが、次の一覧と比較してSQL Databaseパフォーマンスが低下する主なSQL Serverを示します。 これらの一部を軽減するには、ファイル サイズを増やして事前に割り当てるか、コアを追加します。ただし、その他は高可用性を保証するための前提条件であり、PaaS サービスの一部です。</p>\n\n<h2><strong>単純復旧モデルまたは一括復旧モデル</strong></h2>\n\n<p>マネージド インスタンス上に配置SQL Databaseデータベースは、高可用性を提供し、データ損失を保証するために完全なデータベース復旧モデルを使用しています。 このシナリオでは、SQL Database マネージド インスタンスのパフォーマンスが低下する可能性がある最も一般的な理由の 1 つは、ソース データベースが単純復旧モデルまたは一括復旧モデルを使用しているという事実です。 完全復旧モデルの欠点は、単純/一括ログ復旧モデルよりも多くのログ データが生成される点です。つまり、完全復旧モデルでの DML トランザクション処理が遅くなります。</p>\n\n<p>次のクエリを使用して、データベースで使用される復旧モデルを確認できます。</p>\n\n<pre style=\"margin-left: 0.25in;\">\n<code>select name, recovery_model_desc from sys.databases</code></pre>\n\n<p>SQL Server マネージド インスタンスと SQL Database マネージド インスタンスで実行されているワークロードを比較する場合は、公平な比較のために、両方の側のデータベースが完全復旧モデルを使用している必要があります。</p>\n\n<h2><strong>リソース ガバナンスと HA 構成</strong></h2>\n\n<p>SQL Database マネージド インスタンスには、99.99% の可用性を保証し、高いワークロードの下でも自動バックアップなどの管理操作が確実に完了する、組み込みのリソース ガバナンスがあります。 マネージド インスタンスに&rsquo;対して同様の制約を使用しないSQL Server、マネージド インスタンスに対する組み込みリソース SQL Databaseによってワークロードが制限される可能性があります。</p>\n\n<p>たとえば、&#39;インスタンス ログのスループットの制限 (汎用では最大 22000B、Business Critical レベルでは最大 48MB) があります。これにより、インスタンスがバックアップできるよりも多くのデータを読み込&#39;を確実に実行できます。 この場合、インスタンスに存在しない<code style=\"font-size: 13px; font-style: inherit; font-weight: inherit;\">INSTANCE_LOG_GOVERNOR</code>&rsquo;待機統計が高くなるSQL Serverがあります。 これらのリソース ガバナンスの制約により、一括読み込みやインデックス再構築などの操作が遅くなる可能性があります。これらの操作には、より高いログ レートが必要です。</p>\n\n<p>さらに<code style=\"font-size: 13px; font-style: inherit; font-weight: inherit;\">HADR_DATABASE_FLOW_CONTROL </code><code style=\"font-size: 13px; font-style: inherit; font-weight: inherit;\"> HADR_THROTTLE_LOG_RATE_SEND_RECV</code>、Business&#39;Critical レベルのインスタンスのセカンダリ レプリカでは、変更をキャッチアップして適用できない場合、プライマリ データベースの速度が低下する可能性があります。そのため、追加の統計や待機統計が表示される場合があります。</p>\n\n<p>ローカル SSD&#39;実行されている SQL Server ワークロードを Business Critical レベルと再比較する場合は、ビジネス クリティカル なインスタンスが 3 つのセカンダリ レプリカを持つ Always On 可用性グループ クラスターである点に注意してください。 少なくとも 1 つの同期コミット レプリカSQL Serverを使用して、ソース Always On 可用性グループ HA 実装を持つ必要があります。 ビジネス クリティカル&#39;をローカル ディスクに書き込む単一の SQL Server インスタンスと比較する必要がある場合、ソース インスタンスに HA が存在しないことが原因で、これは非現実的な比較になります。 レプリカで常に非同期を使用している場合は、パフォーマンスが向上した HA を使用しますが、この場合は、パフォーマンスを引き出してデータ損失の可能性の間でトレードオフを行い、SQL Server インスタンスで優れた結果が得られます。</p>\n\n<h2><strong>自動バックアップ スケジュール</strong></h2>\n\n<p>SQL Database マネージド インスタンスを選択する主な理由の 1 つは、負荷の高いワークロードの下でも、データベースのバックアップが常に保持されるという事実です。 マネージド インスタンス内のデータベースSQL Database、完全バックアップ、増分バックアップ、ログ バックアップがスケジュールされています。 完全バックアップは 7 日ごとに行われます。増分バックアップは 12 時間ごとに行われます。ログ バックアップは 5 分から 10 分ごとに実行されます。 インスタンス上に複数のデータベースがある場合、&#39;少なくとも 1 つのバックアップが現在実行されている可能性が高い可能性があります。</p>\n\n<p>バックアップ操作では一部のインスタンス リソース (CPU、ディスク、ネットワーク) が使用されているので、ワークロードのパフォーマンスに影響を与える可能性があります。 マネージド インスタンスと比較するシステム上のデータベースのバックアップ スケジュールが似ている必要があります。 それ SQL Database以外の場合は、&#39;マネージド インスタンスでは実現できないデータベースの復旧とパフォーマンスの間で&#39;のトレードオフを行うので、SQL Server インスタンスでより良い結果が得られます。</p>\n\n<p>予期しない&#39;が発生する場合は、次のクエリを使用して、SQL Database マネージド インスタンスまたは SQL Server インスタンスに進行中の完全/差分バックアップが発生し、現在実行中のワークロードのパフォーマンスに影響を与える可能性があるものがある場合は、次のクエリを使用して確認します。</p>\n\n<pre>\n<code>SELECT r.command, query = a.text, start_time, percent_complete,\n      eta = dateadd(second,estimated_completion_time/1000, getdate())\nFROM sys.dm_exec_requests r\n    CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) a\n WHERE r.command IN (&#39;BACKUP DATABASE&#39;,&#39;BACKUP LOG&#39;)</code></pre>\n\n<p>実行中のベンチマーク中に現在完全バックアップまたは増分バックアップが実行されている場合は、バックアップが完了したら、ワークロードを一時停止して再開することができます。</p>\n\n<h2><strong>接続とアプリからデータベースへの近接性</strong></h2>\n\n<p>データベースにアクセスし、SQL Database マネージド インスタンスと SQL Server インスタンスでベンチマーク クエリを実行するアプリケーションは、どちらの場合も同様のネットワーク近接範囲である必要があります。 アプリケーションと SQL Server データベースをローカル環境に配置する場合 (または SQL Server がインストールされているのと同じコンピューターから<a href=\"https://www.hammerdb.com/\" target=\"_blank\">、または同</a>じマシンから HammerDB のようなアプリを実行している場合)、SQL Server では、SQL Database に比べてより優れた結果が得られます。 マネージド インスタンス。アプリケーションに関して分散クラウド環境に配置されます。 どちらの場合も、&#39;マネージド インスタンスと同じリージョン内の別の仮想マシンでベンチマーク アプリケーションまたはクエリを実行して、有効な結果を取得SQL Database確認してください。 オンプレミス環境&#39;同等のクラウド環境と比較する必要がある場合は、アプリとデータベースの間の帯域幅と待機時間を測定し、類似している必要があります。</p>\n\n<p>SQL Databaseは、クライアント要求を受け入れ、実際のデータベース エンジン ノードにリダイレクトするプロキシ ゲートウェイ ノードを介してアクセスされます。 環境に近い結果を提供するには、<a href=\"https://docs.microsoft.com/powershell/module/az.sql/set-azsqlinstance\" target=\"_blank\">Set-AzSqlInstance</a> PowerShell コマンドを使用してインスタンスで ProxyOverride モードを有効にして、クライアントから現在 SQL Database マネージド インスタンスをホストしているノードへの直接アクセスを有効にします。</p>\n\n<p>さらに、コンプライアンス要件により、マネージド インスタンスSQL Database SSL/TLS トランスポート暗号化が適用され、常に有効になります。 暗号化では、多数のクエリが発生した場合にオーバーヘッドが発生する可能性があります。 オンプレミス環境で SSL 暗号化が適用されていない場合は、マネージド インスタンス内の追加のネットワーク オーバーヘッドSQL Database表示されます。</p>\n\n<h2><strong>透過的なデータ暗号化</strong></h2>\n\n<p>マネージド インスタンス上のSQL Databaseは、既定では、マネージド インスタンスを使用してTransparent Data Encryption。 Transparent Data Encryptionディスク ストレージと交換されるページごとに暗号化/暗号化解除を行います。 これにより、より多くの CPU リソースが消費され、データ ページをフェッチしてディスク ストレージ間で保存するプロセスで待機時間が増加します。 パフォーマンス テストを開始する前に、SQL Database マネージド インスタンスと SQL Server 上の両方のデータベースに Transparent Data Encryption のオンとオフが設定され、データベースの暗号化/暗号化解除操作が完了している必要があります。</p>\n\n<p>次のクエリを使用して、データベースが暗号化されているかどうかを判断できます。</p>\n\n<pre>\n<code>select name, is_encrypted from sys.databases</code></pre>\n\n<p>パフォーマンスに影響する可能性があるもう 1 つの重要な要因は、暗号化された TempDB です。 TempDB は、マネージド インスタンス上の少なくとも 1 つのデータベースが暗号化SQL Server、SQL Database場合に暗号化されます。 その結果、暗号化されていない 2 つのデータベースを比較できますが、他の SQL Database マネージド インスタンスが暗号化されている (ただし、&#39;がワークロードに関係しない場合でも) TempDB も暗号化されます。 暗号化されていないデータベースでは引き続き暗号化された TempDB が使用され、一時オブジェクトを作成したり、スピルを使用したりするクエリは低速になります。 TempDB は、インスタンス上のすべてのユーザー データベースが復号化され、インスタンスが再起動された後にのみ復号化されます。 マネージド インスタンスSQL Database新しい価格レベルにスケーリングして戻すのは、それを再起動する 1 つの方法です。</p>\n\n<h2><strong>データベース エンジンの設定</strong></h2>\n\n<p>データベース互換性レベル、トレース フラグ、システム構成 (&lsquo;&rsquo;&rsquo;&rsquo;並列処理のコストしきい値、並列処理の最大次数)、データベース スコープ構成 (<code>LEGACY_CARDINALITY_ESTIMATOR, PARAMETER_SNIFFING, QUERY_OPTIMIZER_HOTFIXES</code>など)、および SQL Server および SQL Database マネージド インスタンスのデータベース設定 (<code>AUTO_UPDATE_STATISTICS, DELAYED_DURABILITY</code>) など、データベース エンジンの設定が両方のデータベースで同じことを確認します。</p>\n\n<p>次のサンプル クエリは、マネージド インスタンスとマネージド インスタンスのSQL ServerをAzure SQL Databaseするのに役立ちます。</p>\n\n<p><code>select compatibility_level, snapshot_isolation_state_desc, is_read_committed_snapshot_on,</code></p>\n\n<pre>\n<code>&nbsp; is_auto_update_stats_on, is_auto_update_stats_async_on, delayed_durability_desc \nfrom sys.databases;\nGO\n\nselect * from sys.database_scoped_configurations;\nGO\n\ndbcc tracestatus;\nGO\n\nselect * from sys.configurations;</code></pre>\n\n<p>SQL Database マネージド インスタンスと SQL Server でこれらのクエリの結果を比較し、一部を特定した場合は違いを調整します。</p>\n\n<p><strong>注:</strong><em> </em>トレース フラグと構成の一覧は非常に長い場合があります。そのため、変更したトレース フラグ、またはパフォーマンスに影響を与えるトレース フラグのみをフィルター処理&#39;参照することをお勧めします。 一部のトレース フラグは、PaaS 構成の一部SQL Databaseマネージド インスタンスで事前に構成され、パフォーマンスには影響を与え \"ない\" ものがあります。</p>\n\n<p>互換性レベルをより高い値に変更したり、レガシ カーディナリティ推定機能を有効にしたり、SQL Database マネージド インスタンスの自動チューニング機能を有効にしたりして、SQL Server データベースよりも優れた結果が得られます。</p>\n\n<p>また、SQL Database マネージド インスタンスでは、すべてのパラメーターが最新の機能強化を備えた場合や、互換性レベルにバインドされていない修正や、最後の良好なプランの適用など、ワークロードが向上する可能性がある一部の機能を調整した場合でも、パフォーマンスが向上する可能性があります。</p>\n\n<h2><strong>ハードウェアと環境の仕様</strong></h2>\n\n<p>SQL Databaseマネージド インスタンスは、環境とは異なる可能性がある定義済みの<a href=\"https://docs.microsoft.com/azure/sql-database/sql-database-managed-instance-resource-limits#hardware-generation-characteristics\" target=\"_blank\"></a>技術的特性を持つ標準化されたハードウェア上で実行されます。 マネージド インスタンスが実行されている環境と環境を比較する際に考慮する必要があるSQL Databaseの一部を次に示します。</p>\n\n<ol>\n    <li><strong>コアの数は</strong>、マネージド インスタンスとマネージド インスタンスSQL Server同SQL Databaseする必要があります。 マネージド インスタンスではSQL Database 2.3 - 2.4 GHz プロセッサが使用されます。これは、プロセッサ速度とは異なる場合があります。 CPU の違いにより、同じ操作に対して多かれ少なかれ CPU を消費する可能性があります。 可能であれば、マネージド インスタンス上の Gen4 および Gen5 ハードウェア世代と比較するときに、SQL Server 環境でハイパースレッジが使用SQL Database確認します。 Gen4 ハードウェア上の 1 つはハイパースレッジを使用しないのに対し、Gen5 ではハイパースレッジを使用します。 ベア メタル マシン上で実行されている SQL Server を仮想マシン上で実行されている SQL Database マネージド インスタンスまたは SQL Server と比較する場合、&#39;はベアメタル インスタンスで優れた結果を得る可能性があります。</li>\n    <li><strong>メモリ/コア比</strong><strong>を</strong>含むメモリの量 (Gen5 では 5.1 GB/コア、Gen4 では 7 GB/コア)。 メモリ/コア比が高いほど、バッファー プール キャッシュが大きく、キャッシュ ヒット率が向上します。 メモリ/コア比が 5 のマネージド インターフェイスでワークロードが適切に動作しない場合は、SQL Database マネージド インスタンスではなく、適切なメモリ/コア比を持つ仮想マシンを選択する必要があります。</li>\n    <li><strong>IO の特性</strong> &ndash; ストレージ システムのパフォーマンスは、オンプレミス環境と比べて非常に異なる可能性がある点に注意する必要があります。 マネージド SQL Databaseはクラウド データベースであり、Azure クラウド インフラストラクチャに依存します。\n    <ul>\n        <li>汎用レベルでは、リモートの Azure プレミアムディスクを使用します。IO パフォーマンスはファイル サイズによって異なります。 ファイル サイズに依存するログの <code>WRITE_LOG</code> 制限に達すると、ファイルの統計情報で待機と IOPS が少ない可能性があります。 この問題は、ログ ファイルがSQL Database割り当てられていない場合に、マネージド インスタンスで発生する可能性があります。 パフォーマンスを向上するために、汎用レベルの一部のファイルのサイズを増やす必要がある場合があります (この Tech Community の記事「<a href=\"https://techcommunity.microsoft.com/t5/DataCAT/Storage-performance-best-practices-and-considerations-for-Azure/ba-p/305525\" target=\"_blank\">azure SQL Managed Instance General Purpose Storage</a> レベルのパフォーマンスのベスト プラクティスと考慮事項」を参照してください)。</li>\n        <li>マネージド SQL Databaseは<code>PREEMPTIVE_OS_WRITEFILEGATHER</code>ファイルの瞬時初期化を使用しないので、ファイルの増加中に日付ファイルが 0 バイトで埋め込むので、追加の待機統計が表示される場合があります。</li>\n    </ul>\n    </li>\n    <li><strong>ローカルまたはリモートのストレージの種類</strong> &ndash; 比較を行&#39;、ローカル SSD とリモート ストレージを検討してください。 汎用レベルでは、リモート ストレージ (Azure プレミアム Storage) を使用します。ローカル SSD または高パフォーマンス SAN を使用している場合、&#39;環境と一致しない可能性があります。 この場合は、ビジネス クリティカルレベルをターゲットとして使用する必要があります。 汎用レベルは、リモート ストレージ (Azure プレミアム Storage) も使用する Azure Virtual Machines 上の SQL Server などの他のクラウド データベースと比較できます。 さらに、汎用インスタンスで使用されるリモート ストレージは、仮想マシンで使用されるリモート ストレージと引き続き異なSQL注意してください。 <ul>\n        <li>汎用レベルでは、個々のファイルのサイズに依存する各データベース ファイルごとに専用の IO リソースが使用されます。一方、Azure Virtual Machine 上の SQL Server では、IO 特性がディスクのサイズに依存しているすべてのファイルに共有 IO リソースが使用されます。 小さなファイルが多数ある場合は、SQL 仮想マシンのパフォーマンスが向上しますが、同じ IO リソースを共有しているノイズの多い近隣ユーザーがいないので、ファイルの使用を並列化できる場合は、SQL Database マネージド インスタンスのパフォーマンスを向上させることができます。</li>\n        <li>SQL Virtual Machines読み取り速度を向上させる読み取りキャッシュ メカニズムを使用します。</li>\n    </ul>\n    </li>\n</ol>\n\n<p>ハードウェアの仕様とリソースの割り当てが異なる場合は、サービス レベルを変更するかファイル サイズを増やした場合にのみ解決できるパフォーマンスの結果が異なる可能性があります。 azure Virtual Machines 上の SQL Database マネージド インスタンスと SQL Server を比較する場合は、DS シリーズなどの SQL Database マネージド インスタンスと同様のメモリ<a href=\"https://docs.microsoft.com/azure/virtual-machines/windows/sizes-general#dsv3-series-1\" target=\"_blank\">/CPU 比</a>を持つ仮想マシン シリーズを選択してください。</p>\n\n<p>Azure SQL Databaseマネージド インスタンスには、潜在的な問題を自動的に解決できる組み込みのインテリジェンスに加えて、データベースのパフォーマンスのトラブルシューティングと向上に役立つ強力なツール セットが提供されています。 マネージド インスタンスの監視とチューニング機能のAzure SQL Databaseについては、次の記事を参照してください。https://docs.microsoft.com/en-us/azure/sql-database/sql-database-monitoring-tuning-index</p>"
