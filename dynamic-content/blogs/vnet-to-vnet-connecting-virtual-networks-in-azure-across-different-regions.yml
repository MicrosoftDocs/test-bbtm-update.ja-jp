### YamlMime:Yaml
ms.openlocfilehash: 186a16142858dbccae6145da066b73b04fa158cd
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903833"
Slug: vnet-to-vnet-connecting-virtual-networks-in-azure-across-different-regions
Title: 'VNet 間: 異なるリージョン間での Azure の仮想ネットワークの接続'
Summary: VNet 間で仮想ネットワークを接続する方法について説明します。
Content: "<h3>概要</h3>\nTechEd 2014 では、マルチサイト Vpn、リージョン内 vnet 間、およびリージョン間 VNet と vnet 間の機能がリリースされました。 このブログでは、VNet 間機能を使用して仮想ネットワークを接続する方法の構成手順と例について説明しています。\n\nVNet 間接続では、Azure VPN ゲートウェイを使用して、2つ以上の仮想ネットワークを IPsec/IKE S2S VPN トンネルと安全に接続します。 マルチサイト Vpn と共に、ビジネスニーズに合ったトポロジで、仮想ネットワークとオンプレミスのサイトを接続することができます。 次の図は、仮想ネットワークとオンプレミスサイト間の完全に接続されたトポロジの簡単な例を示しています。\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border-width: 0px;\" title=\"image\" alt=\"image\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image11.png\" width=\"610\" height=\"310\" border=\"0\" />\n\nこの接続で有効にできるシナリオがいくつかあります。 以下は一覧の一部です。\n<ol>\n <li>リージョン間の geo 冗長性と geo プレゼンス例: さまざまな Azure リージョンで AlwaysOn を SQL</li>\n <li>サブスクリプションや組織の境界を越えた通信を Azure 内で実現</li>\n <li>強力な分離境界を持つ多階層アプリケーションまたは、異なる Vnet の既存のワークロードを接続して新しいアプリケーションを作成する</li>\n</ol>\n<h3>考慮事項</h3>\nここに記載されている VNet 間の機能には、いくつかの要件と考慮事項があります。 主な要点を以下に示します。\n<ol>\n <li>仮想ネットワークを接続するには、Azure 動的ルーティング VPN ゲートウェイを作成または使用する必要があります。 静的ルーティング VPN ゲートウェイは、VNet 間ではサポートされていません。</li>\n <li>各仮想ネットワークについて、最大10個の \"ネットワーク\" を接続できます。 <i>つまり</i>、仮想ネットワークとオンプレミスの両方のサイトの組み合わせが10を超えることはできません。</li>\n <li>アドレスプレフィックスが接続されているすべてのネットワーク間で重複していないことを確認する必要があります。</li>\n <li>VNet 間機能は、リージョンとサブスクリプション (同一または異なるリージョン、1つまたは複数のサブスクリプション) にわたって機能します。</li>\n</ol>\nこれを念頭に置いて、単純な例をゼロから作成して、Vnet に接続してみましょう。\n<h3>同じサブスクリプション内の2つの Vnet の接続</h3>\nAzure 仮想ネットワークから別の仮想ネットワークに接続することは、基本的に、サイト間 (S2S) VPN を介してオンプレミスネットワークに接続することと同じです。 このブログでは、仮想ネットワークと VPN ゲートウェイを作成し、それらをすべて同じ Azure サブスクリプション内にまとめて接続するために、最初から開始します。 次に、実行する手順を示します。\n<ol>\n <li>クロスプレミス接続を使用して仮想ネットワークと一致するローカルネットワークを作成する</li>\n <li>仮想ネットワーク用の Azure 動的ルーティング VPN ゲートウェイを作成する</li>\n <li>仮想ネットワークをまとめて Connect する</li>\n</ol>\n次の図を例として使用して、2つの仮想ネットワーク VNet1 と VNet2 を一緒に作成し、接続します。\n<ul>\n <li>VNet1: Address Space = 10.1.0.0/16;アフィニティグループ = WestUS</li>\n <li>VNet2: Address Space = 10.2.0.0/16;アフィニティグループ = NorthEurope</li>\n</ul>\n<img class=\"aligncenter size-medium wp-image-152061\" alt=\"V-to-V\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/V-to-V-636x111.png\" width=\"636\" height=\"111\" />\n\n次の例では、Azure PowerShell コマンドレットを使用します。 PowerShell 環境をインストールして構成するには、Azure PowerShell の手順ページを参照してください。\n<ul>\n <li>MSDN の Azure PowerShell:<a href=\"https://msdn.microsoft.com/en-us/library/azure/jj156055.aspx\">https://msdn.microsoft.com/en-us/library/azure/jj156055.aspx</a></li>\n <li>Windows Azure PowerShell をインストールして構成する方法:<a href=\"https://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/\">https://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/</a></li>\n</ul>\nここで説明されているように、単純な VNet 間セットアップでは、Azure 管理ポータルを使用して以下の手順1と2を実行できます。 PowerShell を使用します。これは、VNet (マルチサイト vpn など) への接続をさらに追加し続けるため、Azure PowerShell コマンドレットまたは REST api が、現時点でこれらの機能を構成する唯一のオプションであるためです。\n<h3>[手順 1]VNet1 と VNet2 を作成し、対応するローカルネットワークを作成する</h3>\n最初の手順では、2つの仮想ネットワークと、対応するローカルネットワークを作成します。 各仮想ネットワーク (VNet1 など) の観点から見ると、もう1つの仮想ネットワークである VNet2 は、Azure プラットフォームで定義されている別の VPN 接続にすぎません。 そのため、顧客は次の接続を作成して定義する必要があります。\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"144\"><b>Virtual Network</b></td>\n<td valign=\"top\" width=\"240\"><b>仮想ネットワーク サイトの定義</b></td>\n<td valign=\"top\" width=\"240\"><b>Connect するローカルネットワークサイト</b></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"144\"><b>VNet1</b></td>\n<td valign=\"top\" width=\"240\">VNet1 (10.1.0.0/16)</td>\n<td valign=\"top\" width=\"240\">VNet2 (10.2.0.0/16)</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"144\"><b>VNet2</b></td>\n<td valign=\"top\" width=\"240\">VNet2 (10.2.0.0/16)</td>\n<td valign=\"top\" width=\"240\">VNet1 (10.1.0.0/16)</td>\n</tr>\n</tbody>\n</table>\n各仮想ネットワークは2回定義する必要があることに注意してください。まず、Azure 仮想ネットワークとして、もう一方の仮想ネットワークに接続されているローカルネットワークサイトとします。 両方の定義で指定されているアドレス空間要素が同じであること、または2つの仮想ネットワーク間で通信が正しく機能しないことを確認する必要があります。 この例では、読みやすいように、仮想ネットワークとローカルネットワークの両方の定義に同じ名前を使用しています。 これは要件ではありませんが、定義の読み取りが簡単になります。\n\n次の PowerShell コマンドレットは、2つの仮想ネットワークの2つのアフィニティグループを作成します。 必要に応じて、同じリージョンの既存のアフィニティグループを再利用できることに注意してください。\n<pre class=\"prettyprint\">PS D:\\&gt; New-AzureAffinityGroup -Name WestUS -Location \"West US\"\nPS D:\\&gt; New-AzureAffinityGroup -Name NorthEurope -Location \"North Europe\"</pre>\nアフィニティグループを作成したら、次のコマンドレットを使用して、現在のネットワーク構成ファイル (NETCFG.XML) をエクスポートできます。\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConfig -ExportToFile \"D:\\MyCurrentNETCFG.XML\"</pre>\n2つの新しい仮想ネットワークとそれに対応するローカルネットワークを作成するには、Notepad.exe などのテキストエディターを使用して、次のセグメントを NETCFG ファイルに挿入します (この場合は MyCurrentNETCFG.XML)。\n<pre class=\"prettyprint\">&lt;LocalNetworkSites&gt;\n  &lt;LocalNetworkSite name=\"VNet1\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;1.0.0.1&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n  &lt;LocalNetworkSite name=\"VNet2\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;2.0.0.2&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n&lt;/LocalNetworkSites&gt;\n&lt;VirtualNetworkSites&gt;\n  &lt;VirtualNetworkSite name=\"VNet1\" AffinityGroup=\"WestUS\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;Subnets&gt;\n      &lt;Subnet name=\"Subnet-1\"&gt;\n        &lt;AddressPrefix&gt;10.1.0.0/24&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n      &lt;Subnet name=\"GatewaySubnet\"&gt;\n        &lt;AddressPrefix&gt;10.1.200.0/29&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n    &lt;/Subnets&gt;\n    &lt;Gateway&gt;\n      &lt;ConnectionsToLocalNetwork&gt;\n        &lt;LocalNetworkSiteRef name=\"VNet2\"&gt;\n          &lt;Connection type=\"IPsec\" /&gt;\n        &lt;/LocalNetworkSiteRef&gt;\n      &lt;/ConnectionsToLocalNetwork&gt;\n    &lt;/Gateway&gt;\n  &lt;/VirtualNetworkSite&gt;\n  &lt;VirtualNetworkSite name=\"VNet2\" AffinityGroup=\"NorthEurope\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;Subnets&gt;\n      &lt;Subnet name=\"Subnet-1\"&gt;\n        &lt;AddressPrefix&gt;10.2.0.0/24&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n      &lt;Subnet name=\"GatewaySubnet\"&gt;\n        &lt;AddressPrefix&gt;10.2.200.0/29&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n    &lt;/Subnets&gt;\n    &lt;Gateway&gt;\n      &lt;ConnectionsToLocalNetwork&gt;\n        &lt;LocalNetworkSiteRef name=\"VNet1\"&gt;\n          &lt;Connection type=\"IPsec\" /&gt;\n        &lt;/LocalNetworkSiteRef&gt;\n      &lt;/ConnectionsToLocalNetwork&gt;\n    &lt;/Gateway&gt;\n  &lt;/VirtualNetworkSite&gt;\n&lt;/VirtualNetworkSites&gt;</pre>\n&nbsp;\n\n上のセグメントでは、VNet1 と VNet2 という2つの仮想ネットワークと、VNet1 と VNet2 という2つのローカルネットワークを定義しています。 先に進む前に、次の点に注意してください。\n<ol>\n <li>わかりやすくするために、各仮想ネットワークに \"GatewaySubnet\" 以外のサブネット (\"Subnet-1\") が1つだけあります。また、上記の例では、Dnssubnet Ref 要素はスキップされます。 また、\"VPNClientAddressPool\" 要素もスキップします。 必要に応じて、これらの要素を NETCFG に追加できます。</li>\n <li>NETCFG に \"LocalNetworkSites\" と \"VirtualNetworkSites\" のセクションが既にある場合は、対応する \"Localnetworksites\" 要素と \"VirtualNetworkSite\" 要素をこれらの2つのセクションにコピーしてください。</li>\n <li>LocalNetworkSite の「VPNGatewayAddress」は、仮想ネットワーク用の対応する Azure VPN ゲートウェイの VIP (パブリック IP) アドレスです。 実際のアドレスは、Azure VPN ゲートウェイが作成されるまで使用できません。 ここでは、2つのアドレスの一時的なプレースホルダーとして \"1.0.0.1\" と \"2.0.0.2\" を使用します。</li>\n</ol>\nこの処理が完了したら、新しい NETCFG を \"MyNewNETCFG.XML\" として保存し、次の PowerShell コマンドレットを使用して、更新された NETCFG ファイルを Azure サブスクリプションにアップロードします。\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetConfig -ConfigurationPath D:\\MyNewNETCFG.XML</pre>\nこの手順の完了には数分かかります。 完了すると、Azure Portal から仮想ネットワークとローカルネットワークを確認できるようになります。\n<h3>[手順 2]仮想ネットワークごとに動的ルーティング VPN ゲートウェイを作成する</h3>\n仮想ネットワークが作成され対応する VPN 接続が設定されたら、次の手順として、仮想ネットワークごとに Azure VPN ゲートウェイを作成します。 これは、Azure 管理ポータルまたは Azure REST Api のいずれかを使用して実行できます。 動的ルーティング ゲートウェイ タイプのみがサポートされています。 現時点では、Azure PowerShell コマンドレット \"New-azurevnetgateway\" は動的ルーティングゲートウェイの作成をサポートしていないことに注意してください。 (Azure PowerShell にこのギャップを埋めることに取り組んでいます。 お待ちください...)\n\nAzure Portal で、[ネットワーク] ページに移動し、VNet1 と VNet2 の両方の [ダッシュボード] ページに移動します。 各ページの下部にある [ゲートウェイの作成] をクリックし、次のように [動的ルーティング] を選択します。\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;\" title=\"clip_image004\" alt=\"clip_image004\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image004_thumb.png\" width=\"244\" height=\"118\" border=\"0\" />\n<h3>[手順 3]VPN ゲートウェイの Connect</h3>\n両方のゲートウェイが作成された後、これら2つの VPN ゲートウェイのパブリック IP アドレスは、ポータルから、または次のコマンドレットを使用して取得できます。\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetGateway -VNetName VNet1 | ft VIPAddress\nVIPAddress\n----------\n191.xxx.82.62\n\nPS D:\\&gt; Get-AzureVNetGateway -VNetName vnet2 | ft VIPAddress\nVIPAddress \n---------- \n191.yyy.135.20</pre>\nXxx と yyy は、セキュリティ上の理由から明らかにマスクされた実数です。 ゲートウェイのパブリック IP アドレスを利用できるようになったら、NETCFG セグメントの VNet1 と VNet2 を更新して、NETCFG ファイルの IP アドレスと一致するようにします。次に MyNewNETCFG.XML ます。\n<pre class=\"prettyprint\">  &lt;LocalNetworkSite name=“VNet1”&gt;\n    &lt;AddressSpace&gt;&lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;&lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;191.xxx.82.62&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n  &lt;LocalNetworkSite name=“VNet2”&gt;\n    &lt;AddressSpace&gt;&lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;&lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;191.yyy.135.20&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;</pre>\n次のように、更新された NETCFG ファイルを再度アップロードします。\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetConfig -ConfigurationPath D:\\MyNewNETCFG.XML</pre>\n最後の手順では、IPsec/IKE 事前共有キーを同じに設定します。 これは、Azure REST API または Azure PowerShell コマンドレットを使用して行うことができます。 次の例では、PowerShell コマンドレットを使用して、キー値を A1b2C3d4 に設定します。\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetGatewayKey -VNetName VNet1 -LocalNetworkSiteName VNet2 -SharedKey A1b2C3d4\nPS D:\\&gt; Set-AzureVNetGatewayKey -VNetName VNet2 -LocalNetworkSiteName VNet1 -SharedKey A1b2C3d4</pre>\nこれらの手順が完了すると、IPsec/IKE が S2S VPN トンネルを確立した後、VNet1 と VNet2 が一緒に接続されます。 次のコマンドレットを実行すると、接続状態が表示されます。\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConnection -VNetName VNet1 | ft LocalNetworkSiteName, ConnectivityState\n\nLocalNetworkSiteName                       ConnectivityState \n--------------------                       ----------------- \nVNet2                                      Connected</pre>\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConnection -VNetName VNet2 | ft LocalNetworkSiteName, ConnectivityState\nLocalNetworkSiteName                       ConnectivityState \n--------------------                       ----------------- \nVNet1                                      Connected</pre>\nこれは、VNet1 が VNet2 に接続されていることを示しています。 仮想ネットワーク内に Vm が既に存在する場合、トラフィックは2つの仮想ネットワーク間のフローを開始します。\n\n接続状態は、Azure プラットフォームから5分ごとに更新されることに注意してください。 そのため、接続は、キーが正しく設定されてから1分以内に確立されますが、接続状態が \"接続済み\" になるまでに最大 5 ~ 7 分かかる場合があります。\n<h3>もうすぐです。。。</h3>\nこのシンプルなトポロジを基にして、さまざまなサブスクリプションでの VNet 間 VNet をデモンストレーションし、マルチサイト VPN 機能も導入します。"
