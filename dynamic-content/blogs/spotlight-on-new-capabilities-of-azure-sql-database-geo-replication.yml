### YamlMime:Yaml
ms.openlocfilehash: 231bc249cfd8c49dc8668814e8ba141ee9767a2c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139892333"
Slug: spotlight-on-new-capabilities-of-azure-sql-database-geo-replication
Title: Azure SQL Database geo レプリケーションの新機能に関するスポットライト
Summary: 現在、顧客の問題点に対処し、顧客に新しい機能を提供する、一連の新しい geo レプリケーションの拡張機能について発表します。
Content: >-
  <p>昨年、SQL Database geo レプリケーションのリリース以来、お客様からのフィードバックをリッスンし、機能の向上に取り組んでいます。 現在、顧客の問題点に対処し、顧客に新しい機能を提供する、一連の新しい geo レプリケーションの拡張機能について発表し<em>ます。 </em>これらの機能は、V12 データベースで使用でき、次のものが含まれます。</p>


  <ul>
   <li>geo レプリケーションの T SQL サポート</li>
   <li>フェールオーバーとフェールバック</li>
   <li>セキュリティ資格情報とファイアウォール規則を同期する機能</li>
   <li>エラスティックプール内のデータベースの geo レプリケーションの完全なサポート</li>
   <li>セカンダリデータベースの構成可能なパフォーマンスレベル</li>
   <li>Azure Resource Manager API とロールベースセキュリティのサポート</li>
   <li>同期 PowerShell コマンドレット</li>
  </ul>


  <h1>geo レプリケーションの T SQL サポート</h1>


  <p>これで、T SQL を使用して geo レプリケーションを構成し、フェールオーバーを開始できるようになりました。 これらのコマンドは SQL 認証を必要とするため、既存の PowerShell コマンドレットの場合と同じように、サブスクリプション証明書の共有に依存しません。 特に、プライマリサーバーとは別の Azure サブスクリプションで作成されたセカンダリ論理サーバーを使用できます。 新しい T SQL 構文の詳細については、 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-transact-sql/">「Transact SQL を使用した Azure SQL Database の Geo レプリケーション</a>」を参照してください。 &nbsp;各 T SQL コマンドには、 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">PowerShell</a>または<a href="https://msdn.microsoft.com/library/mt163571(Azure.100).aspx">REST API</a>同等のものがあります。</p>


  <h1>フェールオーバーとフェールバック</h1>


  <p>新しいフェールオーバーコマンドを使用すると、リレーションシップを維持したままデータベースロールを簡単に切り替えることができます。 実際の障害時には、計画 &rdquo; されていないオプションを使用して &ldquo; コマンドを呼び出して、セカンダリをプライマリにすぐに昇格させることができます。 &nbsp;障害が発生したプライマリが回復して再び利用可能になると、システムは自動的にセカンダリとしてマークし、新しいプライマリで最新の状態にします。 &nbsp;レプリケーションの非同期の性質により、プライマリに障害が発生した場合に、セカンダリへの最新の変更がレプリケートされるまで、計画外のフェールオーバー中に少量のデータが失われる可能性があります。</p>


  <p>さらに、複数のセカンダリデータベースの自動管理も強化されています。 &nbsp;複数のセカンダリを持つプライマリがフェールオーバーすると、システムは自動的にレプリケーション関係を再構成し、残りのセカンダリを新しく昇格されたプライマリにリンクします。ユーザーによる操作は必要ありません。</p>


  <p>次の図は、Azure Portal を使用した障害が発生した場合に、geo レプリケートされたデータベースをフェールオーバーする方法を示しています。 Azure Portal を使用した geo レプリケーションの詳細については、こちらの <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-portal/">記事</a> を参照してください。</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85c9dc78-2ca7-40aa-bb48-fb454de88e9c.png"><img alt="Geo-failover capture (2)" border="0" height="716" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2fbc20ec-72ca-43bd-b8d8-11ec3508fff4.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="Geo フェールオーバーのキャプチャ (2)" width="1030"></a></p>


  <p>障害が軽減されたら、アプリケーションをプライマリリージョンに戻すことが望ましい場合があります。 これを行うには、[ &nbsp; &ldquo; 計画 &rdquo; 済み] オプションを使用してフェールオーバーコマンドを呼び出します。 計画 &rdquo; フェールオーバーを有効 &ldquo; にする方法の詳細については、 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">PowerShell を使用した Azure SQL Database の SQL と geo レプリケーション</a><a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-transact-sql/">を使用した Azure SQL Database の geo レプリケーションに関する</a>説明を参照してください。</p>


  <h1>DR ドリル</h1>


  <p>既に説明したように、計画 &rdquo; モードで &ldquo; フェールオーバーコマンドを呼び出すと、データが完全に同期された後で、セカンダリとプライマリの間でデータベースロールが切り替わります。 計画フェールオーバーによってデータが失われることはなく、プライマリデータベースは常に保護されたままであるため、このコマンドを使用して運用環境でディザスターリカバリーの訓練を行うこともできます。&nbsp;</p>


  <h1>資格情報とファイアウォール規則の同期を保つ</h1>


  <p>Geo レプリケートされたデータベースに対して <a href="https://azure.microsoft.com/documentation/articles/sql-database-firewall-configure/">データベースファイアウォールルール</a> を使用することをお勧めします。これにより、これらのルールをデータベースと共にレプリケートし、すべてのセカンダリデータベースがプライマリと同じファイアウォールルールを持つようにすることができます。 &nbsp;これにより、プライマリデータベースとセカンダリデータベースの両方をホストするサーバーでファイアウォールルールを手動で構成して管理する必要がなくなります。&nbsp;</p>


  <p>同様に、データアクセスに <a href="https://azure.microsoft.com/documentation/articles/sql-database-manage-logins/">包含データベースユーザー</a> を使用すると、プライマリデータベースとセカンダリデータベースの両方に同じユーザー資格情報が設定されるため、フェールオーバーが発生した場合、ログインとパスワードの不一致が原因で中断されることはありません。</p>


  <p><a href="https://azure.microsoft.com/en-us/documentation/articles/active-directory-whatis/">Azure Active Directory</a> (AAD) を追加することで、プライマリデータベースとセカンダリデータベース &nbsp; の両方に対するユーザーアクセスを管理でき、データベースの資格情報をまとめて管理する必要がなくなります。</p>


  <h1>エラスティックプールデータベースの Geo レプリケーション</h1>


  <p>Standard またはプレミアムエラスティックデータベースプールの任意のデータベースに対して geo レプリケーションを構成できます。 サービス層が同じである限り、セカンダリデータベースを別のエラスティックデータベースプールに配置できます。 通常のデータベースの場合、セカンダリはエラスティックデータベースプールであり、その逆も可能です。 サービス階層が同じである限り、 エラスティックデータベースプールでの geo レプリケーションの構成例については、「 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-transact-sql/">Azure SQL Database の geo レプリケーション</a>」を参照してください。 SQL と、 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">PowerShell を使用した Azure SQL Database の geo</a>レプリケーションを使用します。&nbsp;</p>


  <h1>セカンダリデータベースの構成可能なパフォーマンスレベル</h1>


  <p>プライマリよりも低いパフォーマンスレベルのセカンダリデータベースを作成できるようになりました。 プライマリとセカンダリ、両方のデータベースが同じサービス階層を持つ必要があります。 このオプションは、データベース書き込みアクティビティが多いアプリケーションには推奨されません。これは、レプリケーションの遅延が増加する可能性があるためです。そのため、フェールオーバー後に大量のデータが失われる &nbsp; 危険性が高くなります。 &nbsp;さらに、フェールオーバー後は、新しいプライマリが上位のパフォーマンスレベルにアップグレードされるまで、アプリケーション &rsquo; のパフォーマンスが影響を受けます。 &nbsp;<a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-transact-sql/">Azure SQL Database の geo レプリケーション</a>でのセカンダリのパフォーマンスレベルを構成する例については、 <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">PowerShell を使用した Azure SQL Database の SQL と geo レプリケーション</a>を使用します。&nbsp;</p>


  <h1>Azure Resource Manager API とロールベースセキュリティ</h1>


  <p>Geo レプリケーションには、<a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">新しい arm ベースの PowerShell コマンドレット</a>を含む、管理用の新しい<a href="https://msdn.microsoft.com/en-us/library/azure/mt163571.aspx">Azure Resource Manager (arm) api</a>のセットが含まれるようになりました。 これらの Api では、リソースグループを使用する必要があり、ロールベースセキュリティ (RBAC) をサポートしています。 ここでは、アクセスロールの実装に関する優れた指示を含む<a href="https://azure.microsoft.com/en-us/documentation/articles/role-based-access-control-configure/">RBAC 入門</a>を紹介 &rsquo; します。</p>


  <blockquote>

  <p>既存の<a href="https://msdn.microsoft.com/en-us/library/azure/dn505719.aspx">Azure SQL Service Management (クラシック) REST API</a>と<a href="https://msdn.microsoft.com/en-us/library/azure/dn546723.aspx">Azure SQL Database (クラシック) コマンドレット</a>は、旧バージョンとの互換性のためにサポートされています。 ただし、新機能は arm ベースの<a href="https://msdn.microsoft.com/en-us/library/azure/mt163571.aspx">Azure SQL REST API</a>と arm ベースの<a href="https://msdn.microsoft.com/en-us/library/azure/mt574084.aspx">Azure SQL Database PowerShell コマンドレット</a>でのみサポートされています。</p>

  </blockquote>


  <h1>同期 PowerShell コマンドレット</h1>


  <p>スクリプトは、既定では同期実行をサポートする <a href="https://azure.microsoft.com/documentation/articles/sql-database-geo-replication-powershell/">新しい ARM ベースの PowerShell コマンドレット</a> の導入によって簡略化されています。 Geo レプリケーションとフェールオーバーコマンドを同期的に使用すると、実行時間の長い操作の進行状況を監視する必要がなくなります。 スクリプトは、コマンドが返されるまで待機するだけのために記述できます。</p>
