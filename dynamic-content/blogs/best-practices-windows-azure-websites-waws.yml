### YamlMime:Yaml
ms.openlocfilehash: 718b0da59a0490ae8d0cdb9e536f6d36779361aa
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139909068"
Slug: best-practices-windows-azure-websites-waws
Title: 'ベストプラクティス: Windows Azure Websites (waws)'
Summary: >-
  Windows azure websites (waws) を使用すると、Windows azure で拡張性の高い web サイトを構築できます。 WAWS の利点の概要を次に示します。


      Efficient resource utilization: As your customer base…
Content: >-
  <p style="margin: 0in 0in 0pt;"><a href="https://go.microsoft.com/fwlink/?linkid=306051&amp;clcid=0x409">Windows azure</a> websites (waws) を使用すると、Windows azure で拡張性の高い web サイトを構築できます。 WAWS の利点の概要を次に示します。</p>


  <ul>
   <li><strong>効率的なリソース使用率:</strong> 顧客ベースの拡大に合わせて、アプリケーションの使用量も増加します。 Web サイトのトラフィックパターンに基づいて、web サイトを事前に拡張することができます。</li>
   <li><strong>使用量に基づくコスト:</strong> コストは、ニーズに合わせてクラウドを選択する際に重要な役割を果たします。 strategyfor です。 Azure websites では、使用量ベースのモデル (従量課金制) と6か月または12か月プランを選択できます。 詳細については、「 <a href="https://azure.microsoft.com/en-us/pricing/details/web-sites/">Windows Azure Websites の価格</a>」を参照してください。</li>
   <li><strong>市場投入までの時間を短縮:</strong> インフラストラクチャではなく、アプリケーションに集中できます。 これにより、開発者の創造性と生産性が向上し、アプリケーションの市場投入までの時間が短縮されます。</li>
  </ul>

  <h4><strong>ベストプラクティス </strong></h4>

  これらのプラクティスは、Azure websites Windows 提供されるインフラストラクチャを最適に使用し、エンドユーザーに高パフォーマンスで信頼性の高い web サイトを提供するのに役立ちます。

  <ul>
   <li><strong>スケーラブルなアーキテクチャを構築する </strong></li>
  </ul>

  azure Websites を使用すると、azure でスケーラブルなソリューションを構築できますが、サービスによって提供されるスケーラブルなインフラストラクチャを web サイトで最大限に活用することが重要になります。 Windows


  スケーラブルなソリューションを設計するためにできることをいくつか次に示します。

  <ol>
   <li>アーキテクチャのボトルネックにより、待機時間が長くなる可能性があります。 アプリケーションの設計、帯域幅の制限など、さまざまな理由で発生する可能性のある、現在のアーキテクチャの大きなボトルネックをすべて特定する必要があります。 アプリケーションアーキテクチャをリファクタリングして回避します。</li>
   <li>さまざまなスケール構成 (インスタンスのサイズとインスタンスの数の組み合わせ) を使用して web サイトのロードテストを行い、通常の負荷下で適切なスケール構成を理解します。 <a href="https://msdn.microsoft.com/en-us/library/ms182594.aspx">Visual Studio</a>、 <a href="https://jmeter.apache.org/">Apache Jmeter</a>などのさまざまなツールを使用して、ロードテストを実行できます。</li>
   <li><a href="https://www.google.com/analytics/">Google Analytics</a>や<a href="https://webtrends.com/">Webtrends</a>などの web 分析ツールを使用して、web サイトのトラフィックパターンと1秒あたりの平均要求数を特定します。</li>
   <li>予期しないトラフィックピークを管理するように自動スケールを設定します。詳細については、「 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-scale/">web サイトのスケーリング方法</a> 」を参照してください。</li>
   <li>アプリケーションでデータベース層を使用する場合は、  <a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn386094.aspx">Azure Cache service</a> などの分散キャッシュソリューションを統合してパフォーマンスを向上させる</li>
  </ol>

  <img class="alignnone" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7823.Figure1-blog-2.10.png" width="596" height="678" />


  &nbsp;

  <ul>
   <li><strong>障害に対する回復力を持つようにアーキテクチャを設計する </strong></li>
  </ul>

  ただし、WAWS では高い <a href="https://go.microsoft.com/fwlink/?linkid=301329&amp;clcid=0x409">SLA</a> が提供されます。 ビジネス継続性のためには、クラウドソリューションを使用する場合のサービス障害のリスクを理解し、そのようなイベントの影響を軽減する方法を特定することが重要です。


  このような状況で軽減するために必要なソリューションをいくつか次に示します。

  <ul>
   <li>Windows Azure SDK を使用して独自のツールを作成するか、 <a href="https://www.getcloudcellar.com/">Cloud cellar</a>などのサードパーティのサービスを使用して、コンテンツのバックアップと復元の自動化戦略を策定します。</li>
   <li>少なくとも2つのデータセンターに web サイトの冗長コピーをセットアップし、それらのデータセンター間の着信トラフィックを負荷分散します。</li>
   <li>グローバル traffic manager を使用してデータセンターでサービスが停止したときに自動フェールオーバー機能を設定する</li>
   <li>コンテンツ配信ネットワーク (CDN) サービスを web サイトと共にセットアップして、コンテンツをキャッシュし、web サイトの高可用性を提供することで、パフォーマンスを向上させます。</li>
   <li>WAWS web サイトで使用する密結合コンポーネント/サービスの依存関係を削除します (可能な場合)。</li>
  </ul>

  たとえば、web サイトでデータベースを使用していて、何らかの理由でデータベースサービスが特定の時点で停止し、アーキテクチャで単一障害点が発生しているとします。 ここでのデータベースは厳密に2つのコンポーネントですが、アーキテクチャから削除することはできません。 このようなシナリオの場合:


  -データベースを複数のデータセンターにレプリケートし、これらのデータベース間で自動データ同期を設定して、フェールオーバー中に軽減する必要があります。


  -このような状況では、アプリケーションを回復力を持つように設計する必要があります。


  依存コンポーネントが必要な場合は、レプリケーション戦略を使用して、アーキテクチャの堅牢性を高めることができます。

  <ul>
   <li>予期しない障害を軽減するために、クラウドに移行する前にリスク軽減戦略を設計する</li>
   <li>ステージング環境を作成し、サイトを停止して、web サイトの障害発生時の動作を評価することで、障害シナリオをシミュレートします。</li>
  </ul>

  <strong> </strong>

  <ul>
   <li><strong>インフラストラクチャの自動化 </strong></li>
  </ul>

  クラウドソリューションの外部には多くの操作が含まれています。これには、web サイトを正常に維持するための開発、デプロイ、およびその他のさまざまな操作が含まれます。 これらの操作を自動化すると、アプリケーションの出荷サイクルを管理しやすくなります。 Waws のすべての機能にアクセスするには、WAWS REST API を使用します。これにより、自動化が容易になります。


  Web サイトを管理するための主な操作は次のとおりです。

  <ul>
   <li><strong>Web サイトへのデプロイ:</strong></li>
  </ul>

  <a href="https://www.iis.net/downloads/microsoft/web-deploy">web deploy</a>、 <a href="https://git-scm.com/">GIT</a>、FTP などのさまざまなデプロイ方法を使用できます。これを簡単に自動化して、好みのデプロイツール用に<a href="https://azure.microsoft.com/en-us/downloads/">Windows Azure SDK</a>を使用してツールを作成することによって、web サイトにコンテンツをプッシュすることができます。

  <ul>
   <li><strong>ステージング済みサイトを使用した運用環境のテスト:</strong></li>
  </ul>

  WAWS はステージングされた発行をサポートしています。これにより、web サイトのステージングバージョンに更新プログラムをデプロイし、運用環境でテストしてから、顧客向けの web サイトを更新することができます。 詳細については、 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/">Windows Azure websites でのステージング発行に関する</a>ページを参照してください。

  <ul>
   <li><strong>診断ログを有効にする:</strong></li>
  </ul>

  WAWS には、アプリケーションのデバッグに役立つ組み込みの診断機能が用意されています。 診断には、次の2種類があります。

  <ul>
   <li>サイト診断: 詳細なエラーログ、失敗した要求トレース、web サーバーのログ記録を有効にすることができます。</li>
   <li>Application diagnostics: web アプリケーションによって生成された情報をキャプチャできます。</li>
  </ul>

  詳細については、 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-enable-diagnostic-log/">Windows Azure websites の診断ログを有効にする方法に関する</a>ページを参照してください。

  <ul>
   <li><strong>監視を有効にする: </strong></li>
  </ul>

  WAWS では、[監視] 管理ページを使用して監視機能をサポートしています。 CPU 時間、HTTP クライアントエラー、HTTP サーバーエラーなど、さまざまなメトリックのアラートを設定して、web サイトを継続的に監視できます。 詳細については<a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-monitor/">、Windows Azure web サイトを監視する方法</a>に関するページを参照してください。

  <ul>
   <li><strong>保護 </strong></li>
  </ul>

  WAWS プラットフォームはセキュリティと信頼性に関する主要な業界標準に準拠しており、お客様にセキュリティで保護されたプラットフォームを提供しますが、アプリケーションにセキュリティ上の脆弱性がある場合は、アーキテクチャが攻撃の影響を受けやすくなる可能性があります。


  WAWS で安全なソリューションを構築するには、攻撃に耐えられるようにアプリケーションを構築するときに、安全なコーディングプラクティスに従う必要があります。 詳細については、「<a href="https://msdn.microsoft.com/en-us/security/aa570401.aspx">安全なコード</a>   を記述する方法」を参照してください。


  <strong>参考資料 </strong>


  <a href="https://azure.microsoft.com/en-us/documentation/services/web-sites/">Azure Websites の Windows チュートリアル</a>


  <a href="https://azure.microsoft.com/en-us/documentation/services/traffic-manager/">Windows Azure トラフィック マネージャー</a>


  <a href="https://azure.microsoft.com/en-us/documentation/">Windows Azure のドキュメント</a>


  <a href="https://blogs.iis.net/elliotth/archive/2013/11/03/basics-on-using-the-web-deploy-api.aspx">How to Web deploy API</a>


  <a href="https://azure.microsoft.com/en-us/support/trust-center/">Azure のセキュリティとコンプライアンスの Windows の概要</a>
