### YamlMime:Yaml
ms.openlocfilehash: 053e3b31ebbe672b26f11b179cf5da3fed9053e0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/11/2022
ms.locfileid: "139904155"
Slug: how-microsoft-drives-exabyte-analytics-on-the-world-s-largest-yarn-cluster
Title: Microsoft が世界最大の YARN クラスターでエクサバイト分析を実行する方法
Summary: Microsoft では、多くの企業が競争上の優位性を得るデータを使用しているのと同様に、分析情報の多くや分析のニーズが急速に拡大し、制御がほぼ制御しきれでした。 私たちは、Yet Another...
Content: >-
  <p><em>Microsoft では、多くの &ndash; 企業が競争上の優位性のためにデータを使用しているのと同様に、分析情報の多くや分析のニーズに対応する機会は、ほぼ制御しきれなき速いスケーリングでした。私たちは、exabyte&rsquo; 規模の分析プラットフォームの需要を満たすために Yet Another Resource Manager (YARN) に投資し、最終的には世界最大の YARN クラスターを作成しました。</em></p>


  <h2>ビッグ データでは、どのくらいの大きな<em>大き</em><em>ですか?</em></h2>


  <p>Yarn は数千のノードにスケーリングすることが知られていますが、数万のノードが<em></em>必要な場合は、どうなるでしょうか。 Microsoft のクラウド &amp; 情報サービスは、データ処理と分散システムに焦点を当てた適用された研究と科学のイニシアチブに取り組む、非常に特殊な専門家チームです。 このブログでは、CISL と Microsoft ビッグ &ndash; データ チームが複雑なスケールとリソース管理の課題に直面し、最終的には、世界で最大の YARN クラスター&#39;を実装して、そのエクサバイトサイズの分析を推進する方法について説明します。</p>


  <h2>Exabyte-size analytics</h2>


  <p>10 年以上にわたり、Microsoft は、独自の超サイズの分析のために、一般公開されている Azure Data Lake の内部バージョンに依存してきました。 データの量と計算の複雑さにより、複数の大規模なクラスターにスケーリングされました。 Microsoft は、現在、1 つのクラスター内の 50,000 以上のノードで、世界最大の Yarn クラスターを実行しています。 エグサバイト単位のデータは、Bing、AdCenter、MSN、Windowsライブなど) から処理されます。 15,000 人を超える開発者が会社全体で使用しています。</p>


  <p>Microsoft&rsquo; の取り組みは、2007 年に始まり、管理可能な数のマシンが少なめでした。 2018 年の今日、システムは数十万台のマシンで動作しています。 これは、最大 50,000 ノードの個々のクラスターに対応し、15,000 &ndash; 人を超える開発者が、数えきれ、成長しているデータにイノベーションを起こしています。</p>


  <h2>スケールの課題</h2>


  <h3>ユーザーが多いということは、同じクラスター上の複数のフレームワークを意味する</h3>


  <p>ビッグ データ ユーザー ベースが成熟すると、ユーザーは共有データとコンピューティング インフラストラクチャで、より多様なアプリケーションを実行したいと考えています。 サイロを構築すると、使用率が破棄されます。 これを回避するために、Apache Hadoop コミュニティの YARN に対する MSFT の賭け。 YARN は、任意のアプリケーションが同じコンピューティング リソースを共有して、分散ファイル システム内のデータの共通プールにアクセスできるリソース管理フレームワークです。 YARN を利用して以降、Microsoft はオープン ソースの Apache Hadoop コミュニティにイノベーションを提供しました。その結果、複数の Microsoft 従業員がプロジェクトのコミット者および PMC メンバーになるにつながりました。</p>


  <h3>スケールの問題では &ndash; 、断片化を回避するために大規模なクラスターを使用する</h3>


  <p>データとアプリケーションのボリュームが増えるにつれて、スケールが問題になります。 需要を満たす経験の少ないソリューションは、より小さなクラスターを構築する方法です。 これは、さまざまなアプリケーションのサイロのアイデアと同様に、リソースが断片化し、使用率が低下し、クラスター間でデータを継続的にコピーする必要があるため、問題が発生し、遅く、エラーが発生しやすくなります。 ベスト プラクティスは、作業を多数の大規模なクラスターに統合する方法です。 これが、Microsoft が YARN を受け入れ、それを拡張して、データ センター サイズのクラスター (数万ノード) に対するスケーラビリティをサポートする動機でした。</p>


  <p>&quot;Microsoft は YARN&quot; フェデレーション [1-3] と呼ばれる機能に貢献しました。これにより、複数の小さなクラスター (それぞれ 2 から 5,000 ノード) を操作し、ユーザーに対して透過的な方法でそれらを結び付け、ポリシーを使用して高度な負荷分散を可能にします。</p>


  <h3>電源の最後のオンスを絞り込 &ndash; むコアが残っていない</h3>


  <p>標準クラスターでは、中央リソース マネージャーによってリソースが割り当てされます。 一元化されたリソース ネゴシエーションのプロセスには、ハートビートベースの通信に起因する非効率性が固有です。 心の打ち上がりは、コマンドを実行できる可変ではないリズミカルです。 これにより、実行の大規模な調整が可能になりますが、リソースの最大使用率も制限されます。 経験の浅い解決策は、望ましいパフォーマンスを実現するためにクラスター内のより多くのノードをスローする方法です。これにより、許容できないオーバーヘッドが発生する可能性があります。 ハートビートの間にリソースがアイドル状態になる可能性があるから、Microsoft は YARN で、内部インフラストラクチャ<em></em>から継承された日和見コンテナーの考え方を導入しました。 これらのコンテナーは、 &ndash; ノードでローカルにキューに入れ、解放された容量 (つまり、ハートビートの間に使用可能なリソース) 上で排他的に実行されます。 日和見的コンテナーでは、リソースオーバーブも有効です。 航空会社がフライトを予約し過ぎたのと同様に、完全な日和見的なコンテナーが同じことを行い、アイドル状態のリソースが完全に利用されるのを確認します。 それらはコーマーであり、優先順位 &ndash; の高いコンテナーに簡単に割り込み、キューに再登録したり、高い優先度に昇格したりすることができます。 Microsoft では、フリート全体で、日和見的コンテナーを使用する利点を 15 ~ 30% の順に見積もっています。これは、年間数億ドルの節約に変換されます。 Microsoft は YARN [4] にこの機能を提供しています。詳細な技術的なディスカッションについては、「5-6」を参照してください。</p>


  <h3>次のレベルに進むには、 &ndash; ビジー状態のクラスター内の SLA を満たすために予約を使用します</h3>


  <p>顧客ベースが成熟すると、ユーザーはミッション クリティカルな作業のためにシステムに依存します。これは、明示的な期限を持つより多くの繰り返しのジョブを意味します。 既存のテクノロジでは、&rsquo;この使用例はサポートされていません。 YARN&rsquo; Microsoft では、タイム ベースの SLA をサポートする予約が導入された理由です。</p>


  <p>予約では、必要なリソースが、必要な正確な時間に使用できる保証を受け取る必要があります。 以前は、ユーザーに対して陰気でつらかったのです。 ジョブの最も時間の長い実行を取得するには、行に入り、キューのサイズとアプリケーションの優先順位を慎重に調整する必要があります。 この場合でも、常にリソースが解放され、待機する可能性があります。 システムは本質的に不当でした。 現在、新しい期限予約&ldquo;&rdquo;機能により、ユーザーは必要な時点でサインアップしたリソースを正確に取得できます。</p>


  <p>この新機能により、すべての予約要求に柔軟性 (時間または形) が提供されます。 顧客は、認める可能性を高める柔軟性を明らかにする必要があります。 これは、海の休暇のためにホテルの部屋を予約するコンテキストで考えます。 一部の期間 (&hellip;休暇を取得できる場合) に部屋を利用できる必要があります。また、部屋のサイズと部屋の設備 (キング、快適さ、) に関する好みがあります &hellip;。 部屋または期間の特性に柔軟性を示して、ホテルの部屋を見つける可能性を高める。</p>


  <p>YARN の場合、予約システムでは、必要な時点でニーズを満たす最も最適化されたリソースを提供するために、指定する柔軟性が考慮されます。 これらの柔軟性を活用することで、クラスターの議題を高密度に詰め込み、システム全体の使用率を最大限に高くすることができます。 これにより、運用コストが削減され、ユーザーの価格が向上します。 この機能は、Microsoft から Apache Hadoop [7-8] へのオープンソース化も行っています。</p>


  <h2>ここからは、お客様の体験が拡大するだけ</h2>


  <p>ビッグ データ分析の取り込み中はどこでも、それが拡大すると予想されます。 より多くのデータ ソースが &ndash; 毎日オンラインで提供され、ビジネス アナリストやデータ サイエンティストは、そのデータを使用するより多くの方法を見つけ出しています。 ビッグ データ インフラストラクチャを効率的に運用するのは &ndash; 難しいですが、お客様にとって簡単です。</p>


  <p>Microsoft は、システムを効率的にするための継続的な投資を行っています。 これらの取り組みは、次の 3 つの方法で、より大規模なコミュニティの利点に変換されます。</p>


  <ul>
      <li>この大規模な分析システムは、Microsoft の製品とサービスの改善を強化するために毎日使用されています。</li>
      <li>ここで紹介する手法は、Azure サービスを使用して自分のビジネスに重要な分析情報を提供する開発者やアナリストにとって有益です。</li>
      <li>最後に、YARN を使用しているユーザーは、Microsoft がオープン ソース コミュニティに貢献した拡張機能の恩恵を受け取っています。</li>
  </ul>


  <h3>エディターは&rsquo;次の点に注意してください。</h3>


  <p>上記で参照されているすべての投稿は、Apache Hadoop 2.9 以降のすべてのリリースで一般公開されています。</p>


  <p>[1] <a href="https://issues.apache.org/jira/browse/YARN-2915" target="_blank">最初の YARN フェデレーション作業は JIRA で追跡されます</a><br>

  [2] <a href="https://issues.apache.org/jira/browse/YARN-7402" target="_blank">フェデレーションへの継続的な拡張機能は JIRA で追跡されます</a><br>

  [3] &quot;ハイドレート:&quot; NSDI 2019 に表示されるデータ センター スケール分析用のフェデレーション リソース マネージャー<br>

  [4] 日和見トークン拡張機能は JIRA で追跡されます。YARN RM を介した <a href="https://issues.apache.org/jira/browse/YARN-5220" target="_blank">OPPORTUNISTIC</a> コンテナーの分散スケジューリングとスケジュール設定をサポートするように <a href="https://issues.apache.org/jira/browse/YARN-2877" target="_blank">YARN</a>&nbsp;&nbsp; を拡張する&nbsp;&nbsp;<br>

  [5] クラスター スケジューリングの効率的なキュー管理 <a href="https://www.microsoft.com/en-us/research/publication/efficient-queue-management-for-cluster-scheduling-2/" target="_blank">Jeff Rasley、KonstantinosFonnasos、Srikanth Kandula、Rodrigo Fonseca、Sriram Rao、Computer Systems (EuroSys)</a> に関する欧州会議<br>

  [6] Mercury: 大規模な共有クラスターでのハイブリッド集中型および分散スケジューリング <a href="https://www.microsoft.com/en-us/research/publication/mercury-hybrid-centralized-and-distributed-scheduling-in-large-shared-clusters/" target="_blank">Konstantinos AndNasos、 Sriram Rao、Carlo Curino、Chris Sarino、Chris Chris、Kiola Chaliparambil、大陸フマオラ、Solom Heddola、Raghu Ramakrishnan、Sarvesh Sakalaalaala、USENIX Annual Technical Conference (USENIX ATC&#39;2015) USENIX &ndash; Advanced Computing Systems Association 2015</a> 年 7 月 1 日<br>

  [7] <a href="https://issues.apache.org/jira/browse/YARN-1051" target="_blank">YARN アドミッション コントロール/Planner: 時間に合ったリソース割り当てモデルの強化</a><br>

  [8] <a href="https://www.microsoft.com/en-us/research/publication/reservation-based-scheduling-if-youre-late-dont-blame-us/" target="_blank">&quot;予約ベースのスケジュール設定:&quot;</a> 遅れても&#39;、SoCC 2014</p>
